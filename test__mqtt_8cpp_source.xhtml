<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: test_mqtt.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(0); });
/* @license-end */
</script>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_13e138d54eb8818da29c3992edef070a.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_5086f03806332e1622e6f6a3f9988048.xhtml">test_mqtt</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">test_mqtt.cpp</div></div>
</div><!--header-->
<div class="contents">
<a href="test__mqtt_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#include &lt;atomic&gt;</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#include &lt;chrono&gt;</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;functional&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;pthread.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &quot;<a class="code" href="_board_logic_8hpp.xhtml">BoardLogic.hpp</a>&quot;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &quot;<a class="code" href="_espressif_8hpp.xhtml">Espressif.hpp</a>&quot;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &quot;<a class="code" href="_fab_backend_8hpp.xhtml">FabBackend.hpp</a>&quot;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="preprocessor">#include &quot;<a class="code" href="_l_c_d_wrapper_8hpp.xhtml">LCDWrapper.hpp</a>&quot;</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="preprocessor">#include &quot;<a class="code" href="_r_f_i_d_wrapper_8hpp.xhtml">RFIDWrapper.hpp</a>&quot;</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="preprocessor">#include &quot;<a class="code" href="_saved_config_8hpp.xhtml">SavedConfig.hpp</a>&quot;</span></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="preprocessor">#include &quot;<a class="code" href="_tasks_8hpp.xhtml">Tasks.hpp</a>&quot;</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="preprocessor">#include &quot;<a class="code" href="conf_8hpp.xhtml">conf.hpp</a>&quot;</span></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="preprocessor">#include &quot;<a class="code" href="_mock_m_q_t_t_broker_8hpp.xhtml">mock/MockMQTTBroker.hpp</a>&quot;</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="preprocessor">#include &quot;<a class="code" href="_mock_mrfc522_8hpp.xhtml">mock/MockMrfc522.hpp</a>&quot;</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="preprocessor">#include &lt;Arduino.h&gt;</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="preprocessor">#include &lt;unity.h&gt;</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="preprocessor">#include &quot;LiquidCrystal.h&quot;</span></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span> </div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="keyword">using namespace </span>std::chrono_literals;</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno"><a class="line" href="test__mqtt_8cpp.xhtml#ad8f69fc4a7778b405081abbf9fe6aa82">   24</a></span>pthread_t <a class="code hl_variable" href="test__mqtt_8cpp.xhtml#ad8f69fc4a7778b405081abbf9fe6aa82">thread_mqtt_broker</a>;</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno"><a class="line" href="test__mqtt_8cpp.xhtml#ae6c877ec448b1e99c6f9207301e622f6">   25</a></span>pthread_attr_t <a class="code hl_variable" href="test__mqtt_8cpp.xhtml#ae6c877ec448b1e99c6f9207301e622f6">attr_mqtt_broker</a>;</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno"><a class="line" href="test__mqtt_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">   27</a></span>[[maybe_unused]] <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code hl_variable" href="test__mqtt_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">TAG3</a> = <span class="stringliteral">&quot;test_mqtt&quot;</span>;</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefabomatic_1_1tests.xhtml">fabomatic::tests</a></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>{</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">   31</a></span>  <a class="code hl_class" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper&lt;fabomatic::MockMrfc522&gt;</a> <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>;</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#aa2f9f558fe3c311acc82ca6b7552c373">   32</a></span>  <a class="code hl_class" href="classfabomatic_1_1_l_c_d_wrapper.xhtml">fabomatic::LCDWrapper</a> <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#aa2f9f558fe3c311acc82ca6b7552c373">lcd</a>{<a class="code hl_variable" href="namespacefabomatic.xhtml#a90e4180ab5a1ffd3393b4f0d6b01f2b3">fabomatic::pins</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#abd0d35daf6efede38501593182b6d574">lcd</a>};</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">   33</a></span>  <a class="code hl_class" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a> <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>;</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a0feac8d80c54d5fe02cfac6bfcb43a7e">   34</a></span>  <a class="code hl_class" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml">fabomatic::MockMQTTBroker</a> <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a0feac8d80c54d5fe02cfac6bfcb43a7e">broker</a>;</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">   35</a></span>  <a class="code hl_class" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml">fabomatic::Tasks::Scheduler</a> <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">test_scheduler</a>;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#acaf37fbb67ed375298e6a277500632ae">   37</a></span>  std::atomic&lt;bool&gt; <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#acaf37fbb67ed375298e6a277500632ae">exit_request</a>{<span class="keyword">false</span>};</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="foldopen" id="foldopen00039" data-start="{" data-end="}">
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#af046ac0a4d53b62e8f3bf0cec2d07440">   39</a></span>  <span class="keywordtype">void</span> *<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#af046ac0a4d53b62e8f3bf0cec2d07440">threadMQTTServer</a>(<span class="keywordtype">void</span> *arg)</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>  {</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>    <span class="keywordflow">while</span> (!<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#acaf37fbb67ed375298e6a277500632ae">exit_request</a>)</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    {</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>      <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a0feac8d80c54d5fe02cfac6bfcb43a7e">broker</a>.<a class="code hl_function" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a4cd18cc3fb887b17e4668bbf99a531e5">mainLoop</a>();</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>      delay(15);</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>    }</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>    ESP_LOGI(<a class="code hl_variable" href="test__logic_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">TAG3</a>, <span class="stringliteral">&quot;MQTT server thread exiting&quot;</span>);</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>    <span class="keywordflow">return</span> arg;</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  }</div>
</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="foldopen" id="foldopen00050" data-start="{" data-end="}">
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a675dfc88957b4e6871f32187a0da29b2">   50</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a675dfc88957b4e6871f32187a0da29b2">test_create_buffered_messages</a>()</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  {</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>    <span class="keyword">auto</span> &amp;server = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac2feade03b2a74a1998dcec282a8eacb">getServer</a>();</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;[uid, level, name] : <a class="code hl_variable" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#a83b3f579950d846c48fb7654ccef9e17">secrets::cards::whitelist</a>)</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>    {</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>      <span class="keyword">auto</span> result = server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a96279ac5e1540441111f7ecb04ba7ce6">startUse</a>(uid);</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>      TEST_ASSERT_FALSE_MESSAGE(result-&gt;request_ok, <span class="stringliteral">&quot;(1) Request should have failed&quot;</span>);</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>      result = server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac3065c3c86669065f8ecdd62dfe02772">inUse</a>(uid, 1s);</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>      TEST_ASSERT_FALSE_MESSAGE(result-&gt;request_ok, <span class="stringliteral">&quot;(2) Request should have failed&quot;</span>);</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>      result = server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ad74678b61ebbdfe50857e91dad3eb866">finishUse</a>(uid, 2s);</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>      TEST_ASSERT_FALSE_MESSAGE(result-&gt;request_ok, <span class="stringliteral">&quot;(3) Request should have failed&quot;</span>);</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>      result = server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a96279ac5e1540441111f7ecb04ba7ce6">startUse</a>(uid);</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>      TEST_ASSERT_FALSE_MESSAGE(result-&gt;request_ok, <span class="stringliteral">&quot;(4) Request should have failed&quot;</span>);</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>      result = server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ad74678b61ebbdfe50857e91dad3eb866">finishUse</a>(uid, 3s);</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>      TEST_ASSERT_FALSE_MESSAGE(result-&gt;request_ok, <span class="stringliteral">&quot;(5) Request should have failed&quot;</span>);</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>      result = server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a1d2a3a95b98c66db4c9d4fc9c1d401ef">registerMaintenance</a>(uid);</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>      TEST_ASSERT_FALSE_MESSAGE(result-&gt;request_ok, <span class="stringliteral">&quot;(6) Request should have failed&quot;</span>);</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>    }</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>    <span class="comment">// Should have generated 5 * 10 = 50 messages, truncated to 40.</span></div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    TEST_ASSERT_TRUE_MESSAGE(server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">hasBufferedMsg</a>(), <span class="stringliteral">&quot;There are pending messages&quot;</span>);</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    TEST_ASSERT_TRUE_MESSAGE(server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a044a94e7220ee295bfab801b6ca32e32">saveBuffer</a>(), <span class="stringliteral">&quot;Saving pending messages works&quot;</span>);</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  }</div>
</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="foldopen" id="foldopen00079" data-start="{" data-end="}">
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a95c3d2a5cfa25e610ac054894d766f73">   79</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a95c3d2a5cfa25e610ac054894d766f73">test_check_transmission</a>()</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  {</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>    <span class="keyword">auto</span> &amp;server = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac2feade03b2a74a1998dcec282a8eacb">getServer</a>();</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>    TEST_ASSERT_TRUE_MESSAGE(server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">hasBufferedMsg</a>(), <span class="stringliteral">&quot;(1) There are pending messages&quot;</span>);</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>    TEST_ASSERT_TRUE_MESSAGE(server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">connect</a>(), <span class="stringliteral">&quot;Server connect works&quot;</span>);</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span> </div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    TEST_ASSERT_TRUE_MESSAGE(server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">hasBufferedMsg</a>(), <span class="stringliteral">&quot;(2) There are pending messages&quot;</span>);</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    TEST_ASSERT_TRUE_MESSAGE(server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#abb44b529c858ddc1006592e9bac8a815">alive</a>(), <span class="stringliteral">&quot;Alive request works&quot;</span>);</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>    <span class="comment">// Since old messages must be sent first, the buffer shall be empty now</span></div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>    TEST_ASSERT_FALSE_MESSAGE(server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">hasBufferedMsg</a>(), <span class="stringliteral">&quot;There are no more pending messages&quot;</span>);</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>    TEST_ASSERT_TRUE_MESSAGE(server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a044a94e7220ee295bfab801b6ca32e32">saveBuffer</a>(), <span class="stringliteral">&quot;Saving pending messages works&quot;</span>);</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  }</div>
</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="foldopen" id="foldopen00097" data-start="{" data-end="}">
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#aba7f55ee91c2d2a647fca6c8cc106c97">   97</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#aba7f55ee91c2d2a647fca6c8cc106c97">test_start_broker</a>()</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  {</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    <span class="keyword">auto</span> &amp;server = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac2feade03b2a74a1998dcec282a8eacb">getServer</a>();</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>    server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a492c94ed0682ad834ccd7ddc7c20a55a">setChannel</a>(-1);</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>    TEST_ASSERT_TRUE_MESSAGE(server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ad928751b2f967feaac0f2cb708c0d6e9">connectWiFi</a>(), <span class="stringliteral">&quot;WiFi works&quot;</span>);</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span> </div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>    <span class="comment">// Set the same IP Adress as MQTT server</span></div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>    <span class="keyword">auto</span> config = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">SavedConfig::LoadFromEEPROM</a>();</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>    TEST_ASSERT_TRUE_MESSAGE(config.has_value(), <span class="stringliteral">&quot;Config load failed&quot;</span>);</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>    config.value().mqtt_server.assign(<span class="stringliteral">&quot;127.0.0.1&quot;</span>);</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>    TEST_ASSERT_TRUE_MESSAGE(config.value().SaveToEEPROM(), <span class="stringliteral">&quot;Config save failed&quot;</span>);</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>    server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#acf5644d920896038018f990568e710c3">configure</a>(config.value());</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>    <span class="comment">// Start MQTT server thread in simulation</span></div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>    <a class="code hl_variable" href="test__mqtt_8cpp.xhtml#ae6c877ec448b1e99c6f9207301e622f6">attr_mqtt_broker</a>.stacksize = 3 * 1024; <span class="comment">// Required for ESP32-S2</span></div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>    <a class="code hl_variable" href="test__mqtt_8cpp.xhtml#ae6c877ec448b1e99c6f9207301e622f6">attr_mqtt_broker</a>.detachstate = PTHREAD_CREATE_DETACHED;</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>    <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#acaf37fbb67ed375298e6a277500632ae">exit_request</a> = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>    pthread_create(&amp;<a class="code hl_variable" href="test__mqtt_8cpp.xhtml#ad8f69fc4a7778b405081abbf9fe6aa82">thread_mqtt_broker</a>, &amp;<a class="code hl_variable" href="test__mqtt_8cpp.xhtml#ae6c877ec448b1e99c6f9207301e622f6">attr_mqtt_broker</a>, <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#af046ac0a4d53b62e8f3bf0cec2d07440">threadMQTTServer</a>, NULL);</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>    <span class="keyword">auto</span> start = <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">fabomatic::Tasks::arduinoNow</a>();</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>    <span class="keyword">constexpr</span> <span class="keyword">auto</span> timeout = 5s;</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>    <span class="keywordflow">while</span> (!<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a0feac8d80c54d5fe02cfac6bfcb43a7e">broker</a>.<a class="code hl_function" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a78a57e64b156c6d6d93104fec142740d">isRunning</a>() &amp;&amp; <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">fabomatic::Tasks::arduinoNow</a>() - start &lt; timeout)</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>    {</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>      delay(100);</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>    }</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a0feac8d80c54d5fe02cfac6bfcb43a7e">broker</a>.<a class="code hl_function" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a78a57e64b156c6d6d93104fec142740d">isRunning</a>(), <span class="stringliteral">&quot;MQTT server not running&quot;</span>);</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>    delay(5000);</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>    TEST_ASSERT_TRUE_MESSAGE(server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">connect</a>(), <span class="stringliteral">&quot;Server connect failed in start MQTT&quot;</span>);</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  }</div>
</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span> </div>
<div class="foldopen" id="foldopen00127" data-start="{" data-end="}">
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#af71fb65d41b9fc211910208ea71a4c91">  127</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#af71fb65d41b9fc211910208ea71a4c91">test_stop_broker</a>()</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  {</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>    <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#acaf37fbb67ed375298e6a277500632ae">exit_request</a> = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>    pthread_join(<a class="code hl_variable" href="test__mqtt_8cpp.xhtml#ad8f69fc4a7778b405081abbf9fe6aa82">thread_mqtt_broker</a>, NULL);</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  }</div>
</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="foldopen" id="foldopen00133" data-start="{" data-end="}">
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a438b9060c27d36e89506199205b342cb">  133</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a438b9060c27d36e89506199205b342cb">test_fabserver_calls</a>()</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  {</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>    <span class="keyword">const</span> <span class="keywordtype">int</span> NB_TESTS = 10;</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>    <span class="keyword">const</span> <span class="keywordtype">int</span> NB_MACHINES = 5;</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>    <span class="keyword">auto</span> &amp;server = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac2feade03b2a74a1998dcec282a8eacb">getServer</a>();</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>    <span class="keywordflow">for</span> (uint16_t mid = 100; mid &lt;= 100 + NB_MACHINES; mid++)</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>    {</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>      <span class="comment">// Change MachineID on the fly</span></div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>      <span class="keyword">auto</span> saved_config = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">SavedConfig::DefaultConfig</a>();</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span> </div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>      saved_config.setMachineID(mid);</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>      saved_config.mqtt_server.assign(<span class="stringliteral">&quot;127.0.0.1&quot;</span>);</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>      ESP_LOGI(<a class="code hl_variable" href="test__logic_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">TAG3</a>, <span class="stringliteral">&quot;Testing machine %d&quot;</span>, mid);</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>      server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#acf5644d920896038018f990568e710c3">configure</a>(saved_config);</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span> </div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>      <span class="keyword">auto</span> connected = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>      <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; 3; i++)</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>      {</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>        server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ad558116614ee45601f4665d395838727">disconnect</a>(); <span class="comment">// Force disconnect</span></div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>        <span class="keywordflow">if</span> (connected |= server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">connect</a>())</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>        {</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>          <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>        }</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>      }</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span> </div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>      TEST_ASSERT_TRUE_MESSAGE(connected, <span class="stringliteral">&quot;Server connect failed&quot;</span>);</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>      TEST_ASSERT_TRUE_MESSAGE(server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>(), <span class="stringliteral">&quot;Server is not online&quot;</span>);</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span> </div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>      <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; NB_TESTS; ++i)</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>      {</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>        server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aaf05998bb9dec17ae98283969109bb2d">loop</a>();</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>        <a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> uid = 123456789 + i;</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>        <span class="keyword">auto</span> response = server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a0e4d6d289b03582bf6ea9e78e15dd79e">checkCard</a>(uid);</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>        TEST_ASSERT_TRUE_MESSAGE(response != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Server checkCard failed&quot;</span>);</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>        ESP_LOGD(<a class="code hl_variable" href="test__logic_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">TAG3</a>, <span class="stringliteral">&quot;Server checkCard response: %s&quot;</span>, response-&gt;toString().c_str());</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>        TEST_ASSERT_TRUE_MESSAGE(response-&gt;request_ok, <span class="stringliteral">&quot;Server checkCard request failed&quot;</span>);</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>        <span class="keyword">auto</span> machine_resp = server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a215d08460a8df6f20223a07b1e756332">checkMachine</a>(); <span class="comment">// Machine ID is in the topic already</span></div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>        TEST_ASSERT_TRUE_MESSAGE(machine_resp != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Server checkMachine failed&quot;</span>);</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>        TEST_ASSERT_TRUE_MESSAGE(machine_resp-&gt;request_ok, <span class="stringliteral">&quot;Server checkMachine request failed&quot;</span>);</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>        <span class="keyword">auto</span> maintenance_resp = server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a1d2a3a95b98c66db4c9d4fc9c1d401ef">registerMaintenance</a>(uid);</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>        TEST_ASSERT_TRUE_MESSAGE(maintenance_resp != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Server registerMaintenance failed&quot;</span>);</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>        TEST_ASSERT_TRUE_MESSAGE(maintenance_resp-&gt;request_ok, <span class="stringliteral">&quot;Server registerMaintenance request failed&quot;</span>);</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>        <span class="keyword">auto</span> start_use_resp = server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a96279ac5e1540441111f7ecb04ba7ce6">startUse</a>(uid);</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>        TEST_ASSERT_TRUE_MESSAGE(start_use_resp != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Server startUse failed&quot;</span>);</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>        TEST_ASSERT_TRUE_MESSAGE(start_use_resp-&gt;request_ok, <span class="stringliteral">&quot;Server startUse request failed&quot;</span>);</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>        <span class="keyword">auto</span> in_use_resp = server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac3065c3c86669065f8ecdd62dfe02772">inUse</a>(uid, 5s);</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>        TEST_ASSERT_TRUE_MESSAGE(in_use_resp != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Server inUse failed&quot;</span>);</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>        TEST_ASSERT_TRUE_MESSAGE(in_use_resp-&gt;request_ok, <span class="stringliteral">&quot;Server inUse request failed&quot;</span>);</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>        <span class="keyword">auto</span> stop_use_resp = server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ad74678b61ebbdfe50857e91dad3eb866">finishUse</a>(uid, 10s);</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>        TEST_ASSERT_TRUE_MESSAGE(stop_use_resp != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Server stopUse failed&quot;</span>);</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>        TEST_ASSERT_TRUE_MESSAGE(stop_use_resp-&gt;request_ok, <span class="stringliteral">&quot;Server stopUse request failed&quot;</span>);</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>        <span class="keyword">auto</span> alive_resp = server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#abb44b529c858ddc1006592e9bac8a815">alive</a>();</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>        TEST_ASSERT_TRUE_MESSAGE(alive_resp, <span class="stringliteral">&quot;Server alive failed&quot;</span>);</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>      }</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>    }</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>    <span class="comment">// Test authentication in online scenario</span></div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>    <a class="code hl_class" href="classfabomatic_1_1_auth_provider.xhtml">AuthProvider</a> auth(<a class="code hl_variable" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#a83b3f579950d846c48fb7654ccef9e17">secrets::cards::whitelist</a>);</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>    TEST_ASSERT_TRUE_MESSAGE(server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">connect</a>(), <span class="stringliteral">&quot;Server is online&quot;</span>);</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;[uid, level, name] : <a class="code hl_variable" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#a83b3f579950d846c48fb7654ccef9e17">secrets::cards::whitelist</a>)</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>    {</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>      server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aaf05998bb9dec17ae98283969109bb2d">loop</a>();</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>      <span class="keyword">auto</span> response = auth.<a class="code hl_function" href="classfabomatic_1_1_auth_provider.xhtml#aeae9923535dcf6cfa9eaf9e5f90e5e64">tryLogin</a>(uid, server);</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>      TEST_ASSERT_TRUE_MESSAGE(response.has_value(), <span class="stringliteral">&quot;Server checkCard failed&quot;</span>);</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>      <span class="keywordflow">if</span> (level == <a class="code hl_enumvalue" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">FabUser::UserLevel::Unknown</a>)</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>      {</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>        TEST_ASSERT_FALSE_MESSAGE(response.value().authenticated, <span class="stringliteral">&quot;Server returned authenticated user for invalid one&quot;</span>);</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>      }</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>      <span class="keywordflow">else</span></div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>      {</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>        TEST_ASSERT_TRUE_MESSAGE(response.value().authenticated, <span class="stringliteral">&quot;Server returned unauthenticated user for a valid one&quot;</span>);</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>        TEST_ASSERT_TRUE_MESSAGE(response.value().user_level == level, <span class="stringliteral">&quot;Server returned wrong user level&quot;</span>);</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>      }</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>    }</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>    <span class="comment">// Test that saving the cache works</span></div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>    TEST_ASSERT_TRUE_MESSAGE(auth.<a class="code hl_function" href="classfabomatic_1_1_auth_provider.xhtml#acb92a9381bc8e14bd57b819fc9162750">saveCache</a>(), <span class="stringliteral">&quot;AuthProvider saveCache failed&quot;</span>);</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span> </div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>    <span class="comment">// Test that the cache contains all the valid whitelist entries</span></div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>    <span class="keyword">auto</span> cached_entries = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">SavedConfig::LoadFromEEPROM</a>().value().cachedRfid;</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;[uid, level, name] : <a class="code hl_variable" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#a83b3f579950d846c48fb7654ccef9e17">secrets::cards::whitelist</a>)</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>    {</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;cached_card = cached_entries.find_uid(uid);</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>      TEST_ASSERT_TRUE_MESSAGE(cached_card || level == <a class="code hl_enumvalue" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">FabUser::UserLevel::Unknown</a>,</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>                               <span class="stringliteral">&quot;AuthProvider saveCache failed to save all whitelist entries&quot;</span>);</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>    }</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>  }</div>
</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span> </div>
<div class="foldopen" id="foldopen00222" data-start="{" data-end="}">
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a88a4242d48bfa4a0337df522d303c367">  222</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a88a4242d48bfa4a0337df522d303c367">test_taskConnect</a>()</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>  {</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>    <span class="keyword">auto</span> &amp;server = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac2feade03b2a74a1998dcec282a8eacb">getServer</a>();</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>    <span class="keywordflow">if</span> (!server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>())</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>    {</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>      <span class="comment">// connection to wifi</span></div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>      <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae321c53b354930ba96f0243e652df458">BoardLogic::Status::Connecting</a>);</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span> </div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>      <span class="comment">// Try to connect</span></div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>      server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">connect</a>();</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>      <span class="comment">// Refresh after connection</span></div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>      <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>() ? <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a2ec0d16e4ca169baedb9b2d50ec5c6d7">BoardLogic::Status::Connected</a> : <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a8d9da4bc0e49a50e09ac9f7e56789d39">BoardLogic::Status::Offline</a>);</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>    }</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span> </div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>    <span class="keywordflow">if</span> (server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>())</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>    {</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>      ESP_LOGI(<a class="code hl_variable" href="test__logic_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">TAG3</a>, <span class="stringliteral">&quot;taskConnect - online, calling refreshFromServer&quot;</span>);</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>      <span class="comment">// Get machine data from the server if it is online</span></div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>      <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#aa0d3d3aa742eba1ffd00b97868ce7edc">refreshFromServer</a>();</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>    }</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>  }</div>
</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span> </div>
<div class="foldopen" id="foldopen00245" data-start="{" data-end="}">
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a294b4767ecf1e1d11cc31dafb2541d23">  245</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a294b4767ecf1e1d11cc31dafb2541d23">test_taskCheckRfid</a>()</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>  {</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>    <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a25bdc3a49d850aa49f92faf951b68efb">checkRfid</a>();</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>  }</div>
</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span> </div>
<div class="foldopen" id="foldopen00251" data-start="{" data-end="}">
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a7cd22311b16fc7c256a30ba4c2f6f387">  251</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a7cd22311b16fc7c256a30ba4c2f6f387">test_taskVarious</a>()</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>  {</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>    <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ad05b4db308773e56d866fe87d34022d9">blinkLed</a>();</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>    <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac05af486941c620c9494ba545dd83c3d">checkPowerOff</a>();</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span> </div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().isShutdownImminent())</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>    {</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>      <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac198a07d00fda36a527cd9db2d97efc1">beepFail</a>();</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>      ESP_LOGI(<a class="code hl_variable" href="test__logic_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">TAG3</a>, <span class="stringliteral">&quot;Machine is about to shutdown&quot;</span>);</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>    }</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span> </div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>    <span class="comment">// auto logout after delay</span></div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>    <span class="keyword">auto</span> &amp;machine = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>();</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>    <span class="keywordflow">if</span> (machine.isAutologoffExpired())</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>    {</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>      ESP_LOGI(<a class="code hl_variable" href="test__logic_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">TAG3</a>, <span class="stringliteral">&quot;Auto-logging out user %s\r\n&quot;</span>, machine.getActiveUser().holder_name.data());</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>      <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a98a15cc323f97adc394c29e897afc12d">logout</a>();</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>      <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac198a07d00fda36a527cd9db2d97efc1">beepFail</a>();</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>    }</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>  }</div>
</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span> </div>
<div class="foldopen" id="foldopen00274" data-start="{" data-end="}">
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a046c348aaf1a15bf80358065553e748b">  274</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a046c348aaf1a15bf80358065553e748b">test_taskEspWatchdog</a>()</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>  {</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>    <span class="keyword">static</span> <span class="keyword">auto</span> initialized = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span> </div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#aeae34487453706306821d18018af7355">conf::tasks::WATCHDOG_TIMEOUT</a> &gt; 0s)</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>    {</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>      <span class="keywordflow">if</span> (!initialized)</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>      {</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>        initialized = <a class="code hl_function" href="namespacefabomatic_1_1esp32.xhtml#a8bec49abfae47da0cadccb6e486f69bb">esp32::setupWatchdog</a>(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#aeae34487453706306821d18018af7355">conf::tasks::WATCHDOG_TIMEOUT</a>);</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>        TEST_ASSERT_TRUE_MESSAGE(initialized, <span class="stringliteral">&quot;Watchdog initialization works&quot;</span>);</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>      }</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>      <span class="keywordflow">if</span> (initialized)</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>      {</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>        TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_function" href="namespacefabomatic_1_1esp32.xhtml#ac7eca0f98345aa2c296103d6dc9fff01">esp32::signalWatchdog</a>(), <span class="stringliteral">&quot;Watchdog signalling failed&quot;</span>);</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>      }</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>    }</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>  }</div>
</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span> </div>
<div class="foldopen" id="foldopen00293" data-start="{" data-end="}">
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#af592b66b287714a90a895709829622b3">  293</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#af592b66b287714a90a895709829622b3">test_taskRfidWatchdog</a>()</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>  {</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>    <span class="keyword">auto</span> result = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>.selfTest();</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>    TEST_ASSERT_TRUE_MESSAGE(result, <span class="stringliteral">&quot;test_taskRfidWatchdog: RFID chip failure&quot;</span>);</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>    <span class="keywordflow">if</span> (!result)</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>    {</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>      ESP_LOGE(<a class="code hl_variable" href="test__logic_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">TAG3</a>, <span class="stringliteral">&quot;RFID chip failure&quot;</span>);</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span> </div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span>      <span class="comment">// Infinite retry until success or hw watchdog timeout</span></div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>      <span class="keywordflow">while</span> (!<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>.rfidInit())</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>        TEST_FAIL_MESSAGE(<span class="stringliteral">&quot;Init RFID chip failed&quot;</span>);</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>    }</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>  }</div>
</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span> </div>
<div class="foldopen" id="foldopen00308" data-start="{" data-end="}">
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#ae0c2cd74b089905fbdebeca807403606">  308</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#ae0c2cd74b089905fbdebeca807403606">test_taskMQTTAlive</a>()</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>  {</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>    <span class="keyword">auto</span> &amp;server = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac2feade03b2a74a1998dcec282a8eacb">getServer</a>();</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>    <span class="keywordflow">if</span> (server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>())</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>    {</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span>      TEST_ASSERT_TRUE_MESSAGE(server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aaf05998bb9dec17ae98283969109bb2d">loop</a>(), <span class="stringliteral">&quot;test_taskMQTTAlive: Server loop failed&quot;</span>);</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>    }</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>  }</div>
</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span> </div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a009fc290d438fc7821dddc336aae2f3b">  317</a></span>  <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a009fc290d438fc7821dddc336aae2f3b">t1</a> = <a class="code hl_class" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Tasks::Task</a>(<span class="stringliteral">&quot;taskConnect&quot;</span>, 15s, &amp;<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a88a4242d48bfa4a0337df522d303c367">test_taskConnect</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">test_scheduler</a>);</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a739cb1ea71dc21bde3450d76b4eb2749">  318</a></span>  <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a739cb1ea71dc21bde3450d76b4eb2749">t2</a> = <a class="code hl_class" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Tasks::Task</a>(<span class="stringliteral">&quot;taskCheckRfid&quot;</span>, 50ms, &amp;<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a294b4767ecf1e1d11cc31dafb2541d23">test_taskCheckRfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">test_scheduler</a>);</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#aaa8f9a92ebaa17b28d4c53e1f9608daf">  319</a></span>  <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#aaa8f9a92ebaa17b28d4c53e1f9608daf">t3</a> = <a class="code hl_class" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Tasks::Task</a>(<span class="stringliteral">&quot;taskVarious&quot;</span>, 1s, &amp;<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a7cd22311b16fc7c256a30ba4c2f6f387">test_taskVarious</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">test_scheduler</a>);</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#af8a8ce64acab16055eb3a994dfbe6d33">  320</a></span>  <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#af8a8ce64acab16055eb3a994dfbe6d33">t4</a> = <a class="code hl_class" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Tasks::Task</a>(<span class="stringliteral">&quot;taskEspWatchdog&quot;</span>, 5s, &amp;<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a046c348aaf1a15bf80358065553e748b">test_taskEspWatchdog</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">test_scheduler</a>);</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a2a7b41334e2a6684e389f6204da0305a">  321</a></span>  <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a2a7b41334e2a6684e389f6204da0305a">t5</a> = <a class="code hl_class" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Tasks::Task</a>(<span class="stringliteral">&quot;taskRfidWatchdog&quot;</span>, 30s, &amp;<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#af592b66b287714a90a895709829622b3">test_taskRfidWatchdog</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">test_scheduler</a>);</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a9a8176cc8103382324e4d067a4d0613d">  322</a></span>  <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a9a8176cc8103382324e4d067a4d0613d">t6</a> = <a class="code hl_class" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Tasks::Task</a>(<span class="stringliteral">&quot;taskMQTTAlive&quot;</span>, 30s, &amp;<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#ae0c2cd74b089905fbdebeca807403606">test_taskMQTTAlive</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">test_scheduler</a>);</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span> </div>
<div class="foldopen" id="foldopen00324" data-start="{" data-end="}">
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#adf323d841fd7207901e373cdc073d4af">  324</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#adf323d841fd7207901e373cdc073d4af">test_normal_use</a>()</div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span>  {</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>    <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">test_scheduler</a>.<a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a2acce29901dbfd56a0f49beb277e3e76">updateSchedules</a>();</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>    TEST_ASSERT_EQUAL_UINT32_MESSAGE(6, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">test_scheduler</a>.<a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a203784237087f7f1b0b77c15bcdb85f9">taskCount</a>(), <span class="stringliteral">&quot;Scheduler does not contain all tasks&quot;</span>);</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>    <span class="keyword">auto</span> start = <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">fabomatic::Tasks::arduinoNow</a>();</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>    <span class="keywordflow">while</span> (<a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">fabomatic::Tasks::arduinoNow</a>() - start &lt;= 1min)</div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span>    {</div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span>      <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">test_scheduler</a>.<a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#aff9b0c44cc0bef222932a681ace0d406">execute</a>();</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span>      delay(25);</div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span>    }</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span>    <span class="comment">// Check that all tasks ran at least once</span></div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> tp : <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">test_scheduler</a>.<a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a701e971506199db303a90f2515dd6169">getTasks</a>())</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>    {</div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span>      <span class="keyword">const</span> <span class="keyword">auto</span> t = *tp;</div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span>      ESP_LOGD(<a class="code hl_variable" href="test__logic_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">TAG3</a>, <span class="stringliteral">&quot;Task %s: %lu runs, %llu ms total runtime, %llu ms avg tardiness&quot;</span>, t.getId().c_str(), t.getRunCounter(), t.getTotalRuntime().count(), t.getAvgTardiness().count());</div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span>      TEST_ASSERT_GREATER_OR_EQUAL_MESSAGE(1, t.getRunCounter(), <span class="stringliteral">&quot;Task did not run&quot;</span>);</div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span>    }</div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span>    <span class="comment">// Remove the HW Watchdog</span></div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span>    <a class="code hl_function" href="namespacefabomatic_1_1esp32.xhtml#ae78a1408710128cb446f2cde991017dd">esp32::removeWatchdog</a>();</div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span>  }</div>
</div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>} <span class="comment">// namespace fabomatic::Tests</span></div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span> </div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno"><a class="line" href="test__mqtt_8cpp.xhtml#a9909011e5fea0c018842eec4d93d0662">  346</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="test__mqtt_8cpp.xhtml#a9909011e5fea0c018842eec4d93d0662">tearDown</a>(<span class="keywordtype">void</span>) {};</div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span> </div>
<div class="foldopen" id="foldopen00348" data-start="{" data-end="}">
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno"><a class="line" href="test__mqtt_8cpp.xhtml#a95c834d6178047ce9e1bce7cbfea2836">  348</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="test__mqtt_8cpp.xhtml#a95c834d6178047ce9e1bce7cbfea2836">setUp</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span>{</div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span>  TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">fabomatic::tests::logic</a>.configure(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">fabomatic::tests::rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#aa2f9f558fe3c311acc82ca6b7552c373">fabomatic::tests::lcd</a>), <span class="stringliteral">&quot;BoardLogic configure failed&quot;</span>);</div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span>  TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">fabomatic::tests::logic</a>.initBoard(), <span class="stringliteral">&quot;BoardLogic init failed&quot;</span>);</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span>};</div>
</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span> </div>
<div class="foldopen" id="foldopen00354" data-start="{" data-end="}">
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno"><a class="line" href="test__mqtt_8cpp.xhtml#a4fc01d736fe50cf5b977f755b675f11d">  354</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="test__mqtt_8cpp.xhtml#a4fc01d736fe50cf5b977f755b675f11d">setup</a>()</div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span>{</div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span>  delay(1000);</div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span>  esp_log_level_set(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <a class="code hl_define" href="_logging_8hpp.xhtml#a5155a7b7465dd9b5e6167122827d0158">LOG_LOCAL_LEVEL</a>);</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span> </div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span>  <span class="comment">// Save original config</span></div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span>  <span class="keyword">auto</span> original = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">fabomatic::SavedConfig::LoadFromEEPROM</a>();</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span> </div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span>  UNITY_BEGIN();</div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a675dfc88957b4e6871f32187a0da29b2">fabomatic::tests::test_create_buffered_messages</a>);</div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#aba7f55ee91c2d2a647fca6c8cc106c97">fabomatic::tests::test_start_broker</a>);</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a95c3d2a5cfa25e610ac054894d766f73">fabomatic::tests::test_check_transmission</a>);</div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a438b9060c27d36e89506199205b342cb">fabomatic::tests::test_fabserver_calls</a>);</div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno">  367</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#adf323d841fd7207901e373cdc073d4af">fabomatic::tests::test_normal_use</a>);</div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#af71fb65d41b9fc211910208ea71a4c91">fabomatic::tests::test_stop_broker</a>);</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span> </div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span>  UNITY_END(); <span class="comment">// stop unit testing</span></div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span> </div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span>  <span class="comment">// Restore original config</span></div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span>  <span class="keywordflow">if</span> (original.has_value())</div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span>  {</div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span>    original.value().<a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a312c74363068192ae80df24140f82874">SaveToEEPROM</a>();</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span>  }</div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span>};</div>
</div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span> </div>
<div class="foldopen" id="foldopen00379" data-start="{" data-end="}">
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno"><a class="line" href="test__mqtt_8cpp.xhtml#afe461d27b9c48d5921c00d521181f12f">  379</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="test__mqtt_8cpp.xhtml#afe461d27b9c48d5921c00d521181f12f">loop</a>()</div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>{</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>}</div>
</div>
<div class="ttc" id="a_board_logic_8hpp_xhtml"><div class="ttname"><a href="_board_logic_8hpp.xhtml">BoardLogic.hpp</a></div></div>
<div class="ttc" id="a_espressif_8hpp_xhtml"><div class="ttname"><a href="_espressif_8hpp.xhtml">Espressif.hpp</a></div></div>
<div class="ttc" id="a_fab_backend_8hpp_xhtml"><div class="ttname"><a href="_fab_backend_8hpp.xhtml">FabBackend.hpp</a></div></div>
<div class="ttc" id="a_l_c_d_wrapper_8hpp_xhtml"><div class="ttname"><a href="_l_c_d_wrapper_8hpp.xhtml">LCDWrapper.hpp</a></div></div>
<div class="ttc" id="a_logging_8hpp_xhtml_a4ef5b5f197804a60836ab1e8907d8301"><div class="ttname"><a href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a></div><div class="ttdeci">static const char *const TAG</div><div class="ttdef"><b>Definition</b> <a href="_logging_8hpp_source.xhtml#l00009">Logging.hpp:9</a></div></div>
<div class="ttc" id="a_logging_8hpp_xhtml_a5155a7b7465dd9b5e6167122827d0158"><div class="ttname"><a href="_logging_8hpp.xhtml#a5155a7b7465dd9b5e6167122827d0158">LOG_LOCAL_LEVEL</a></div><div class="ttdeci">#define LOG_LOCAL_LEVEL</div><div class="ttdef"><b>Definition</b> <a href="_logging_8hpp_source.xhtml#l00005">Logging.hpp:5</a></div></div>
<div class="ttc" id="a_mock_m_q_t_t_broker_8hpp_xhtml"><div class="ttname"><a href="_mock_m_q_t_t_broker_8hpp.xhtml">MockMQTTBroker.hpp</a></div></div>
<div class="ttc" id="a_mock_mrfc522_8hpp_xhtml"><div class="ttname"><a href="_mock_mrfc522_8hpp.xhtml">MockMrfc522.hpp</a></div></div>
<div class="ttc" id="a_r_f_i_d_wrapper_8hpp_xhtml"><div class="ttname"><a href="_r_f_i_d_wrapper_8hpp.xhtml">RFIDWrapper.hpp</a></div></div>
<div class="ttc" id="a_saved_config_8hpp_xhtml"><div class="ttname"><a href="_saved_config_8hpp.xhtml">SavedConfig.hpp</a></div></div>
<div class="ttc" id="a_tasks_8hpp_xhtml"><div class="ttname"><a href="_tasks_8hpp.xhtml">Tasks.hpp</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_auth_provider_xhtml"><div class="ttname"><a href="classfabomatic_1_1_auth_provider.xhtml">fabomatic::AuthProvider</a></div><div class="ttdoc">This class manages authentication of a RFID tag through cache, whitelist or network request.</div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8hpp_source.xhtml#l00018">AuthProvider.hpp:19</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_auth_provider_xhtml_acb92a9381bc8e14bd57b819fc9162750"><div class="ttname"><a href="classfabomatic_1_1_auth_provider.xhtml#acb92a9381bc8e14bd57b819fc9162750">fabomatic::AuthProvider::saveCache</a></div><div class="ttdeci">auto saveCache() const -&gt; bool</div><div class="ttdoc">Saves the cache of RFID to EEPROM.</div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8cpp_source.xhtml#l00183">AuthProvider.cpp:183</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_auth_provider_xhtml_aeae9923535dcf6cfa9eaf9e5f90e5e64"><div class="ttname"><a href="classfabomatic_1_1_auth_provider.xhtml#aeae9923535dcf6cfa9eaf9e5f90e5e64">fabomatic::AuthProvider::tryLogin</a></div><div class="ttdeci">auto tryLogin(card::uid_t uid, FabBackend &amp;server) const -&gt; std::optional&lt; FabUser &gt;</div><div class="ttdoc">Verifies the card ID against the server (if available) or the whitelist.</div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8cpp_source.xhtml#l00054">AuthProvider.cpp:54</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></div><div class="ttdoc">Main class implementing the state changes.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8hpp_source.xhtml#l00019">BoardLogic.hpp:20</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a164e40105242d0b7c56c6b4f21155101"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">fabomatic::BoardLogic::getMachine</a></div><div class="ttdeci">auto getMachine() const -&gt; const Machine &amp;</div><div class="ttdoc">Gets the current machine.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00601">BoardLogic.cpp:601</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a25bdc3a49d850aa49f92faf951b68efb"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a25bdc3a49d850aa49f92faf951b68efb">fabomatic::BoardLogic::checkRfid</a></div><div class="ttdeci">auto checkRfid() -&gt; void</div><div class="ttdoc">Checks if a new card is present.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00549">BoardLogic.cpp:549</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a2ec0d16e4ca169baedb9b2d50ec5c6d7"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a2ec0d16e4ca169baedb9b2d50ec5c6d7">fabomatic::BoardLogic::Status::Connected</a></div><div class="ttdeci">@ Connected</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a8d9da4bc0e49a50e09ac9f7e56789d39"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a8d9da4bc0e49a50e09ac9f7e56789d39">fabomatic::BoardLogic::Status::Offline</a></div><div class="ttdeci">@ Offline</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0ae321c53b354930ba96f0243e652df458"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae321c53b354930ba96f0243e652df458">fabomatic::BoardLogic::Status::Connecting</a></div><div class="ttdeci">@ Connecting</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3c38d7a3ed7952c6d6297efdf50ea4dd"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">fabomatic::BoardLogic::changeStatus</a></div><div class="ttdeci">auto changeStatus(Status newStatus) -&gt; void</div><div class="ttdoc">Sets the board in the state given.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00273">BoardLogic.cpp:273</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a98a15cc323f97adc394c29e897afc12d"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a98a15cc323f97adc394c29e897afc12d">fabomatic::BoardLogic::logout</a></div><div class="ttdeci">auto logout() -&gt; void</div><div class="ttdoc">Removes the current machine user and changes the status to LoggedOut.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00112">BoardLogic.cpp:112</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_aa0d3d3aa742eba1ffd00b97868ce7edc"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#aa0d3d3aa742eba1ffd00b97868ce7edc">fabomatic::BoardLogic::refreshFromServer</a></div><div class="ttdeci">auto refreshFromServer() -&gt; void</div><div class="ttdoc">connects and polls the server for up-to-date machine information</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00042">BoardLogic.cpp:42</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_ac05af486941c620c9494ba545dd83c3d"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#ac05af486941c620c9494ba545dd83c3d">fabomatic::BoardLogic::checkPowerOff</a></div><div class="ttdeci">auto checkPowerOff() -&gt; void</div><div class="ttdoc">Checks if the machine must be powered off.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00577">BoardLogic.cpp:577</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_ac198a07d00fda36a527cd9db2d97efc1"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#ac198a07d00fda36a527cd9db2d97efc1">fabomatic::BoardLogic::beepFail</a></div><div class="ttdeci">auto beepFail() const -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00450">BoardLogic.cpp:450</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_ac2feade03b2a74a1998dcec282a8eacb"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#ac2feade03b2a74a1998dcec282a8eacb">fabomatic::BoardLogic::getServer</a></div><div class="ttdeci">auto getServer() -&gt; FabBackend &amp;</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00634">BoardLogic.cpp:634</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_ad05b4db308773e56d866fe87d34022d9"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#ad05b4db308773e56d866fe87d34022d9">fabomatic::BoardLogic::blinkLed</a></div><div class="ttdeci">auto blinkLed(uint8_t r=0, uint8_t g=0, uint8_t b=0) -&gt; void</div><div class="ttdoc">Blinks the LED.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00499">BoardLogic.cpp:499</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a044a94e7220ee295bfab801b6ca32e32"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a044a94e7220ee295bfab801b6ca32e32">fabomatic::FabBackend::saveBuffer</a></div><div class="ttdeci">auto saveBuffer() -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00633">FabBackend.cpp:633</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a0e4d6d289b03582bf6ea9e78e15dd79e"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a0e4d6d289b03582bf6ea9e78e15dd79e">fabomatic::FabBackend::checkCard</a></div><div class="ttdeci">auto checkCard(const card::uid_t uid) -&gt; std::unique_ptr&lt; MQTTInterface::UserResponse &gt;</div><div class="ttdoc">Checks if the card ID is known to the server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00507">FabBackend.cpp:507</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a1a45f556aadcbc428d14b7c7577ed43d"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">fabomatic::FabBackend::connect</a></div><div class="ttdeci">auto connect() -&gt; bool</div><div class="ttdoc">Establishes a connection to the WiFi network and the MQTT server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00291">FabBackend.cpp:291</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a1d2a3a95b98c66db4c9d4fc9c1d401ef"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a1d2a3a95b98c66db4c9d4fc9c1d401ef">fabomatic::FabBackend::registerMaintenance</a></div><div class="ttdeci">auto registerMaintenance(const card::uid_t maintainer) -&gt; std::unique_ptr&lt; MQTTInterface::SimpleResponse &gt;</div><div class="ttdoc">Registers a maintenance action.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00563">FabBackend.cpp:563</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a215d08460a8df6f20223a07b1e756332"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a215d08460a8df6f20223a07b1e756332">fabomatic::FabBackend::checkMachine</a></div><div class="ttdeci">auto checkMachine() -&gt; std::unique_ptr&lt; MQTTInterface::MachineResponse &gt;</div><div class="ttdoc">Checks the machine status on the server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00517">FabBackend.cpp:517</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a492c94ed0682ad834ccd7ddc7c20a55a"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a492c94ed0682ad834ccd7ddc7c20a55a">fabomatic::FabBackend::setChannel</a></div><div class="ttdeci">auto setChannel(int32_t channel) -&gt; void</div><div class="ttdoc">Sets the WiFi channel to use.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00583">FabBackend.cpp:583</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a96279ac5e1540441111f7ecb04ba7ce6"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a96279ac5e1540441111f7ecb04ba7ce6">fabomatic::FabBackend::startUse</a></div><div class="ttdeci">auto startUse(const card::uid_t uid) -&gt; std::unique_ptr&lt; MQTTInterface::SimpleResponse &gt;</div><div class="ttdoc">Registers the start of machine usage.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00528">FabBackend.cpp:528</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_aaf05998bb9dec17ae98283969109bb2d"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#aaf05998bb9dec17ae98283969109bb2d">fabomatic::FabBackend::loop</a></div><div class="ttdeci">auto loop() -&gt; bool</div><div class="ttdoc">Main loop for the MQTT client.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00184">FabBackend.cpp:184</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_abb44b529c858ddc1006592e9bac8a815"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#abb44b529c858ddc1006592e9bac8a815">fabomatic::FabBackend::alive</a></div><div class="ttdeci">auto alive() -&gt; bool</div><div class="ttdoc">Sends a ping to the server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00573">FabBackend.cpp:573</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ac3065c3c86669065f8ecdd62dfe02772"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ac3065c3c86669065f8ecdd62dfe02772">fabomatic::FabBackend::inUse</a></div><div class="ttdeci">auto inUse(const card::uid_t uid, std::chrono::seconds duration) -&gt; std::unique_ptr&lt; MQTTInterface::SimpleResponse &gt;</div><div class="ttdoc">Informs the backend that the machine is in use.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00552">FabBackend.cpp:552</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ac80b4835d858bea27da461b18df5f570"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">fabomatic::FabBackend::hasBufferedMsg</a></div><div class="ttdeci">auto hasBufferedMsg() const -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00588">FabBackend.cpp:588</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_acf5644d920896038018f990568e710c3"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#acf5644d920896038018f990568e710c3">fabomatic::FabBackend::configure</a></div><div class="ttdeci">auto configure(const SavedConfig &amp;config) -&gt; void</div><div class="ttdoc">Configures the FabBackend with the given configuration.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00021">FabBackend.cpp:21</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ad558116614ee45601f4665d395838727"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ad558116614ee45601f4665d395838727">fabomatic::FabBackend::disconnect</a></div><div class="ttdeci">auto disconnect() -&gt; void</div><div class="ttdoc">Disconnects from the MQTT server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00386">FabBackend.cpp:386</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ad74678b61ebbdfe50857e91dad3eb866"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ad74678b61ebbdfe50857e91dad3eb866">fabomatic::FabBackend::finishUse</a></div><div class="ttdeci">auto finishUse(const card::uid_t uid, std::chrono::seconds duration) -&gt; std::unique_ptr&lt; MQTTInterface::SimpleResponse &gt;</div><div class="ttdoc">Registers the end of machine usage.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00540">FabBackend.cpp:540</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ad928751b2f967feaac0f2cb708c0d6e9"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ad928751b2f967feaac0f2cb708c0d6e9">fabomatic::FabBackend::connectWiFi</a></div><div class="ttdeci">auto connectWiFi() -&gt; bool</div><div class="ttdoc">Connects to the WiFi network.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00259">FabBackend.cpp:259</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_aef092e0e1db0c3539d5474fad2456255"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">fabomatic::FabBackend::isOnline</a></div><div class="ttdeci">auto isOnline() const -&gt; bool</div><div class="ttdoc">Checks if the client is online.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00235">FabBackend.cpp:235</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_l_c_d_wrapper_xhtml"><div class="ttname"><a href="classfabomatic_1_1_l_c_d_wrapper.xhtml">fabomatic::LCDWrapper</a></div><div class="ttdoc">LCD display wrapper.</div><div class="ttdef"><b>Definition</b> <a href="_l_c_d_wrapper_8hpp_source.xhtml#l00014">LCDWrapper.hpp:15</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml">fabomatic::MockMQTTBroker</a></div><div class="ttdoc">This class implements an MQTT broker with predefined responses to FabBackend requests.</div><div class="ttdef"><b>Definition</b> <a href="_mock_m_q_t_t_broker_8hpp_source.xhtml#l00015">MockMQTTBroker.hpp:16</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml_a4cd18cc3fb887b17e4668bbf99a531e5"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a4cd18cc3fb887b17e4668bbf99a531e5">fabomatic::MockMQTTBroker::mainLoop</a></div><div class="ttdeci">auto mainLoop() -&gt; void</div><div class="ttdoc">Main loop for the MQTT broker.</div><div class="ttdef"><b>Definition</b> <a href="_mock_m_q_t_t_broker_8cpp_source.xhtml#l00239">MockMQTTBroker.cpp:239</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml_a78a57e64b156c6d6d93104fec142740d"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a78a57e64b156c6d6d93104fec142740d">fabomatic::MockMQTTBroker::isRunning</a></div><div class="ttdeci">auto isRunning() const -&gt; bool</div><div class="ttdoc">Checks if the MQTT broker is running.</div><div class="ttdef"><b>Definition</b> <a href="_mock_m_q_t_t_broker_8cpp_source.xhtml#l00109">MockMQTTBroker.cpp:109</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_r_f_i_d_wrapper_xhtml"><div class="ttname"><a href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a></div><div class="ttdoc">Driver class for the RFID reader chip.</div><div class="ttdef"><b>Definition</b> <a href="_r_f_i_d_wrapper_8hpp_source.xhtml#l00018">RFIDWrapper.hpp:19</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a312c74363068192ae80df24140f82874"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a312c74363068192ae80df24140f82874">fabomatic::SavedConfig::SaveToEEPROM</a></div><div class="ttdeci">auto SaveToEEPROM() const -&gt; bool</div><div class="ttdoc">Saves the configuration to EEPROM.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00172">SavedConfig.cpp:172</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a3a6f62510c34ed7a4491022e4e43b9c2"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">fabomatic::SavedConfig::DefaultConfig</a></div><div class="ttdeci">static auto DefaultConfig() -&gt; SavedConfig</div><div class="ttdoc">Returns the default configuration built from conf.hpp and secrets.hpp.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00028">SavedConfig.cpp:28</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_aca3fe97dfa74c005d47ffef700392d99"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">fabomatic::SavedConfig::LoadFromEEPROM</a></div><div class="ttdeci">static auto LoadFromEEPROM() -&gt; std::optional&lt; SavedConfig &gt;</div><div class="ttdoc">Loads the configuration from EEPROM if available and matching revision number.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00052">SavedConfig.cpp:52</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_scheduler_xhtml"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml">fabomatic::Tasks::Scheduler</a></div><div class="ttdoc">The schedule is in charge of running tasks in the right order based on their requested intervals.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00114">Tasks.hpp:115</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_scheduler_xhtml_a203784237087f7f1b0b77c15bcdb85f9"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a203784237087f7f1b0b77c15bcdb85f9">fabomatic::Tasks::Scheduler::taskCount</a></div><div class="ttdeci">auto taskCount() const -&gt; size_t</div><div class="ttdoc">Gets the number of tasks in the scheduler.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00105">Tasks.cpp:105</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_scheduler_xhtml_a2acce29901dbfd56a0f49beb277e3e76"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a2acce29901dbfd56a0f49beb277e3e76">fabomatic::Tasks::Scheduler::updateSchedules</a></div><div class="ttdeci">auto updateSchedules() const -&gt; void</div><div class="ttdoc">Recompute all the next run times for all the tasks.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00032">Tasks.cpp:32</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_scheduler_xhtml_a701e971506199db303a90f2515dd6169"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a701e971506199db303a90f2515dd6169">fabomatic::Tasks::Scheduler::getTasks</a></div><div class="ttdeci">auto getTasks() const -&gt; const std::vector&lt; Task * &gt;</div><div class="ttdoc">Get a copy vector of task pointers.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00110">Tasks.cpp:110</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_scheduler_xhtml_aff9b0c44cc0bef222932a681ace0d406"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#aff9b0c44cc0bef222932a681ace0d406">fabomatic::Tasks::Scheduler::execute</a></div><div class="ttdeci">auto execute() -&gt; void</div><div class="ttdoc">Execute all tasks that are ready to run.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00083">Tasks.cpp:83</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml">fabomatic::Tasks::Task</a></div><div class="ttdoc">A task class which represents a function to be called at requested intervals.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00023">Tasks.hpp:24</a></div></div>
<div class="ttc" id="aconf_8hpp_xhtml"><div class="ttname"><a href="conf_8hpp.xhtml">conf.hpp</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_tasks_xhtml_aad4a932b189725b84a436888d9da5dc8"><div class="ttname"><a href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">fabomatic::Tasks::arduinoNow</a></div><div class="ttdeci">auto arduinoNow() -&gt; const std::chrono::steady_clock::time_point</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00015">Tasks.hpp:15</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1card_xhtml_aa36a4f716561b5c72d144ad55bc3e53b"><div class="ttname"><a href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">fabomatic::card::uid_t</a></div><div class="ttdeci">u_int64_t uid_t</div><div class="ttdef"><b>Definition</b> <a href="card_8hpp_source.xhtml#l00015">card.hpp:15</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1tasks_xhtml_aeae34487453706306821d18018af7355"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1tasks.xhtml#aeae34487453706306821d18018af7355">fabomatic::conf::tasks::WATCHDOG_TIMEOUT</a></div><div class="ttdeci">static constexpr auto WATCHDOG_TIMEOUT</div><div class="ttdoc">Timeout for hardware watchdog, set to 0s to disable (default: 60s)</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00122">conf.hpp:122</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1esp32_xhtml_a8bec49abfae47da0cadccb6e486f69bb"><div class="ttname"><a href="namespacefabomatic_1_1esp32.xhtml#a8bec49abfae47da0cadccb6e486f69bb">fabomatic::esp32::setupWatchdog</a></div><div class="ttdeci">auto setupWatchdog(std::chrono::milliseconds msecs) -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_espressif_8cpp_source.xhtml#l00032">Espressif.cpp:32</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1esp32_xhtml_ac7eca0f98345aa2c296103d6dc9fff01"><div class="ttname"><a href="namespacefabomatic_1_1esp32.xhtml#ac7eca0f98345aa2c296103d6dc9fff01">fabomatic::esp32::signalWatchdog</a></div><div class="ttdeci">auto signalWatchdog() -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_espressif_8cpp_source.xhtml#l00056">Espressif.cpp:56</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1esp32_xhtml_ae78a1408710128cb446f2cde991017dd"><div class="ttname"><a href="namespacefabomatic_1_1esp32.xhtml#ae78a1408710128cb446f2cde991017dd">fabomatic::esp32::removeWatchdog</a></div><div class="ttdeci">auto removeWatchdog() -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_espressif_8cpp_source.xhtml#l00061">Espressif.cpp:61</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1secrets_1_1cards_xhtml_a83b3f579950d846c48fb7654ccef9e17"><div class="ttname"><a href="namespacefabomatic_1_1secrets_1_1cards.xhtml#a83b3f579950d846c48fb7654ccef9e17">fabomatic::secrets::cards::whitelist</a></div><div class="ttdeci">static constexpr WhiteList whitelist</div><div class="ttdoc">Static list of whitelisted RFID cards.</div><div class="ttdef"><b>Definition</b> <a href="secrets_8hpp_source.xhtml#l00023">secrets.hpp:23</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml">fabomatic::tests</a></div><div class="ttdef"><b>Definition</b> <a href="test__chrono_8cpp_source.xhtml#l00016">test_chrono.cpp:17</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a009fc290d438fc7821dddc336aae2f3b"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a009fc290d438fc7821dddc336aae2f3b">fabomatic::tests::t1</a></div><div class="ttdeci">auto t1</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00317">test_mqtt.cpp:317</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a046c348aaf1a15bf80358065553e748b"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a046c348aaf1a15bf80358065553e748b">fabomatic::tests::test_taskEspWatchdog</a></div><div class="ttdeci">void test_taskEspWatchdog()</div><div class="ttdoc">Keep the ESP32 HW watchdog alive. If code gets stuck this will cause an automatic reset.</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00274">test_mqtt.cpp:274</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a0feac8d80c54d5fe02cfac6bfcb43a7e"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a0feac8d80c54d5fe02cfac6bfcb43a7e">fabomatic::tests::broker</a></div><div class="ttdeci">fabomatic::MockMQTTBroker broker</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00034">test_mqtt.cpp:34</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a294b4767ecf1e1d11cc31dafb2541d23"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a294b4767ecf1e1d11cc31dafb2541d23">fabomatic::tests::test_taskCheckRfid</a></div><div class="ttdeci">void test_taskCheckRfid()</div><div class="ttdoc">periodic check for new RFID card</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00245">test_mqtt.cpp:245</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a2a7b41334e2a6684e389f6204da0305a"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a2a7b41334e2a6684e389f6204da0305a">fabomatic::tests::t5</a></div><div class="ttdeci">auto t5</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00321">test_mqtt.cpp:321</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a438b9060c27d36e89506199205b342cb"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a438b9060c27d36e89506199205b342cb">fabomatic::tests::test_fabserver_calls</a></div><div class="ttdeci">void test_fabserver_calls()</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00133">test_mqtt.cpp:133</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a6404b5d30ab37f8b12de788296e2b92c"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">fabomatic::tests::test_scheduler</a></div><div class="ttdeci">fabomatic::Tasks::Scheduler test_scheduler</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00035">test_mqtt.cpp:35</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a675dfc88957b4e6871f32187a0da29b2"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a675dfc88957b4e6871f32187a0da29b2">fabomatic::tests::test_create_buffered_messages</a></div><div class="ttdeci">void test_create_buffered_messages()</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00050">test_mqtt.cpp:50</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a739cb1ea71dc21bde3450d76b4eb2749"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a739cb1ea71dc21bde3450d76b4eb2749">fabomatic::tests::t2</a></div><div class="ttdeci">auto t2</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00318">test_mqtt.cpp:318</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a7cd22311b16fc7c256a30ba4c2f6f387"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a7cd22311b16fc7c256a30ba4c2f6f387">fabomatic::tests::test_taskVarious</a></div><div class="ttdeci">void test_taskVarious()</div><div class="ttdoc">blink led</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00251">test_mqtt.cpp:251</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a88a4242d48bfa4a0337df522d303c367"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a88a4242d48bfa4a0337df522d303c367">fabomatic::tests::test_taskConnect</a></div><div class="ttdeci">void test_taskConnect()</div><div class="ttdoc">Opens WiFi and server connection and updates board state accordingly.</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00222">test_mqtt.cpp:222</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a95c3d2a5cfa25e610ac054894d766f73"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a95c3d2a5cfa25e610ac054894d766f73">fabomatic::tests::test_check_transmission</a></div><div class="ttdeci">void test_check_transmission()</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00079">test_mqtt.cpp:79</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a9a8176cc8103382324e4d067a4d0613d"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a9a8176cc8103382324e4d067a4d0613d">fabomatic::tests::t6</a></div><div class="ttdeci">auto t6</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00322">test_mqtt.cpp:322</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_aa2f9f558fe3c311acc82ca6b7552c373"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#aa2f9f558fe3c311acc82ca6b7552c373">fabomatic::tests::lcd</a></div><div class="ttdeci">fabomatic::LCDWrapper lcd</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00032">test_mqtt.cpp:32</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_aaa8f9a92ebaa17b28d4c53e1f9608daf"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#aaa8f9a92ebaa17b28d4c53e1f9608daf">fabomatic::tests::t3</a></div><div class="ttdeci">auto t3</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00319">test_mqtt.cpp:319</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_ab11df5855a7b6969c5b44b095bce756f"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">fabomatic::tests::rfid</a></div><div class="ttdeci">fabomatic::RFIDWrapper&lt; fabomatic::MockMrfc522 &gt; rfid</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00031">test_mqtt.cpp:31</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_aba7f55ee91c2d2a647fca6c8cc106c97"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#aba7f55ee91c2d2a647fca6c8cc106c97">fabomatic::tests::test_start_broker</a></div><div class="ttdeci">void test_start_broker()</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00097">test_mqtt.cpp:97</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_acaf37fbb67ed375298e6a277500632ae"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#acaf37fbb67ed375298e6a277500632ae">fabomatic::tests::exit_request</a></div><div class="ttdeci">std::atomic&lt; bool &gt; exit_request</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00037">test_mqtt.cpp:37</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_adf323d841fd7207901e373cdc073d4af"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#adf323d841fd7207901e373cdc073d4af">fabomatic::tests::test_normal_use</a></div><div class="ttdeci">void test_normal_use()</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00324">test_mqtt.cpp:324</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_ae0c2cd74b089905fbdebeca807403606"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#ae0c2cd74b089905fbdebeca807403606">fabomatic::tests::test_taskMQTTAlive</a></div><div class="ttdeci">void test_taskMQTTAlive()</div><div class="ttdoc">sends the MQTT alive message</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00308">test_mqtt.cpp:308</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_ae67aa957d270478a0793908703b77446"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">fabomatic::tests::logic</a></div><div class="ttdeci">fabomatic::BoardLogic logic</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00033">test_mqtt.cpp:33</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_af046ac0a4d53b62e8f3bf0cec2d07440"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#af046ac0a4d53b62e8f3bf0cec2d07440">fabomatic::tests::threadMQTTServer</a></div><div class="ttdeci">void * threadMQTTServer(void *arg)</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00039">test_mqtt.cpp:39</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_af592b66b287714a90a895709829622b3"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#af592b66b287714a90a895709829622b3">fabomatic::tests::test_taskRfidWatchdog</a></div><div class="ttdeci">void test_taskRfidWatchdog()</div><div class="ttdoc">checks the RFID chip status and re-init it if necessary.</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00293">test_mqtt.cpp:293</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_af71fb65d41b9fc211910208ea71a4c91"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#af71fb65d41b9fc211910208ea71a4c91">fabomatic::tests::test_stop_broker</a></div><div class="ttdeci">void test_stop_broker()</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00127">test_mqtt.cpp:127</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_af8a8ce64acab16055eb3a994dfbe6d33"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#af8a8ce64acab16055eb3a994dfbe6d33">fabomatic::tests::t4</a></div><div class="ttdeci">auto t4</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00320">test_mqtt.cpp:320</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_a90e4180ab5a1ffd3393b4f0d6b01f2b3"><div class="ttname"><a href="namespacefabomatic.xhtml#a90e4180ab5a1ffd3393b4f0d6b01f2b3">fabomatic::pins</a></div><div class="ttdeci">static constexpr pins_config pins</div><div class="ttdef"><b>Definition</b> <a href="pins_8hpp_source.xhtml#l00246">pins.hpp:246</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_fab_user_xhtml_a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e"><div class="ttname"><a href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">fabomatic::FabUser::UserLevel::Unknown</a></div><div class="ttdeci">@ Unknown</div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_xhtml_abd0d35daf6efede38501593182b6d574"><div class="ttname"><a href="structfabomatic_1_1pins__config.xhtml#abd0d35daf6efede38501593182b6d574">fabomatic::pins_config::lcd</a></div><div class="ttdeci">lcd_config lcd</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00069">PinsConfig.hpp:69</a></div></div>
<div class="ttc" id="atest__logic_8cpp_xhtml_a61fc6209a48e9414bc6f6dff41c34f09"><div class="ttname"><a href="test__logic_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">TAG3</a></div><div class="ttdeci">static const char * TAG3</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00025">test_logic.cpp:25</a></div></div>
<div class="ttc" id="atest__mqtt_8cpp_xhtml_a4fc01d736fe50cf5b977f755b675f11d"><div class="ttname"><a href="test__mqtt_8cpp.xhtml#a4fc01d736fe50cf5b977f755b675f11d">setup</a></div><div class="ttdeci">void setup()</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00354">test_mqtt.cpp:354</a></div></div>
<div class="ttc" id="atest__mqtt_8cpp_xhtml_a61fc6209a48e9414bc6f6dff41c34f09"><div class="ttname"><a href="test__mqtt_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">TAG3</a></div><div class="ttdeci">static const char * TAG3</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00027">test_mqtt.cpp:27</a></div></div>
<div class="ttc" id="atest__mqtt_8cpp_xhtml_a95c834d6178047ce9e1bce7cbfea2836"><div class="ttname"><a href="test__mqtt_8cpp.xhtml#a95c834d6178047ce9e1bce7cbfea2836">setUp</a></div><div class="ttdeci">void setUp(void)</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00348">test_mqtt.cpp:348</a></div></div>
<div class="ttc" id="atest__mqtt_8cpp_xhtml_a9909011e5fea0c018842eec4d93d0662"><div class="ttname"><a href="test__mqtt_8cpp.xhtml#a9909011e5fea0c018842eec4d93d0662">tearDown</a></div><div class="ttdeci">void tearDown(void)</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00346">test_mqtt.cpp:346</a></div></div>
<div class="ttc" id="atest__mqtt_8cpp_xhtml_ad8f69fc4a7778b405081abbf9fe6aa82"><div class="ttname"><a href="test__mqtt_8cpp.xhtml#ad8f69fc4a7778b405081abbf9fe6aa82">thread_mqtt_broker</a></div><div class="ttdeci">pthread_t thread_mqtt_broker</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00024">test_mqtt.cpp:24</a></div></div>
<div class="ttc" id="atest__mqtt_8cpp_xhtml_ae6c877ec448b1e99c6f9207301e622f6"><div class="ttname"><a href="test__mqtt_8cpp.xhtml#ae6c877ec448b1e99c6f9207301e622f6">attr_mqtt_broker</a></div><div class="ttdeci">pthread_attr_t attr_mqtt_broker</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00025">test_mqtt.cpp:25</a></div></div>
<div class="ttc" id="atest__mqtt_8cpp_xhtml_afe461d27b9c48d5921c00d521181f12f"><div class="ttname"><a href="test__mqtt_8cpp.xhtml#afe461d27b9c48d5921c00d521181f12f">loop</a></div><div class="ttdeci">void loop()</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00379">test_mqtt.cpp:379</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jul 14 2024 13:49:34 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
