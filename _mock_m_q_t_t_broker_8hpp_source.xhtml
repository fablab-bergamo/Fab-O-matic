<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: MockMQTTBroker.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(0); });
/* @license-end */
</script>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_467c377f93108d0a0c83a3bb4de019c4.xhtml">mock</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">MockMQTTBroker.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="_mock_m_q_t_t_broker_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#ifndef MOCK_MOCKMQTTBROKER_HPP_</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#define MOCK_MOCKMQTTBROKER_HPP_</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;mutex&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;functional&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;queue&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &quot;<a class="code" href="_base_rfid_wrapper_8hpp.xhtml">BaseRfidWrapper.hpp</a>&quot;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &quot;sMQTTBroker.h&quot;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefabomatic.xhtml">fabomatic</a></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>{</div>
<div class="foldopen" id="foldopen00015" data-start="{" data-end="};">
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml">   15</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml">MockMQTTBroker</a> final : <span class="keyword">public</span> sMQTTBroker</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  {</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a925db02025c2d657eebd415af3def156">   18</a></span>    <a class="code hl_function" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a925db02025c2d657eebd415af3def156">MockMQTTBroker</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span> </div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a78a57e64b156c6d6d93104fec142740d">   20</a></span>    <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a78a57e64b156c6d6d93104fec142740d">isRunning</a>() const -&gt; <span class="keywordtype">bool</span>;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#ac6c05df03ca2f41d6a9b48d17ce84ab1">   21</a></span>    auto <a class="code hl_function" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#ac6c05df03ca2f41d6a9b48d17ce84ab1">start</a>() -&gt; <span class="keywordtype">void</span>;</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a1bdfd3cf53bce5d2923f4efeff0621a7">   22</a></span>    auto <a class="code hl_function" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a1bdfd3cf53bce5d2923f4efeff0621a7">onEvent</a>(sMQTTEvent *event) -&gt; <span class="keywordtype">bool</span> override;</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#aeb5eadd85f359d48e3871bfede5ee19d">   23</a></span>    auto <a class="code hl_function" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#aeb5eadd85f359d48e3871bfede5ee19d">defaultReplies</a>(const std::<span class="keywordtype">string</span> &amp;<a class="code hl_struct" href="structfabomatic_1_1_mock_m_q_t_t_broker_1_1query.xhtml">query</a>) const -&gt; const std::<span class="keywordtype">string</span>;</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a6ca30ff9daccacbdecdc598f1749951e">   27</a></span>    auto <a class="code hl_function" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a6ca30ff9daccacbdecdc598f1749951e">configureReplies</a>(std::function&lt;const std::<span class="keywordtype">string</span>(const std::<span class="keywordtype">string</span> &amp;, const std::<span class="keywordtype">string</span> &amp;)&gt; <a class="code hl_variable" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#af85cd98d1c8f18ab1b74be039a9e03d2">callback</a>) -&gt; <span class="keywordtype">void</span>;</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a119e59001d5ce25708aa2198623505c6">   29</a></span>    auto <a class="code hl_function" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a119e59001d5ce25708aa2198623505c6">processQueries</a>() -&gt; <span class="keywordtype">size_t</span>;</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a1f95b4450ad044afe005accb69ab3ac9">   31</a></span>    auto <a class="code hl_function" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a1f95b4450ad044afe005accb69ab3ac9">mainLoop</a>() -&gt; <span class="keywordtype">void</span>;</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#ab7ca6a3d8b5de0f04e0085a287127a31">   32</a></span>    auto <a class="code hl_function" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#ab7ca6a3d8b5de0f04e0085a287127a31">generateReplies</a>(<span class="keywordtype">bool</span> enabled) -&gt; <span class="keywordtype">void</span>;</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>  private:</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#abe648b262ec5cc3699883425dbf3eaa2">   35</a></span>    std::<a class="code hl_variable" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#abe648b262ec5cc3699883425dbf3eaa2">mutex</a> <a class="code hl_variable" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#abe648b262ec5cc3699883425dbf3eaa2">mutex</a>;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#acd83148966b7a81bf0961c0e61bfb504">   36</a></span>    std::<span class="keywordtype">string</span> <a class="code hl_variable" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#acd83148966b7a81bf0961c0e61bfb504">topic</a>{<span class="stringliteral">&quot;&quot;</span>};</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a4401fae9098ba10caf84afc6b11b14ae">   37</a></span>    std::string <a class="code hl_variable" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a4401fae9098ba10caf84afc6b11b14ae">payload</a>{<span class="stringliteral">&quot;&quot;</span>};</div>
<div class="foldopen" id="foldopen00038" data-start="{" data-end="};">
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno"><a class="line" href="structfabomatic_1_1_mock_m_q_t_t_broker_1_1query.xhtml">   38</a></span>    <span class="keyword">struct </span><a class="code hl_struct" href="structfabomatic_1_1_mock_m_q_t_t_broker_1_1query.xhtml">query</a></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>    {</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno"><a class="line" href="structfabomatic_1_1_mock_m_q_t_t_broker_1_1query.xhtml#a38b99b9926df7bfa341c7a3a62ecf8b6">   40</a></span>      std::string <a class="code hl_variable" href="structfabomatic_1_1_mock_m_q_t_t_broker_1_1query.xhtml#a38b99b9926df7bfa341c7a3a62ecf8b6">source_topic</a>{<span class="stringliteral">&quot;&quot;</span>};</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno"><a class="line" href="structfabomatic_1_1_mock_m_q_t_t_broker_1_1query.xhtml#a918ac3172801ed57bdf59e47195cb01f">   41</a></span>      std::string <a class="code hl_variable" href="structfabomatic_1_1_mock_m_q_t_t_broker_1_1query.xhtml#a918ac3172801ed57bdf59e47195cb01f">source_query</a>{<span class="stringliteral">&quot;&quot;</span>};</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno"><a class="line" href="structfabomatic_1_1_mock_m_q_t_t_broker_1_1query.xhtml#ac17a16d0260a36d51fc3b0f0b56c12e5">   42</a></span>      std::string <a class="code hl_variable" href="structfabomatic_1_1_mock_m_q_t_t_broker_1_1query.xhtml#ac17a16d0260a36d51fc3b0f0b56c12e5">reply_topic</a>{<span class="stringliteral">&quot;&quot;</span>};</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>    };</div>
</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a015654d87af05fcf75df5654e8b3dd9e">   44</a></span>    std::queue&lt;query&gt; <a class="code hl_variable" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a015654d87af05fcf75df5654e8b3dd9e">queries</a>{};</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="foldopen" id="foldopen00046" data-start="{" data-end="};">
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#af85cd98d1c8f18ab1b74be039a9e03d2">   46</a></span>    std::function&lt;<span class="keyword">const</span> std::string(<span class="keyword">const</span> std::string &amp;, <span class="keyword">const</span> std::string &amp;)&gt; <a class="code hl_variable" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#af85cd98d1c8f18ab1b74be039a9e03d2">callback</a> = [<span class="keyword">this</span>](<span class="keyword">const</span> std::string &amp;<a class="code hl_variable" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#acd83148966b7a81bf0961c0e61bfb504">topic</a>, <span class="keyword">const</span> std::string &amp;<a class="code hl_struct" href="structfabomatic_1_1_mock_m_q_t_t_broker_1_1query.xhtml">query</a>)</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>    { <span class="keywordflow">return</span> <a class="code hl_function" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#aeb5eadd85f359d48e3871bfede5ee19d">defaultReplies</a>(<a class="code hl_struct" href="structfabomatic_1_1_mock_m_q_t_t_broker_1_1query.xhtml">query</a>); };</div>
</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#aaee749f4bebf96f67e62da34998ab900">   49</a></span>    <span class="keywordtype">bool</span> <a class="code hl_variable" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#aaee749f4bebf96f67e62da34998ab900">is_running</a>{<span class="keyword">false</span>};</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a30bb0de905d4c9f65b65e128ee501a51">   50</a></span>    <span class="keywordtype">bool</span> <a class="code hl_variable" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a30bb0de905d4c9f65b65e128ee501a51">generate_replies</a>{<span class="keyword">true</span>};</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  };</div>
</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>} <span class="comment">// namespace fabomatic</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="preprocessor">#endif </span><span class="comment">// MOCK_MOCKMQTTBROKER_HPP_</span></div>
<div class="ttc" id="a_base_rfid_wrapper_8hpp_xhtml"><div class="ttname"><a href="_base_rfid_wrapper_8hpp.xhtml">BaseRfidWrapper.hpp</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml">fabomatic::MockMQTTBroker</a></div><div class="ttdoc">This class implements an MQTT broker with predefined responses to FabBackend requests.</div><div class="ttdef"><b>Definition</b> <a href="_mock_m_q_t_t_broker_8hpp_source.xhtml#l00015">MockMQTTBroker.hpp:16</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml_a015654d87af05fcf75df5654e8b3dd9e"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a015654d87af05fcf75df5654e8b3dd9e">fabomatic::MockMQTTBroker::queries</a></div><div class="ttdeci">std::queue&lt; query &gt; queries</div><div class="ttdef"><b>Definition</b> <a href="_mock_m_q_t_t_broker_8hpp_source.xhtml#l00044">MockMQTTBroker.hpp:44</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml_a119e59001d5ce25708aa2198623505c6"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a119e59001d5ce25708aa2198623505c6">fabomatic::MockMQTTBroker::processQueries</a></div><div class="ttdeci">auto processQueries() -&gt; size_t</div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml_a1bdfd3cf53bce5d2923f4efeff0621a7"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a1bdfd3cf53bce5d2923f4efeff0621a7">fabomatic::MockMQTTBroker::onEvent</a></div><div class="ttdeci">auto onEvent(sMQTTEvent *event) -&gt; bool override</div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml_a1f95b4450ad044afe005accb69ab3ac9"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a1f95b4450ad044afe005accb69ab3ac9">fabomatic::MockMQTTBroker::mainLoop</a></div><div class="ttdeci">auto mainLoop() -&gt; void</div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml_a30bb0de905d4c9f65b65e128ee501a51"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a30bb0de905d4c9f65b65e128ee501a51">fabomatic::MockMQTTBroker::generate_replies</a></div><div class="ttdeci">bool generate_replies</div><div class="ttdef"><b>Definition</b> <a href="_mock_m_q_t_t_broker_8hpp_source.xhtml#l00050">MockMQTTBroker.hpp:50</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml_a4401fae9098ba10caf84afc6b11b14ae"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a4401fae9098ba10caf84afc6b11b14ae">fabomatic::MockMQTTBroker::payload</a></div><div class="ttdeci">std::string payload</div><div class="ttdef"><b>Definition</b> <a href="_mock_m_q_t_t_broker_8hpp_source.xhtml#l00037">MockMQTTBroker.hpp:37</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml_a6ca30ff9daccacbdecdc598f1749951e"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a6ca30ff9daccacbdecdc598f1749951e">fabomatic::MockMQTTBroker::configureReplies</a></div><div class="ttdeci">auto configureReplies(std::function&lt; const std::string(const std::string &amp;, const std::string &amp;)&gt; callback) -&gt; void</div><div class="ttdoc">set the reply generation function. May be called from a different thread</div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml_a78a57e64b156c6d6d93104fec142740d"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a78a57e64b156c6d6d93104fec142740d">fabomatic::MockMQTTBroker::isRunning</a></div><div class="ttdeci">auto isRunning() const -&gt; bool</div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml_a925db02025c2d657eebd415af3def156"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#a925db02025c2d657eebd415af3def156">fabomatic::MockMQTTBroker::MockMQTTBroker</a></div><div class="ttdeci">MockMQTTBroker()=default</div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml_aaee749f4bebf96f67e62da34998ab900"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#aaee749f4bebf96f67e62da34998ab900">fabomatic::MockMQTTBroker::is_running</a></div><div class="ttdeci">bool is_running</div><div class="ttdef"><b>Definition</b> <a href="_mock_m_q_t_t_broker_8hpp_source.xhtml#l00049">MockMQTTBroker.hpp:49</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml_ab7ca6a3d8b5de0f04e0085a287127a31"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#ab7ca6a3d8b5de0f04e0085a287127a31">fabomatic::MockMQTTBroker::generateReplies</a></div><div class="ttdeci">auto generateReplies(bool enabled) -&gt; void</div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml_abe648b262ec5cc3699883425dbf3eaa2"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#abe648b262ec5cc3699883425dbf3eaa2">fabomatic::MockMQTTBroker::mutex</a></div><div class="ttdeci">std::mutex mutex</div><div class="ttdef"><b>Definition</b> <a href="_mock_m_q_t_t_broker_8hpp_source.xhtml#l00035">MockMQTTBroker.hpp:35</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml_ac6c05df03ca2f41d6a9b48d17ce84ab1"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#ac6c05df03ca2f41d6a9b48d17ce84ab1">fabomatic::MockMQTTBroker::start</a></div><div class="ttdeci">auto start() -&gt; void</div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml_acd83148966b7a81bf0961c0e61bfb504"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#acd83148966b7a81bf0961c0e61bfb504">fabomatic::MockMQTTBroker::topic</a></div><div class="ttdeci">std::string topic</div><div class="ttdef"><b>Definition</b> <a href="_mock_m_q_t_t_broker_8hpp_source.xhtml#l00036">MockMQTTBroker.hpp:36</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml_aeb5eadd85f359d48e3871bfede5ee19d"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#aeb5eadd85f359d48e3871bfede5ee19d">fabomatic::MockMQTTBroker::defaultReplies</a></div><div class="ttdeci">auto defaultReplies(const std::string &amp;query) const -&gt; const std::string</div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_m_q_t_t_broker_xhtml_af85cd98d1c8f18ab1b74be039a9e03d2"><div class="ttname"><a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#af85cd98d1c8f18ab1b74be039a9e03d2">fabomatic::MockMQTTBroker::callback</a></div><div class="ttdeci">std::function&lt; const std::string(const std::string &amp;, const std::string &amp;)&gt; callback</div><div class="ttdef"><b>Definition</b> <a href="_mock_m_q_t_t_broker_8hpp_source.xhtml#l00046">MockMQTTBroker.hpp:46</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml"><div class="ttname"><a href="namespacefabomatic.xhtml">fabomatic</a></div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8cpp_source.xhtml#l00010">AuthProvider.cpp:11</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_mock_m_q_t_t_broker_1_1query_xhtml"><div class="ttname"><a href="structfabomatic_1_1_mock_m_q_t_t_broker_1_1query.xhtml">fabomatic::MockMQTTBroker::query</a></div><div class="ttdef"><b>Definition</b> <a href="_mock_m_q_t_t_broker_8hpp_source.xhtml#l00038">MockMQTTBroker.hpp:39</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_mock_m_q_t_t_broker_1_1query_xhtml_a38b99b9926df7bfa341c7a3a62ecf8b6"><div class="ttname"><a href="structfabomatic_1_1_mock_m_q_t_t_broker_1_1query.xhtml#a38b99b9926df7bfa341c7a3a62ecf8b6">fabomatic::MockMQTTBroker::query::source_topic</a></div><div class="ttdeci">std::string source_topic</div><div class="ttdef"><b>Definition</b> <a href="_mock_m_q_t_t_broker_8hpp_source.xhtml#l00040">MockMQTTBroker.hpp:40</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_mock_m_q_t_t_broker_1_1query_xhtml_a918ac3172801ed57bdf59e47195cb01f"><div class="ttname"><a href="structfabomatic_1_1_mock_m_q_t_t_broker_1_1query.xhtml#a918ac3172801ed57bdf59e47195cb01f">fabomatic::MockMQTTBroker::query::source_query</a></div><div class="ttdeci">std::string source_query</div><div class="ttdef"><b>Definition</b> <a href="_mock_m_q_t_t_broker_8hpp_source.xhtml#l00041">MockMQTTBroker.hpp:41</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_mock_m_q_t_t_broker_1_1query_xhtml_ac17a16d0260a36d51fc3b0f0b56c12e5"><div class="ttname"><a href="structfabomatic_1_1_mock_m_q_t_t_broker_1_1query.xhtml#ac17a16d0260a36d51fc3b0f0b56c12e5">fabomatic::MockMQTTBroker::query::reply_topic</a></div><div class="ttdeci">std::string reply_topic</div><div class="ttdef"><b>Definition</b> <a href="_mock_m_q_t_t_broker_8hpp_source.xhtml#l00042">MockMQTTBroker.hpp:42</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Nov 30 2024 15:35:28 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
