<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: fabomatic::SavedConfig Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacefabomatic.xhtml">fabomatic</a></li><li class="navelem"><a class="el" href="classfabomatic_1_1_saved_config.xhtml">SavedConfig</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="#pri-static-attribs">Static Private Attributes</a> &#124;
<a href="classfabomatic_1_1_saved_config-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">fabomatic::SavedConfig Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Facility to load or save data from Flash.  
 <a href="classfabomatic_1_1_saved_config.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for fabomatic::SavedConfig:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_saved_config__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a13b442195658b99513b46129ed0a425c" id="r_a13b442195658b99513b46129ed0a425c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#a13b442195658b99513b46129ed0a425c">SavedConfig</a> ()=default</td></tr>
<tr class="memdesc:a13b442195658b99513b46129ed0a425c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow compiler-time construction.  <br /></td></tr>
<tr class="separator:a13b442195658b99513b46129ed0a425c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a312c74363068192ae80df24140f82874" id="r_a312c74363068192ae80df24140f82874"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#a312c74363068192ae80df24140f82874">SaveToEEPROM</a> () const -&gt; bool</td></tr>
<tr class="memdesc:a312c74363068192ae80df24140f82874"><td class="mdescLeft">&#160;</td><td class="mdescRight">Saves the configuration to EEPROM.  <br /></td></tr>
<tr class="separator:a312c74363068192ae80df24140f82874"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ada414d31749dcd736a3fec3f759605" id="r_a4ada414d31749dcd736a3fec3f759605"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#a4ada414d31749dcd736a3fec3f759605">setMachineID</a> (<a class="el" href="struct_machine_i_d.xhtml">MachineID</a> id) -&gt; void</td></tr>
<tr class="memdesc:a4ada414d31749dcd736a3fec3f759605"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the machine ID (converting to string)  <br /></td></tr>
<tr class="separator:a4ada414d31749dcd736a3fec3f759605"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacdd24d958b88dfa41d81fb9e2db959b" id="r_aacdd24d958b88dfa41d81fb9e2db959b"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#aacdd24d958b88dfa41d81fb9e2db959b">getMachineID</a> () const -&gt; <a class="el" href="struct_machine_i_d.xhtml">MachineID</a></td></tr>
<tr class="memdesc:aacdd24d958b88dfa41d81fb9e2db959b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the machine ID (converting from string)  <br /></td></tr>
<tr class="separator:aacdd24d958b88dfa41d81fb9e2db959b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1d484179f439b28d608a9c6737bdc26" id="r_ad1d484179f439b28d608a9c6737bdc26"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#ad1d484179f439b28d608a9c6737bdc26">toString</a> () const -&gt; const std::string</td></tr>
<tr class="memdesc:ad1d484179f439b28d608a9c6737bdc26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a json-prettified fragment for logging.  <br /></td></tr>
<tr class="separator:ad1d484179f439b28d608a9c6737bdc26"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:aca3fe97dfa74c005d47ffef700392d99" id="r_aca3fe97dfa74c005d47ffef700392d99"><td class="memItemLeft" align="right" valign="top">static auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">LoadFromEEPROM</a> () -&gt; std::optional&lt; <a class="el" href="classfabomatic_1_1_saved_config.xhtml">SavedConfig</a> &gt;</td></tr>
<tr class="memdesc:aca3fe97dfa74c005d47ffef700392d99"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads the configuration from EEPROM if available and matching revision number.  <br /></td></tr>
<tr class="separator:aca3fe97dfa74c005d47ffef700392d99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a6f62510c34ed7a4491022e4e43b9c2" id="r_a3a6f62510c34ed7a4491022e4e43b9c2"><td class="memItemLeft" align="right" valign="top">static auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">DefaultConfig</a> () -&gt; <a class="el" href="classfabomatic_1_1_saved_config.xhtml">SavedConfig</a></td></tr>
<tr class="memdesc:a3a6f62510c34ed7a4491022e4e43b9c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the default configuration built from <a class="el" href="conf_8hpp.xhtml">conf.hpp</a> and <a class="el" href="secrets_8hpp.xhtml">secrets.hpp</a>.  <br /></td></tr>
<tr class="separator:a3a6f62510c34ed7a4491022e4e43b9c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9992ddd6912152983a8bf0d509a815a8" id="r_a9992ddd6912152983a8bf0d509a815a8"><td class="memItemLeft" align="right" valign="top">static auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#a9992ddd6912152983a8bf0d509a815a8">IncrementBootCount</a> () -&gt; size_t</td></tr>
<tr class="memdesc:a9992ddd6912152983a8bf0d509a815a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increments the boot count and saves it to EEPROM.  <br /></td></tr>
<tr class="separator:a9992ddd6912152983a8bf0d509a815a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a9429975f9694b85cf53cc364cd135ac5" id="r_a9429975f9694b85cf53cc364cd135ac5"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#a9429975f9694b85cf53cc364cd135ac5">magic_number</a> {0}</td></tr>
<tr class="separator:a9429975f9694b85cf53cc364cd135ac5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87190e0ef86890f51d972f3d2f024aa0" id="r_a87190e0ef86890f51d972f3d2f024aa0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfabomatic_1_1_cached_cards.xhtml">CachedCards</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#a87190e0ef86890f51d972f3d2f024aa0">cachedRfid</a></td></tr>
<tr class="memdesc:a87190e0ef86890f51d972f3d2f024aa0"><td class="mdescLeft">&#160;</td><td class="mdescRight">list of cached RFID cards  <br /></td></tr>
<tr class="separator:a87190e0ef86890f51d972f3d2f024aa0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abccca47e85f3214c2ce780230bfe7f49" id="r_abccca47e85f3214c2ce780230bfe7f49"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#abccca47e85f3214c2ce780230bfe7f49">ssid</a> {&quot;&quot;}</td></tr>
<tr class="memdesc:abccca47e85f3214c2ce780230bfe7f49"><td class="mdescLeft">&#160;</td><td class="mdescRight">WiFi SSID.  <br /></td></tr>
<tr class="separator:abccca47e85f3214c2ce780230bfe7f49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f7b5fba524d14a66ed1eaeda08a7e0d" id="r_a8f7b5fba524d14a66ed1eaeda08a7e0d"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#a8f7b5fba524d14a66ed1eaeda08a7e0d">password</a> {&quot;&quot;}</td></tr>
<tr class="memdesc:a8f7b5fba524d14a66ed1eaeda08a7e0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">WiFi password.  <br /></td></tr>
<tr class="separator:a8f7b5fba524d14a66ed1eaeda08a7e0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8de320beb3e706c35582c049d3681c42" id="r_a8de320beb3e706c35582c049d3681c42"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#a8de320beb3e706c35582c049d3681c42">mqtt_server</a> {&quot;&quot;}</td></tr>
<tr class="memdesc:a8de320beb3e706c35582c049d3681c42"><td class="mdescLeft">&#160;</td><td class="mdescRight">MQTT server.  <br /></td></tr>
<tr class="separator:a8de320beb3e706c35582c049d3681c42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cc620b09cef7aceaf7ec87e72dfcdc0" id="r_a8cc620b09cef7aceaf7ec87e72dfcdc0"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#a8cc620b09cef7aceaf7ec87e72dfcdc0">mqtt_user</a> {&quot;&quot;}</td></tr>
<tr class="memdesc:a8cc620b09cef7aceaf7ec87e72dfcdc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">MQTT username.  <br /></td></tr>
<tr class="separator:a8cc620b09cef7aceaf7ec87e72dfcdc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68004c1190623a027b2a1f41607cd33f" id="r_a68004c1190623a027b2a1f41607cd33f"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#a68004c1190623a027b2a1f41607cd33f">mqtt_password</a> {&quot;&quot;}</td></tr>
<tr class="memdesc:a68004c1190623a027b2a1f41607cd33f"><td class="mdescLeft">&#160;</td><td class="mdescRight">MQTT password.  <br /></td></tr>
<tr class="separator:a68004c1190623a027b2a1f41607cd33f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c147278506b9cd2856798a7988d78ff" id="r_a1c147278506b9cd2856798a7988d78ff"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#a1c147278506b9cd2856798a7988d78ff">mqtt_switch_topic</a> {&quot;&quot;}</td></tr>
<tr class="memdesc:a1c147278506b9cd2856798a7988d78ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">MQTT topic for mqtt switch (if available)  <br /></td></tr>
<tr class="separator:a1c147278506b9cd2856798a7988d78ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2312c6cebb6b73f66e9f8238cb1b17f" id="r_aa2312c6cebb6b73f66e9f8238cb1b17f"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#aa2312c6cebb6b73f66e9f8238cb1b17f">machine_id</a> {&quot;&quot;}</td></tr>
<tr class="memdesc:aa2312c6cebb6b73f66e9f8238cb1b17f"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classfabomatic_1_1_machine.xhtml" title="Represents the FabLab machine connected to the board.">Machine</a> ID connected to the board.  <br /></td></tr>
<tr class="separator:aa2312c6cebb6b73f66e9f8238cb1b17f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c6fb5f59883891b0ea3240a8bb8aaee" id="r_a3c6fb5f59883891b0ea3240a8bb8aaee"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#a3c6fb5f59883891b0ea3240a8bb8aaee">bootCount</a> {0}</td></tr>
<tr class="memdesc:a3c6fb5f59883891b0ea3240a8bb8aaee"><td class="mdescLeft">&#160;</td><td class="mdescRight">number of boot cycles  <br /></td></tr>
<tr class="separator:a3c6fb5f59883891b0ea3240a8bb8aaee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6510074227a78d4f5093b7aed88bdbef" id="r_a6510074227a78d4f5093b7aed88bdbef"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#a6510074227a78d4f5093b7aed88bdbef">disablePortal</a> {false}</td></tr>
<tr class="memdesc:a6510074227a78d4f5093b7aed88bdbef"><td class="mdescLeft">&#160;</td><td class="mdescRight">if true, the FORCE_OPEN_PORTAL flag will be ignored  <br /></td></tr>
<tr class="separator:a6510074227a78d4f5093b7aed88bdbef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48a97bdcbb24fe8f5e2f36a173839cdf" id="r_a48a97bdcbb24fe8f5e2f36a173839cdf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_buffer.xhtml">Buffer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#a48a97bdcbb24fe8f5e2f36a173839cdf">message_buffer</a></td></tr>
<tr class="separator:a48a97bdcbb24fe8f5e2f36a173839cdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a07246e58a5381b0edc2147965a0a8f99" id="r_a07246e58a5381b0edc2147965a0a8f99"><td class="memItemLeft" align="right" valign="top">static constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#a07246e58a5381b0edc2147965a0a8f99">MAGIC_NUMBER</a> = 0x51</td></tr>
<tr class="separator:a07246e58a5381b0edc2147965a0a8f99"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:ae0af7670707ed5a51c69197eb6fadbe5" id="r_ae0af7670707ed5a51c69197eb6fadbe5"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#ae0af7670707ed5a51c69197eb6fadbe5">toJsonDocument</a> () const -&gt; JsonDocument</td></tr>
<tr class="memdesc:ae0af7670707ed5a51c69197eb6fadbe5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Serialize the current configuration into a JsonDocument.  <br /></td></tr>
<tr class="separator:ae0af7670707ed5a51c69197eb6fadbe5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-static-methods" name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr class="memitem:a1a3af8c6a917eeef7481ab1e5e242468" id="r_a1a3af8c6a917eeef7481ab1e5e242468"><td class="memItemLeft" align="right" valign="top">static auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#a1a3af8c6a917eeef7481ab1e5e242468">fromJsonDocument</a> (const std::string &amp;json_text) -&gt; std::optional&lt; <a class="el" href="classfabomatic_1_1_saved_config.xhtml">SavedConfig</a> &gt;</td></tr>
<tr class="memdesc:a1a3af8c6a917eeef7481ab1e5e242468"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deserialize a JsonDocument into a <a class="el" href="classfabomatic_1_1_saved_config.xhtml" title="Facility to load or save data from Flash.">SavedConfig</a>.  <br /></td></tr>
<tr class="separator:a1a3af8c6a917eeef7481ab1e5e242468"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-static-attribs" name="pri-static-attribs"></a>
Static Private Attributes</h2></td></tr>
<tr class="memitem:aaa3197d962aace1f5548a5586bcc97c4" id="r_aaa3197d962aace1f5548a5586bcc97c4"><td class="memItemLeft" align="right" valign="top">static constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#aaa3197d962aace1f5548a5586bcc97c4">JSON_DOC_SIZE</a> = 4096</td></tr>
<tr class="separator:aaa3197d962aace1f5548a5586bcc97c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6d77281946b603617f828d2e4a1578d" id="r_ad6d77281946b603617f828d2e4a1578d"><td class="memItemLeft" align="right" valign="top">static std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#ad6d77281946b603617f828d2e4a1578d">json_buffer</a></td></tr>
<tr class="separator:ad6d77281946b603617f828d2e4a1578d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61d7db837cadfbba5b5036d77904e6c3" id="r_a61d7db837cadfbba5b5036d77904e6c3"><td class="memItemLeft" align="right" valign="top">static std::mutex&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml#a61d7db837cadfbba5b5036d77904e6c3">buffer_mutex</a></td></tr>
<tr class="separator:a61d7db837cadfbba5b5036d77904e6c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Facility to load or save data from Flash. </p>

<p class="definition">Definition at line <a class="el" href="_saved_config_8hpp_source.xhtml#l00020">20</a> of file <a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a13b442195658b99513b46129ed0a425c" name="a13b442195658b99513b46129ed0a425c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13b442195658b99513b46129ed0a425c">&#9670;&#160;</a></span>SavedConfig()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">fabomatic::SavedConfig::SavedConfig </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow compiler-time construction. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a3a6f62510c34ed7a4491022e4e43b9c2" name="a3a6f62510c34ed7a4491022e4e43b9c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a6f62510c34ed7a4491022e4e43b9c2">&#9670;&#160;</a></span>DefaultConfig()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::SavedConfig::DefaultConfig </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; <a class="el" href="classfabomatic_1_1_saved_config.xhtml">SavedConfig</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the default configuration built from <a class="el" href="conf_8hpp.xhtml">conf.hpp</a> and <a class="el" href="secrets_8hpp.xhtml">secrets.hpp</a>. </p>

<p class="definition">Definition at line <a class="el" href="_saved_config_8cpp_source.xhtml#l00028">28</a> of file <a class="el" href="_saved_config_8cpp_source.xhtml">SavedConfig.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   29</span>  {</div>
<div class="line"><span class="lineno">   30</span>    <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a13b442195658b99513b46129ed0a425c">SavedConfig</a> config;</div>
<div class="line"><span class="lineno">   31</span> </div>
<div class="line"><span class="lineno">   32</span>    <span class="comment">// Wifi</span></div>
<div class="line"><span class="lineno">   33</span>    config.ssid = <a class="code hl_variable" href="namespacefabomatic_1_1secrets_1_1credentials.xhtml#a0bde49c93ba98b9750a9e47c70ee028e">secrets::credentials::ssid</a>;</div>
<div class="line"><span class="lineno">   34</span>    config.password = <a class="code hl_variable" href="namespacefabomatic_1_1secrets_1_1credentials.xhtml#a9a84c8e5ac5f41925b9f2926023d3892">secrets::credentials::password</a>;</div>
<div class="line"><span class="lineno">   35</span> </div>
<div class="line"><span class="lineno">   36</span>    <span class="comment">// MQTT</span></div>
<div class="line"><span class="lineno">   37</span>    config.mqtt_server = <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a013c2e367c124dfcb56f76bd4a9ad1de">conf::mqtt::mqtt_server</a>;</div>
<div class="line"><span class="lineno">   38</span>    config.mqtt_user = <a class="code hl_variable" href="namespacefabomatic_1_1secrets_1_1credentials.xhtml#a629695e752753107595e2c6a4639472d">secrets::credentials::mqtt_user</a>;</div>
<div class="line"><span class="lineno">   39</span>    config.mqtt_password = <a class="code hl_variable" href="namespacefabomatic_1_1secrets_1_1credentials.xhtml#a891b6f3fe59b9c37adb9ec22372fcab3">secrets::credentials::mqtt_password</a>;</div>
<div class="line"><span class="lineno">   40</span> </div>
<div class="line"><span class="lineno">   41</span>    <span class="comment">// MQTT Switch</span></div>
<div class="line"><span class="lineno">   42</span>    config.mqtt_switch_topic = <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a27d3131c4e18f30225c9499cadb75ff4">conf::mqtt::mqtt_switch_topic</a>;</div>
<div class="line"><span class="lineno">   43</span> </div>
<div class="line"><span class="lineno">   44</span>    <span class="comment">// Machine</span></div>
<div class="line"><span class="lineno">   45</span>    config.setMachineID(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1default__config.xhtml#a6c7775af29f012f0623c8898f1998ea1">conf::default_config::machine_id</a>);</div>
<div class="line"><span class="lineno">   46</span>    config.magic_number = <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a07246e58a5381b0edc2147965a0a8f99">MAGIC_NUMBER</a>;</div>
<div class="line"><span class="lineno">   47</span>    config.disablePortal = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">   48</span> </div>
<div class="line"><span class="lineno">   49</span>    <span class="keywordflow">return</span> config;</div>
<div class="line"><span class="lineno">   50</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a07246e58a5381b0edc2147965a0a8f99"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a07246e58a5381b0edc2147965a0a8f99">fabomatic::SavedConfig::MAGIC_NUMBER</a></div><div class="ttdeci">static constexpr auto MAGIC_NUMBER</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00038">SavedConfig.hpp:38</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a13b442195658b99513b46129ed0a425c"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a13b442195658b99513b46129ed0a425c">fabomatic::SavedConfig::SavedConfig</a></div><div class="ttdeci">SavedConfig()=default</div><div class="ttdoc">Allow compiler-time construction.</div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1default__config_xhtml_a6c7775af29f012f0623c8898f1998ea1"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1default__config.xhtml#a6c7775af29f012f0623c8898f1998ea1">fabomatic::conf::default_config::machine_id</a></div><div class="ttdeci">static constexpr MachineID machine_id</div><div class="ttdoc">Default MachineID for backend. Can be overriden through WiFi Portal config.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00018">conf.hpp:18</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1mqtt_xhtml_a013c2e367c124dfcb56f76bd4a9ad1de"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a013c2e367c124dfcb56f76bd4a9ad1de">fabomatic::conf::mqtt::mqtt_server</a></div><div class="ttdeci">static constexpr std::string_view mqtt_server</div><div class="ttdoc">Name of the default server for Backend. Will be resolved through mDNS.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00163">conf.hpp:163</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1mqtt_xhtml_a27d3131c4e18f30225c9499cadb75ff4"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a27d3131c4e18f30225c9499cadb75ff4">fabomatic::conf::mqtt::mqtt_switch_topic</a></div><div class="ttdeci">static constexpr std::string_view mqtt_switch_topic</div><div class="ttdoc">In case Shelly is used, name of the topic on MQTT Broker.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00166">conf.hpp:166</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1secrets_1_1credentials_xhtml_a0bde49c93ba98b9750a9e47c70ee028e"><div class="ttname"><a href="namespacefabomatic_1_1secrets_1_1credentials.xhtml#a0bde49c93ba98b9750a9e47c70ee028e">fabomatic::secrets::credentials::ssid</a></div><div class="ttdeci">static constexpr std::string_view ssid</div><div class="ttdef"><b>Definition</b> <a href="secrets_8hpp_source.xhtml#l00044">secrets.hpp:44</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1secrets_1_1credentials_xhtml_a629695e752753107595e2c6a4639472d"><div class="ttname"><a href="namespacefabomatic_1_1secrets_1_1credentials.xhtml#a629695e752753107595e2c6a4639472d">fabomatic::secrets::credentials::mqtt_user</a></div><div class="ttdeci">static constexpr std::string_view mqtt_user</div><div class="ttdoc">Username for MQTT broker auth.</div><div class="ttdef"><b>Definition</b> <a href="secrets_8hpp_source.xhtml#l00049">secrets.hpp:49</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1secrets_1_1credentials_xhtml_a891b6f3fe59b9c37adb9ec22372fcab3"><div class="ttname"><a href="namespacefabomatic_1_1secrets_1_1credentials.xhtml#a891b6f3fe59b9c37adb9ec22372fcab3">fabomatic::secrets::credentials::mqtt_password</a></div><div class="ttdeci">static constexpr std::string_view mqtt_password</div><div class="ttdoc">Username for MQTT broker auth.</div><div class="ttdef"><b>Definition</b> <a href="secrets_8hpp_source.xhtml#l00052">secrets.hpp:52</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1secrets_1_1credentials_xhtml_a9a84c8e5ac5f41925b9f2926023d3892"><div class="ttname"><a href="namespacefabomatic_1_1secrets_1_1credentials.xhtml#a9a84c8e5ac5f41925b9f2926023d3892">fabomatic::secrets::credentials::password</a></div><div class="ttdeci">static constexpr std::string_view password</div><div class="ttdef"><b>Definition</b> <a href="secrets_8hpp_source.xhtml#l00045">secrets.hpp:45</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_saved_config_8hpp_source.xhtml#l00072">disablePortal</a>, <a class="el" href="conf_8hpp_source.xhtml#l00018">fabomatic::conf::default_config::machine_id</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00041">magic_number</a>, <a class="el" href="secrets_8hpp_source.xhtml#l00052">fabomatic::secrets::credentials::mqtt_password</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00059">mqtt_password</a>, <a class="el" href="conf_8hpp_source.xhtml#l00163">fabomatic::conf::mqtt::mqtt_server</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00053">mqtt_server</a>, <a class="el" href="conf_8hpp_source.xhtml#l00166">fabomatic::conf::mqtt::mqtt_switch_topic</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00062">mqtt_switch_topic</a>, <a class="el" href="secrets_8hpp_source.xhtml#l00049">fabomatic::secrets::credentials::mqtt_user</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00056">mqtt_user</a>, <a class="el" href="secrets_8hpp_source.xhtml#l00045">fabomatic::secrets::credentials::password</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00050">password</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00019">setMachineID()</a>, <a class="el" href="secrets_8hpp_source.xhtml#l00044">fabomatic::secrets::credentials::ssid</a>, and <a class="el" href="_saved_config_8hpp_source.xhtml#l00047">ssid</a>.</p>

<p class="reference">Referenced by <a class="el" href="_o_t_a_8cpp_source.xhtml#l00033">fabomatic::getConfig()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00457">fabomatic::BoardLogic::reconfigure()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00690">fabomatic::FabBackend::saveBuffer()</a>, <a class="el" href="_auth_provider_8cpp_source.xhtml#l00188">fabomatic::AuthProvider::saveCache()</a>, <a class="el" href="main_8cpp_source.xhtml#l00433">setup()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00335">setUp()</a>, <a class="el" href="main_8cpp_source.xhtml#l00222">fabomatic::taskFactoryReset()</a>, <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00022">fabomatic::tests::test_defaults()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00274">fabomatic::tests::test_degraded_use()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00186">fabomatic::tests::test_fabserver_calls()</a>, and <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00094">fabomatic::tests::test_rfid_cache()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_saved_config_a3a6f62510c34ed7a4491022e4e43b9c2_cgraph.svg" width="374" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_saved_config_a3a6f62510c34ed7a4491022e4e43b9c2_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a1a3af8c6a917eeef7481ab1e5e242468" name="a1a3af8c6a917eeef7481ab1e5e242468"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a3af8c6a917eeef7481ab1e5e242468">&#9670;&#160;</a></span>fromJsonDocument()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::SavedConfig::fromJsonDocument </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>json_text</em></td><td>)</td>
          <td> -&gt; std::optional&lt;<a class="el" href="classfabomatic_1_1_saved_config.xhtml">SavedConfig</a>&gt;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Deserialize a JsonDocument into a <a class="el" href="classfabomatic_1_1_saved_config.xhtml" title="Facility to load or save data from Flash.">SavedConfig</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">json_text</td><td>json document as string to be deserialized </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>std::nullopt if the document is invalid, or a valid <a class="el" href="classfabomatic_1_1_saved_config.xhtml" title="Facility to load or save data from Flash.">SavedConfig</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="_saved_config_8cpp_source.xhtml#l00119">119</a> of file <a class="el" href="_saved_config_8cpp_source.xhtml">SavedConfig.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  120</span>  {</div>
<div class="line"><span class="lineno">  121</span>    <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a13b442195658b99513b46129ed0a425c">SavedConfig</a> config;</div>
<div class="line"><span class="lineno">  122</span>    JsonDocument doc;</div>
<div class="line"><span class="lineno">  123</span> </div>
<div class="line"><span class="lineno">  124</span>    <span class="keyword">const</span> <span class="keyword">auto</span> result = deserializeJson(doc, json_text);</div>
<div class="line"><span class="lineno">  125</span>    <span class="keywordflow">if</span> (result != DeserializationError::Ok)</div>
<div class="line"><span class="lineno">  126</span>    {</div>
<div class="line"><span class="lineno">  127</span>      ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;fromJsonDocument() : deserializeJson failed with code %s&quot;</span>, result.c_str());</div>
<div class="line"><span class="lineno">  128</span>      <span class="keywordflow">return</span> std::nullopt;</div>
<div class="line"><span class="lineno">  129</span>    }</div>
<div class="line"><span class="lineno">  130</span> </div>
<div class="line"><span class="lineno">  131</span>    <span class="comment">// Now map the JSON to the struct</span></div>
<div class="line"><span class="lineno">  132</span>    config.disablePortal = doc[<span class="stringliteral">&quot;disablePortal&quot;</span>];</div>
<div class="line"><span class="lineno">  133</span>    config.bootCount = doc[<span class="stringliteral">&quot;bootCount&quot;</span>];</div>
<div class="line"><span class="lineno">  134</span>    config.ssid = doc[<span class="stringliteral">&quot;ssid&quot;</span>].as&lt;std::string&gt;();</div>
<div class="line"><span class="lineno">  135</span>    config.password = doc[<span class="stringliteral">&quot;password&quot;</span>].as&lt;std::string&gt;();</div>
<div class="line"><span class="lineno">  136</span>    config.mqtt_server = doc[<span class="stringliteral">&quot;mqtt_server&quot;</span>].as&lt;std::string&gt;();</div>
<div class="line"><span class="lineno">  137</span>    config.mqtt_user = doc[<span class="stringliteral">&quot;mqtt_user&quot;</span>].as&lt;std::string&gt;();</div>
<div class="line"><span class="lineno">  138</span>    config.mqtt_password = doc[<span class="stringliteral">&quot;mqtt_password&quot;</span>].as&lt;std::string&gt;();</div>
<div class="line"><span class="lineno">  139</span>    config.mqtt_switch_topic = doc[<span class="stringliteral">&quot;mqtt_switch_topic&quot;</span>].as&lt;std::string&gt;();</div>
<div class="line"><span class="lineno">  140</span>    config.machine_id = doc[<span class="stringliteral">&quot;machine_id&quot;</span>].as&lt;std::string&gt;();</div>
<div class="line"><span class="lineno">  141</span>    config.magic_number = doc[<span class="stringliteral">&quot;magic_number&quot;</span>];</div>
<div class="line"><span class="lineno">  142</span> </div>
<div class="line"><span class="lineno">  143</span>    <span class="keyword">auto</span> idx = 0;</div>
<div class="line"><span class="lineno">  144</span>    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;elem : doc[<span class="stringliteral">&quot;cached_cards&quot;</span>].as&lt;JsonArray&gt;())</div>
<div class="line"><span class="lineno">  145</span>    {</div>
<div class="line"><span class="lineno">  146</span>      <span class="keyword">const</span> <span class="keyword">auto</span> level = <span class="keyword">static_cast&lt;</span><a class="code hl_enumeration" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0">FabUser::UserLevel</a><span class="keyword">&gt;</span>(elem[<span class="stringliteral">&quot;level&quot;</span>].as&lt;uint8_t&gt;());</div>
<div class="line"><span class="lineno">  147</span>      config.cachedRfid.set_at(idx, elem[<span class="stringliteral">&quot;uid&quot;</span>], level);</div>
<div class="line"><span class="lineno">  148</span>      idx++;</div>
<div class="line"><span class="lineno">  149</span>    }</div>
<div class="line"><span class="lineno">  150</span> </div>
<div class="line"><span class="lineno">  151</span>    <span class="keywordflow">while</span> (idx &lt; <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1rfid__tags.xhtml#a786cf57e36da88ed2d6c153e3b6fdc30">conf::rfid_tags::CACHE_LEN</a>)</div>
<div class="line"><span class="lineno">  152</span>    {</div>
<div class="line"><span class="lineno">  153</span>      config.cachedRfid.set_at(idx, <a class="code hl_variable" href="namespacefabomatic_1_1card.xhtml#a9ef4a9f5f43c63cf872a2d52a7af11cf">card::INVALID</a>, <a class="code hl_enumvalue" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">FabUser::UserLevel::Unknown</a>);</div>
<div class="line"><span class="lineno">  154</span>      idx++;</div>
<div class="line"><span class="lineno">  155</span>    }</div>
<div class="line"><span class="lineno">  156</span> </div>
<div class="line"><span class="lineno">  157</span>    <span class="keywordflow">if</span> (config.magic_number &gt;= 0x51)</div>
<div class="line"><span class="lineno">  158</span>    {</div>
<div class="line"><span class="lineno">  159</span>      <span class="keyword">auto</span> mb = doc[<span class="stringliteral">&quot;message_buffer&quot;</span>];</div>
<div class="line"><span class="lineno">  160</span>      <span class="keyword">auto</span> loaded = <a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#ad6d946c6ad24dd1a0ab695bb8874b554">Buffer::fromJsonElement</a>(mb);</div>
<div class="line"><span class="lineno">  161</span>      <span class="keywordflow">if</span> (loaded)</div>
<div class="line"><span class="lineno">  162</span>      {</div>
<div class="line"><span class="lineno">  163</span>        config.message_buffer = loaded.value();</div>
<div class="line"><span class="lineno">  164</span>      }</div>
<div class="line"><span class="lineno">  165</span>    }</div>
<div class="line"><span class="lineno">  166</span> </div>
<div class="line"><span class="lineno">  167</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;fromJsonDocument() : data deserialized successfully&quot;</span>);</div>
<div class="line"><span class="lineno">  168</span> </div>
<div class="line"><span class="lineno">  169</span>    <span class="keywordflow">return</span> config;</div>
<div class="line"><span class="lineno">  170</span>  }</div>
<div class="ttc" id="a_logging_8hpp_xhtml_a4ef5b5f197804a60836ab1e8907d8301"><div class="ttname"><a href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a></div><div class="ttdeci">static const char *const TAG</div><div class="ttdef"><b>Definition</b> <a href="_logging_8hpp_source.xhtml#l00009">Logging.hpp:9</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_ad6d946c6ad24dd1a0ab695bb8874b554"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#ad6d946c6ad24dd1a0ab695bb8874b554">fabomatic::Buffer::fromJsonElement</a></div><div class="ttdeci">static auto fromJsonElement(const JsonObject &amp;json_obj) -&gt; std::optional&lt; Buffer &gt;</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00083">BufferedMsg.cpp:83</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1card_xhtml_a9ef4a9f5f43c63cf872a2d52a7af11cf"><div class="ttname"><a href="namespacefabomatic_1_1card.xhtml#a9ef4a9f5f43c63cf872a2d52a7af11cf">fabomatic::card::INVALID</a></div><div class="ttdeci">static constexpr uid_t INVALID</div><div class="ttdef"><b>Definition</b> <a href="card_8hpp_source.xhtml#l00015">card.hpp:15</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1rfid__tags_xhtml_a786cf57e36da88ed2d6c153e3b6fdc30"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1rfid__tags.xhtml#a786cf57e36da88ed2d6c153e3b6fdc30">fabomatic::conf::rfid_tags::CACHE_LEN</a></div><div class="ttdeci">static constexpr uint8_t CACHE_LEN</div><div class="ttdoc">Number of cached UID, persisted in flash.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00037">conf.hpp:37</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_fab_user_xhtml_a75deeb54124600e0387550735c7a0ca0"><div class="ttname"><a href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0">fabomatic::FabUser::UserLevel</a></div><div class="ttdeci">UserLevel</div><div class="ttdef"><b>Definition</b> <a href="_fab_user_8hpp_source.xhtml#l00017">FabUser.hpp:18</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_fab_user_xhtml_a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e"><div class="ttname"><a href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">fabomatic::FabUser::UserLevel::Unknown</a></div><div class="ttdeci">@ Unknown</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_saved_config_8hpp_source.xhtml#l00069">bootCount</a>, <a class="el" href="conf_8hpp_source.xhtml#l00037">fabomatic::conf::rfid_tags::CACHE_LEN</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00044">cachedRfid</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00072">disablePortal</a>, <a class="el" href="_buffered_msg_8cpp_source.xhtml#l00083">fabomatic::Buffer::fromJsonElement()</a>, <a class="el" href="card_8hpp_source.xhtml#l00015">fabomatic::card::INVALID</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00066">machine_id</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00041">magic_number</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00074">message_buffer</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00059">mqtt_password</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00053">mqtt_server</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00062">mqtt_switch_topic</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00056">mqtt_user</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00050">password</a>, <a class="el" href="_cached_cards_8hpp_source.xhtml#l00051">fabomatic::CachedCards::set_at()</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00047">ssid</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00009">TAG</a>, and <a class="el" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">fabomatic::FabUser::Unknown</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_saved_config_a1a3af8c6a917eeef7481ab1e5e242468_cgraph.svg" width="551" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aacdd24d958b88dfa41d81fb9e2db959b" name="aacdd24d958b88dfa41d81fb9e2db959b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aacdd24d958b88dfa41d81fb9e2db959b">&#9670;&#160;</a></span>getMachineID()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::SavedConfig::getMachineID </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; <a class="el" href="struct_machine_i_d.xhtml">MachineID</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the machine ID (converting from string) </p>

<p class="definition">Definition at line <a class="el" href="_saved_config_8cpp_source.xhtml#l00023">23</a> of file <a class="el" href="_saved_config_8cpp_source.xhtml">SavedConfig.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   24</span>  {</div>
<div class="line"><span class="lineno">   25</span>    <span class="keywordflow">return</span> <a class="code hl_struct" href="struct_machine_i_d.xhtml">MachineID</a>(std::atoi(<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#aa2312c6cebb6b73f66e9f8238cb1b17f">machine_id</a>.c_str()));</div>
<div class="line"><span class="lineno">   26</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_aa2312c6cebb6b73f66e9f8238cb1b17f"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#aa2312c6cebb6b73f66e9f8238cb1b17f">fabomatic::SavedConfig::machine_id</a></div><div class="ttdeci">std::string machine_id</div><div class="ttdoc">Machine ID connected to the board.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00066">SavedConfig.hpp:66</a></div></div>
<div class="ttc" id="astruct_machine_i_d_xhtml"><div class="ttname"><a href="struct_machine_i_d.xhtml">MachineID</a></div><div class="ttdoc">The unique machine identifier for the backend.</div><div class="ttdef"><b>Definition</b> <a href="_machine_i_d_8hpp_source.xhtml#l00019">MachineID.hpp:20</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_saved_config_8hpp_source.xhtml#l00066">machine_id</a>.</p>

</div>
</div>
<a id="a9992ddd6912152983a8bf0d509a815a8" name="a9992ddd6912152983a8bf0d509a815a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9992ddd6912152983a8bf0d509a815a8">&#9670;&#160;</a></span>IncrementBootCount()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::SavedConfig::IncrementBootCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; size_t</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Increments the boot count and saves it to EEPROM. </p>

<p class="definition">Definition at line <a class="el" href="_saved_config_8cpp_source.xhtml#l00219">219</a> of file <a class="el" href="_saved_config_8cpp_source.xhtml">SavedConfig.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  220</span>  {</div>
<div class="line"><span class="lineno">  221</span>    <span class="keyword">auto</span> config = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">LoadFromEEPROM</a>().value_or(<a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">DefaultConfig</a>());</div>
<div class="line"><span class="lineno">  222</span>    config.bootCount++;</div>
<div class="line"><span class="lineno">  223</span>    <span class="keywordflow">if</span> (!config.SaveToEEPROM())</div>
<div class="line"><span class="lineno">  224</span>    {</div>
<div class="line"><span class="lineno">  225</span>      ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failed to save boot count to EEPROM&quot;</span>);</div>
<div class="line"><span class="lineno">  226</span>    }</div>
<div class="line"><span class="lineno">  227</span>    <span class="keywordflow">return</span> config.bootCount;</div>
<div class="line"><span class="lineno">  228</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a3a6f62510c34ed7a4491022e4e43b9c2"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">fabomatic::SavedConfig::DefaultConfig</a></div><div class="ttdeci">static auto DefaultConfig() -&gt; SavedConfig</div><div class="ttdoc">Returns the default configuration built from conf.hpp and secrets.hpp.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00028">SavedConfig.cpp:28</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_aca3fe97dfa74c005d47ffef700392d99"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">fabomatic::SavedConfig::LoadFromEEPROM</a></div><div class="ttdeci">static auto LoadFromEEPROM() -&gt; std::optional&lt; SavedConfig &gt;</div><div class="ttdoc">Loads the configuration from EEPROM if available and matching revision number.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00052">SavedConfig.cpp:52</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_logging_8hpp_source.xhtml#l00009">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00433">setup()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_saved_config_a9992ddd6912152983a8bf0d509a815a8_icgraph.svg" width="270" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aca3fe97dfa74c005d47ffef700392d99" name="aca3fe97dfa74c005d47ffef700392d99"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca3fe97dfa74c005d47ffef700392d99">&#9670;&#160;</a></span>LoadFromEEPROM()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::SavedConfig::LoadFromEEPROM </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; std::optional&lt;<a class="el" href="classfabomatic_1_1_saved_config.xhtml">SavedConfig</a>&gt;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Loads the configuration from EEPROM if available and matching revision number. </p>
<dl class="section return"><dt>Returns</dt><dd>std::nullopt if not valid, <a class="el" href="classfabomatic_1_1_saved_config.xhtml" title="Facility to load or save data from Flash.">SavedConfig</a> otherwise </dd></dl>

<p class="definition">Definition at line <a class="el" href="_saved_config_8cpp_source.xhtml#l00052">52</a> of file <a class="el" href="_saved_config_8cpp_source.xhtml">SavedConfig.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   53</span>  {</div>
<div class="line"><span class="lineno">   54</span>    std::lock_guard&lt;std::mutex&gt; lock(<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a61d7db837cadfbba5b5036d77904e6c3">SavedConfig::buffer_mutex</a>);</div>
<div class="line"><span class="lineno">   55</span>    <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#ad6d77281946b603617f828d2e4a1578d">SavedConfig::json_buffer</a>.resize(<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#aaa3197d962aace1f5548a5586bcc97c4">JSON_DOC_SIZE</a>);</div>
<div class="line"><span class="lineno">   56</span>    std::fill(<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#ad6d77281946b603617f828d2e4a1578d">SavedConfig::json_buffer</a>.begin(), <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#ad6d77281946b603617f828d2e4a1578d">SavedConfig::json_buffer</a>.begin() + <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#ad6d77281946b603617f828d2e4a1578d">SavedConfig::json_buffer</a>.size(), <span class="charliteral">&#39;\0&#39;</span>);</div>
<div class="line"><span class="lineno">   57</span> </div>
<div class="line"><span class="lineno">   58</span>    <span class="keywordflow">if</span> (!EEPROM.begin(<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#aaa3197d962aace1f5548a5586bcc97c4">JSON_DOC_SIZE</a>))</div>
<div class="line"><span class="lineno">   59</span>    {</div>
<div class="line"><span class="lineno">   60</span>      ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;SavedConfig::LoadFromEEPROM() : EEPROM.begin failed&quot;</span>);</div>
<div class="line"><span class="lineno">   61</span>      <span class="keywordflow">return</span> std::nullopt;</div>
<div class="line"><span class="lineno">   62</span>    }</div>
<div class="line"><span class="lineno">   63</span> </div>
<div class="line"><span class="lineno">   64</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#ad6d77281946b603617f828d2e4a1578d">SavedConfig::json_buffer</a>.size(); i++)</div>
<div class="line"><span class="lineno">   65</span>    {</div>
<div class="line"><span class="lineno">   66</span>      <span class="keywordtype">char</span> c = EEPROM.readChar(i);</div>
<div class="line"><span class="lineno">   67</span>      <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#ad6d77281946b603617f828d2e4a1578d">SavedConfig::json_buffer</a>.at(i) = c;</div>
<div class="line"><span class="lineno">   68</span>      <span class="keywordflow">if</span> (c == <span class="charliteral">&#39;\0&#39;</span>)</div>
<div class="line"><span class="lineno">   69</span>      {</div>
<div class="line"><span class="lineno">   70</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">   71</span>      }</div>
<div class="line"><span class="lineno">   72</span>    }</div>
<div class="line"><span class="lineno">   73</span> </div>
<div class="line"><span class="lineno">   74</span>    <span class="keyword">auto</span> reply = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a1a3af8c6a917eeef7481ab1e5e242468">fromJsonDocument</a>(<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#ad6d77281946b603617f828d2e4a1578d">SavedConfig::json_buffer</a>);</div>
<div class="line"><span class="lineno">   75</span>    <span class="keywordflow">if</span> (!reply.has_value())</div>
<div class="line"><span class="lineno">   76</span>    {</div>
<div class="line"><span class="lineno">   77</span>      ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failed to load config from EEPROM&quot;</span>);</div>
<div class="line"><span class="lineno">   78</span>      <span class="keywordflow">return</span> std::nullopt;</div>
<div class="line"><span class="lineno">   79</span>    }</div>
<div class="line"><span class="lineno">   80</span>    <span class="keywordflow">if</span> (reply.value().magic_number &gt; <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a07246e58a5381b0edc2147965a0a8f99">MAGIC_NUMBER</a>)</div>
<div class="line"><span class="lineno">   81</span>    {</div>
<div class="line"><span class="lineno">   82</span>      ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Found different more recent settings version in EEPROM (%d vs. %d), ignoring.&quot;</span>, reply.value().magic_number, <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a07246e58a5381b0edc2147965a0a8f99">MAGIC_NUMBER</a>);</div>
<div class="line"><span class="lineno">   83</span>      <span class="keywordflow">return</span> std::nullopt;</div>
<div class="line"><span class="lineno">   84</span>    }</div>
<div class="line"><span class="lineno">   85</span>    <span class="keywordflow">return</span> reply.value();</div>
<div class="line"><span class="lineno">   86</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a1a3af8c6a917eeef7481ab1e5e242468"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a1a3af8c6a917eeef7481ab1e5e242468">fabomatic::SavedConfig::fromJsonDocument</a></div><div class="ttdeci">static auto fromJsonDocument(const std::string &amp;json_text) -&gt; std::optional&lt; SavedConfig &gt;</div><div class="ttdoc">Deserialize a JsonDocument into a SavedConfig.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00119">SavedConfig.cpp:119</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a61d7db837cadfbba5b5036d77904e6c3"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a61d7db837cadfbba5b5036d77904e6c3">fabomatic::SavedConfig::buffer_mutex</a></div><div class="ttdeci">static std::mutex buffer_mutex</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00026">SavedConfig.hpp:26</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_aaa3197d962aace1f5548a5586bcc97c4"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#aaa3197d962aace1f5548a5586bcc97c4">fabomatic::SavedConfig::JSON_DOC_SIZE</a></div><div class="ttdeci">static constexpr auto JSON_DOC_SIZE</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00023">SavedConfig.hpp:23</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_ad6d77281946b603617f828d2e4a1578d"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#ad6d77281946b603617f828d2e4a1578d">fabomatic::SavedConfig::json_buffer</a></div><div class="ttdeci">static std::string json_buffer</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00025">SavedConfig.hpp:25</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_saved_config_8hpp_source.xhtml#l00026">buffer_mutex</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00025">json_buffer</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00009">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_o_t_a_8cpp_source.xhtml#l00033">fabomatic::getConfig()</a>, <a class="el" href="_auth_provider_8cpp_source.xhtml#l00168">fabomatic::AuthProvider::loadCache()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00457">fabomatic::BoardLogic::reconfigure()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00690">fabomatic::FabBackend::saveBuffer()</a>, <a class="el" href="_auth_provider_8cpp_source.xhtml#l00188">fabomatic::AuthProvider::saveCache()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00350">setup()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00335">setUp()</a>, <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00048">fabomatic::tests::test_changes()</a>, <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00022">fabomatic::tests::test_defaults()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00186">fabomatic::tests::test_fabserver_calls()</a>, <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00152">fabomatic::tests::test_magic_number()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00308">fabomatic::tests::test_messages_buffered()</a>, <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00094">fabomatic::tests::test_rfid_cache()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00150">fabomatic::tests::test_start_broker()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_saved_config_aca3fe97dfa74c005d47ffef700392d99_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a312c74363068192ae80df24140f82874" name="a312c74363068192ae80df24140f82874"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a312c74363068192ae80df24140f82874">&#9670;&#160;</a></span>SaveToEEPROM()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::SavedConfig::SaveToEEPROM </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Saves the configuration to EEPROM. </p>
<dl class="section return"><dt>Returns</dt><dd>true if successful </dd></dl>

<p class="definition">Definition at line <a class="el" href="_saved_config_8cpp_source.xhtml#l00172">172</a> of file <a class="el" href="_saved_config_8cpp_source.xhtml">SavedConfig.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  173</span>  {</div>
<div class="line"><span class="lineno">  174</span>    std::lock_guard&lt;std::mutex&gt; lock(<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a61d7db837cadfbba5b5036d77904e6c3">SavedConfig::buffer_mutex</a>);</div>
<div class="line"><span class="lineno">  175</span>    <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#ad6d77281946b603617f828d2e4a1578d">json_buffer</a>.resize(<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#aaa3197d962aace1f5548a5586bcc97c4">JSON_DOC_SIZE</a>);</div>
<div class="line"><span class="lineno">  176</span>    std::fill(<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#ad6d77281946b603617f828d2e4a1578d">SavedConfig::json_buffer</a>.begin(), <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#ad6d77281946b603617f828d2e4a1578d">SavedConfig::json_buffer</a>.begin() + <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#ad6d77281946b603617f828d2e4a1578d">SavedConfig::json_buffer</a>.size(), <span class="charliteral">&#39;\0&#39;</span>);</div>
<div class="line"><span class="lineno">  177</span> </div>
<div class="line"><span class="lineno">  178</span>    <span class="keywordflow">if</span> (!EEPROM.begin(<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#aaa3197d962aace1f5548a5586bcc97c4">JSON_DOC_SIZE</a>))</div>
<div class="line"><span class="lineno">  179</span>    {</div>
<div class="line"><span class="lineno">  180</span>      ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;SavedConfig::SaveToEEPROM() : EEPROM.begin failed&quot;</span>);</div>
<div class="line"><span class="lineno">  181</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  182</span>    }</div>
<div class="line"><span class="lineno">  183</span> </div>
<div class="line"><span class="lineno">  184</span>    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;doc = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#ae0af7670707ed5a51c69197eb6fadbe5">toJsonDocument</a>();</div>
<div class="line"><span class="lineno">  185</span>    serializeJson(doc, <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#ad6d77281946b603617f828d2e4a1578d">SavedConfig::json_buffer</a>);</div>
<div class="line"><span class="lineno">  186</span> </div>
<div class="line"><span class="lineno">  187</span>    <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#ad6d77281946b603617f828d2e4a1578d">json_buffer</a>.resize(<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#aaa3197d962aace1f5548a5586bcc97c4">JSON_DOC_SIZE</a>); <span class="comment">// Ensure the buffer is the correct size as serialize may have resized it</span></div>
<div class="line"><span class="lineno">  188</span> </div>
<div class="line"><span class="lineno">  189</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#aaa3197d962aace1f5548a5586bcc97c4">JSON_DOC_SIZE</a>; i++)</div>
<div class="line"><span class="lineno">  190</span>    {</div>
<div class="line"><span class="lineno">  191</span>      <span class="keyword">const</span> <span class="keywordtype">char</span> c = <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#ad6d77281946b603617f828d2e4a1578d">SavedConfig::json_buffer</a>[i];</div>
<div class="line"><span class="lineno">  192</span>      EEPROM.writeChar(i, c);</div>
<div class="line"><span class="lineno">  193</span>      <span class="keywordflow">if</span> (c == <span class="charliteral">&#39;\0&#39;</span>)</div>
<div class="line"><span class="lineno">  194</span>      {</div>
<div class="line"><span class="lineno">  195</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  196</span>      }</div>
<div class="line"><span class="lineno">  197</span>    }</div>
<div class="line"><span class="lineno">  198</span> </div>
<div class="line"><span class="lineno">  199</span>    <span class="keyword">auto</span> result = EEPROM.commit();</div>
<div class="line"><span class="lineno">  200</span> </div>
<div class="line"><span class="lineno">  201</span>    <span class="keywordflow">if</span> (result)</div>
<div class="line"><span class="lineno">  202</span>    {</div>
<div class="line"><span class="lineno">  203</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;EEPROM commit success&quot;</span>);</div>
<div class="line"><span class="lineno">  204</span>      <span class="keywordflow">return</span> result;</div>
<div class="line"><span class="lineno">  205</span>    }</div>
<div class="line"><span class="lineno">  206</span> </div>
<div class="line"><span class="lineno">  207</span>    ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;EEPROM commit failure&quot;</span>);</div>
<div class="line"><span class="lineno">  208</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  209</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_ae0af7670707ed5a51c69197eb6fadbe5"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#ae0af7670707ed5a51c69197eb6fadbe5">fabomatic::SavedConfig::toJsonDocument</a></div><div class="ttdeci">auto toJsonDocument() const -&gt; JsonDocument</div><div class="ttdoc">Serialize the current configuration into a JsonDocument.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00088">SavedConfig.cpp:88</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_saved_config_8hpp_source.xhtml#l00026">buffer_mutex</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00025">json_buffer</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00023">JSON_DOC_SIZE</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00009">TAG</a>, and <a class="el" href="_saved_config_8cpp_source.xhtml#l00088">toJsonDocument()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_auth_provider_8cpp_source.xhtml#l00188">fabomatic::AuthProvider::saveCache()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00566">setup()</a>, and <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00048">fabomatic::tests::test_changes()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_saved_config_a312c74363068192ae80df24140f82874_cgraph.svg" width="584" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_saved_config_a312c74363068192ae80df24140f82874_icgraph.svg" width="667" height="231"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a4ada414d31749dcd736a3fec3f759605" name="a4ada414d31749dcd736a3fec3f759605"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ada414d31749dcd736a3fec3f759605">&#9670;&#160;</a></span>setMachineID()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::SavedConfig::setMachineID </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_machine_i_d.xhtml">MachineID</a>&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the machine ID (converting to string) </p>

<p class="definition">Definition at line <a class="el" href="_saved_config_8cpp_source.xhtml#l00019">19</a> of file <a class="el" href="_saved_config_8cpp_source.xhtml">SavedConfig.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   20</span>  {</div>
<div class="line"><span class="lineno">   21</span>    <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#aa2312c6cebb6b73f66e9f8238cb1b17f">machine_id</a> = std::to_string(<span class="keywordtype">id</span>);</div>
<div class="line"><span class="lineno">   22</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_saved_config_8cpp_source.xhtml#l00028">DefaultConfig()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_saved_config_a4ada414d31749dcd736a3fec3f759605_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ae0af7670707ed5a51c69197eb6fadbe5" name="ae0af7670707ed5a51c69197eb6fadbe5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0af7670707ed5a51c69197eb6fadbe5">&#9670;&#160;</a></span>toJsonDocument()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::SavedConfig::toJsonDocument </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; JsonDocument</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Serialize the current configuration into a JsonDocument. </p>
<dl class="section return"><dt>Returns</dt><dd>JsonDocument </dd></dl>

<p class="definition">Definition at line <a class="el" href="_saved_config_8cpp_source.xhtml#l00088">88</a> of file <a class="el" href="_saved_config_8cpp_source.xhtml">SavedConfig.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   89</span>  {</div>
<div class="line"><span class="lineno">   90</span>    JsonDocument doc;</div>
<div class="line"><span class="lineno">   91</span>    <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a9429975f9694b85cf53cc364cd135ac5">magic_number</a> = <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a07246e58a5381b0edc2147965a0a8f99">MAGIC_NUMBER</a>;</div>
<div class="line"><span class="lineno">   92</span>    doc[<span class="stringliteral">&quot;disablePortal&quot;</span>] = <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a6510074227a78d4f5093b7aed88bdbef">disablePortal</a>;</div>
<div class="line"><span class="lineno">   93</span>    doc[<span class="stringliteral">&quot;bootCount&quot;</span>] = <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a3c6fb5f59883891b0ea3240a8bb8aaee">bootCount</a>;</div>
<div class="line"><span class="lineno">   94</span>    doc[<span class="stringliteral">&quot;ssid&quot;</span>] = <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#abccca47e85f3214c2ce780230bfe7f49">ssid</a>;</div>
<div class="line"><span class="lineno">   95</span>    doc[<span class="stringliteral">&quot;password&quot;</span>] = <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a8f7b5fba524d14a66ed1eaeda08a7e0d">password</a>;</div>
<div class="line"><span class="lineno">   96</span>    doc[<span class="stringliteral">&quot;mqtt_server&quot;</span>] = <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a8de320beb3e706c35582c049d3681c42">mqtt_server</a>;</div>
<div class="line"><span class="lineno">   97</span>    doc[<span class="stringliteral">&quot;mqtt_user&quot;</span>] = <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a8cc620b09cef7aceaf7ec87e72dfcdc0">mqtt_user</a>;</div>
<div class="line"><span class="lineno">   98</span>    doc[<span class="stringliteral">&quot;mqtt_password&quot;</span>] = <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a68004c1190623a027b2a1f41607cd33f">mqtt_password</a>;</div>
<div class="line"><span class="lineno">   99</span>    doc[<span class="stringliteral">&quot;mqtt_switch_topic&quot;</span>] = <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a1c147278506b9cd2856798a7988d78ff">mqtt_switch_topic</a>;</div>
<div class="line"><span class="lineno">  100</span>    doc[<span class="stringliteral">&quot;machine_id&quot;</span>] = <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#aa2312c6cebb6b73f66e9f8238cb1b17f">machine_id</a>;</div>
<div class="line"><span class="lineno">  101</span>    doc[<span class="stringliteral">&quot;magic_number&quot;</span>] = <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a9429975f9694b85cf53cc364cd135ac5">magic_number</a>;</div>
<div class="line"><span class="lineno">  102</span>    <span class="keyword">auto</span> json_elem = doc.createNestedArray(<span class="stringliteral">&quot;cached_cards&quot;</span>);</div>
<div class="line"><span class="lineno">  103</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> idx = 0; idx &lt; <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a87190e0ef86890f51d972f3d2f024aa0">cachedRfid</a>.<a class="code hl_function" href="structfabomatic_1_1_cached_cards.xhtml#a128c3db6758b1e630855e673a44c585f">size</a>(); idx++)</div>
<div class="line"><span class="lineno">  104</span>    {</div>
<div class="line"><span class="lineno">  105</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;entry = <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a87190e0ef86890f51d972f3d2f024aa0">cachedRfid</a>[idx];</div>
<div class="line"><span class="lineno">  106</span>      <span class="keywordflow">if</span> (entry.uid != 0) <span class="comment">// Skip empty entries</span></div>
<div class="line"><span class="lineno">  107</span>      {</div>
<div class="line"><span class="lineno">  108</span>        <span class="keyword">auto</span> obj = json_elem.createNestedObject();</div>
<div class="line"><span class="lineno">  109</span>        obj[<span class="stringliteral">&quot;uid&quot;</span>] = entry.uid;</div>
<div class="line"><span class="lineno">  110</span>        obj[<span class="stringliteral">&quot;level&quot;</span>] = <span class="keyword">static_cast&lt;</span>uint8_t<span class="keyword">&gt;</span>(entry.level);</div>
<div class="line"><span class="lineno">  111</span>      }</div>
<div class="line"><span class="lineno">  112</span>    }</div>
<div class="line"><span class="lineno">  113</span> </div>
<div class="line"><span class="lineno">  114</span>    <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a48a97bdcbb24fe8f5e2f36a173839cdf">message_buffer</a>.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a72f029c82552ccea45eaf611f345c079">toJson</a>(doc, <span class="stringliteral">&quot;message_buffer&quot;</span>);</div>
<div class="line"><span class="lineno">  115</span> </div>
<div class="line"><span class="lineno">  116</span>    <span class="keywordflow">return</span> doc;</div>
<div class="line"><span class="lineno">  117</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a72f029c82552ccea45eaf611f345c079"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a72f029c82552ccea45eaf611f345c079">fabomatic::Buffer::toJson</a></div><div class="ttdeci">auto toJson(JsonDocument &amp;doc, const std::string &amp;element_name) const -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00068">BufferedMsg.cpp:68</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a1c147278506b9cd2856798a7988d78ff"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a1c147278506b9cd2856798a7988d78ff">fabomatic::SavedConfig::mqtt_switch_topic</a></div><div class="ttdeci">std::string mqtt_switch_topic</div><div class="ttdoc">MQTT topic for mqtt switch (if available)</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00062">SavedConfig.hpp:62</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a3c6fb5f59883891b0ea3240a8bb8aaee"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a3c6fb5f59883891b0ea3240a8bb8aaee">fabomatic::SavedConfig::bootCount</a></div><div class="ttdeci">size_t bootCount</div><div class="ttdoc">number of boot cycles</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00069">SavedConfig.hpp:69</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a48a97bdcbb24fe8f5e2f36a173839cdf"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a48a97bdcbb24fe8f5e2f36a173839cdf">fabomatic::SavedConfig::message_buffer</a></div><div class="ttdeci">Buffer message_buffer</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00074">SavedConfig.hpp:74</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a6510074227a78d4f5093b7aed88bdbef"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a6510074227a78d4f5093b7aed88bdbef">fabomatic::SavedConfig::disablePortal</a></div><div class="ttdeci">bool disablePortal</div><div class="ttdoc">if true, the FORCE_OPEN_PORTAL flag will be ignored</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00072">SavedConfig.hpp:72</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a68004c1190623a027b2a1f41607cd33f"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a68004c1190623a027b2a1f41607cd33f">fabomatic::SavedConfig::mqtt_password</a></div><div class="ttdeci">std::string mqtt_password</div><div class="ttdoc">MQTT password.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00059">SavedConfig.hpp:59</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a87190e0ef86890f51d972f3d2f024aa0"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a87190e0ef86890f51d972f3d2f024aa0">fabomatic::SavedConfig::cachedRfid</a></div><div class="ttdeci">CachedCards cachedRfid</div><div class="ttdoc">list of cached RFID cards</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00044">SavedConfig.hpp:44</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a8cc620b09cef7aceaf7ec87e72dfcdc0"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a8cc620b09cef7aceaf7ec87e72dfcdc0">fabomatic::SavedConfig::mqtt_user</a></div><div class="ttdeci">std::string mqtt_user</div><div class="ttdoc">MQTT username.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00056">SavedConfig.hpp:56</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a8de320beb3e706c35582c049d3681c42"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a8de320beb3e706c35582c049d3681c42">fabomatic::SavedConfig::mqtt_server</a></div><div class="ttdeci">std::string mqtt_server</div><div class="ttdoc">MQTT server.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00053">SavedConfig.hpp:53</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a8f7b5fba524d14a66ed1eaeda08a7e0d"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a8f7b5fba524d14a66ed1eaeda08a7e0d">fabomatic::SavedConfig::password</a></div><div class="ttdeci">std::string password</div><div class="ttdoc">WiFi password.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00050">SavedConfig.hpp:50</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a9429975f9694b85cf53cc364cd135ac5"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a9429975f9694b85cf53cc364cd135ac5">fabomatic::SavedConfig::magic_number</a></div><div class="ttdeci">uint8_t magic_number</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00041">SavedConfig.hpp:41</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_abccca47e85f3214c2ce780230bfe7f49"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#abccca47e85f3214c2ce780230bfe7f49">fabomatic::SavedConfig::ssid</a></div><div class="ttdeci">std::string ssid</div><div class="ttdoc">WiFi SSID.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00047">SavedConfig.hpp:47</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_cached_cards_xhtml_a128c3db6758b1e630855e673a44c585f"><div class="ttname"><a href="structfabomatic_1_1_cached_cards.xhtml#a128c3db6758b1e630855e673a44c585f">fabomatic::CachedCards::size</a></div><div class="ttdeci">constexpr auto size() const -&gt; size_t</div><div class="ttdef"><b>Definition</b> <a href="_cached_cards_8hpp_source.xhtml#l00057">CachedCards.hpp:57</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_saved_config_8hpp_source.xhtml#l00069">bootCount</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00044">cachedRfid</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00072">disablePortal</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00066">machine_id</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00038">MAGIC_NUMBER</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00041">magic_number</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00074">message_buffer</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00059">mqtt_password</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00053">mqtt_server</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00062">mqtt_switch_topic</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00056">mqtt_user</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00050">password</a>, <a class="el" href="_cached_cards_8hpp_source.xhtml#l00057">fabomatic::CachedCards::size()</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00047">ssid</a>, and <a class="el" href="_buffered_msg_8cpp_source.xhtml#l00068">fabomatic::Buffer::toJson()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_saved_config_8cpp_source.xhtml#l00172">SaveToEEPROM()</a>, and <a class="el" href="_saved_config_8cpp_source.xhtml#l00211">toString()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_saved_config_ae0af7670707ed5a51c69197eb6fadbe5_cgraph.svg" width="379" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_saved_config_ae0af7670707ed5a51c69197eb6fadbe5_icgraph.svg" width="100%" height="473"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ad1d484179f439b28d608a9c6737bdc26" name="ad1d484179f439b28d608a9c6737bdc26"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1d484179f439b28d608a9c6737bdc26">&#9670;&#160;</a></span>toString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::SavedConfig::toString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; const std::string</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a json-prettified fragment for logging. </p>

<p class="definition">Definition at line <a class="el" href="_saved_config_8cpp_source.xhtml#l00211">211</a> of file <a class="el" href="_saved_config_8cpp_source.xhtml">SavedConfig.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  212</span>  {</div>
<div class="line"><span class="lineno">  213</span>    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;doc = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#ae0af7670707ed5a51c69197eb6fadbe5">toJsonDocument</a>();</div>
<div class="line"><span class="lineno">  214</span>    std::string result;</div>
<div class="line"><span class="lineno">  215</span>    serializeJsonPretty(doc, result);</div>
<div class="line"><span class="lineno">  216</span>    <span class="keywordflow">return</span> result;</div>
<div class="line"><span class="lineno">  217</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_saved_config_8cpp_source.xhtml#l00088">toJsonDocument()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_saved_config_ad1d484179f439b28d608a9c6737bdc26_cgraph.svg" width="584" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a3c6fb5f59883891b0ea3240a8bb8aaee" name="a3c6fb5f59883891b0ea3240a8bb8aaee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c6fb5f59883891b0ea3240a8bb8aaee">&#9670;&#160;</a></span>bootCount</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t fabomatic::SavedConfig::bootCount {0}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>number of boot cycles </p>

<p class="definition">Definition at line <a class="el" href="_saved_config_8hpp_source.xhtml#l00069">69</a> of file <a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   69</span>{0};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_saved_config_8cpp_source.xhtml#l00119">fromJsonDocument()</a>, and <a class="el" href="_saved_config_8cpp_source.xhtml#l00088">toJsonDocument()</a>.</p>

</div>
</div>
<a id="a61d7db837cadfbba5b5036d77904e6c3" name="a61d7db837cadfbba5b5036d77904e6c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61d7db837cadfbba5b5036d77904e6c3">&#9670;&#160;</a></span>buffer_mutex</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::mutex fabomatic::SavedConfig::buffer_mutex</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_saved_config_8hpp_source.xhtml#l00026">26</a> of file <a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_saved_config_8cpp_source.xhtml#l00052">LoadFromEEPROM()</a>, and <a class="el" href="_saved_config_8cpp_source.xhtml#l00172">SaveToEEPROM()</a>.</p>

</div>
</div>
<a id="a87190e0ef86890f51d972f3d2f024aa0" name="a87190e0ef86890f51d972f3d2f024aa0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87190e0ef86890f51d972f3d2f024aa0">&#9670;&#160;</a></span>cachedRfid</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfabomatic_1_1_cached_cards.xhtml">CachedCards</a> fabomatic::SavedConfig::cachedRfid</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>list of cached RFID cards </p>

<p class="definition">Definition at line <a class="el" href="_saved_config_8hpp_source.xhtml#l00044">44</a> of file <a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_saved_config_8cpp_source.xhtml#l00119">fromJsonDocument()</a>, <a class="el" href="_auth_provider_8cpp_source.xhtml#l00188">fabomatic::AuthProvider::saveCache()</a>, and <a class="el" href="_saved_config_8cpp_source.xhtml#l00088">toJsonDocument()</a>.</p>

</div>
</div>
<a id="a6510074227a78d4f5093b7aed88bdbef" name="a6510074227a78d4f5093b7aed88bdbef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6510074227a78d4f5093b7aed88bdbef">&#9670;&#160;</a></span>disablePortal</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::SavedConfig::disablePortal {false}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>if true, the FORCE_OPEN_PORTAL flag will be ignored </p>

<p class="definition">Definition at line <a class="el" href="_saved_config_8hpp_source.xhtml#l00072">72</a> of file <a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   72</span>{<span class="keyword">false</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_saved_config_8cpp_source.xhtml#l00028">DefaultConfig()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00119">fromJsonDocument()</a>, and <a class="el" href="_saved_config_8cpp_source.xhtml#l00088">toJsonDocument()</a>.</p>

</div>
</div>
<a id="ad6d77281946b603617f828d2e4a1578d" name="ad6d77281946b603617f828d2e4a1578d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad6d77281946b603617f828d2e4a1578d">&#9670;&#160;</a></span>json_buffer</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::SavedConfig::json_buffer</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_saved_config_8hpp_source.xhtml#l00025">25</a> of file <a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_saved_config_8cpp_source.xhtml#l00052">LoadFromEEPROM()</a>, and <a class="el" href="_saved_config_8cpp_source.xhtml#l00172">SaveToEEPROM()</a>.</p>

</div>
</div>
<a id="aaa3197d962aace1f5548a5586bcc97c4" name="aaa3197d962aace1f5548a5586bcc97c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa3197d962aace1f5548a5586bcc97c4">&#9670;&#160;</a></span>JSON_DOC_SIZE</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fabomatic::SavedConfig::JSON_DOC_SIZE = 4096</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_saved_config_8hpp_source.xhtml#l00023">23</a> of file <a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_saved_config_8cpp_source.xhtml#l00172">SaveToEEPROM()</a>.</p>

</div>
</div>
<a id="aa2312c6cebb6b73f66e9f8238cb1b17f" name="aa2312c6cebb6b73f66e9f8238cb1b17f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa2312c6cebb6b73f66e9f8238cb1b17f">&#9670;&#160;</a></span>machine_id</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::SavedConfig::machine_id {&quot;&quot;}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="classfabomatic_1_1_machine.xhtml" title="Represents the FabLab machine connected to the board.">Machine</a> ID connected to the board. </p>
<p>This is a string to allow for easier integration with WiFiManager parameter </p>

<p class="definition">Definition at line <a class="el" href="_saved_config_8hpp_source.xhtml#l00066">66</a> of file <a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   66</span>{<span class="stringliteral">&quot;&quot;</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">fabomatic::FabBackend::configure()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00119">fromJsonDocument()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00023">getMachineID()</a>, <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00048">fabomatic::tests::test_changes()</a>, and <a class="el" href="_saved_config_8cpp_source.xhtml#l00088">toJsonDocument()</a>.</p>

</div>
</div>
<a id="a07246e58a5381b0edc2147965a0a8f99" name="a07246e58a5381b0edc2147965a0a8f99"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07246e58a5381b0edc2147965a0a8f99">&#9670;&#160;</a></span>MAGIC_NUMBER</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fabomatic::SavedConfig::MAGIC_NUMBER = 0x51</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_saved_config_8hpp_source.xhtml#l00038">38</a> of file <a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00048">fabomatic::tests::test_changes()</a>, <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00022">fabomatic::tests::test_defaults()</a>, <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00152">fabomatic::tests::test_magic_number()</a>, and <a class="el" href="_saved_config_8cpp_source.xhtml#l00088">toJsonDocument()</a>.</p>

</div>
</div>
<a id="a9429975f9694b85cf53cc364cd135ac5" name="a9429975f9694b85cf53cc364cd135ac5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9429975f9694b85cf53cc364cd135ac5">&#9670;&#160;</a></span>magic_number</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t fabomatic::SavedConfig::magic_number {0}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">mutable</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_saved_config_8hpp_source.xhtml#l00041">41</a> of file <a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   41</span>{0};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_saved_config_8cpp_source.xhtml#l00028">DefaultConfig()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00119">fromJsonDocument()</a>, and <a class="el" href="_saved_config_8cpp_source.xhtml#l00088">toJsonDocument()</a>.</p>

</div>
</div>
<a id="a48a97bdcbb24fe8f5e2f36a173839cdf" name="a48a97bdcbb24fe8f5e2f36a173839cdf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48a97bdcbb24fe8f5e2f36a173839cdf">&#9670;&#160;</a></span>message_buffer</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_buffer.xhtml">Buffer</a> fabomatic::SavedConfig::message_buffer</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_saved_config_8hpp_source.xhtml#l00074">74</a> of file <a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">fabomatic::FabBackend::configure()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00119">fromJsonDocument()</a>, and <a class="el" href="_saved_config_8cpp_source.xhtml#l00088">toJsonDocument()</a>.</p>

</div>
</div>
<a id="a68004c1190623a027b2a1f41607cd33f" name="a68004c1190623a027b2a1f41607cd33f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68004c1190623a027b2a1f41607cd33f">&#9670;&#160;</a></span>mqtt_password</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::SavedConfig::mqtt_password {&quot;&quot;}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>MQTT password. </p>

<p class="definition">Definition at line <a class="el" href="_saved_config_8hpp_source.xhtml#l00059">59</a> of file <a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   59</span>{<span class="stringliteral">&quot;&quot;</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">fabomatic::FabBackend::configure()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00028">DefaultConfig()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00119">fromJsonDocument()</a>, <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00048">fabomatic::tests::test_changes()</a>, and <a class="el" href="_saved_config_8cpp_source.xhtml#l00088">toJsonDocument()</a>.</p>

</div>
</div>
<a id="a8de320beb3e706c35582c049d3681c42" name="a8de320beb3e706c35582c049d3681c42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8de320beb3e706c35582c049d3681c42">&#9670;&#160;</a></span>mqtt_server</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::SavedConfig::mqtt_server {&quot;&quot;}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>MQTT server. </p>

<p class="definition">Definition at line <a class="el" href="_saved_config_8hpp_source.xhtml#l00053">53</a> of file <a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   53</span>{<span class="stringliteral">&quot;&quot;</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">fabomatic::FabBackend::configure()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00028">DefaultConfig()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00119">fromJsonDocument()</a>, <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00048">fabomatic::tests::test_changes()</a>, and <a class="el" href="_saved_config_8cpp_source.xhtml#l00088">toJsonDocument()</a>.</p>

</div>
</div>
<a id="a1c147278506b9cd2856798a7988d78ff" name="a1c147278506b9cd2856798a7988d78ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c147278506b9cd2856798a7988d78ff">&#9670;&#160;</a></span>mqtt_switch_topic</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::SavedConfig::mqtt_switch_topic {&quot;&quot;}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>MQTT topic for mqtt switch (if available) </p>

<p class="definition">Definition at line <a class="el" href="_saved_config_8hpp_source.xhtml#l00062">62</a> of file <a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   62</span>{<span class="stringliteral">&quot;&quot;</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_saved_config_8cpp_source.xhtml#l00028">DefaultConfig()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00119">fromJsonDocument()</a>, <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00048">fabomatic::tests::test_changes()</a>, and <a class="el" href="_saved_config_8cpp_source.xhtml#l00088">toJsonDocument()</a>.</p>

</div>
</div>
<a id="a8cc620b09cef7aceaf7ec87e72dfcdc0" name="a8cc620b09cef7aceaf7ec87e72dfcdc0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8cc620b09cef7aceaf7ec87e72dfcdc0">&#9670;&#160;</a></span>mqtt_user</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::SavedConfig::mqtt_user {&quot;&quot;}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>MQTT username. </p>

<p class="definition">Definition at line <a class="el" href="_saved_config_8hpp_source.xhtml#l00056">56</a> of file <a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   56</span>{<span class="stringliteral">&quot;&quot;</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">fabomatic::FabBackend::configure()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00028">DefaultConfig()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00119">fromJsonDocument()</a>, <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00048">fabomatic::tests::test_changes()</a>, and <a class="el" href="_saved_config_8cpp_source.xhtml#l00088">toJsonDocument()</a>.</p>

</div>
</div>
<a id="a8f7b5fba524d14a66ed1eaeda08a7e0d" name="a8f7b5fba524d14a66ed1eaeda08a7e0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f7b5fba524d14a66ed1eaeda08a7e0d">&#9670;&#160;</a></span>password</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::SavedConfig::password {&quot;&quot;}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>WiFi password. </p>

<p class="definition">Definition at line <a class="el" href="_saved_config_8hpp_source.xhtml#l00050">50</a> of file <a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   50</span>{<span class="stringliteral">&quot;&quot;</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">fabomatic::FabBackend::configure()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00028">DefaultConfig()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00119">fromJsonDocument()</a>, <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00048">fabomatic::tests::test_changes()</a>, and <a class="el" href="_saved_config_8cpp_source.xhtml#l00088">toJsonDocument()</a>.</p>

</div>
</div>
<a id="abccca47e85f3214c2ce780230bfe7f49" name="abccca47e85f3214c2ce780230bfe7f49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abccca47e85f3214c2ce780230bfe7f49">&#9670;&#160;</a></span>ssid</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::SavedConfig::ssid {&quot;&quot;}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>WiFi SSID. </p>

<p class="definition">Definition at line <a class="el" href="_saved_config_8hpp_source.xhtml#l00047">47</a> of file <a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   47</span>{<span class="stringliteral">&quot;&quot;</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">fabomatic::FabBackend::configure()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00028">DefaultConfig()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00119">fromJsonDocument()</a>, <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00048">fabomatic::tests::test_changes()</a>, and <a class="el" href="_saved_config_8cpp_source.xhtml#l00088">toJsonDocument()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a></li>
<li><a class="el" href="_saved_config_8cpp_source.xhtml">SavedConfig.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Nov 30 2024 15:35:28 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
