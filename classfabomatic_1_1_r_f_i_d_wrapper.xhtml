<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: fabomatic::RFIDWrapper&lt; Driver &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacefabomatic.xhtml">fabomatic</a></li><li class="navelem"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">RFIDWrapper</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classfabomatic_1_1_r_f_i_d_wrapper-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">fabomatic::RFIDWrapper&lt; Driver &gt; Class Template Reference<span class="mlabels"><span class="mlabel">final</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>Driver class for the RFID reader chip.  
 <a href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_r_f_i_d_wrapper_8hpp_source.xhtml">RFIDWrapper.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for fabomatic::RFIDWrapper&lt; Driver &gt;:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_r_f_i_d_wrapper__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Collaboration diagram for fabomatic::RFIDWrapper&lt; Driver &gt;:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_r_f_i_d_wrapper__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1786ef31036c51307ab53162a9a7b175" id="r_a1786ef31036c51307ab53162a9a7b175"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml#a1786ef31036c51307ab53162a9a7b175">RFIDWrapper</a> ()</td></tr>
<tr class="separator:a1786ef31036c51307ab53162a9a7b175"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2acdb78b00e8d18c103ebd2682a9ee15" id="r_a2acdb78b00e8d18c103ebd2682a9ee15"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml#a2acdb78b00e8d18c103ebd2682a9ee15">rfidInit</a> () const -&gt; bool override</td></tr>
<tr class="memdesc:a2acdb78b00e8d18c103ebd2682a9ee15"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the RFID driver.  <br /></td></tr>
<tr class="separator:a2acdb78b00e8d18c103ebd2682a9ee15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada9684dd15933a28d3e44c7a76a75595" id="r_ada9684dd15933a28d3e44c7a76a75595"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml#ada9684dd15933a28d3e44c7a76a75595">isNewCardPresent</a> () const -&gt; bool override</td></tr>
<tr class="memdesc:ada9684dd15933a28d3e44c7a76a75595"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if a card is present in the field.  <br /></td></tr>
<tr class="separator:ada9684dd15933a28d3e44c7a76a75595"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75db38b749d7d63d6f9671999028b688" id="r_a75db38b749d7d63d6f9671999028b688"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml#a75db38b749d7d63d6f9671999028b688">cardStillThere</a> (const <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> original, std::chrono::milliseconds max_delay) const -&gt; bool override</td></tr>
<tr class="memdesc:a75db38b749d7d63d6f9671999028b688"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the card is in the field, waiting up to max_delay to confirm presence.  <br /></td></tr>
<tr class="separator:a75db38b749d7d63d6f9671999028b688"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2b6d46317ad23d9c78e58fa51882944" id="r_ac2b6d46317ad23d9c78e58fa51882944"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml#ac2b6d46317ad23d9c78e58fa51882944">readCardSerial</a> () const -&gt; std::optional&lt; <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> &gt; override</td></tr>
<tr class="memdesc:ac2b6d46317ad23d9c78e58fa51882944"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads the card serial number.  <br /></td></tr>
<tr class="separator:ac2b6d46317ad23d9c78e58fa51882944"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed38238026ea2385df408fb5c9c391a5" id="r_aed38238026ea2385df408fb5c9c391a5"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml#aed38238026ea2385df408fb5c9c391a5">selfTest</a> () const -&gt; bool override</td></tr>
<tr class="separator:aed38238026ea2385df408fb5c9c391a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4adf987c7615930e126ce08c23c7938a" id="r_a4adf987c7615930e126ce08c23c7938a"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml#a4adf987c7615930e126ce08c23c7938a">reset</a> () const -&gt; void override</td></tr>
<tr class="separator:a4adf987c7615930e126ce08c23c7938a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a435a84ac528feedf91cc75ada2a1b4c0" id="r_a435a84ac528feedf91cc75ada2a1b4c0"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml#a435a84ac528feedf91cc75ada2a1b4c0">getUid</a> () const -&gt; <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> override</td></tr>
<tr class="separator:a435a84ac528feedf91cc75ada2a1b4c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3389d5dad60b15b298798c8606243677" id="r_a3389d5dad60b15b298798c8606243677"><td class="memItemLeft" align="right" valign="top">Driver &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml#a3389d5dad60b15b298798c8606243677">getDriver</a> ()</td></tr>
<tr class="memdesc:a3389d5dad60b15b298798c8606243677"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the driver object for testing/simulation.  <br /></td></tr>
<tr class="separator:a3389d5dad60b15b298798c8606243677"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a348fb4d0847621e638804a4501549ae6" id="r_a348fb4d0847621e638804a4501549ae6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml#a348fb4d0847621e638804a4501549ae6">RFIDWrapper</a> (const <a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">RFIDWrapper</a> &amp;)=delete</td></tr>
<tr class="separator:a348fb4d0847621e638804a4501549ae6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2373434dbb03924f4a8b99520f9f2daf" id="r_a2373434dbb03924f4a8b99520f9f2daf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">RFIDWrapper</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml#a2373434dbb03924f4a8b99520f9f2daf">operator=</a> (const <a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">RFIDWrapper</a> &amp;x)=delete</td></tr>
<tr class="separator:a2373434dbb03924f4a8b99520f9f2daf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f57d5972d98341fa9755116d70c4755" id="r_a8f57d5972d98341fa9755116d70c4755"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml#a8f57d5972d98341fa9755116d70c4755">RFIDWrapper</a> (<a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">RFIDWrapper</a> &amp;&amp;)=delete</td></tr>
<tr class="separator:a8f57d5972d98341fa9755116d70c4755"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac529ad060b9cc767dd1db474ed9fc43e" id="r_ac529ad060b9cc767dd1db474ed9fc43e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">RFIDWrapper</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml#ac529ad060b9cc767dd1db474ed9fc43e">operator=</a> (<a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">RFIDWrapper</a> &amp;&amp;)=delete</td></tr>
<tr class="separator:ac529ad060b9cc767dd1db474ed9fc43e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17d62cff5201e938aa3943a252dfaf39" id="r_a17d62cff5201e938aa3943a252dfaf39"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml#a17d62cff5201e938aa3943a252dfaf39">~RFIDWrapper</a> () override</td></tr>
<tr class="separator:a17d62cff5201e938aa3943a252dfaf39"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a414c071efd649a809be405eadf7022b8" id="r_a414c071efd649a809be405eadf7022b8"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; Driver &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml#a414c071efd649a809be405eadf7022b8">driver</a></td></tr>
<tr class="separator:a414c071efd649a809be405eadf7022b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename Driver&gt;<br />
class fabomatic::RFIDWrapper&lt; Driver &gt;</div><p>Driver class for the RFID reader chip. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Driver</td><td>the real or mockup driver </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_r_f_i_d_wrapper_8hpp_source.xhtml#l00018">18</a> of file <a class="el" href="_r_f_i_d_wrapper_8hpp_source.xhtml">RFIDWrapper.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a1786ef31036c51307ab53162a9a7b175" name="a1786ef31036c51307ab53162a9a7b175"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1786ef31036c51307ab53162a9a7b175">&#9670;&#160;</a></span>RFIDWrapper() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Driver &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a>&lt; Driver &gt;::RFIDWrapper </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a348fb4d0847621e638804a4501549ae6" name="a348fb4d0847621e638804a4501549ae6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a348fb4d0847621e638804a4501549ae6">&#9670;&#160;</a></span>RFIDWrapper() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Driver &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a>&lt; Driver &gt;::RFIDWrapper </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">RFIDWrapper</a>&lt; Driver &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8f57d5972d98341fa9755116d70c4755" name="a8f57d5972d98341fa9755116d70c4755"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f57d5972d98341fa9755116d70c4755">&#9670;&#160;</a></span>RFIDWrapper() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Driver &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a>&lt; Driver &gt;::RFIDWrapper </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">RFIDWrapper</a>&lt; Driver &gt; &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a17d62cff5201e938aa3943a252dfaf39" name="a17d62cff5201e938aa3943a252dfaf39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17d62cff5201e938aa3943a252dfaf39">&#9670;&#160;</a></span>~RFIDWrapper()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Driver &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a>&lt; Driver &gt;::~<a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">RFIDWrapper</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_r_f_i_d_wrapper_8hpp_source.xhtml#l00056">56</a> of file <a class="el" href="_r_f_i_d_wrapper_8hpp_source.xhtml">RFIDWrapper.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   56</span>{};                             <span class="comment">// Default destructor</span></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a75db38b749d7d63d6f9671999028b688" name="a75db38b749d7d63d6f9671999028b688"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75db38b749d7d63d6f9671999028b688">&#9670;&#160;</a></span>cardStillThere()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Driver &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto <a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a>&lt; Driver &gt;::cardStillThere </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a>&#160;</td>
          <td class="paramname"><em>original</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::chrono::milliseconds&#160;</td>
          <td class="paramname"><em>max_delay</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const -&gt;  bool</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns true if the card is in the field, waiting up to max_delay to confirm presence. </p>
<p>This function may return immediately if the card responds quickly </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">original</td><td>card to look for </td></tr>
    <tr><td class="paramname">max_delay</td><td>maximum delay to contact the card </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the card is found </dd></dl>

<p>Implements <a class="el" href="classfabomatic_1_1_base_r_f_i_d_wrapper.xhtml#a54d5a82b8f070264c4e0aab075fd8ed8">fabomatic::BaseRFIDWrapper</a>.</p>

</div>
</div>
<a id="a3389d5dad60b15b298798c8606243677" name="a3389d5dad60b15b298798c8606243677"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3389d5dad60b15b298798c8606243677">&#9670;&#160;</a></span>getDriver()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Driver &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">Driver &amp; <a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a>&lt; Driver &gt;::getDriver </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the driver object for testing/simulation. </p>

</div>
</div>
<a id="a435a84ac528feedf91cc75ada2a1b4c0" name="a435a84ac528feedf91cc75ada2a1b4c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a435a84ac528feedf91cc75ada2a1b4c0">&#9670;&#160;</a></span>getUid()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Driver &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto <a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a>&lt; Driver &gt;::getUid </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt;  <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classfabomatic_1_1_base_r_f_i_d_wrapper.xhtml#ad5a9a30fefa17cf11345d468e36497b6">fabomatic::BaseRFIDWrapper</a>.</p>

</div>
</div>
<a id="ada9684dd15933a28d3e44c7a76a75595" name="ada9684dd15933a28d3e44c7a76a75595"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada9684dd15933a28d3e44c7a76a75595">&#9670;&#160;</a></span>isNewCardPresent()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Driver &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto <a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a>&lt; Driver &gt;::isNewCardPresent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt;  bool</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns true if a card is present in the field. </p>

<p>Implements <a class="el" href="classfabomatic_1_1_base_r_f_i_d_wrapper.xhtml#a3742fa985037cb9794a39f293849bea3">fabomatic::BaseRFIDWrapper</a>.</p>

</div>
</div>
<a id="a2373434dbb03924f4a8b99520f9f2daf" name="a2373434dbb03924f4a8b99520f9f2daf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2373434dbb03924f4a8b99520f9f2daf">&#9670;&#160;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Driver &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">RFIDWrapper</a> &amp; <a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a>&lt; Driver &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">RFIDWrapper</a>&lt; Driver &gt; &amp;&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac529ad060b9cc767dd1db474ed9fc43e" name="ac529ad060b9cc767dd1db474ed9fc43e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac529ad060b9cc767dd1db474ed9fc43e">&#9670;&#160;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Driver &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">RFIDWrapper</a> &amp; <a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a>&lt; Driver &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">RFIDWrapper</a>&lt; Driver &gt; &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac2b6d46317ad23d9c78e58fa51882944" name="ac2b6d46317ad23d9c78e58fa51882944"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2b6d46317ad23d9c78e58fa51882944">&#9670;&#160;</a></span>readCardSerial()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Driver &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto <a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a>&lt; Driver &gt;::readCardSerial </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt;  std::optional&lt; <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> &gt;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reads the card serial number. </p>
<dl class="section return"><dt>Returns</dt><dd>std::nullopt if the card is not present, the card serial otherwise </dd></dl>

<p>Implements <a class="el" href="classfabomatic_1_1_base_r_f_i_d_wrapper.xhtml#a6a826e3b8919b1a5a0f4f2d996c34337">fabomatic::BaseRFIDWrapper</a>.</p>

</div>
</div>
<a id="a4adf987c7615930e126ce08c23c7938a" name="a4adf987c7615930e126ce08c23c7938a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4adf987c7615930e126ce08c23c7938a">&#9670;&#160;</a></span>reset()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Driver &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto <a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a>&lt; Driver &gt;::reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt;  void</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classfabomatic_1_1_base_r_f_i_d_wrapper.xhtml#a2165047a5e8b8b134db8a5e1d5c56f18">fabomatic::BaseRFIDWrapper</a>.</p>

</div>
</div>
<a id="a2acdb78b00e8d18c103ebd2682a9ee15" name="a2acdb78b00e8d18c103ebd2682a9ee15"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2acdb78b00e8d18c103ebd2682a9ee15">&#9670;&#160;</a></span>rfidInit()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Driver &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto <a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a>&lt; Driver &gt;::rfidInit </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt;  bool</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializes the RFID driver. </p>

<p>Implements <a class="el" href="classfabomatic_1_1_base_r_f_i_d_wrapper.xhtml#a97ada505d4be170df87a6985ced26106">fabomatic::BaseRFIDWrapper</a>.</p>

</div>
</div>
<a id="aed38238026ea2385df408fb5c9c391a5" name="aed38238026ea2385df408fb5c9c391a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed38238026ea2385df408fb5c9c391a5">&#9670;&#160;</a></span>selfTest()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Driver &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto <a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a>&lt; Driver &gt;::selfTest </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt;  bool</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classfabomatic_1_1_base_r_f_i_d_wrapper.xhtml#a44116c881add4adf6bea35411ee45cad">fabomatic::BaseRFIDWrapper</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a414c071efd649a809be405eadf7022b8" name="a414c071efd649a809be405eadf7022b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a414c071efd649a809be405eadf7022b8">&#9670;&#160;</a></span>driver</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Driver &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;Driver&gt; <a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a>&lt; Driver &gt;::driver</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_r_f_i_d_wrapper_8hpp_source.xhtml#l00021">21</a> of file <a class="el" href="_r_f_i_d_wrapper_8hpp_source.xhtml">RFIDWrapper.hpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_r_f_i_d_wrapper_8hpp_source.xhtml">RFIDWrapper.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Fri Jul 19 2024 19:24:18 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
