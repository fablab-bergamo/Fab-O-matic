<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: Tasks.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(0); });
/* @license-end */
</script>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">Tasks.cpp</div></div>
</div><!--header-->
<div class="contents">
<a href="_tasks_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#include &quot;<a class="code" href="_tasks_8hpp.xhtml">Tasks.hpp</a>&quot;</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#include &quot;Arduino.h&quot;</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &quot;<a class="code" href="conf_8hpp.xhtml">conf.hpp</a>&quot;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &quot;Arduino.h&quot;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &quot;ArduinoOTA.h&quot;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;sstream&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span> </div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &quot;<a class="code" href="_logging_8hpp.xhtml">Logging.hpp</a>&quot;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span> </div>
<div class="foldopen" id="foldopen00012" data-start="{" data-end="}">
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1_tasks.xhtml">   12</a></span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefabomatic_1_1_tasks.xhtml">fabomatic::Tasks</a></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>{</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">   14</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a> = std::chrono::milliseconds;</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  <span class="keyword">using namespace </span>std::chrono_literals;</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span> </div>
<div class="foldopen" id="foldopen00018" data-start="{" data-end="}">
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a8d19a5ae935d924c4c145ed07721e5db">   18</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a8d19a5ae935d924c4c145ed07721e5db">Scheduler::addTask</a>(<a class="code hl_class" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Task</a> *task) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  {</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>    <span class="keywordflow">if</span> (task != <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>      tasks.push_back(task);</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  }</div>
</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="foldopen" id="foldopen00024" data-start="{" data-end="}">
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#ae1280eccd0bc57ff7fbc92ab54b54769">   24</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#ae1280eccd0bc57ff7fbc92ab54b54769">Scheduler::removeTask</a>(<span class="keyword">const</span> <a class="code hl_class" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Task</a> *task) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  {</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>    tasks.erase(std::remove_if(tasks.begin(), tasks.end(),</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>                               [&amp;task](<span class="keyword">const</span> <span class="keyword">auto</span> &amp;t)</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>                               { return t-&gt;getId() == task-&gt;getId(); }),</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>                tasks.end());</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  }</div>
</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="foldopen" id="foldopen00032" data-start="{" data-end="}">
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a2acce29901dbfd56a0f49beb277e3e76">   32</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a2acce29901dbfd56a0f49beb277e3e76">Scheduler::updateSchedules</a>() const -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  {</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;task : <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#ac20ffce827e83acedd4181876e99b569">tasks</a>)</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    {</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>      task-&gt;<a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a1488d6b3730de3f77a52ce6bee56fdd8">updateSchedule</a>();</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>    }</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  }</div>
</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="foldopen" id="foldopen00040" data-start="{" data-end="}">
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a0619cf06b6427ba332296ffcceffcb8c">   40</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a0619cf06b6427ba332296ffcceffcb8c">Scheduler::printStats</a>() const -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  {</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    <a class="code hl_typedef" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a> avg_delay = 0ms;</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>    <span class="keyword">auto</span> nb_runs = 0;</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;task : <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#ac20ffce827e83acedd4181876e99b569">tasks</a>)</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>    {</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>      avg_delay += task-&gt;getAvgTardiness() * task-&gt;getRunCounter();</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>      nb_runs += task-&gt;getRunCounter();</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>    }</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>    <span class="keywordflow">if</span> (nb_runs &gt; 0)</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>    {</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>      avg_delay /= nb_runs;</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>    }</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Scheduler::execute complete: %d tasks total, %d runs, avg delay/run: %llu ms\r\n&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#ac20ffce827e83acedd4181876e99b569">tasks</a>.size(), nb_runs, avg_delay.count());</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;task : <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#ac20ffce827e83acedd4181876e99b569">tasks</a>)</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>    {</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>      <span class="keywordflow">if</span> (task-&gt;isActive())</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>      {</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>        <span class="keywordflow">if</span> (task-&gt;getRunCounter() &gt; 0)</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>        {</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>          ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;\t Task: %s, %lu runs, avg tardiness/run: %llu ms, period %llu ms, delay %llu ms, average task duration %llu ms\r\n&quot;</span>,</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>                   task-&gt;getId().c_str(), task-&gt;getRunCounter(),</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>                   task-&gt;getAvgTardiness().count(), task-&gt;getPeriod().count(),</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>                   task-&gt;getDelay().count(),</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>                   task-&gt;getTotalRuntime().count() / task-&gt;getRunCounter());</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>        }</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>        <span class="keywordflow">else</span></div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>        {</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>          ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;\t Task: %s, never ran, period %llu ms, delay %llu ms\r\n&quot;</span>,</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>                   task-&gt;getId().c_str(), task-&gt;getPeriod().count(),</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>                   task-&gt;getDelay().count());</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>        }</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>      }</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>      <span class="keywordflow">else</span></div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>      {</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>        ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;\t Task: %s, inactive\r\n&quot;</span>, task-&gt;getId().c_str());</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>      }</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    }</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  }</div>
</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="foldopen" id="foldopen00083" data-start="{" data-end="}">
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#aff9b0c44cc0bef222932a681ace0d406">   83</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#aff9b0c44cc0bef222932a681ace0d406">Scheduler::execute</a>() -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  {</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>    std::sort(tasks.begin(), tasks.end(), [](<span class="keyword">const</span> <span class="keyword">auto</span> &amp;x, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;y)</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>              { return x-&gt;getNextRun() &lt; y-&gt;getNextRun(); });</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;t : tasks)</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    {</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>      t-&gt;run();</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>    }</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span> </div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1debug.xhtml#a8308799abba9b76406a8653548369967">conf::debug::ENABLE_TASK_LOGS</a> &amp;&amp; millis() % 1024 == 0)</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>    {</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>      printStats();</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>    }</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span><span class="preprocessor">#if (PINS_WOKWI)</span></div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    {</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">::delay</a>(5); <span class="comment">// Wokwi simulation is sometimes slow and this helps to catch-up</span></div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>    }</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  }</div>
</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="foldopen" id="foldopen00105" data-start="{" data-end="}">
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a203784237087f7f1b0b77c15bcdb85f9">  105</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a203784237087f7f1b0b77c15bcdb85f9">Scheduler::taskCount</a>() const -&gt; <span class="keywordtype">size_t</span></div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  {</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#ac20ffce827e83acedd4181876e99b569">tasks</a>.size();</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  }</div>
</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="foldopen" id="foldopen00110" data-start="{" data-end="}">
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a701e971506199db303a90f2515dd6169">  110</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a701e971506199db303a90f2515dd6169">Scheduler::getTasks</a>() const -&gt; const std::vector&lt;<a class="code hl_class" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Task</a> *&gt;</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  {</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>    <span class="keywordflow">return</span> {<a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#ac20ffce827e83acedd4181876e99b569">tasks</a>};</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  }</div>
</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="foldopen" id="foldopen00122" data-start="{" data-end="}">
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_task.xhtml#affca69a8fdcc7eb5cc656b4e4fd80375">  122</a></span>  <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a1963aeb170d8cbdd22e8ac5d1f906c91">Task::Task</a>(<span class="keyword">const</span> std::string &amp;<span class="keywordtype">id</span>, <a class="code hl_typedef" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a> period,</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>             std::function&lt;<span class="keywordtype">void</span>()&gt; callback,</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>             <a class="code hl_class" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml">Scheduler</a> &amp;scheduler, <span class="keywordtype">bool</span> active, <a class="code hl_typedef" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a> <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">delay</a>) : active{active}, id{id},</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>                                                                      period{period}, <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">delay</a>{<a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">delay</a>},</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>                                                                      next_run{last_run},</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>                                                                      average_tardiness{0ms}, total_runtime{0ms},</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>                                                                      callback{callback}, run_counter{0}</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  {</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>    <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a99cc265d0538495367b3d4d949bccc20">last_run</a> = <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">arduinoNow</a>() + <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">period</a>;</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>    scheduler.<a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a8d19a5ae935d924c4c145ed07721e5db">addTask</a>(<span class="keyword">this</span>);</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>    <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1debug.xhtml#a8308799abba9b76406a8653548369967">conf::debug::ENABLE_TASK_LOGS</a>)</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>    {</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Constructor(%s)\r\n&quot;</span>, <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a9a1a85dc5747fdc56c3f7470eeaebff0">toString</a>().c_str());</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>    }</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  }</div>
</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="foldopen" id="foldopen00138" data-start="{" data-end="}">
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a9a1a85dc5747fdc56c3f7470eeaebff0">  138</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a9a1a85dc5747fdc56c3f7470eeaebff0">Task::toString</a>() const -&gt; const std::<span class="keywordtype">string</span></div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  {</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>    std::stringstream ss;</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>    ss &lt;&lt; <span class="stringliteral">&quot;Task &quot;</span> &lt;&lt; <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a99da0e6d8fe7677e0faaab98995353ba">getId</a>() &lt;&lt; <span class="stringliteral">&quot;, active=&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a195917ecd47b52f9e924a220cbd812e5">active</a></div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>       &lt;&lt; <span class="stringliteral">&quot;,Period=&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">period</a> &lt;&lt; <span class="stringliteral">&quot;, Delay=&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afcd445681f5c92b55b601aff90f41f05">delay</a></div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>       &lt;&lt; <span class="stringliteral">&quot;,Last run=&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a99cc265d0538495367b3d4d949bccc20">last_run</a>.time_since_epoch()</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>       &lt;&lt; <span class="stringliteral">&quot;,Next_run=&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a5d0719a73c835b75b37d0fc77559c7cc">next_run</a>.time_since_epoch()</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>       &lt;&lt; <span class="stringliteral">&quot;,Avg tardiness=&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a46a71ed2fe769cbf21bd093c3452a5a8">average_tardiness</a></div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>       &lt;&lt; <span class="stringliteral">&quot;,total_runtime &quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a033906c8fc5c8d929c4336d4ed988207">total_runtime</a></div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>       &lt;&lt; <span class="stringliteral">&quot;,run_counter=&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#adc90a9a7701e126e74796646be5f21bf">run_counter</a></div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>       &lt;&lt; <span class="stringliteral">&quot;,clock=&quot;</span> &lt;&lt; millis();</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>    <span class="keywordflow">return</span> ss.str();</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>  }</div>
</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="foldopen" id="foldopen00152" data-start="{" data-end="}">
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_task.xhtml#ac63191a702c898cda8af1ce8316bfb94">  152</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#ac63191a702c898cda8af1ce8316bfb94">Task::run</a>() -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  {</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>    <span class="keyword">auto</span> time_to_run = (<a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">arduinoNow</a>() - next_run).count() &gt; 0;</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>    <span class="keywordflow">if</span> (isActive() &amp;&amp; time_to_run)</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>    {</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>      run_counter++;</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>      <span class="keyword">auto</span> last_duration = std::chrono::duration_cast&lt;milliseconds&gt;(<a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">arduinoNow</a>() - last_run);</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>      average_tardiness = (average_tardiness * (run_counter - 1) + last_duration) / run_counter;</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>      last_run = <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">arduinoNow</a>();</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span> </div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>      callback();</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span> </div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>      total_runtime += std::chrono::duration_cast&lt;milliseconds&gt;(<a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">arduinoNow</a>() - last_run);</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span> </div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>      <span class="keywordflow">if</span> (period &gt; 0ms)</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>      {</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>        next_run = last_run + period; <span class="comment">// Schedule next run</span></div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>      }</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>      <span class="keywordflow">else</span></div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>      {</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>        next_run = next_run.max(); <span class="comment">// Disable the task</span></div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>      }</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span> </div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>      <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1debug.xhtml#a8308799abba9b76406a8653548369967">conf::debug::ENABLE_TASK_LOGS</a>)</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>      {</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>        ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Completed(%s)\r\n&quot;</span>, toString().c_str());</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>      }</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>    }</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  }</div>
</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span> </div>
<div class="foldopen" id="foldopen00182" data-start="{" data-end="}">
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a10175ec4fc2f54f444850b01426c95f7">  182</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a10175ec4fc2f54f444850b01426c95f7">Task::disable</a>() -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>  {</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>    active = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>  }</div>
</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span> </div>
<div class="foldopen" id="foldopen00187" data-start="{" data-end="}">
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_task.xhtml#aa3f970eab63a4ba06e92e49b23eaab45">  187</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#aa3f970eab63a4ba06e92e49b23eaab45">Task::enable</a>() -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>  {</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>    active = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>    updateSchedule();</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>  }</div>
</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span> </div>
<div class="foldopen" id="foldopen00194" data-start="{" data-end="}">
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a1488d6b3730de3f77a52ce6bee56fdd8">  194</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a1488d6b3730de3f77a52ce6bee56fdd8">Task::updateSchedule</a>() -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>  {</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>    last_run = <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">arduinoNow</a>() + <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">delay</a>;</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>    next_run = last_run;</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>  }</div>
</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span> </div>
<div class="foldopen" id="foldopen00200" data-start="{" data-end="}">
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a548c0b4cdf3458bd64031fbbd1637927">  200</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a548c0b4cdf3458bd64031fbbd1637927">Task::setPeriod</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a> new_period) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>  {</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>    period = new_period;</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>  }</div>
</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span> </div>
<div class="foldopen" id="foldopen00205" data-start="{" data-end="}">
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_task.xhtml#aef6894044873a74c1bda3308531f1b95">  205</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#aef6894044873a74c1bda3308531f1b95">Task::setCallback</a>(std::function&lt;<span class="keywordtype">void</span>()&gt; new_callback) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>  {</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>    callback = new_callback;</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>  }</div>
</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span> </div>
<div class="foldopen" id="foldopen00210" data-start="{" data-end="}">
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8f2df2426609b7be592ab3485d9d26ed">  210</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8f2df2426609b7be592ab3485d9d26ed">Task::isActive</a>() const -&gt; <span class="keywordtype">bool</span></div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>  {</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a195917ecd47b52f9e924a220cbd812e5">active</a>;</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>  }</div>
</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span> </div>
<div class="foldopen" id="foldopen00215" data-start="{" data-end="}">
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_task.xhtml#ad535eb5b2caf1ef2569b17ccc6bd96f2">  215</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#ad535eb5b2caf1ef2569b17ccc6bd96f2">Task::getPeriod</a>() const -&gt; const <a class="code hl_typedef" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a></div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>  {</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">period</a>;</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>  }</div>
</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span> </div>
<div class="foldopen" id="foldopen00220" data-start="{" data-end="}">
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_task.xhtml#ad00607f545e8f3440926c7dd833a9b27">  220</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#ad00607f545e8f3440926c7dd833a9b27">Task::getCallback</a>() const -&gt; std::function&lt;<span class="keywordtype">void</span>()&gt;</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>  {</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#aca74ea0431e61fc3cf414f0425332ec0">callback</a>;</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>  }</div>
</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span> </div>
<div class="foldopen" id="foldopen00225" data-start="{" data-end="}">
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a99da0e6d8fe7677e0faaab98995353ba">  225</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a99da0e6d8fe7677e0faaab98995353ba">Task::getId</a>() const -&gt; const std::<span class="keywordtype">string</span></div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>  {</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a819de0c8e46486621657e107b9101ef8">id</a>;</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>  }</div>
</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span> </div>
<div class="foldopen" id="foldopen00230" data-start="{" data-end="}">
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_task.xhtml#af9c1491f7c542d6c096e5e32b096202b">  230</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#af9c1491f7c542d6c096e5e32b096202b">Task::getAvgTardiness</a>() const -&gt; const <a class="code hl_typedef" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a></div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>  {</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a46a71ed2fe769cbf21bd093c3452a5a8">average_tardiness</a> &gt; <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">period</a>)</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>    {</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>      <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a46a71ed2fe769cbf21bd093c3452a5a8">average_tardiness</a> - <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">period</a>;</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>    }</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>    <span class="keywordflow">return</span> 0ms;</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>  }</div>
</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span> </div>
<div class="foldopen" id="foldopen00239" data-start="{" data-end="}">
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a2b247d96f354eb1cfaa02c9cad06add2">  239</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a2b247d96f354eb1cfaa02c9cad06add2">Task::getRunCounter</a>() const -&gt; <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span></div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>  {</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#adc90a9a7701e126e74796646be5f21bf">run_counter</a>;</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>  }</div>
</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span> </div>
<div class="foldopen" id="foldopen00244" data-start="{" data-end="}">
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a80954c03ce29f1c2a3c938593c43c632">  244</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a80954c03ce29f1c2a3c938593c43c632">Task::getDelay</a>() const -&gt; const <a class="code hl_typedef" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a></div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>  {</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afcd445681f5c92b55b601aff90f41f05">delay</a>;</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>  }</div>
</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span> </div>
<div class="foldopen" id="foldopen00249" data-start="{" data-end="}">
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a5521c3886fbc2cc540fb3809f03945a2">  249</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a5521c3886fbc2cc540fb3809f03945a2">Task::setDelay</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a> new_delay) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>  {</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>    <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">delay</a> = new_delay;</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>  }</div>
</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span> </div>
<div class="foldopen" id="foldopen00254" data-start="{" data-end="}">
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a926ed81ebde9e7b9405fde1843c0c343">  254</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a926ed81ebde9e7b9405fde1843c0c343">Task::getTotalRuntime</a>() const -&gt; const <a class="code hl_typedef" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a></div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>  {</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a033906c8fc5c8d929c4336d4ed988207">total_runtime</a>;</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>  }</div>
</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span> </div>
<div class="foldopen" id="foldopen00259" data-start="{" data-end="}">
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_tasks_1_1_task.xhtml#aa1341e5c2cb7516c9a41c84b64fd95ac">  259</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#aa1341e5c2cb7516c9a41c84b64fd95ac">Task::getNextRun</a>() const -&gt; const std::chrono::steady_clock::time_point</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>  {</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a5d0719a73c835b75b37d0fc77559c7cc">next_run</a>;</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>  }</div>
</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span> </div>
<div class="foldopen" id="foldopen00266" data-start="{" data-end="}">
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">  266</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">delay</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a> duration) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>  {</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>    ArduinoOTA.handle();</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span> </div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>    <span class="keywordflow">if</span> (duration &lt; 50ms)</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>    {</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">::delay</a>(duration.count());</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>      <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>    }</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span> </div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;start = <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">arduinoNow</a>();</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>    <span class="keywordflow">do</span></div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>    {</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">::delay</a>(50);</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>      ArduinoOTA.handle();</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>    } <span class="keywordflow">while</span> (<a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">arduinoNow</a>() - start &lt; duration);</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>  }</div>
</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>} <span class="comment">// namespace fabomatic::Tasks</span></div>
</div>
<div class="ttc" id="a_logging_8hpp_xhtml"><div class="ttname"><a href="_logging_8hpp.xhtml">Logging.hpp</a></div></div>
<div class="ttc" id="a_logging_8hpp_xhtml_a4ef5b5f197804a60836ab1e8907d8301"><div class="ttname"><a href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a></div><div class="ttdeci">static const char *const TAG</div><div class="ttdef"><b>Definition</b> <a href="_logging_8hpp_source.xhtml#l00009">Logging.hpp:9</a></div></div>
<div class="ttc" id="a_tasks_8hpp_xhtml"><div class="ttname"><a href="_tasks_8hpp.xhtml">Tasks.hpp</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_scheduler_xhtml"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml">fabomatic::Tasks::Scheduler</a></div><div class="ttdoc">The schedule is in charge of running tasks in the right order based on their requested intervals.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00114">Tasks.hpp:115</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_scheduler_xhtml_a0619cf06b6427ba332296ffcceffcb8c"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a0619cf06b6427ba332296ffcceffcb8c">fabomatic::Tasks::Scheduler::printStats</a></div><div class="ttdeci">auto printStats() const -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00040">Tasks.cpp:40</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_scheduler_xhtml_a203784237087f7f1b0b77c15bcdb85f9"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a203784237087f7f1b0b77c15bcdb85f9">fabomatic::Tasks::Scheduler::taskCount</a></div><div class="ttdeci">auto taskCount() const -&gt; size_t</div><div class="ttdoc">Gets the number of tasks in the scheduler.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00105">Tasks.cpp:105</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_scheduler_xhtml_a2acce29901dbfd56a0f49beb277e3e76"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a2acce29901dbfd56a0f49beb277e3e76">fabomatic::Tasks::Scheduler::updateSchedules</a></div><div class="ttdeci">auto updateSchedules() const -&gt; void</div><div class="ttdoc">Recompute all the next run times for all the tasks.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00032">Tasks.cpp:32</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_scheduler_xhtml_a701e971506199db303a90f2515dd6169"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a701e971506199db303a90f2515dd6169">fabomatic::Tasks::Scheduler::getTasks</a></div><div class="ttdeci">auto getTasks() const -&gt; const std::vector&lt; Task * &gt;</div><div class="ttdoc">Get a copy vector of task pointers.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00110">Tasks.cpp:110</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_scheduler_xhtml_a8d19a5ae935d924c4c145ed07721e5db"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a8d19a5ae935d924c4c145ed07721e5db">fabomatic::Tasks::Scheduler::addTask</a></div><div class="ttdeci">auto addTask(Task *task) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00018">Tasks.cpp:18</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_scheduler_xhtml_ac20ffce827e83acedd4181876e99b569"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#ac20ffce827e83acedd4181876e99b569">fabomatic::Tasks::Scheduler::tasks</a></div><div class="ttdeci">std::vector&lt; Task * &gt; tasks</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00135">Tasks.hpp:135</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_scheduler_xhtml_ae1280eccd0bc57ff7fbc92ab54b54769"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#ae1280eccd0bc57ff7fbc92ab54b54769">fabomatic::Tasks::Scheduler::removeTask</a></div><div class="ttdeci">auto removeTask(const Task *task) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00024">Tasks.cpp:24</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_scheduler_xhtml_aff9b0c44cc0bef222932a681ace0d406"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#aff9b0c44cc0bef222932a681ace0d406">fabomatic::Tasks::Scheduler::execute</a></div><div class="ttdeci">auto execute() -&gt; void</div><div class="ttdoc">Execute all tasks that are ready to run.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00083">Tasks.cpp:83</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml">fabomatic::Tasks::Task</a></div><div class="ttdoc">A task class which represents a function to be called at requested intervals.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00023">Tasks.hpp:24</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a033906c8fc5c8d929c4336d4ed988207"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a033906c8fc5c8d929c4336d4ed988207">fabomatic::Tasks::Task::total_runtime</a></div><div class="ttdeci">milliseconds total_runtime</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00108">Tasks.hpp:108</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a10175ec4fc2f54f444850b01426c95f7"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a10175ec4fc2f54f444850b01426c95f7">fabomatic::Tasks::Task::disable</a></div><div class="ttdeci">auto disable() -&gt; void</div><div class="ttdoc">Prevent the task from running again.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00182">Tasks.cpp:182</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a1488d6b3730de3f77a52ce6bee56fdd8"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a1488d6b3730de3f77a52ce6bee56fdd8">fabomatic::Tasks::Task::updateSchedule</a></div><div class="ttdeci">auto updateSchedule() -&gt; void</div><div class="ttdoc">recompute the next run time (now + delay) and allows the task to run again</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00194">Tasks.cpp:194</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a195917ecd47b52f9e924a220cbd812e5"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a195917ecd47b52f9e924a220cbd812e5">fabomatic::Tasks::Task::active</a></div><div class="ttdeci">bool active</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00101">Tasks.hpp:101</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a1963aeb170d8cbdd22e8ac5d1f906c91"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a1963aeb170d8cbdd22e8ac5d1f906c91">fabomatic::Tasks::Task::Task</a></div><div class="ttdeci">Task()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a2b247d96f354eb1cfaa02c9cad06add2"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a2b247d96f354eb1cfaa02c9cad06add2">fabomatic::Tasks::Task::getRunCounter</a></div><div class="ttdeci">auto getRunCounter() const -&gt; unsigned long</div><div class="ttdoc">Gets the number of times the task has been run.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00239">Tasks.cpp:239</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a46a71ed2fe769cbf21bd093c3452a5a8"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a46a71ed2fe769cbf21bd093c3452a5a8">fabomatic::Tasks::Task::average_tardiness</a></div><div class="ttdeci">milliseconds average_tardiness</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00107">Tasks.hpp:107</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a548c0b4cdf3458bd64031fbbd1637927"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a548c0b4cdf3458bd64031fbbd1637927">fabomatic::Tasks::Task::setPeriod</a></div><div class="ttdeci">auto setPeriod(milliseconds new_period) -&gt; void</div><div class="ttdoc">Change the task period.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00200">Tasks.cpp:200</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a5521c3886fbc2cc540fb3809f03945a2"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a5521c3886fbc2cc540fb3809f03945a2">fabomatic::Tasks::Task::setDelay</a></div><div class="ttdeci">auto setDelay(milliseconds new_delay) -&gt; void</div><div class="ttdoc">Change the task initial delay.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00249">Tasks.cpp:249</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a5d0719a73c835b75b37d0fc77559c7cc"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a5d0719a73c835b75b37d0fc77559c7cc">fabomatic::Tasks::Task::next_run</a></div><div class="ttdeci">std::chrono::steady_clock::time_point next_run</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00106">Tasks.hpp:106</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a80954c03ce29f1c2a3c938593c43c632"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a80954c03ce29f1c2a3c938593c43c632">fabomatic::Tasks::Task::getDelay</a></div><div class="ttdeci">auto getDelay() const -&gt; const milliseconds</div><div class="ttdoc">Get the initial delay before the task is run at given period.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00244">Tasks.cpp:244</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a819de0c8e46486621657e107b9101ef8"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a819de0c8e46486621657e107b9101ef8">fabomatic::Tasks::Task::id</a></div><div class="ttdeci">const std::string id</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00102">Tasks.hpp:102</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a8ed7793f31565370d833323b37f43903"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">fabomatic::Tasks::Task::period</a></div><div class="ttdeci">milliseconds period</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00103">Tasks.hpp:103</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a8f2df2426609b7be592ab3485d9d26ed"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8f2df2426609b7be592ab3485d9d26ed">fabomatic::Tasks::Task::isActive</a></div><div class="ttdeci">auto isActive() const -&gt; bool</div><div class="ttdoc">Status of the task.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00210">Tasks.cpp:210</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a926ed81ebde9e7b9405fde1843c0c343"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a926ed81ebde9e7b9405fde1843c0c343">fabomatic::Tasks::Task::getTotalRuntime</a></div><div class="ttdeci">auto getTotalRuntime() const -&gt; const milliseconds</div><div class="ttdoc">Gets the total execution time of the task. Useful to spot slowest tasks.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00254">Tasks.cpp:254</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a99cc265d0538495367b3d4d949bccc20"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a99cc265d0538495367b3d4d949bccc20">fabomatic::Tasks::Task::last_run</a></div><div class="ttdeci">std::chrono::steady_clock::time_point last_run</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00105">Tasks.hpp:105</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a99da0e6d8fe7677e0faaab98995353ba"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a99da0e6d8fe7677e0faaab98995353ba">fabomatic::Tasks::Task::getId</a></div><div class="ttdeci">auto getId() const -&gt; const std::string</div><div class="ttdoc">Get the Task Identifier.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00225">Tasks.cpp:225</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a9a1a85dc5747fdc56c3f7470eeaebff0"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a9a1a85dc5747fdc56c3f7470eeaebff0">fabomatic::Tasks::Task::toString</a></div><div class="ttdeci">auto toString() const -&gt; const std::string</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00138">Tasks.cpp:138</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_aa1341e5c2cb7516c9a41c84b64fd95ac"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#aa1341e5c2cb7516c9a41c84b64fd95ac">fabomatic::Tasks::Task::getNextRun</a></div><div class="ttdeci">auto getNextRun() const -&gt; const std::chrono::steady_clock::time_point</div><div class="ttdoc">When shall the task be run again.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00259">Tasks.cpp:259</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_aa3f970eab63a4ba06e92e49b23eaab45"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#aa3f970eab63a4ba06e92e49b23eaab45">fabomatic::Tasks::Task::enable</a></div><div class="ttdeci">auto enable() -&gt; void</div><div class="ttdoc">Allows the task to run again.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00187">Tasks.cpp:187</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_ac63191a702c898cda8af1ce8316bfb94"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#ac63191a702c898cda8af1ce8316bfb94">fabomatic::Tasks::Task::run</a></div><div class="ttdeci">auto run() -&gt; void</div><div class="ttdoc">Execute the task if active.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00152">Tasks.cpp:152</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_aca74ea0431e61fc3cf414f0425332ec0"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#aca74ea0431e61fc3cf414f0425332ec0">fabomatic::Tasks::Task::callback</a></div><div class="ttdeci">std::function&lt; void()&gt; callback</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00109">Tasks.hpp:109</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_ad00607f545e8f3440926c7dd833a9b27"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#ad00607f545e8f3440926c7dd833a9b27">fabomatic::Tasks::Task::getCallback</a></div><div class="ttdeci">auto getCallback() const -&gt; std::function&lt; void()&gt;</div><div class="ttdoc">Function to be called when task is run.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00220">Tasks.cpp:220</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_ad535eb5b2caf1ef2569b17ccc6bd96f2"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#ad535eb5b2caf1ef2569b17ccc6bd96f2">fabomatic::Tasks::Task::getPeriod</a></div><div class="ttdeci">auto getPeriod() const -&gt; const milliseconds</div><div class="ttdoc">Current period of the task.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00215">Tasks.cpp:215</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_adc90a9a7701e126e74796646be5f21bf"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#adc90a9a7701e126e74796646be5f21bf">fabomatic::Tasks::Task::run_counter</a></div><div class="ttdeci">unsigned long run_counter</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00110">Tasks.hpp:110</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_aef6894044873a74c1bda3308531f1b95"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#aef6894044873a74c1bda3308531f1b95">fabomatic::Tasks::Task::setCallback</a></div><div class="ttdeci">auto setCallback(std::function&lt; void()&gt; new_callback) -&gt; void</div><div class="ttdoc">Change the callback function.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00205">Tasks.cpp:205</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_af9c1491f7c542d6c096e5e32b096202b"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#af9c1491f7c542d6c096e5e32b096202b">fabomatic::Tasks::Task::getAvgTardiness</a></div><div class="ttdeci">auto getAvgTardiness() const -&gt; const milliseconds</div><div class="ttdoc">Get the average tardiness, i.e. the average period between scheduled start and actual start of execut...</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00230">Tasks.cpp:230</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_afcd445681f5c92b55b601aff90f41f05"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#afcd445681f5c92b55b601aff90f41f05">fabomatic::Tasks::Task::delay</a></div><div class="ttdeci">milliseconds delay</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00104">Tasks.hpp:104</a></div></div>
<div class="ttc" id="aconf_8hpp_xhtml"><div class="ttname"><a href="conf_8hpp.xhtml">conf.hpp</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_tasks_xhtml"><div class="ttname"><a href="namespacefabomatic_1_1_tasks.xhtml">fabomatic::Tasks</a></div><div class="ttdoc">This namespace contains the classes that implement a cooperative task scheduler.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00012">Tasks.cpp:13</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_tasks_xhtml_a5c20f560f5934822d39ba116a16f3ab6"><div class="ttname"><a href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">fabomatic::Tasks::delay</a></div><div class="ttdeci">auto delay(const milliseconds duration) -&gt; void</div><div class="ttdoc">Wait for a delay, allowing OTA updates.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00266">Tasks.cpp:266</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_tasks_xhtml_aad4a932b189725b84a436888d9da5dc8"><div class="ttname"><a href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">fabomatic::Tasks::arduinoNow</a></div><div class="ttdeci">auto arduinoNow() -&gt; const std::chrono::steady_clock::time_point</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00015">Tasks.hpp:15</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_tasks_xhtml_adce365a8c09b42bfd5381ecf6eef8cad"><div class="ttname"><a href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">fabomatic::Tasks::milliseconds</a></div><div class="ttdeci">std::chrono::milliseconds milliseconds</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00014">Tasks.cpp:14</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1debug_xhtml_a8308799abba9b76406a8653548369967"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1debug.xhtml#a8308799abba9b76406a8653548369967">fabomatic::conf::debug::ENABLE_TASK_LOGS</a></div><div class="ttdeci">static constexpr bool ENABLE_TASK_LOGS</div><div class="ttdoc">True to add many logs regarding tasks scheduling and statistics.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00082">conf.hpp:82</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jul 14 2024 13:49:34 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
