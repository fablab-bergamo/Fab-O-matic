<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: fabomatic::BoardLogic Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacefabomatic.xhtml">fabomatic</a></li><li class="navelem"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">BoardLogic</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classfabomatic_1_1_board_logic-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">fabomatic::BoardLogic Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Main class implementing the state changes.  
 <a href="classfabomatic_1_1_board_logic.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_board_logic_8hpp_source.xhtml">BoardLogic.hpp</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for fabomatic::BoardLogic:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a3885e1cd078bb49bbf54e3ddfe245ef0" id="r_a3885e1cd078bb49bbf54e3ddfe245ef0"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0">Status</a> : uint8_t { <br />
&#160;&#160;<a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0adc30bc0c7914db5918da4263fce93ad2">Clear</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a276dffa823d39fc437cea5e3fd7706ea">MachineFree</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0afebcd1edf6010db4858e623d1dd2f3bc">LoggedIn</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a317613b2a5acaaa53519c44526a11859">LoginDenied</a>
, <br />
&#160;&#160;<a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ad8a942ef2b04672adfafef0ad817a407">Busy</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae27816978dfe5f0f3acd72cee314955f">LoggedOut</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae321c53b354930ba96f0243e652df458">Connecting</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a2ec0d16e4ca169baedb9b2d50ec5c6d7">Connected</a>
, <br />
&#160;&#160;<a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a6d3cb253e5f0cfa98184c8509beafcf0">AlreadyInUse</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a0bbe2b46fd8bc4ccf79f21530983518d">MachineInUse</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a8d9da4bc0e49a50e09ac9f7e56789d39">Offline</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0afa89fcc81e9dcfd52671c968fe4e6ddf">NotAllowed</a>
, <br />
&#160;&#160;<a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a5c02116895314194cd3ba79c0eb2cec4">Verifying</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0aac426b0c913ec5ba40bda964477b4896">MaintenanceNeeded</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0adbb4b0a2d8a60cbf820c75233ab84e18">MaintenanceQuery</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a92992e3855328c237975f2806f5b2194">MaintenanceDone</a>
, <br />
&#160;&#160;<a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a902b0d55fddef6f8d651fe1035b7d4bd">Error</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a1e50b02a42cd210ea7dc0ed55e79f9d6">ErrorHardware</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0aa358d35f0818b076115b29a0490253d7">PortalFailed</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a40d7d2e7b91cecc73800e47accd25ca8">PortalSuccess</a>
, <br />
&#160;&#160;<a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a0df4bdde6ecbaa556250a62412817982">PortalStarting</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ad31181c15b9b2bfe52e84052376b0c04">Booting</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a075d9c9ae8c8f1c79c1a1965cd8c5a42">ShuttingDown</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a195c01d301a592904e026b829f658f4b">OTAStarting</a>
, <br />
&#160;&#160;<a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae8d0fe00091000284822d7216b46b6cf">FactoryDefaults</a>
, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ac4a6488a561c0261f9b01e69f2324899">OTAError</a>
<br />
 }</td></tr>
<tr class="memdesc:a3885e1cd078bb49bbf54e3ddfe245ef0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Main states of the board.  <a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0">More...</a><br /></td></tr>
<tr class="separator:a3885e1cd078bb49bbf54e3ddfe245ef0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:afeeeeda3f3ab56b61e6deae48d6d4e67" id="r_afeeeeda3f3ab56b61e6deae48d6d4e67"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#afeeeeda3f3ab56b61e6deae48d6d4e67">BoardLogic</a> ()=default</td></tr>
<tr class="separator:afeeeeda3f3ab56b61e6deae48d6d4e67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0d3d3aa742eba1ffd00b97868ce7edc" id="r_aa0d3d3aa742eba1ffd00b97868ce7edc"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#aa0d3d3aa742eba1ffd00b97868ce7edc">refreshFromServer</a> () -&gt; void</td></tr>
<tr class="memdesc:aa0d3d3aa742eba1ffd00b97868ce7edc"><td class="mdescLeft">&#160;</td><td class="mdescRight">connects and polls the server for up-to-date machine information  <br /></td></tr>
<tr class="separator:aa0d3d3aa742eba1ffd00b97868ce7edc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a983c8de8b9c8881fc0a4e60dddc7f0c6" id="r_a983c8de8b9c8881fc0a4e60dddc7f0c6"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a983c8de8b9c8881fc0a4e60dddc7f0c6">onNewCard</a> (<a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> uid) -&gt; void</td></tr>
<tr class="memdesc:a983c8de8b9c8881fc0a4e60dddc7f0c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when a RFID tag has been detected.  <br /></td></tr>
<tr class="separator:a983c8de8b9c8881fc0a4e60dddc7f0c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98a15cc323f97adc394c29e897afc12d" id="r_a98a15cc323f97adc394c29e897afc12d"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a98a15cc323f97adc394c29e897afc12d">logout</a> () -&gt; void</td></tr>
<tr class="memdesc:a98a15cc323f97adc394c29e897afc12d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the current machine user and changes the status to LoggedOut.  <br /></td></tr>
<tr class="separator:a98a15cc323f97adc394c29e897afc12d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c38d7a3ed7952c6d6297efdf50ea4dd" id="r_a3c38d7a3ed7952c6d6297efdf50ea4dd"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a> (<a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0">Status</a> newStatus) -&gt; void</td></tr>
<tr class="memdesc:a3c38d7a3ed7952c6d6297efdf50ea4dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the board in the state given.  <br /></td></tr>
<tr class="separator:a3c38d7a3ed7952c6d6297efdf50ea4dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47b4d515c0d3488eceb49769036bce8b" id="r_a47b4d515c0d3488eceb49769036bce8b"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a47b4d515c0d3488eceb49769036bce8b">updateLCD</a> () const -&gt; void</td></tr>
<tr class="memdesc:a47b4d515c0d3488eceb49769036bce8b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates the LCD screen as per the current status.  <br /></td></tr>
<tr class="separator:a47b4d515c0d3488eceb49769036bce8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e0c35d138333907cc217c9e141091cd" id="r_a8e0c35d138333907cc217c9e141091cd"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a8e0c35d138333907cc217c9e141091cd">beepOk</a> () const -&gt; void</td></tr>
<tr class="separator:a8e0c35d138333907cc217c9e141091cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac198a07d00fda36a527cd9db2d97efc1" id="r_ac198a07d00fda36a527cd9db2d97efc1"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#ac198a07d00fda36a527cd9db2d97efc1">beepFail</a> () const -&gt; void</td></tr>
<tr class="separator:ac198a07d00fda36a527cd9db2d97efc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad05b4db308773e56d866fe87d34022d9" id="r_ad05b4db308773e56d866fe87d34022d9"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#ad05b4db308773e56d866fe87d34022d9">blinkLed</a> (uint8_t r=0, uint8_t g=0, uint8_t b=0) -&gt; void</td></tr>
<tr class="memdesc:ad05b4db308773e56d866fe87d34022d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Blinks the LED.  <br /></td></tr>
<tr class="separator:ad05b4db308773e56d866fe87d34022d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25bdc3a49d850aa49f92faf951b68efb" id="r_a25bdc3a49d850aa49f92faf951b68efb"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a25bdc3a49d850aa49f92faf951b68efb">checkRfid</a> () -&gt; void</td></tr>
<tr class="memdesc:a25bdc3a49d850aa49f92faf951b68efb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if a new card is present.  <br /></td></tr>
<tr class="separator:a25bdc3a49d850aa49f92faf951b68efb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac05af486941c620c9494ba545dd83c3d" id="r_ac05af486941c620c9494ba545dd83c3d"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#ac05af486941c620c9494ba545dd83c3d">checkPowerOff</a> () -&gt; void</td></tr>
<tr class="memdesc:ac05af486941c620c9494ba545dd83c3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the machine must be powered off.  <br /></td></tr>
<tr class="separator:ac05af486941c620c9494ba545dd83c3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49df0c7440292476d25f1e76973cadb4" id="r_a49df0c7440292476d25f1e76973cadb4"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a49df0c7440292476d25f1e76973cadb4">setAutologoffDelay</a> (std::chrono::seconds delay) -&gt; void</td></tr>
<tr class="memdesc:a49df0c7440292476d25f1e76973cadb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the autologoff delay.  <br /></td></tr>
<tr class="separator:a49df0c7440292476d25f1e76973cadb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a548ef4e0beba3b67d85d7d80dbaf18" id="r_a9a548ef4e0beba3b67d85d7d80dbaf18"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a9a548ef4e0beba3b67d85d7d80dbaf18">setWhitelist</a> (<a class="el" href="namespacefabomatic.xhtml#a626fe6fe3dcf9b459c45e9f769f7b8e7">WhiteList</a> whitelist) -&gt; void</td></tr>
<tr class="separator:a9a548ef4e0beba3b67d85d7d80dbaf18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e96c827d26aa04175d58d34d3f74e71" id="r_a8e96c827d26aa04175d58d34d3f74e71"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a8e96c827d26aa04175d58d34d3f74e71">setRebootRequest</a> (bool request) -&gt; void</td></tr>
<tr class="separator:a8e96c827d26aa04175d58d34d3f74e71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e9fedd51e4895834a9ebea17cba4331" id="r_a3e9fedd51e4895834a9ebea17cba4331"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3e9fedd51e4895834a9ebea17cba4331">initBoard</a> () -&gt; bool</td></tr>
<tr class="memdesc:a3e9fedd51e4895834a9ebea17cba4331"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes LCD and RFID classes.  <br /></td></tr>
<tr class="separator:a3e9fedd51e4895834a9ebea17cba4331"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc1f2896666e6e9cfa789c22baa6a603" id="r_adc1f2896666e6e9cfa789c22baa6a603"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#adc1f2896666e6e9cfa789c22baa6a603">configure</a> (<a class="el" href="classfabomatic_1_1_base_r_f_i_d_wrapper.xhtml">BaseRFIDWrapper</a> &amp;<a class="el" href="classfabomatic_1_1_board_logic.xhtml#a610fd3a8610427084ee039424fbe2f24">rfid</a>, <a class="el" href="classfabomatic_1_1_l_c_d_wrapper.xhtml">LCDWrapper</a> &amp;<a class="el" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>) -&gt; bool</td></tr>
<tr class="memdesc:adc1f2896666e6e9cfa789c22baa6a603"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures the board with the given references.  <br /></td></tr>
<tr class="separator:adc1f2896666e6e9cfa789c22baa6a603"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4d15925f4f48caa25335db63aeab734" id="r_ad4d15925f4f48caa25335db63aeab734"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#ad4d15925f4f48caa25335db63aeab734">reconfigure</a> () -&gt; bool</td></tr>
<tr class="memdesc:ad4d15925f4f48caa25335db63aeab734"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures the board with the given references.  <br /></td></tr>
<tr class="separator:ad4d15925f4f48caa25335db63aeab734"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bf98b454f093c4a9da2109301532905" id="r_a7bf98b454f093c4a9da2109301532905"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a7bf98b454f093c4a9da2109301532905">saveRfidCache</a> () -&gt; bool</td></tr>
<tr class="separator:a7bf98b454f093c4a9da2109301532905"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17520059a761d7b76513724f8f56dc9c" id="r_a17520059a761d7b76513724f8f56dc9c"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">getStatus</a> () const -&gt; <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0">Status</a></td></tr>
<tr class="memdesc:a17520059a761d7b76513724f8f56dc9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current board status.  <br /></td></tr>
<tr class="separator:a17520059a761d7b76513724f8f56dc9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46fd65258102b559ca9599bd4d3c1fc1" id="r_a46fd65258102b559ca9599bd4d3c1fc1"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a46fd65258102b559ca9599bd4d3c1fc1">getRebootRequest</a> () const -&gt; bool</td></tr>
<tr class="separator:a46fd65258102b559ca9599bd4d3c1fc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2feade03b2a74a1998dcec282a8eacb" id="r_ac2feade03b2a74a1998dcec282a8eacb"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#ac2feade03b2a74a1998dcec282a8eacb">getServer</a> () -&gt; <a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp;</td></tr>
<tr class="separator:ac2feade03b2a74a1998dcec282a8eacb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8332053c1e3343652632bde1a81a9ff4" id="r_a8332053c1e3343652632bde1a81a9ff4"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a8332053c1e3343652632bde1a81a9ff4">getMachineForTesting</a> () -&gt; <a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a> &amp;</td></tr>
<tr class="memdesc:a8332053c1e3343652632bde1a81a9ff4"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns a modificable machine for testing only  <br /></td></tr>
<tr class="separator:a8332053c1e3343652632bde1a81a9ff4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1724172254d9262c6b1a61cf5de5cee0" id="r_a1724172254d9262c6b1a61cf5de5cee0"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a1724172254d9262c6b1a61cf5de5cee0">getBuzzerForTesting</a> () -&gt; <a class="el" href="classfabomatic_1_1_buzzer.xhtml">Buzzer</a> *</td></tr>
<tr class="memdesc:a1724172254d9262c6b1a61cf5de5cee0"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns a modificable machine for testing only  <br /></td></tr>
<tr class="separator:a1724172254d9262c6b1a61cf5de5cee0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a164e40105242d0b7c56c6b4f21155101" id="r_a164e40105242d0b7c56c6b4f21155101"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a> () const -&gt; const <a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a> &amp;</td></tr>
<tr class="memdesc:a164e40105242d0b7c56c6b4f21155101"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current machine.  <br /></td></tr>
<tr class="separator:a164e40105242d0b7c56c6b4f21155101"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51390e6bf10c4de427abd7f175a2e6a8" id="r_a51390e6bf10c4de427abd7f175a2e6a8"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a51390e6bf10c4de427abd7f175a2e6a8">authorize</a> (const <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> uid) -&gt; bool</td></tr>
<tr class="memdesc:a51390e6bf10c4de427abd7f175a2e6a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the card UID is valid, and tries to check the user in to the machine.  <br /></td></tr>
<tr class="separator:a51390e6bf10c4de427abd7f175a2e6a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5d244e806e8b17bb9171055001476f7" id="r_ab5d244e806e8b17bb9171055001476f7"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#ab5d244e806e8b17bb9171055001476f7">getHostname</a> () const -&gt; const std::string</td></tr>
<tr class="separator:ab5d244e806e8b17bb9171055001476f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c60d10e5e82f986b7b047d26f577e4c" id="r_a2c60d10e5e82f986b7b047d26f577e4c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">BoardLogic</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a2c60d10e5e82f986b7b047d26f577e4c">operator=</a> (const <a class="el" href="classfabomatic_1_1_board_logic.xhtml">BoardLogic</a> &amp;board)=delete</td></tr>
<tr class="separator:a2c60d10e5e82f986b7b047d26f577e4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad79cfe1a23cad36f57461f541738a8ac" id="r_ad79cfe1a23cad36f57461f541738a8ac"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#ad79cfe1a23cad36f57461f541738a8ac">BoardLogic</a> (const <a class="el" href="classfabomatic_1_1_board_logic.xhtml">BoardLogic</a> &amp;)=delete</td></tr>
<tr class="separator:ad79cfe1a23cad36f57461f541738a8ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab48b609734fe64dca562e217aad8246" id="r_aab48b609734fe64dca562e217aad8246"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#aab48b609734fe64dca562e217aad8246">BoardLogic</a> (<a class="el" href="classfabomatic_1_1_board_logic.xhtml">BoardLogic</a> &amp;&amp;)=default</td></tr>
<tr class="separator:aab48b609734fe64dca562e217aad8246"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7b70f563e50df2759cd5055c32b1d8a" id="r_ab7b70f563e50df2759cd5055c32b1d8a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">BoardLogic</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#ab7b70f563e50df2759cd5055c32b1d8a">operator=</a> (<a class="el" href="classfabomatic_1_1_board_logic.xhtml">BoardLogic</a> &amp;&amp;)=default</td></tr>
<tr class="separator:ab7b70f563e50df2759cd5055c32b1d8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a7b151fca2de8263b021b8b6f26e5d0ab" id="r_a7b151fca2de8263b021b8b6f26e5d0ab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_base_r_f_i_d_wrapper.xhtml">BaseRFIDWrapper</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a7b151fca2de8263b021b8b6f26e5d0ab">getRfid</a> () const</td></tr>
<tr class="separator:a7b151fca2de8263b021b8b6f26e5d0ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a462b4b6149ca7bf33b699eb3181c969f" id="r_a462b4b6149ca7bf33b699eb3181c969f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_l_c_d_wrapper.xhtml">LCDWrapper</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a462b4b6149ca7bf33b699eb3181c969f">getLcd</a> () const</td></tr>
<tr class="separator:a462b4b6149ca7bf33b699eb3181c969f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a420a0d05a91a02c27ad3b63a030738a0" id="r_a420a0d05a91a02c27ad3b63a030738a0"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a420a0d05a91a02c27ad3b63a030738a0">longTap</a> (const <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> card, const std::string &amp;short_prompt) const -&gt; bool</td></tr>
<tr class="memdesc:a420a0d05a91a02c27ad3b63a030738a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asks the user to keep the RFID tag on the reader as confirmation.  <br /></td></tr>
<tr class="separator:a420a0d05a91a02c27ad3b63a030738a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a64706a55ef40b2ba1578d6a78a37361e" id="r_a64706a55ef40b2ba1578d6a78a37361e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a64706a55ef40b2ba1578d6a78a37361e">status</a> {Status::Clear}</td></tr>
<tr class="separator:a64706a55ef40b2ba1578d6a78a37361e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c1219f3f6b27492b679ccb46c001513" id="r_a3c1219f3f6b27492b679ccb46c001513"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_led.xhtml">Led</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3c1219f3f6b27492b679ccb46c001513">led</a></td></tr>
<tr class="separator:a3c1219f3f6b27492b679ccb46c001513"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdb945dbd83a84d36f8127a3cf91f1f0" id="r_abdb945dbd83a84d36f8127a3cf91f1f0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#abdb945dbd83a84d36f8127a3cf91f1f0">server</a></td></tr>
<tr class="separator:abdb945dbd83a84d36f8127a3cf91f1f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a610fd3a8610427084ee039424fbe2f24" id="r_a610fd3a8610427084ee039424fbe2f24"><td class="memItemLeft" align="right" valign="top">std::optional&lt; std::reference_wrapper&lt; <a class="el" href="classfabomatic_1_1_base_r_f_i_d_wrapper.xhtml">BaseRFIDWrapper</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a610fd3a8610427084ee039424fbe2f24">rfid</a> {std::nullopt}</td></tr>
<tr class="separator:a610fd3a8610427084ee039424fbe2f24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8875de8e4bd5dce01b78477d980e0c42" id="r_a8875de8e4bd5dce01b78477d980e0c42"><td class="memItemLeft" align="right" valign="top">std::optional&lt; std::reference_wrapper&lt; <a class="el" href="classfabomatic_1_1_l_c_d_wrapper.xhtml">LCDWrapper</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a> {std::nullopt}</td></tr>
<tr class="separator:a8875de8e4bd5dce01b78477d980e0c42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a942b82f86ec363c7777f9fc2918e0f64" id="r_a942b82f86ec363c7777f9fc2918e0f64"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a942b82f86ec363c7777f9fc2918e0f64">ready_for_a_new_card</a> {true}</td></tr>
<tr class="separator:a942b82f86ec363c7777f9fc2918e0f64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bbd244d2c4ef4627ba78f4691be64ba" id="r_a0bbd244d2c4ef4627ba78f4691be64ba"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a0bbd244d2c4ef4627ba78f4691be64ba">led_status</a> {false}</td></tr>
<tr class="separator:a0bbd244d2c4ef4627ba78f4691be64ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca61a2fd110df34c29db94fc02e99174" id="r_aca61a2fd110df34c29db94fc02e99174"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a></td></tr>
<tr class="separator:aca61a2fd110df34c29db94fc02e99174"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0463643253d16620af0c40e0970b343" id="r_aa0463643253d16620af0c40e0970b343"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_auth_provider.xhtml">AuthProvider</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#aa0463643253d16620af0c40e0970b343">auth</a> {<a class="el" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#a83b3f579950d846c48fb7654ccef9e17">secrets::cards::whitelist</a>}</td></tr>
<tr class="separator:aa0463643253d16620af0c40e0970b343"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e08e14e6bc026b3a695b19fe0941e14" id="r_a8e08e14e6bc026b3a695b19fe0941e14"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a8e08e14e6bc026b3a695b19fe0941e14">rebootRequest</a> {false}</td></tr>
<tr class="separator:a8e08e14e6bc026b3a695b19fe0941e14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f4bd1de660b9868243e427e9fd9a32c" id="r_a4f4bd1de660b9868243e427e9fd9a32c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_buzzer.xhtml">Buzzer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a4f4bd1de660b9868243e427e9fd9a32c">buzzer</a></td></tr>
<tr class="separator:a4f4bd1de660b9868243e427e9fd9a32c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Main class implementing the state changes. </p>

<p class="definition">Definition at line <a class="el" href="_board_logic_8hpp_source.xhtml#l00019">19</a> of file <a class="el" href="_board_logic_8hpp_source.xhtml">BoardLogic.hpp</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a3885e1cd078bb49bbf54e3ddfe245ef0" name="a3885e1cd078bb49bbf54e3ddfe245ef0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3885e1cd078bb49bbf54e3ddfe245ef0">&#9670;&#160;</a></span>Status</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0">fabomatic::BoardLogic::Status</a> : uint8_t</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Main states of the board. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0adc30bc0c7914db5918da4263fce93ad2" name="a3885e1cd078bb49bbf54e3ddfe245ef0adc30bc0c7914db5918da4263fce93ad2"></a>Clear&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0a276dffa823d39fc437cea5e3fd7706ea" name="a3885e1cd078bb49bbf54e3ddfe245ef0a276dffa823d39fc437cea5e3fd7706ea"></a>MachineFree&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0afebcd1edf6010db4858e623d1dd2f3bc" name="a3885e1cd078bb49bbf54e3ddfe245ef0afebcd1edf6010db4858e623d1dd2f3bc"></a>LoggedIn&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0a317613b2a5acaaa53519c44526a11859" name="a3885e1cd078bb49bbf54e3ddfe245ef0a317613b2a5acaaa53519c44526a11859"></a>LoginDenied&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0ad8a942ef2b04672adfafef0ad817a407" name="a3885e1cd078bb49bbf54e3ddfe245ef0ad8a942ef2b04672adfafef0ad817a407"></a>Busy&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0ae27816978dfe5f0f3acd72cee314955f" name="a3885e1cd078bb49bbf54e3ddfe245ef0ae27816978dfe5f0f3acd72cee314955f"></a>LoggedOut&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0ae321c53b354930ba96f0243e652df458" name="a3885e1cd078bb49bbf54e3ddfe245ef0ae321c53b354930ba96f0243e652df458"></a>Connecting&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0a2ec0d16e4ca169baedb9b2d50ec5c6d7" name="a3885e1cd078bb49bbf54e3ddfe245ef0a2ec0d16e4ca169baedb9b2d50ec5c6d7"></a>Connected&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0a6d3cb253e5f0cfa98184c8509beafcf0" name="a3885e1cd078bb49bbf54e3ddfe245ef0a6d3cb253e5f0cfa98184c8509beafcf0"></a>AlreadyInUse&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0a0bbe2b46fd8bc4ccf79f21530983518d" name="a3885e1cd078bb49bbf54e3ddfe245ef0a0bbe2b46fd8bc4ccf79f21530983518d"></a>MachineInUse&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0a8d9da4bc0e49a50e09ac9f7e56789d39" name="a3885e1cd078bb49bbf54e3ddfe245ef0a8d9da4bc0e49a50e09ac9f7e56789d39"></a>Offline&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0afa89fcc81e9dcfd52671c968fe4e6ddf" name="a3885e1cd078bb49bbf54e3ddfe245ef0afa89fcc81e9dcfd52671c968fe4e6ddf"></a>NotAllowed&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0a5c02116895314194cd3ba79c0eb2cec4" name="a3885e1cd078bb49bbf54e3ddfe245ef0a5c02116895314194cd3ba79c0eb2cec4"></a>Verifying&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0aac426b0c913ec5ba40bda964477b4896" name="a3885e1cd078bb49bbf54e3ddfe245ef0aac426b0c913ec5ba40bda964477b4896"></a>MaintenanceNeeded&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0adbb4b0a2d8a60cbf820c75233ab84e18" name="a3885e1cd078bb49bbf54e3ddfe245ef0adbb4b0a2d8a60cbf820c75233ab84e18"></a>MaintenanceQuery&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0a92992e3855328c237975f2806f5b2194" name="a3885e1cd078bb49bbf54e3ddfe245ef0a92992e3855328c237975f2806f5b2194"></a>MaintenanceDone&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0a902b0d55fddef6f8d651fe1035b7d4bd" name="a3885e1cd078bb49bbf54e3ddfe245ef0a902b0d55fddef6f8d651fe1035b7d4bd"></a>Error&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0a1e50b02a42cd210ea7dc0ed55e79f9d6" name="a3885e1cd078bb49bbf54e3ddfe245ef0a1e50b02a42cd210ea7dc0ed55e79f9d6"></a>ErrorHardware&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0aa358d35f0818b076115b29a0490253d7" name="a3885e1cd078bb49bbf54e3ddfe245ef0aa358d35f0818b076115b29a0490253d7"></a>PortalFailed&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0a40d7d2e7b91cecc73800e47accd25ca8" name="a3885e1cd078bb49bbf54e3ddfe245ef0a40d7d2e7b91cecc73800e47accd25ca8"></a>PortalSuccess&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0a0df4bdde6ecbaa556250a62412817982" name="a3885e1cd078bb49bbf54e3ddfe245ef0a0df4bdde6ecbaa556250a62412817982"></a>PortalStarting&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0ad31181c15b9b2bfe52e84052376b0c04" name="a3885e1cd078bb49bbf54e3ddfe245ef0ad31181c15b9b2bfe52e84052376b0c04"></a>Booting&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0a075d9c9ae8c8f1c79c1a1965cd8c5a42" name="a3885e1cd078bb49bbf54e3ddfe245ef0a075d9c9ae8c8f1c79c1a1965cd8c5a42"></a>ShuttingDown&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0a195c01d301a592904e026b829f658f4b" name="a3885e1cd078bb49bbf54e3ddfe245ef0a195c01d301a592904e026b829f658f4b"></a>OTAStarting&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0ae8d0fe00091000284822d7216b46b6cf" name="a3885e1cd078bb49bbf54e3ddfe245ef0ae8d0fe00091000284822d7216b46b6cf"></a>FactoryDefaults&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3885e1cd078bb49bbf54e3ddfe245ef0ac4a6488a561c0261f9b01e69f2324899" name="a3885e1cd078bb49bbf54e3ddfe245ef0ac4a6488a561c0261f9b01e69f2324899"></a>OTAError&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="_board_logic_8hpp_source.xhtml#l00023">23</a> of file <a class="el" href="_board_logic_8hpp_source.xhtml">BoardLogic.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   24</span>    {</div>
<div class="line"><span class="lineno">   25</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0adc30bc0c7914db5918da4263fce93ad2">Clear</a>,</div>
<div class="line"><span class="lineno">   26</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a276dffa823d39fc437cea5e3fd7706ea">MachineFree</a>,</div>
<div class="line"><span class="lineno">   27</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0afebcd1edf6010db4858e623d1dd2f3bc">LoggedIn</a>,</div>
<div class="line"><span class="lineno">   28</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a317613b2a5acaaa53519c44526a11859">LoginDenied</a>,</div>
<div class="line"><span class="lineno">   29</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ad8a942ef2b04672adfafef0ad817a407">Busy</a>,</div>
<div class="line"><span class="lineno">   30</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae27816978dfe5f0f3acd72cee314955f">LoggedOut</a>,</div>
<div class="line"><span class="lineno">   31</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae321c53b354930ba96f0243e652df458">Connecting</a>,</div>
<div class="line"><span class="lineno">   32</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a2ec0d16e4ca169baedb9b2d50ec5c6d7">Connected</a>,</div>
<div class="line"><span class="lineno">   33</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a6d3cb253e5f0cfa98184c8509beafcf0">AlreadyInUse</a>,</div>
<div class="line"><span class="lineno">   34</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a0bbe2b46fd8bc4ccf79f21530983518d">MachineInUse</a>,</div>
<div class="line"><span class="lineno">   35</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a8d9da4bc0e49a50e09ac9f7e56789d39">Offline</a>,</div>
<div class="line"><span class="lineno">   36</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0afa89fcc81e9dcfd52671c968fe4e6ddf">NotAllowed</a>,</div>
<div class="line"><span class="lineno">   37</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a5c02116895314194cd3ba79c0eb2cec4">Verifying</a>,</div>
<div class="line"><span class="lineno">   38</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0aac426b0c913ec5ba40bda964477b4896">MaintenanceNeeded</a>,</div>
<div class="line"><span class="lineno">   39</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0adbb4b0a2d8a60cbf820c75233ab84e18">MaintenanceQuery</a>,</div>
<div class="line"><span class="lineno">   40</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a92992e3855328c237975f2806f5b2194">MaintenanceDone</a>,</div>
<div class="line"><span class="lineno">   41</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a902b0d55fddef6f8d651fe1035b7d4bd">Error</a>,</div>
<div class="line"><span class="lineno">   42</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a1e50b02a42cd210ea7dc0ed55e79f9d6">ErrorHardware</a>,</div>
<div class="line"><span class="lineno">   43</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0aa358d35f0818b076115b29a0490253d7">PortalFailed</a>,</div>
<div class="line"><span class="lineno">   44</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a40d7d2e7b91cecc73800e47accd25ca8">PortalSuccess</a>,</div>
<div class="line"><span class="lineno">   45</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a0df4bdde6ecbaa556250a62412817982">PortalStarting</a>,</div>
<div class="line"><span class="lineno">   46</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ad31181c15b9b2bfe52e84052376b0c04">Booting</a>,</div>
<div class="line"><span class="lineno">   47</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a075d9c9ae8c8f1c79c1a1965cd8c5a42">ShuttingDown</a>,</div>
<div class="line"><span class="lineno">   48</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a195c01d301a592904e026b829f658f4b">OTAStarting</a>,</div>
<div class="line"><span class="lineno">   49</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae8d0fe00091000284822d7216b46b6cf">FactoryDefaults</a>,</div>
<div class="line"><span class="lineno">   50</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ac4a6488a561c0261f9b01e69f2324899">OTAError</a>,</div>
<div class="line"><span class="lineno">   51</span>    };</div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a075d9c9ae8c8f1c79c1a1965cd8c5a42"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a075d9c9ae8c8f1c79c1a1965cd8c5a42">fabomatic::BoardLogic::Status::ShuttingDown</a></div><div class="ttdeci">@ ShuttingDown</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a0bbe2b46fd8bc4ccf79f21530983518d"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a0bbe2b46fd8bc4ccf79f21530983518d">fabomatic::BoardLogic::Status::MachineInUse</a></div><div class="ttdeci">@ MachineInUse</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a0df4bdde6ecbaa556250a62412817982"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a0df4bdde6ecbaa556250a62412817982">fabomatic::BoardLogic::Status::PortalStarting</a></div><div class="ttdeci">@ PortalStarting</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a195c01d301a592904e026b829f658f4b"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a195c01d301a592904e026b829f658f4b">fabomatic::BoardLogic::Status::OTAStarting</a></div><div class="ttdeci">@ OTAStarting</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a1e50b02a42cd210ea7dc0ed55e79f9d6"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a1e50b02a42cd210ea7dc0ed55e79f9d6">fabomatic::BoardLogic::Status::ErrorHardware</a></div><div class="ttdeci">@ ErrorHardware</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a276dffa823d39fc437cea5e3fd7706ea"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a276dffa823d39fc437cea5e3fd7706ea">fabomatic::BoardLogic::Status::MachineFree</a></div><div class="ttdeci">@ MachineFree</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a2ec0d16e4ca169baedb9b2d50ec5c6d7"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a2ec0d16e4ca169baedb9b2d50ec5c6d7">fabomatic::BoardLogic::Status::Connected</a></div><div class="ttdeci">@ Connected</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a317613b2a5acaaa53519c44526a11859"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a317613b2a5acaaa53519c44526a11859">fabomatic::BoardLogic::Status::LoginDenied</a></div><div class="ttdeci">@ LoginDenied</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a40d7d2e7b91cecc73800e47accd25ca8"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a40d7d2e7b91cecc73800e47accd25ca8">fabomatic::BoardLogic::Status::PortalSuccess</a></div><div class="ttdeci">@ PortalSuccess</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a5c02116895314194cd3ba79c0eb2cec4"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a5c02116895314194cd3ba79c0eb2cec4">fabomatic::BoardLogic::Status::Verifying</a></div><div class="ttdeci">@ Verifying</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a6d3cb253e5f0cfa98184c8509beafcf0"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a6d3cb253e5f0cfa98184c8509beafcf0">fabomatic::BoardLogic::Status::AlreadyInUse</a></div><div class="ttdeci">@ AlreadyInUse</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a8d9da4bc0e49a50e09ac9f7e56789d39"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a8d9da4bc0e49a50e09ac9f7e56789d39">fabomatic::BoardLogic::Status::Offline</a></div><div class="ttdeci">@ Offline</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a902b0d55fddef6f8d651fe1035b7d4bd"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a902b0d55fddef6f8d651fe1035b7d4bd">fabomatic::BoardLogic::Status::Error</a></div><div class="ttdeci">@ Error</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a92992e3855328c237975f2806f5b2194"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a92992e3855328c237975f2806f5b2194">fabomatic::BoardLogic::Status::MaintenanceDone</a></div><div class="ttdeci">@ MaintenanceDone</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0aa358d35f0818b076115b29a0490253d7"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0aa358d35f0818b076115b29a0490253d7">fabomatic::BoardLogic::Status::PortalFailed</a></div><div class="ttdeci">@ PortalFailed</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0aac426b0c913ec5ba40bda964477b4896"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0aac426b0c913ec5ba40bda964477b4896">fabomatic::BoardLogic::Status::MaintenanceNeeded</a></div><div class="ttdeci">@ MaintenanceNeeded</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0ac4a6488a561c0261f9b01e69f2324899"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ac4a6488a561c0261f9b01e69f2324899">fabomatic::BoardLogic::Status::OTAError</a></div><div class="ttdeci">@ OTAError</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0ad31181c15b9b2bfe52e84052376b0c04"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ad31181c15b9b2bfe52e84052376b0c04">fabomatic::BoardLogic::Status::Booting</a></div><div class="ttdeci">@ Booting</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0ad8a942ef2b04672adfafef0ad817a407"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ad8a942ef2b04672adfafef0ad817a407">fabomatic::BoardLogic::Status::Busy</a></div><div class="ttdeci">@ Busy</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0adbb4b0a2d8a60cbf820c75233ab84e18"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0adbb4b0a2d8a60cbf820c75233ab84e18">fabomatic::BoardLogic::Status::MaintenanceQuery</a></div><div class="ttdeci">@ MaintenanceQuery</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0adc30bc0c7914db5918da4263fce93ad2"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0adc30bc0c7914db5918da4263fce93ad2">fabomatic::BoardLogic::Status::Clear</a></div><div class="ttdeci">@ Clear</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0ae27816978dfe5f0f3acd72cee314955f"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae27816978dfe5f0f3acd72cee314955f">fabomatic::BoardLogic::Status::LoggedOut</a></div><div class="ttdeci">@ LoggedOut</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0ae321c53b354930ba96f0243e652df458"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae321c53b354930ba96f0243e652df458">fabomatic::BoardLogic::Status::Connecting</a></div><div class="ttdeci">@ Connecting</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0ae8d0fe00091000284822d7216b46b6cf"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae8d0fe00091000284822d7216b46b6cf">fabomatic::BoardLogic::Status::FactoryDefaults</a></div><div class="ttdeci">@ FactoryDefaults</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0afa89fcc81e9dcfd52671c968fe4e6ddf"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0afa89fcc81e9dcfd52671c968fe4e6ddf">fabomatic::BoardLogic::Status::NotAllowed</a></div><div class="ttdeci">@ NotAllowed</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0afebcd1edf6010db4858e623d1dd2f3bc"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0afebcd1edf6010db4858e623d1dd2f3bc">fabomatic::BoardLogic::Status::LoggedIn</a></div><div class="ttdeci">@ LoggedIn</div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="afeeeeda3f3ab56b61e6deae48d6d4e67" name="afeeeeda3f3ab56b61e6deae48d6d4e67"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afeeeeda3f3ab56b61e6deae48d6d4e67">&#9670;&#160;</a></span>BoardLogic() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">fabomatic::BoardLogic::BoardLogic </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad79cfe1a23cad36f57461f541738a8ac" name="ad79cfe1a23cad36f57461f541738a8ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad79cfe1a23cad36f57461f541738a8ac">&#9670;&#160;</a></span>BoardLogic() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">fabomatic::BoardLogic::BoardLogic </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfabomatic_1_1_board_logic.xhtml">BoardLogic</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aab48b609734fe64dca562e217aad8246" name="aab48b609734fe64dca562e217aad8246"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab48b609734fe64dca562e217aad8246">&#9670;&#160;</a></span>BoardLogic() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">fabomatic::BoardLogic::BoardLogic </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">BoardLogic</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a51390e6bf10c4de427abd7f175a2e6a8" name="a51390e6bf10c4de427abd7f175a2e6a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51390e6bf10c4de427abd7f175a2e6a8">&#9670;&#160;</a></span>authorize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::BoardLogic::authorize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a>&#160;</td>
          <td class="paramname"><em>uid</em></td><td>)</td>
          <td> -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the card UID is valid, and tries to check the user in to the machine. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uid</td><td>card uid </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the user is now logged on to the machine </dd></dl>

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00163">163</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  164</span>  {</div>
<div class="line"><span class="lineno">  165</span>    <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(Status::Verifying);</div>
<div class="line"><span class="lineno">  166</span>    FabUser user;</div>
<div class="line"><span class="lineno">  167</span> </div>
<div class="line"><span class="lineno">  168</span>    user.authenticated = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  169</span>    user.holder_name = <span class="stringliteral">&quot;?&quot;</span>;</div>
<div class="line"><span class="lineno">  170</span>    user.card_uid = uid;</div>
<div class="line"><span class="lineno">  171</span>    user.user_level = <a class="code hl_enumvalue" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">FabUser::UserLevel::Unknown</a>;</div>
<div class="line"><span class="lineno">  172</span> </div>
<div class="line"><span class="lineno">  173</span>    <span class="keyword">const</span> <span class="keyword">auto</span> response = <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aa0463643253d16620af0c40e0970b343">auth</a>.<a class="code hl_function" href="classfabomatic_1_1_auth_provider.xhtml#aeae9923535dcf6cfa9eaf9e5f90e5e64">tryLogin</a>(uid, <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#abdb945dbd83a84d36f8127a3cf91f1f0">server</a>);</div>
<div class="line"><span class="lineno">  174</span>    <span class="keywordflow">if</span> (!response.has_value() || response.value().user_level == <a class="code hl_enumvalue" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">FabUser::UserLevel::Unknown</a>)</div>
<div class="line"><span class="lineno">  175</span>    {</div>
<div class="line"><span class="lineno">  176</span>      ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failed login for %s&quot;</span>, <a class="code hl_function" href="namespacefabomatic_1_1card.xhtml#aef091ec171625c69f9d4eab20ebaefec">card::uid_str</a>(uid).c_str());</div>
<div class="line"><span class="lineno">  177</span>      <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(Status::LoginDenied);</div>
<div class="line"><span class="lineno">  178</span>      <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac198a07d00fda36a527cd9db2d97efc1">beepFail</a>();</div>
<div class="line"><span class="lineno">  179</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  180</span>    }</div>
<div class="line"><span class="lineno">  181</span> </div>
<div class="line"><span class="lineno">  182</span>    user = response.value();</div>
<div class="line"><span class="lineno">  183</span> </div>
<div class="line"><span class="lineno">  184</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a4b40dcb31af466acc85f66c845516c82">isAllowed</a>())</div>
<div class="line"><span class="lineno">  185</span>    {</div>
<div class="line"><span class="lineno">  186</span>      ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Login refused due to machine not allowed&quot;</span>);</div>
<div class="line"><span class="lineno">  187</span>      <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(Status::NotAllowed);</div>
<div class="line"><span class="lineno">  188</span>      <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac198a07d00fda36a527cd9db2d97efc1">beepFail</a>();</div>
<div class="line"><span class="lineno">  189</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  190</span>    }</div>
<div class="line"><span class="lineno">  191</span> </div>
<div class="line"><span class="lineno">  192</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a34b0deb04494137cf321e94d50dedf90">isMaintenanceNeeded</a>())</div>
<div class="line"><span class="lineno">  193</span>    {</div>
<div class="line"><span class="lineno">  194</span>      <span class="keywordflow">if</span> (<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1machine.xhtml#aace1e99c4eeed4ed913315a5650506af">conf::machine::MAINTENANCE_BLOCK</a> &amp;&amp;</div>
<div class="line"><span class="lineno">  195</span>          user.user_level &lt; <a class="code hl_enumvalue" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0aeb31774403dcfdbe9dc787299f16b014">FabUser::UserLevel::FabStaff</a>)</div>
<div class="line"><span class="lineno">  196</span>      {</div>
<div class="line"><span class="lineno">  197</span>        <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(Status::MaintenanceNeeded);</div>
<div class="line"><span class="lineno">  198</span>        <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac198a07d00fda36a527cd9db2d97efc1">beepFail</a>();</div>
<div class="line"><span class="lineno">  199</span>        <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1lcd.xhtml#a4ccf8844fd20c9c331edcca4bbaf231f">conf::lcd::SHORT_MESSAGE_DELAY</a>);</div>
<div class="line"><span class="lineno">  200</span>        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  201</span>      }</div>
<div class="line"><span class="lineno">  202</span>      <span class="keywordflow">if</span> (user.user_level &gt;= <a class="code hl_enumvalue" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0aeb31774403dcfdbe9dc787299f16b014">FabUser::UserLevel::FabStaff</a>)</div>
<div class="line"><span class="lineno">  203</span>      {</div>
<div class="line"><span class="lineno">  204</span>        <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a8e0c35d138333907cc217c9e141091cd">beepOk</a>();</div>
<div class="line"><span class="lineno">  205</span>        <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(Status::MaintenanceQuery);</div>
<div class="line"><span class="lineno">  206</span> </div>
<div class="line"><span class="lineno">  207</span>        <span class="keywordflow">if</span> (<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a420a0d05a91a02c27ad3b63a030738a0">longTap</a>(user.card_uid, strings::S_LONGTAP_PROMPT))</div>
<div class="line"><span class="lineno">  208</span>        {</div>
<div class="line"><span class="lineno">  209</span>          <span class="keyword">const</span> <span class="keyword">auto</span> maint_resp = <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#abdb945dbd83a84d36f8127a3cf91f1f0">server</a>.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#af7a551a8453d0cf00be4b64fb9e8e73d">registerMaintenance</a>(user.card_uid);</div>
<div class="line"><span class="lineno">  210</span>          <span class="keywordflow">if</span> (!maint_resp-&gt;request_ok)</div>
<div class="line"><span class="lineno">  211</span>          {</div>
<div class="line"><span class="lineno">  212</span>            <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac198a07d00fda36a527cd9db2d97efc1">beepFail</a>();</div>
<div class="line"><span class="lineno">  213</span>            <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(Status::Error);</div>
<div class="line"><span class="lineno">  214</span>            <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1lcd.xhtml#a4ccf8844fd20c9c331edcca4bbaf231f">conf::lcd::SHORT_MESSAGE_DELAY</a>);</div>
<div class="line"><span class="lineno">  215</span>            <span class="comment">// Allow bypass for admins</span></div>
<div class="line"><span class="lineno">  216</span>            <span class="keywordflow">if</span> (user.user_level == <a class="code hl_enumvalue" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a984985abe9a16abb92288aea3d45ebaa">FabUser::UserLevel::FabAdmin</a>)</div>
<div class="line"><span class="lineno">  217</span>            {</div>
<div class="line"><span class="lineno">  218</span>              <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a921c78777a6cb9f7fdb9780a8c1aa8c0">setMaintenanceNeeded</a>(<span class="keyword">false</span>);</div>
<div class="line"><span class="lineno">  219</span>            }</div>
<div class="line"><span class="lineno">  220</span>          }</div>
<div class="line"><span class="lineno">  221</span>          <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  222</span>          {</div>
<div class="line"><span class="lineno">  223</span>            <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(Status::MaintenanceDone);</div>
<div class="line"><span class="lineno">  224</span>            <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a921c78777a6cb9f7fdb9780a8c1aa8c0">setMaintenanceNeeded</a>(<span class="keyword">false</span>);</div>
<div class="line"><span class="lineno">  225</span>            <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a8e0c35d138333907cc217c9e141091cd">beepOk</a>();</div>
<div class="line"><span class="lineno">  226</span>            <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1lcd.xhtml#a4ccf8844fd20c9c331edcca4bbaf231f">conf::lcd::SHORT_MESSAGE_DELAY</a> * 2);</div>
<div class="line"><span class="lineno">  227</span>          }</div>
<div class="line"><span class="lineno">  228</span>          <span class="comment">// Proceed to log-on the staff member to the machine in all cases</span></div>
<div class="line"><span class="lineno">  229</span>        }</div>
<div class="line"><span class="lineno">  230</span>      }</div>
<div class="line"><span class="lineno">  231</span>    }</div>
<div class="line"><span class="lineno">  232</span> </div>
<div class="line"><span class="lineno">  233</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#ac0591da2ff437cd6c7cc91bd09b4dff7">login</a>(user))</div>
<div class="line"><span class="lineno">  234</span>    {</div>
<div class="line"><span class="lineno">  235</span>      <span class="keyword">const</span> <span class="keyword">auto</span> result = <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#abdb945dbd83a84d36f8127a3cf91f1f0">server</a>.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac034ce07a7967f9ecb3443904e0808da">startUse</a>(<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a39c30eaa242d5cc2ce784dbafeef87e8">getActiveUser</a>().card_uid);</div>
<div class="line"><span class="lineno">  236</span>      ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Login, result startUse: %d&quot;</span>, result-&gt;request_ok);</div>
<div class="line"><span class="lineno">  237</span>      <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(Status::LoggedIn);</div>
<div class="line"><span class="lineno">  238</span>      <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a8e0c35d138333907cc217c9e141091cd">beepOk</a>();</div>
<div class="line"><span class="lineno">  239</span>    }</div>
<div class="line"><span class="lineno">  240</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  241</span>    {</div>
<div class="line"><span class="lineno">  242</span>      <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(Status::NotAllowed);</div>
<div class="line"><span class="lineno">  243</span>      <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac198a07d00fda36a527cd9db2d97efc1">beepFail</a>();</div>
<div class="line"><span class="lineno">  244</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1lcd.xhtml#a4ccf8844fd20c9c331edcca4bbaf231f">conf::lcd::SHORT_MESSAGE_DELAY</a>);</div>
<div class="line"><span class="lineno">  245</span>    }</div>
<div class="line"><span class="lineno">  246</span> </div>
<div class="line"><span class="lineno">  247</span>    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  248</span>  }</div>
<div class="ttc" id="a_logging_8hpp_xhtml_a4ef5b5f197804a60836ab1e8907d8301"><div class="ttname"><a href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a></div><div class="ttdeci">static const char *const TAG</div><div class="ttdef"><b>Definition</b> <a href="_logging_8hpp_source.xhtml#l00006">Logging.hpp:6</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_auth_provider_xhtml_aeae9923535dcf6cfa9eaf9e5f90e5e64"><div class="ttname"><a href="classfabomatic_1_1_auth_provider.xhtml#aeae9923535dcf6cfa9eaf9e5f90e5e64">fabomatic::AuthProvider::tryLogin</a></div><div class="ttdeci">auto tryLogin(card::uid_t uid, FabBackend &amp;server) const -&gt; std::optional&lt; FabUser &gt;</div><div class="ttdoc">Verifies the card ID against the server (if available) or the whitelist.</div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8cpp_source.xhtml#l00054">AuthProvider.cpp:54</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3c38d7a3ed7952c6d6297efdf50ea4dd"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">fabomatic::BoardLogic::changeStatus</a></div><div class="ttdeci">auto changeStatus(Status newStatus) -&gt; void</div><div class="ttdoc">Sets the board in the state given.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00272">BoardLogic.cpp:272</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a420a0d05a91a02c27ad3b63a030738a0"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a420a0d05a91a02c27ad3b63a030738a0">fabomatic::BoardLogic::longTap</a></div><div class="ttdeci">auto longTap(const card::uid_t card, const std::string &amp;short_prompt) const -&gt; bool</div><div class="ttdoc">Asks the user to keep the RFID tag on the reader as confirmation.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00126">BoardLogic.cpp:126</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a8e0c35d138333907cc217c9e141091cd"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a8e0c35d138333907cc217c9e141091cd">fabomatic::BoardLogic::beepOk</a></div><div class="ttdeci">auto beepOk() const -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00444">BoardLogic.cpp:444</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_aa0463643253d16620af0c40e0970b343"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#aa0463643253d16620af0c40e0970b343">fabomatic::BoardLogic::auth</a></div><div class="ttdeci">AuthProvider auth</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8hpp_source.xhtml#l00102">BoardLogic.hpp:102</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_abdb945dbd83a84d36f8127a3cf91f1f0"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#abdb945dbd83a84d36f8127a3cf91f1f0">fabomatic::BoardLogic::server</a></div><div class="ttdeci">FabBackend server</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8hpp_source.xhtml#l00095">BoardLogic.hpp:95</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_ac198a07d00fda36a527cd9db2d97efc1"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#ac198a07d00fda36a527cd9db2d97efc1">fabomatic::BoardLogic::beepFail</a></div><div class="ttdeci">auto beepFail() const -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00449">BoardLogic.cpp:449</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_aca61a2fd110df34c29db94fc02e99174"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">fabomatic::BoardLogic::machine</a></div><div class="ttdeci">Machine machine</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8hpp_source.xhtml#l00101">BoardLogic.hpp:101</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ac034ce07a7967f9ecb3443904e0808da"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ac034ce07a7967f9ecb3443904e0808da">fabomatic::FabBackend::startUse</a></div><div class="ttdeci">auto startUse(const card::uid_t uid) -&gt; std::unique_ptr&lt; MQTT::SimpleResponse &gt;</div><div class="ttdoc">Registers the start of machine usage.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00528">FabBackend.cpp:528</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_af7a551a8453d0cf00be4b64fb9e8e73d"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#af7a551a8453d0cf00be4b64fb9e8e73d">fabomatic::FabBackend::registerMaintenance</a></div><div class="ttdeci">auto registerMaintenance(const card::uid_t maintainer) -&gt; std::unique_ptr&lt; MQTT::SimpleResponse &gt;</div><div class="ttdoc">Registers a maintenance action.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00563">FabBackend.cpp:563</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a34b0deb04494137cf321e94d50dedf90"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a34b0deb04494137cf321e94d50dedf90">fabomatic::Machine::isMaintenanceNeeded</a></div><div class="ttdeci">auto isMaintenanceNeeded() const -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00336">Machine.cpp:336</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a39c30eaa242d5cc2ce784dbafeef87e8"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a39c30eaa242d5cc2ce784dbafeef87e8">fabomatic::Machine::getActiveUser</a></div><div class="ttdeci">auto getActiveUser() const -&gt; FabUser</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00219">Machine.cpp:219</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a4b40dcb31af466acc85f66c845516c82"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a4b40dcb31af466acc85f66c845516c82">fabomatic::Machine::isAllowed</a></div><div class="ttdeci">auto isAllowed() const -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00326">Machine.cpp:326</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a921c78777a6cb9f7fdb9780a8c1aa8c0"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a921c78777a6cb9f7fdb9780a8c1aa8c0">fabomatic::Machine::setMaintenanceNeeded</a></div><div class="ttdeci">auto setMaintenanceNeeded(bool new_maintenance_needed) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00341">Machine.cpp:341</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_ac0591da2ff437cd6c7cc91bd09b4dff7"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#ac0591da2ff437cd6c7cc91bd09b4dff7">fabomatic::Machine::login</a></div><div class="ttdeci">auto login(const FabUser &amp;user) -&gt; bool</div><div class="ttdoc">Try to login the user and start the usage timer.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00064">Machine.cpp:64</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_tasks_xhtml_a5c20f560f5934822d39ba116a16f3ab6"><div class="ttname"><a href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">fabomatic::Tasks::delay</a></div><div class="ttdeci">auto delay(const milliseconds duration) -&gt; void</div><div class="ttdoc">Wait for a delay, allowing OTA updates.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00250">Tasks.cpp:250</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1card_xhtml_aef091ec171625c69f9d4eab20ebaefec"><div class="ttname"><a href="namespacefabomatic_1_1card.xhtml#aef091ec171625c69f9d4eab20ebaefec">fabomatic::card::uid_str</a></div><div class="ttdeci">auto uid_str(const card::uid_t uid) -&gt; const std::string</div><div class="ttdoc">Returns a string representation of the UID.</div><div class="ttdef"><b>Definition</b> <a href="card_8hpp_source.xhtml#l00022">card.hpp:22</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1lcd_xhtml_a4ccf8844fd20c9c331edcca4bbaf231f"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1lcd.xhtml#a4ccf8844fd20c9c331edcca4bbaf231f">fabomatic::conf::lcd::SHORT_MESSAGE_DELAY</a></div><div class="ttdeci">static constexpr auto SHORT_MESSAGE_DELAY</div><div class="ttdoc">How much time shall we wait for a short message on LCD for user.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00051">conf.hpp:51</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1machine_xhtml_aace1e99c4eeed4ed913315a5650506af"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1machine.xhtml#aace1e99c4eeed4ed913315a5650506af">fabomatic::conf::machine::MAINTENANCE_BLOCK</a></div><div class="ttdeci">static constexpr bool MAINTENANCE_BLOCK</div><div class="ttdoc">If true, machine needing maintenance will be blocked for normal users.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00068">conf.hpp:68</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_fab_user_xhtml_a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e"><div class="ttname"><a href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">fabomatic::FabUser::UserLevel::Unknown</a></div><div class="ttdeci">@ Unknown</div></div>
<div class="ttc" id="astructfabomatic_1_1_fab_user_xhtml_a75deeb54124600e0387550735c7a0ca0a984985abe9a16abb92288aea3d45ebaa"><div class="ttname"><a href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a984985abe9a16abb92288aea3d45ebaa">fabomatic::FabUser::UserLevel::FabAdmin</a></div><div class="ttdeci">@ FabAdmin</div></div>
<div class="ttc" id="astructfabomatic_1_1_fab_user_xhtml_a75deeb54124600e0387550735c7a0ca0aeb31774403dcfdbe9dc787299f16b014"><div class="ttname"><a href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0aeb31774403dcfdbe9dc787299f16b014">fabomatic::FabUser::UserLevel::FabStaff</a></div><div class="ttdeci">@ FabStaff</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8hpp_source.xhtml#l00102">auth</a>, <a class="el" href="_fab_user_8hpp_source.xhtml#l00027">fabomatic::FabUser::authenticated</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00449">beepFail()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00444">beepOk()</a>, <a class="el" href="_fab_user_8hpp_source.xhtml#l00025">fabomatic::FabUser::card_uid</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00272">changeStatus()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00250">fabomatic::Tasks::delay()</a>, <a class="el" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a984985abe9a16abb92288aea3d45ebaa">fabomatic::FabUser::FabAdmin</a>, <a class="el" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0aeb31774403dcfdbe9dc787299f16b014">fabomatic::FabUser::FabStaff</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00219">fabomatic::Machine::getActiveUser()</a>, <a class="el" href="_fab_user_8hpp_source.xhtml#l00026">fabomatic::FabUser::holder_name</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00326">fabomatic::Machine::isAllowed()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00336">fabomatic::Machine::isMaintenanceNeeded()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00064">fabomatic::Machine::login()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00126">longTap()</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00101">machine</a>, <a class="el" href="conf_8hpp_source.xhtml#l00068">fabomatic::conf::machine::MAINTENANCE_BLOCK</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00563">fabomatic::FabBackend::registerMaintenance()</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00095">server</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00341">fabomatic::Machine::setMaintenanceNeeded()</a>, <a class="el" href="conf_8hpp_source.xhtml#l00051">fabomatic::conf::lcd::SHORT_MESSAGE_DELAY</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00528">fabomatic::FabBackend::startUse()</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>, <a class="el" href="_auth_provider_8cpp_source.xhtml#l00054">fabomatic::AuthProvider::tryLogin()</a>, <a class="el" href="card_8hpp_source.xhtml#l00022">fabomatic::card::uid_str()</a>, <a class="el" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">fabomatic::FabUser::Unknown</a>, and <a class="el" href="_fab_user_8hpp_source.xhtml#l00028">fabomatic::FabUser::user_level</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00073">onNewCard()</a>, and <a class="el" href="test__logic_8cpp_source.xhtml#l00112">fabomatic::tests::test_whitelist_no_network()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a51390e6bf10c4de427abd7f175a2e6a8_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a51390e6bf10c4de427abd7f175a2e6a8_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ac198a07d00fda36a527cd9db2d97efc1" name="ac198a07d00fda36a527cd9db2d97efc1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac198a07d00fda36a527cd9db2d97efc1">&#9670;&#160;</a></span>beepFail()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::BoardLogic::beepFail </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00449">449</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  450</span>  {</div>
<div class="line"><span class="lineno">  451</span>    <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a4f4bd1de660b9868243e427e9fd9a32c">buzzer</a>.<a class="code hl_function" href="classfabomatic_1_1_buzzer.xhtml#a02e292870e840139082bb966cb6dd0b2">beepFail</a>();</div>
<div class="line"><span class="lineno">  452</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a4f4bd1de660b9868243e427e9fd9a32c"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a4f4bd1de660b9868243e427e9fd9a32c">fabomatic::BoardLogic::buzzer</a></div><div class="ttdeci">Buzzer buzzer</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8hpp_source.xhtml#l00108">BoardLogic.hpp:108</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buzzer_xhtml_a02e292870e840139082bb966cb6dd0b2"><div class="ttname"><a href="classfabomatic_1_1_buzzer.xhtml#a02e292870e840139082bb966cb6dd0b2">fabomatic::Buzzer::beepFail</a></div><div class="ttdeci">auto beepFail() const -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buzzer_8cpp_source.xhtml#l00027">Buzzer.cpp:27</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_buzzer_8cpp_source.xhtml#l00027">fabomatic::Buzzer::beepFail()</a>, and <a class="el" href="_board_logic_8hpp_source.xhtml#l00108">buzzer</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00163">authorize()</a>, <a class="el" href="main_8cpp_source.xhtml#l00411">setup()</a>, <a class="el" href="main_8cpp_source.xhtml#l00121">fabomatic::taskLogoffCheck()</a>, <a class="el" href="main_8cpp_source.xhtml#l00100">fabomatic::taskPoweroffWarning()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00070">fabomatic::tests::test_simple_methods()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00251">fabomatic::tests::test_taskVarious()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_ac198a07d00fda36a527cd9db2d97efc1_cgraph.svg" width="543" height="68"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_ac198a07d00fda36a527cd9db2d97efc1_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a8e0c35d138333907cc217c9e141091cd" name="a8e0c35d138333907cc217c9e141091cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e0c35d138333907cc217c9e141091cd">&#9670;&#160;</a></span>beepOk()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::BoardLogic::beepOk </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00444">444</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  445</span>  {</div>
<div class="line"><span class="lineno">  446</span>    <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a4f4bd1de660b9868243e427e9fd9a32c">buzzer</a>.<a class="code hl_function" href="classfabomatic_1_1_buzzer.xhtml#af732a4349a272129c2f5f1ce2522ffd5">beepOk</a>();</div>
<div class="line"><span class="lineno">  447</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_buzzer_xhtml_af732a4349a272129c2f5f1ce2522ffd5"><div class="ttname"><a href="classfabomatic_1_1_buzzer.xhtml#af732a4349a272129c2f5f1ce2522ffd5">fabomatic::Buzzer::beepOk</a></div><div class="ttdeci">auto beepOk() const -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buzzer_8cpp_source.xhtml#l00016">Buzzer.cpp:16</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_buzzer_8cpp_source.xhtml#l00016">fabomatic::Buzzer::beepOk()</a>, and <a class="el" href="_board_logic_8hpp_source.xhtml#l00108">buzzer</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00163">authorize()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00111">logout()</a>, <a class="el" href="main_8cpp_source.xhtml#l00411">setup()</a>, and <a class="el" href="test__logic_8cpp_source.xhtml#l00070">fabomatic::tests::test_simple_methods()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a8e0c35d138333907cc217c9e141091cd_cgraph.svg" width="543" height="68"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a8e0c35d138333907cc217c9e141091cd_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ad05b4db308773e56d866fe87d34022d9" name="ad05b4db308773e56d866fe87d34022d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad05b4db308773e56d866fe87d34022d9">&#9670;&#160;</a></span>blinkLed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::BoardLogic::blinkLed </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>r</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>g</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>b</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Blinks the LED. </p>

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00498">498</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  499</span>  {</div>
<div class="line"><span class="lineno">  500</span>    <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a3c1219f3f6b27492b679ccb46c001513">led</a>.<a class="code hl_function" href="classfabomatic_1_1_led.xhtml#ae7fd966ebaea3198dfe49b73e963e9cb">set</a>(Led::Status::Blinking);</div>
<div class="line"><span class="lineno">  501</span> </div>
<div class="line"><span class="lineno">  502</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#abdb945dbd83a84d36f8127a3cf91f1f0">server</a>.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>())</div>
<div class="line"><span class="lineno">  503</span>    {</div>
<div class="line"><span class="lineno">  504</span>      <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a4b40dcb31af466acc85f66c845516c82">isAllowed</a>() || <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a34b0deb04494137cf321e94d50dedf90">isMaintenanceNeeded</a>())</div>
<div class="line"><span class="lineno">  505</span>      {</div>
<div class="line"><span class="lineno">  506</span>        <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a3c1219f3f6b27492b679ccb46c001513">led</a>.<a class="code hl_function" href="classfabomatic_1_1_led.xhtml#afe933127b5e25e5972e3120bc276b599">setColor</a>(64, 0, 0); <span class="comment">// Red</span></div>
<div class="line"><span class="lineno">  507</span>      }</div>
<div class="line"><span class="lineno">  508</span>      <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  509</span>      {</div>
<div class="line"><span class="lineno">  510</span>        <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a74aa0b2cd34205ba57710affc56f5c3c">isFree</a>())</div>
<div class="line"><span class="lineno">  511</span>        {</div>
<div class="line"><span class="lineno">  512</span>          <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a871958cc57845c8651cf1058ed9b30e4">isShutdownImminent</a>())</div>
<div class="line"><span class="lineno">  513</span>          {</div>
<div class="line"><span class="lineno">  514</span>            <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a3c1219f3f6b27492b679ccb46c001513">led</a>.<a class="code hl_function" href="classfabomatic_1_1_led.xhtml#afe933127b5e25e5972e3120bc276b599">setColor</a>(64, 0, 64); <span class="comment">// Purple</span></div>
<div class="line"><span class="lineno">  515</span>          }</div>
<div class="line"><span class="lineno">  516</span>          <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  517</span>          {</div>
<div class="line"><span class="lineno">  518</span>            <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a3c1219f3f6b27492b679ccb46c001513">led</a>.<a class="code hl_function" href="classfabomatic_1_1_led.xhtml#afe933127b5e25e5972e3120bc276b599">setColor</a>(0, 64, 0); <span class="comment">// Green</span></div>
<div class="line"><span class="lineno">  519</span>          }</div>
<div class="line"><span class="lineno">  520</span>        }</div>
<div class="line"><span class="lineno">  521</span>        <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  522</span>        {</div>
<div class="line"><span class="lineno">  523</span>          <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a3c1219f3f6b27492b679ccb46c001513">led</a>.<a class="code hl_function" href="classfabomatic_1_1_led.xhtml#afe933127b5e25e5972e3120bc276b599">setColor</a>(0, 0, 64); <span class="comment">// Blue</span></div>
<div class="line"><span class="lineno">  524</span>        }</div>
<div class="line"><span class="lineno">  525</span>      }</div>
<div class="line"><span class="lineno">  526</span>    }</div>
<div class="line"><span class="lineno">  527</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  528</span>    {</div>
<div class="line"><span class="lineno">  529</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a3c1219f3f6b27492b679ccb46c001513">led</a>.<a class="code hl_function" href="classfabomatic_1_1_led.xhtml#afe933127b5e25e5972e3120bc276b599">setColor</a>(128, 255, 0); <span class="comment">// Orange</span></div>
<div class="line"><span class="lineno">  530</span>    }</div>
<div class="line"><span class="lineno">  531</span> </div>
<div class="line"><span class="lineno">  532</span>    <span class="comment">// User override</span></div>
<div class="line"><span class="lineno">  533</span>    <span class="keywordflow">if</span> (r != 0 || g != 0 || b != 0)</div>
<div class="line"><span class="lineno">  534</span>    {</div>
<div class="line"><span class="lineno">  535</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a3c1219f3f6b27492b679ccb46c001513">led</a>.<a class="code hl_function" href="classfabomatic_1_1_led.xhtml#afe933127b5e25e5972e3120bc276b599">setColor</a>(r, g, b);</div>
<div class="line"><span class="lineno">  536</span>    }</div>
<div class="line"><span class="lineno">  537</span> </div>
<div class="line"><span class="lineno">  538</span>    <span class="comment">// Color override</span></div>
<div class="line"><span class="lineno">  539</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a64706a55ef40b2ba1578d6a78a37361e">status</a> == Status::ErrorHardware || <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a64706a55ef40b2ba1578d6a78a37361e">status</a> == Status::Error)</div>
<div class="line"><span class="lineno">  540</span>    {</div>
<div class="line"><span class="lineno">  541</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a3c1219f3f6b27492b679ccb46c001513">led</a>.<a class="code hl_function" href="classfabomatic_1_1_led.xhtml#afe933127b5e25e5972e3120bc276b599">setColor</a>(255, 0, 0); <span class="comment">// Red</span></div>
<div class="line"><span class="lineno">  542</span>    }</div>
<div class="line"><span class="lineno">  543</span> </div>
<div class="line"><span class="lineno">  544</span>    <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a3c1219f3f6b27492b679ccb46c001513">led</a>.<a class="code hl_function" href="classfabomatic_1_1_led.xhtml#a959b8bbb2fe1acb5cbffba251bcb8c4c">update</a>();</div>
<div class="line"><span class="lineno">  545</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3c1219f3f6b27492b679ccb46c001513"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3c1219f3f6b27492b679ccb46c001513">fabomatic::BoardLogic::led</a></div><div class="ttdeci">Led led</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8hpp_source.xhtml#l00094">BoardLogic.hpp:94</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a64706a55ef40b2ba1578d6a78a37361e"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a64706a55ef40b2ba1578d6a78a37361e">fabomatic::BoardLogic::status</a></div><div class="ttdeci">Status status</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8hpp_source.xhtml#l00093">BoardLogic.hpp:93</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_aef092e0e1db0c3539d5474fad2456255"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">fabomatic::FabBackend::isOnline</a></div><div class="ttdeci">auto isOnline() const -&gt; bool</div><div class="ttdoc">Checks if the client is online.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00235">FabBackend.cpp:235</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_led_xhtml_a959b8bbb2fe1acb5cbffba251bcb8c4c"><div class="ttname"><a href="classfabomatic_1_1_led.xhtml#a959b8bbb2fe1acb5cbffba251bcb8c4c">fabomatic::Led::update</a></div><div class="ttdeci">auto update() -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_led_8cpp_source.xhtml#l00064">Led.cpp:64</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_led_xhtml_ae7fd966ebaea3198dfe49b73e963e9cb"><div class="ttname"><a href="classfabomatic_1_1_led.xhtml#ae7fd966ebaea3198dfe49b73e963e9cb">fabomatic::Led::set</a></div><div class="ttdeci">auto set(Status status) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_led_8cpp_source.xhtml#l00039">Led.cpp:39</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_led_xhtml_afe933127b5e25e5972e3120bc276b599"><div class="ttname"><a href="classfabomatic_1_1_led.xhtml#afe933127b5e25e5972e3120bc276b599">fabomatic::Led::setColor</a></div><div class="ttdeci">auto setColor(uint8_t r, uint8_t g, uint8_t b) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_led_8cpp_source.xhtml#l00034">Led.cpp:34</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a74aa0b2cd34205ba57710affc56f5c3c"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a74aa0b2cd34205ba57710affc56f5c3c">fabomatic::Machine::isFree</a></div><div class="ttdeci">auto isFree() const -&gt; bool</div><div class="ttdoc">Indicates is the machine is not used by anybody.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00056">Machine.cpp:56</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a871958cc57845c8651cf1058ed9b30e4"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a871958cc57845c8651cf1058ed9b30e4">fabomatic::Machine::isShutdownImminent</a></div><div class="ttdeci">auto isShutdownImminent() const -&gt; bool</div><div class="ttdoc">Indicates if the machine will power down in less than BEEP_REMAINING_MINUTES.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00123">Machine.cpp:123</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00326">fabomatic::Machine::isAllowed()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00056">fabomatic::Machine::isFree()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00336">fabomatic::Machine::isMaintenanceNeeded()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00235">fabomatic::FabBackend::isOnline()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00123">fabomatic::Machine::isShutdownImminent()</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00094">led</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00101">machine</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00095">server</a>, <a class="el" href="_led_8cpp_source.xhtml#l00039">fabomatic::Led::set()</a>, <a class="el" href="_led_8cpp_source.xhtml#l00034">fabomatic::Led::setColor()</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00093">status</a>, and <a class="el" href="_led_8cpp_source.xhtml#l00064">fabomatic::Led::update()</a>.</p>

<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00411">setup()</a>, <a class="el" href="main_8cpp_source.xhtml#l00088">fabomatic::taskBlink()</a>, <a class="el" href="main_8cpp_source.xhtml#l00213">fabomatic::taskFactoryReset()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00070">fabomatic::tests::test_simple_methods()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00251">fabomatic::tests::test_taskVarious()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_ad05b4db308773e56d866fe87d34022d9_cgraph.svg" width="370" height="462"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_ad05b4db308773e56d866fe87d34022d9_icgraph.svg" width="498" height="266"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a3c38d7a3ed7952c6d6297efdf50ea4dd" name="a3c38d7a3ed7952c6d6297efdf50ea4dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c38d7a3ed7952c6d6297efdf50ea4dd">&#9670;&#160;</a></span>changeStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::BoardLogic::changeStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0">Status</a>&#160;</td>
          <td class="paramname"><em>new_state</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the board in the state given. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">new_state</td><td>new state </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00272">272</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  273</span>  {</div>
<div class="line"><span class="lineno">  274</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a64706a55ef40b2ba1578d6a78a37361e">status</a> != new_state)</div>
<div class="line"><span class="lineno">  275</span>    {</div>
<div class="line"><span class="lineno">  276</span>      ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;** Changing board state to %d&quot;</span>, <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(new_state));</div>
<div class="line"><span class="lineno">  277</span>    }</div>
<div class="line"><span class="lineno">  278</span> </div>
<div class="line"><span class="lineno">  279</span>    <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a64706a55ef40b2ba1578d6a78a37361e">status</a> = new_state;</div>
<div class="line"><span class="lineno">  280</span>    <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a47b4d515c0d3488eceb49769036bce8b">updateLCD</a>();</div>
<div class="line"><span class="lineno">  281</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a47b4d515c0d3488eceb49769036bce8b"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a47b4d515c0d3488eceb49769036bce8b">fabomatic::BoardLogic::updateLCD</a></div><div class="ttdeci">auto updateLCD() const -&gt; void</div><div class="ttdoc">Updates the LCD screen as per the current status.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00284">BoardLogic.cpp:284</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8hpp_source.xhtml#l00093">status</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00284">updateLCD()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00163">authorize()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00548">checkRfid()</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00025">fabomatic::configModeCallback()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00111">logout()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00073">onNewCard()</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00047">fabomatic::openConfigPortal()</a>, <a class="el" href="main_8cpp_source.xhtml#l00411">setup()</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00138">fabomatic::setupOTA()</a>, <a class="el" href="main_8cpp_source.xhtml#l00042">fabomatic::taskConnect()</a>, <a class="el" href="main_8cpp_source.xhtml#l00100">fabomatic::taskPoweroffWarning()</a>, <a class="el" href="main_8cpp_source.xhtml#l00156">fabomatic::taskRfidWatchdog()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00070">fabomatic::tests::test_simple_methods()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00222">fabomatic::tests::test_taskConnect()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a3c38d7a3ed7952c6d6297efdf50ea4dd_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a3c38d7a3ed7952c6d6297efdf50ea4dd_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ac05af486941c620c9494ba545dd83c3d" name="ac05af486941c620c9494ba545dd83c3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac05af486941c620c9494ba545dd83c3d">&#9670;&#160;</a></span>checkPowerOff()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::BoardLogic::checkPowerOff </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the machine must be powered off. </p>

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00576">576</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  577</span>  {</div>
<div class="line"><span class="lineno">  578</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a1161d52e85bff96812852f50f53335c9">canPowerOff</a>())</div>
<div class="line"><span class="lineno">  579</span>    {</div>
<div class="line"><span class="lineno">  580</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a0aa6c35ee214314d87297013cc29a8aa">power</a>(<span class="keyword">false</span>);</div>
<div class="line"><span class="lineno">  581</span>    }</div>
<div class="line"><span class="lineno">  582</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a0aa6c35ee214314d87297013cc29a8aa"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a0aa6c35ee214314d87297013cc29a8aa">fabomatic::Machine::power</a></div><div class="ttdeci">auto power(bool on_or_off) -&gt; void</div><div class="ttdoc">Powers the machine on or off using relay/MQTT/both.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00203">Machine.cpp:203</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a1161d52e85bff96812852f50f53335c9"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a1161d52e85bff96812852f50f53335c9">fabomatic::Machine::canPowerOff</a></div><div class="ttdeci">auto canPowerOff() const -&gt; bool</div><div class="ttdoc">Indicates if POWEROFF_DELAY_MINUTES delay has expired,and the machine is still idle.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00110">Machine.cpp:110</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00110">fabomatic::Machine::canPowerOff()</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00101">machine</a>, and <a class="el" href="_machine_8cpp_source.xhtml#l00203">fabomatic::Machine::power()</a>.</p>

<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00094">fabomatic::taskPoweroffCheck()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00070">fabomatic::tests::test_simple_methods()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00251">fabomatic::tests::test_taskVarious()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_ac05af486941c620c9494ba545dd83c3d_cgraph.svg" width="343" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_ac05af486941c620c9494ba545dd83c3d_icgraph.svg" width="508" height="167"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a25bdc3a49d850aa49f92faf951b68efb" name="a25bdc3a49d850aa49f92faf951b68efb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25bdc3a49d850aa49f92faf951b68efb">&#9670;&#160;</a></span>checkRfid()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::BoardLogic::checkRfid </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if a new card is present. </p>

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00548">548</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  549</span>  {</div>
<div class="line"><span class="lineno">  550</span>    <span class="keyword">auto</span> &amp;<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a610fd3a8610427084ee039424fbe2f24">rfid</a> = <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a7b151fca2de8263b021b8b6f26e5d0ab">getRfid</a>();</div>
<div class="line"><span class="lineno">  551</span> </div>
<div class="line"><span class="lineno">  552</span>    <span class="comment">// check if there is a card</span></div>
<div class="line"><span class="lineno">  553</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a610fd3a8610427084ee039424fbe2f24">rfid</a>.isNewCardPresent())</div>
<div class="line"><span class="lineno">  554</span>    {</div>
<div class="line"><span class="lineno">  555</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;result = <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a610fd3a8610427084ee039424fbe2f24">rfid</a>.readCardSerial();</div>
<div class="line"><span class="lineno">  556</span>      <span class="keywordflow">if</span> (result)</div>
<div class="line"><span class="lineno">  557</span>      {</div>
<div class="line"><span class="lineno">  558</span>        <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a983c8de8b9c8881fc0a4e60dddc7f0c6">onNewCard</a>(result.value());</div>
<div class="line"><span class="lineno">  559</span>      }</div>
<div class="line"><span class="lineno">  560</span>      <span class="keywordflow">return</span>;</div>
<div class="line"><span class="lineno">  561</span>    }</div>
<div class="line"><span class="lineno">  562</span> </div>
<div class="line"><span class="lineno">  563</span>    <span class="comment">// No new card present</span></div>
<div class="line"><span class="lineno">  564</span>    <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a942b82f86ec363c7777f9fc2918e0f64">ready_for_a_new_card</a> = <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  565</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a74aa0b2cd34205ba57710affc56f5c3c">isFree</a>())</div>
<div class="line"><span class="lineno">  566</span>    {</div>
<div class="line"><span class="lineno">  567</span>      <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(Status::MachineFree);</div>
<div class="line"><span class="lineno">  568</span>    }</div>
<div class="line"><span class="lineno">  569</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  570</span>    {</div>
<div class="line"><span class="lineno">  571</span>      <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(Status::MachineInUse);</div>
<div class="line"><span class="lineno">  572</span>    }</div>
<div class="line"><span class="lineno">  573</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a610fd3a8610427084ee039424fbe2f24"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a610fd3a8610427084ee039424fbe2f24">fabomatic::BoardLogic::rfid</a></div><div class="ttdeci">std::optional&lt; std::reference_wrapper&lt; BaseRFIDWrapper &gt; &gt; rfid</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8hpp_source.xhtml#l00096">BoardLogic.hpp:96</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a7b151fca2de8263b021b8b6f26e5d0ab"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a7b151fca2de8263b021b8b6f26e5d0ab">fabomatic::BoardLogic::getRfid</a></div><div class="ttdeci">BaseRFIDWrapper &amp; getRfid() const</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00028">BoardLogic.cpp:28</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a942b82f86ec363c7777f9fc2918e0f64"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a942b82f86ec363c7777f9fc2918e0f64">fabomatic::BoardLogic::ready_for_a_new_card</a></div><div class="ttdeci">bool ready_for_a_new_card</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8hpp_source.xhtml#l00098">BoardLogic.hpp:98</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a983c8de8b9c8881fc0a4e60dddc7f0c6"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a983c8de8b9c8881fc0a4e60dddc7f0c6">fabomatic::BoardLogic::onNewCard</a></div><div class="ttdeci">auto onNewCard(card::uid_t uid) -&gt; void</div><div class="ttdoc">Called when a RFID tag has been detected.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00073">BoardLogic.cpp:73</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8cpp_source.xhtml#l00272">changeStatus()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00028">getRfid()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00056">fabomatic::Machine::isFree()</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00101">machine</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00073">onNewCard()</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00098">ready_for_a_new_card</a>, and <a class="el" href="_board_logic_8hpp_source.xhtml#l00096">rfid</a>.</p>

<p class="reference">Referenced by <a class="el" href="test__common_8cpp_source.xhtml#l00019">fabomatic::tests::simulate_rfid_card()</a>, <a class="el" href="main_8cpp_source.xhtml#l00082">fabomatic::taskCheckRfid()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00245">fabomatic::tests::test_taskCheckRfid()</a>, and <a class="el" href="test__logic_8cpp_source.xhtml#l00112">fabomatic::tests::test_whitelist_no_network()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a25bdc3a49d850aa49f92faf951b68efb_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a25bdc3a49d850aa49f92faf951b68efb_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="adc1f2896666e6e9cfa789c22baa6a603" name="adc1f2896666e6e9cfa789c22baa6a603"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc1f2896666e6e9cfa789c22baa6a603">&#9670;&#160;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::BoardLogic::configure </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classfabomatic_1_1_base_r_f_i_d_wrapper.xhtml">BaseRFIDWrapper</a> &amp;&#160;</td>
          <td class="paramname"><em>rfid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classfabomatic_1_1_l_c_d_wrapper.xhtml">LCDWrapper</a> &amp;&#160;</td>
          <td class="paramname"><em>lcd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures the board with the given references. </p>

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00455">455</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  456</span>  {</div>
<div class="line"><span class="lineno">  457</span>    this-&gt;<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a610fd3a8610427084ee039424fbe2f24">rfid</a> = <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a610fd3a8610427084ee039424fbe2f24">rfid</a>;</div>
<div class="line"><span class="lineno">  458</span>    this-&gt;<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a> = <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>;</div>
<div class="line"><span class="lineno">  459</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ad4d15925f4f48caa25335db63aeab734">reconfigure</a>();</div>
<div class="line"><span class="lineno">  460</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a8875de8e4bd5dce01b78477d980e0c42"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">fabomatic::BoardLogic::lcd</a></div><div class="ttdeci">std::optional&lt; std::reference_wrapper&lt; LCDWrapper &gt; &gt; lcd</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8hpp_source.xhtml#l00097">BoardLogic.hpp:97</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_ad4d15925f4f48caa25335db63aeab734"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#ad4d15925f4f48caa25335db63aeab734">fabomatic::BoardLogic::reconfigure</a></div><div class="ttdeci">auto reconfigure() -&gt; bool</div><div class="ttdoc">Configures the board with the given references.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00463">BoardLogic.cpp:463</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8hpp_source.xhtml#l00097">lcd</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00463">reconfigure()</a>, and <a class="el" href="_board_logic_8hpp_source.xhtml#l00096">rfid</a>.</p>

<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00411">setup()</a>, and <a class="el" href="test__logic_8cpp_source.xhtml#l00334">setUp()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_adc1f2896666e6e9cfa789c22baa6a603_cgraph.svg" width="100%" height="559"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_adc1f2896666e6e9cfa789c22baa6a603_icgraph.svg" width="266" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a1724172254d9262c6b1a61cf5de5cee0" name="a1724172254d9262c6b1a61cf5de5cee0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1724172254d9262c6b1a61cf5de5cee0">&#9670;&#160;</a></span>getBuzzerForTesting()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::BoardLogic::getBuzzerForTesting </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; <a class="el" href="classfabomatic_1_1_buzzer.xhtml">Buzzer</a> *</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns a modificable machine for testing only </p>
<dl class="section return"><dt>Returns</dt><dd>a non-null Buzzer* </dd></dl>

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00593">593</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  594</span>  {</div>
<div class="line"><span class="lineno">  595</span>    <span class="keywordflow">return</span> &amp;<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a4f4bd1de660b9868243e427e9fd9a32c">buzzer</a>;</div>
<div class="line"><span class="lineno">  596</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="test__logic_8cpp_source.xhtml#l00070">fabomatic::tests::test_simple_methods()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a1724172254d9262c6b1a61cf5de5cee0_icgraph.svg" width="452" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ab5d244e806e8b17bb9171055001476f7" name="ab5d244e806e8b17bb9171055001476f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5d244e806e8b17bb9171055001476f7">&#9670;&#160;</a></span>getHostname()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::BoardLogic::getHostname </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; const std::string</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00653">653</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  654</span>  {</div>
<div class="line"><span class="lineno">  655</span>    <span class="comment">// Hostname is BOARD + machine_id (which shall be unique) e.g. BOARD1</span></div>
<div class="line"><span class="lineno">  656</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1default__config.xhtml#a06a2e55e21f4c48fd522df25b1540570">conf::default_config::hostname</a>.data() +</div>
<div class="line"><span class="lineno">  657</span>           std::to_string(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1default__config.xhtml#a6c7775af29f012f0623c8898f1998ea1">conf::default_config::machine_id</a>.<span class="keywordtype">id</span>);</div>
<div class="line"><span class="lineno">  658</span>  }</div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1default__config_xhtml_a06a2e55e21f4c48fd522df25b1540570"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1default__config.xhtml#a06a2e55e21f4c48fd522df25b1540570">fabomatic::conf::default_config::hostname</a></div><div class="ttdeci">static constexpr std::string_view hostname</div><div class="ttdoc">Default hostname for the ESP32 board, Machine ID will be added to the hostname in order to form uniqu...</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00027">conf.hpp:27</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1default__config_xhtml_a6c7775af29f012f0623c8898f1998ea1"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1default__config.xhtml#a6c7775af29f012f0623c8898f1998ea1">fabomatic::conf::default_config::machine_id</a></div><div class="ttdeci">static constexpr MachineID machine_id</div><div class="ttdoc">Default MachineID for backend. Can be overriden through WiFi Portal config.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00018">conf.hpp:18</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="conf_8hpp_source.xhtml#l00027">fabomatic::conf::default_config::hostname</a>, and <a class="el" href="conf_8hpp_source.xhtml#l00018">fabomatic::conf::default_config::machine_id</a>.</p>

</div>
</div>
<a id="a462b4b6149ca7bf33b699eb3181c969f" name="a462b4b6149ca7bf33b699eb3181c969f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a462b4b6149ca7bf33b699eb3181c969f">&#9670;&#160;</a></span>getLcd()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::BoardLogic::getLcd </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00605">605</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  606</span>  {</div>
<div class="line"><span class="lineno">  607</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.has_value())</div>
<div class="line"><span class="lineno">  608</span>    {</div>
<div class="line"><span class="lineno">  609</span>      <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.value().get();</div>
<div class="line"><span class="lineno">  610</span>    }</div>
<div class="line"><span class="lineno">  611</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  612</span>    {</div>
<div class="line"><span class="lineno">  613</span>      ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;LCD not initialized&quot;</span>);</div>
<div class="line"><span class="lineno">  614</span>      <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><span class="lineno">  615</span>      {</div>
<div class="line"><span class="lineno">  616</span>        <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(1s);</div>
<div class="line"><span class="lineno">  617</span>      };</div>
<div class="line"><span class="lineno">  618</span>    }</div>
<div class="line"><span class="lineno">  619</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8cpp_source.xhtml#l00250">fabomatic::Tasks::delay()</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00097">lcd</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00251">initBoard()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00126">longTap()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00284">updateLCD()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a462b4b6149ca7bf33b699eb3181c969f_cgraph.svg" width="366" height="68"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a462b4b6149ca7bf33b699eb3181c969f_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a164e40105242d0b7c56c6b4f21155101" name="a164e40105242d0b7c56c6b4f21155101"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a164e40105242d0b7c56c6b4f21155101">&#9670;&#160;</a></span>getMachine()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::BoardLogic::getMachine </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; const <a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a> &amp;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the current machine. </p>
<dl class="section return"><dt>Returns</dt><dd>a machine object </dd></dl>

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00600">600</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  601</span>  {</div>
<div class="line"><span class="lineno">  602</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>;</div>
<div class="line"><span class="lineno">  603</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8hpp_source.xhtml#l00101">machine</a>.</p>

<p class="reference">Referenced by <a class="el" href="test__common_8cpp_source.xhtml#l00048">fabomatic::tests::machine_init()</a>, <a class="el" href="main_8cpp_source.xhtml#l00121">fabomatic::taskLogoffCheck()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00041">fabomatic::tests::test_machine_defaults()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00255">fabomatic::tests::test_machine_maintenance()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00158">fabomatic::tests::test_one_user_at_a_time()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00251">fabomatic::tests::test_taskVarious()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00204">fabomatic::tests::test_user_autologoff()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00112">fabomatic::tests::test_whitelist_no_network()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00284">updateLCD()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a164e40105242d0b7c56c6b4f21155101_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a8332053c1e3343652632bde1a81a9ff4" name="a8332053c1e3343652632bde1a81a9ff4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8332053c1e3343652632bde1a81a9ff4">&#9670;&#160;</a></span>getMachineForTesting()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::BoardLogic::getMachineForTesting </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; <a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a> &amp;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns a modificable machine for testing only </p>
<dl class="section return"><dt>Returns</dt><dd>machine </dd></dl>

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00586">586</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  587</span>  {</div>
<div class="line"><span class="lineno">  588</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>;</div>
<div class="line"><span class="lineno">  589</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="test__common_8cpp_source.xhtml#l00048">fabomatic::tests::machine_init()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00285">fabomatic::tests::test_machine_allowed()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00255">fabomatic::tests::test_machine_maintenance()</a>, and <a class="el" href="test__logic_8cpp_source.xhtml#l00204">fabomatic::tests::test_user_autologoff()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a8332053c1e3343652632bde1a81a9ff4_icgraph.svg" width="100%" height="535"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a46fd65258102b559ca9599bd4d3c1fc1" name="a46fd65258102b559ca9599bd4d3c1fc1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46fd65258102b559ca9599bd4d3c1fc1">&#9670;&#160;</a></span>getRebootRequest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::BoardLogic::getRebootRequest </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00643">643</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  644</span>  {</div>
<div class="line"><span class="lineno">  645</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8e08e14e6bc026b3a695b19fe0941e14">rebootRequest</a>;</div>
<div class="line"><span class="lineno">  646</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a8e08e14e6bc026b3a695b19fe0941e14"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a8e08e14e6bc026b3a695b19fe0941e14">fabomatic::BoardLogic::rebootRequest</a></div><div class="ttdeci">bool rebootRequest</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8hpp_source.xhtml#l00107">BoardLogic.hpp:107</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8hpp_source.xhtml#l00107">rebootRequest</a>.</p>

</div>
</div>
<a id="a7b151fca2de8263b021b8b6f26e5d0ab" name="a7b151fca2de8263b021b8b6f26e5d0ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b151fca2de8263b021b8b6f26e5d0ab">&#9670;&#160;</a></span>getRfid()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_base_r_f_i_d_wrapper.xhtml">BaseRFIDWrapper</a> &amp; fabomatic::BoardLogic::getRfid </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00028">28</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   29</span>  {</div>
<div class="line"><span class="lineno">   30</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a610fd3a8610427084ee039424fbe2f24">rfid</a>.has_value())</div>
<div class="line"><span class="lineno">   31</span>      <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a610fd3a8610427084ee039424fbe2f24">rfid</a>.value().get();</div>
<div class="line"><span class="lineno">   32</span> </div>
<div class="line"><span class="lineno">   33</span>    ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;RFID not initialized&quot;</span>);</div>
<div class="line"><span class="lineno">   34</span>    <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><span class="lineno">   35</span>    {</div>
<div class="line"><span class="lineno">   36</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(1s);</div>
<div class="line"><span class="lineno">   37</span>    };</div>
<div class="line"><span class="lineno">   38</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8cpp_source.xhtml#l00250">fabomatic::Tasks::delay()</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00096">rfid</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00548">checkRfid()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00251">initBoard()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00126">longTap()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a7b151fca2de8263b021b8b6f26e5d0ab_cgraph.svg" width="366" height="68"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a7b151fca2de8263b021b8b6f26e5d0ab_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ac2feade03b2a74a1998dcec282a8eacb" name="ac2feade03b2a74a1998dcec282a8eacb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2feade03b2a74a1998dcec282a8eacb">&#9670;&#160;</a></span>getServer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::BoardLogic::getServer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; <a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00633">633</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  634</span>  {</div>
<div class="line"><span class="lineno">  635</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#abdb945dbd83a84d36f8127a3cf91f1f0">server</a>;</div>
<div class="line"><span class="lineno">  636</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="test__logic_8cpp_source.xhtml#l00334">setUp()</a>, <a class="el" href="main_8cpp_source.xhtml#l00042">fabomatic::taskConnect()</a>, <a class="el" href="main_8cpp_source.xhtml#l00184">fabomatic::taskIsAlive()</a>, <a class="el" href="main_8cpp_source.xhtml#l00175">fabomatic::taskMQTTClientLoop()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00079">fabomatic::tests::test_check_transmission()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00050">fabomatic::tests::test_create_buffered_messages()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00133">fabomatic::tests::test_fabserver_calls()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00307">fabomatic::tests::test_messages_buffered()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00158">fabomatic::tests::test_one_user_at_a_time()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00097">fabomatic::tests::test_start_broker()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00222">fabomatic::tests::test_taskConnect()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00311">fabomatic::tests::test_taskMQTTAlive()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00204">fabomatic::tests::test_user_autologoff()</a>, and <a class="el" href="test__logic_8cpp_source.xhtml#l00112">fabomatic::tests::test_whitelist_no_network()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_ac2feade03b2a74a1998dcec282a8eacb_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a17520059a761d7b76513724f8f56dc9c" name="a17520059a761d7b76513724f8f56dc9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17520059a761d7b76513724f8f56dc9c">&#9670;&#160;</a></span>getStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::BoardLogic::getStatus </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0">Status</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the current board status. </p>
<dl class="section return"><dt>Returns</dt><dd>board status </dd></dl>

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00439">439</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  440</span>  {</div>
<div class="line"><span class="lineno">  441</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a64706a55ef40b2ba1578d6a78a37361e">status</a>;</div>
<div class="line"><span class="lineno">  442</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8hpp_source.xhtml#l00093">status</a>.</p>

<p class="reference">Referenced by <a class="el" href="test__common_8cpp_source.xhtml#l00048">fabomatic::tests::machine_init()</a>, <a class="el" href="test__common_8cpp_source.xhtml#l00019">fabomatic::tests::simulate_rfid_card()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00285">fabomatic::tests::test_machine_allowed()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00255">fabomatic::tests::test_machine_maintenance()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00158">fabomatic::tests::test_one_user_at_a_time()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00070">fabomatic::tests::test_simple_methods()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00204">fabomatic::tests::test_user_autologoff()</a>, and <a class="el" href="test__logic_8cpp_source.xhtml#l00112">fabomatic::tests::test_whitelist_no_network()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a17520059a761d7b76513724f8f56dc9c_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a3e9fedd51e4895834a9ebea17cba4331" name="a3e9fedd51e4895834a9ebea17cba4331"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e9fedd51e4895834a9ebea17cba4331">&#9670;&#160;</a></span>initBoard()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::BoardLogic::initBoard </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes LCD and RFID classes. </p>

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00251">251</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  252</span>  {</div>
<div class="line"><span class="lineno">  253</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Board initialization...&quot;</span>);</div>
<div class="line"><span class="lineno">  254</span> </div>
<div class="line"><span class="lineno">  255</span>    <span class="keyword">auto</span> success = <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a462b4b6149ca7bf33b699eb3181c969f">getLcd</a>().<a class="code hl_function" href="classfabomatic_1_1_l_c_d_wrapper.xhtml#aff380f2e5bc928353ed7ef1bd09c8905">begin</a>();</div>
<div class="line"><span class="lineno">  256</span>    success &amp;= <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a7b151fca2de8263b021b8b6f26e5d0ab">getRfid</a>().<a class="code hl_function" href="classfabomatic_1_1_base_r_f_i_d_wrapper.xhtml#a97ada505d4be170df87a6985ced26106">rfidInit</a>();</div>
<div class="line"><span class="lineno">  257</span> </div>
<div class="line"><span class="lineno">  258</span>    <span class="comment">// Setup buzzer pin for ESP32</span></div>
<div class="line"><span class="lineno">  259</span>    <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (<a class="code hl_variable" href="namespacefabomatic.xhtml#a90e4180ab5a1ffd3393b4f0d6b01f2b3">pins</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#a43cea4034bd725f649b61d3a78805eb2">buzzer</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1buzzer__config.xhtml#a733e4c811983bf63e73035ab885ffc65">pin</a> != <a class="code hl_variable" href="namespacefabomatic.xhtml#a01a9e2e5f9e92f6f3fa9204ba3d946b9">NO_PIN</a>)</div>
<div class="line"><span class="lineno">  260</span>    {</div>
<div class="line"><span class="lineno">  261</span>      pinMode(<a class="code hl_variable" href="namespacefabomatic.xhtml#a90e4180ab5a1ffd3393b4f0d6b01f2b3">pins</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#a43cea4034bd725f649b61d3a78805eb2">buzzer</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1buzzer__config.xhtml#a733e4c811983bf63e73035ab885ffc65">pin</a>, OUTPUT);</div>
<div class="line"><span class="lineno">  262</span>      gpio_set_drive_capability(<span class="keyword">static_cast&lt;</span>gpio_num_t<span class="keyword">&gt;</span>(<a class="code hl_variable" href="namespacefabomatic.xhtml#a90e4180ab5a1ffd3393b4f0d6b01f2b3">pins</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#a43cea4034bd725f649b61d3a78805eb2">buzzer</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1buzzer__config.xhtml#a733e4c811983bf63e73035ab885ffc65">pin</a>), GPIO_DRIVE_CAP_2);</div>
<div class="line"><span class="lineno">  263</span>    }</div>
<div class="line"><span class="lineno">  264</span> </div>
<div class="line"><span class="lineno">  265</span>    ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Board initialization complete, success = %d&quot;</span>, success);</div>
<div class="line"><span class="lineno">  266</span> </div>
<div class="line"><span class="lineno">  267</span>    <span class="keywordflow">return</span> success;</div>
<div class="line"><span class="lineno">  268</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_base_r_f_i_d_wrapper_xhtml_a97ada505d4be170df87a6985ced26106"><div class="ttname"><a href="classfabomatic_1_1_base_r_f_i_d_wrapper.xhtml#a97ada505d4be170df87a6985ced26106">fabomatic::BaseRFIDWrapper::rfidInit</a></div><div class="ttdeci">virtual auto rfidInit() const -&gt; bool=0</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a462b4b6149ca7bf33b699eb3181c969f"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a462b4b6149ca7bf33b699eb3181c969f">fabomatic::BoardLogic::getLcd</a></div><div class="ttdeci">LCDWrapper &amp; getLcd() const</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00605">BoardLogic.cpp:605</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_l_c_d_wrapper_xhtml_aff380f2e5bc928353ed7ef1bd09c8905"><div class="ttname"><a href="classfabomatic_1_1_l_c_d_wrapper.xhtml#aff380f2e5bc928353ed7ef1bd09c8905">fabomatic::LCDWrapper::begin</a></div><div class="ttdeci">auto begin() -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_l_c_d_wrapper_8cpp_source.xhtml#l00035">LCDWrapper.cpp:35</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_a01a9e2e5f9e92f6f3fa9204ba3d946b9"><div class="ttname"><a href="namespacefabomatic.xhtml#a01a9e2e5f9e92f6f3fa9204ba3d946b9">fabomatic::NO_PIN</a></div><div class="ttdeci">static constexpr uint8_t NO_PIN</div><div class="ttdoc">Constant used to indicate the pin is not used.</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00010">PinsConfig.hpp:10</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_a90e4180ab5a1ffd3393b4f0d6b01f2b3"><div class="ttname"><a href="namespacefabomatic.xhtml#a90e4180ab5a1ffd3393b4f0d6b01f2b3">fabomatic::pins</a></div><div class="ttdeci">static constexpr pins_config pins</div><div class="ttdef"><b>Definition</b> <a href="pins_8hpp_source.xhtml#l00246">pins.hpp:246</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1buzzer__config_xhtml_a733e4c811983bf63e73035ab885ffc65"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1buzzer__config.xhtml#a733e4c811983bf63e73035ab885ffc65">fabomatic::pins_config::buzzer_config::pin</a></div><div class="ttdeci">uint8_t pin</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00050">PinsConfig.hpp:50</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_xhtml_a43cea4034bd725f649b61d3a78805eb2"><div class="ttname"><a href="structfabomatic_1_1pins__config.xhtml#a43cea4034bd725f649b61d3a78805eb2">fabomatic::pins_config::buzzer</a></div><div class="ttdeci">buzzer_config buzzer</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00071">PinsConfig.hpp:71</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_l_c_d_wrapper_8cpp_source.xhtml#l00035">fabomatic::LCDWrapper::begin()</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00071">fabomatic::pins_config::buzzer</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00605">getLcd()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00028">getRfid()</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00010">fabomatic::NO_PIN</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00050">fabomatic::pins_config::buzzer_config::pin</a>, <a class="el" href="pins_8hpp_source.xhtml#l00246">fabomatic::pins</a>, <a class="el" href="classfabomatic_1_1_base_r_f_i_d_wrapper.xhtml#a97ada505d4be170df87a6985ced26106">fabomatic::BaseRFIDWrapper::rfidInit()</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00411">setup()</a>, and <a class="el" href="test__logic_8cpp_source.xhtml#l00334">setUp()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a3e9fedd51e4895834a9ebea17cba4331_cgraph.svg" width="608" height="272"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a3e9fedd51e4895834a9ebea17cba4331_icgraph.svg" width="266" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a98a15cc323f97adc394c29e897afc12d" name="a98a15cc323f97adc394c29e897afc12d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98a15cc323f97adc394c29e897afc12d">&#9670;&#160;</a></span>logout()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::BoardLogic::logout </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes the current machine user and changes the status to LoggedOut. </p>

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00111">111</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  112</span>  {</div>
<div class="line"><span class="lineno">  113</span>    <span class="keyword">const</span> <span class="keyword">auto</span> result = <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#abdb945dbd83a84d36f8127a3cf91f1f0">server</a>.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a1a9d380dab0f6118461669242e9c7c0f">finishUse</a>(<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a39c30eaa242d5cc2ce784dbafeef87e8">getActiveUser</a>().card_uid,</div>
<div class="line"><span class="lineno">  114</span>                                         <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a9c845a163660550fa779516a8be8681a">getUsageDuration</a>());</div>
<div class="line"><span class="lineno">  115</span> </div>
<div class="line"><span class="lineno">  116</span>    ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Logout, result finishUse: %d&quot;</span>, result-&gt;request_ok);</div>
<div class="line"><span class="lineno">  117</span> </div>
<div class="line"><span class="lineno">  118</span>    <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a86cd6dfd9fefa7221a49cc07c78fc851">logout</a>();</div>
<div class="line"><span class="lineno">  119</span>    <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(Status::LoggedOut);</div>
<div class="line"><span class="lineno">  120</span>    <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a8e0c35d138333907cc217c9e141091cd">beepOk</a>();</div>
<div class="line"><span class="lineno">  121</span>    <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1lcd.xhtml#a4ccf8844fd20c9c331edcca4bbaf231f">conf::lcd::SHORT_MESSAGE_DELAY</a>);</div>
<div class="line"><span class="lineno">  122</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a1a9d380dab0f6118461669242e9c7c0f"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a1a9d380dab0f6118461669242e9c7c0f">fabomatic::FabBackend::finishUse</a></div><div class="ttdeci">auto finishUse(const card::uid_t uid, std::chrono::seconds duration) -&gt; std::unique_ptr&lt; MQTT::SimpleResponse &gt;</div><div class="ttdoc">Registers the end of machine usage.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00540">FabBackend.cpp:540</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a86cd6dfd9fefa7221a49cc07c78fc851"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a86cd6dfd9fefa7221a49cc07c78fc851">fabomatic::Machine::logout</a></div><div class="ttdeci">auto logout() -&gt; void</div><div class="ttdoc">Logoff the user and stop the usage timer.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00086">Machine.cpp:86</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a9c845a163660550fa779516a8be8681a"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a9c845a163660550fa779516a8be8681a">fabomatic::Machine::getUsageDuration</a></div><div class="ttdeci">auto getUsageDuration() const -&gt; std::chrono::seconds</div><div class="ttdoc">Duration of the current usage, or 0s.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00226">Machine.cpp:226</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8cpp_source.xhtml#l00444">beepOk()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00272">changeStatus()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00250">fabomatic::Tasks::delay()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00540">fabomatic::FabBackend::finishUse()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00219">fabomatic::Machine::getActiveUser()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00226">fabomatic::Machine::getUsageDuration()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00086">fabomatic::Machine::logout()</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00101">machine</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00095">server</a>, <a class="el" href="conf_8hpp_source.xhtml#l00051">fabomatic::conf::lcd::SHORT_MESSAGE_DELAY</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="test__common_8cpp_source.xhtml#l00048">fabomatic::tests::machine_init()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00073">onNewCard()</a>, <a class="el" href="main_8cpp_source.xhtml#l00121">fabomatic::taskLogoffCheck()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00251">fabomatic::tests::test_taskVarious()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00204">fabomatic::tests::test_user_autologoff()</a>, and <a class="el" href="test__logic_8cpp_source.xhtml#l00112">fabomatic::tests::test_whitelist_no_network()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a98a15cc323f97adc394c29e897afc12d_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a98a15cc323f97adc394c29e897afc12d_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a420a0d05a91a02c27ad3b63a030738a0" name="a420a0d05a91a02c27ad3b63a030738a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a420a0d05a91a02c27ad3b63a030738a0">&#9670;&#160;</a></span>longTap()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::BoardLogic::longTap </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a>&#160;</td>
          <td class="paramname"><em>card</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>short_prompt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const -&gt; bool</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Asks the user to keep the RFID tag on the reader as confirmation. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the user accepted, False if user bailed out </dd></dl>

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00126">126</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  127</span>  {</div>
<div class="line"><span class="lineno">  128</span>    <span class="keyword">constexpr</span> <span class="keyword">auto</span> STEPS_COUNT = 6;</div>
<div class="line"><span class="lineno">  129</span>    <span class="keyword">constexpr</span> <a class="code hl_typedef" href="namespacefabomatic.xhtml#ae782aea667d4a7a1a9f42217a5b172ed">milliseconds</a> delay_per_step = std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1machine.xhtml#a02738ffd3c6433a682f080b0e6741627">conf::machine::LONG_TAP_DURATION</a>) / STEPS_COUNT;</div>
<div class="line"><span class="lineno">  130</span>    <span class="keyword">const</span> BoardInfo bi = {<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#abdb945dbd83a84d36f8127a3cf91f1f0">server</a>.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>(), <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a3c5304fd80e0cc1c2118a59c64222d6d">getPowerState</a>(), <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a871958cc57845c8651cf1058ed9b30e4">isShutdownImminent</a>()};</div>
<div class="line"><span class="lineno">  131</span> </div>
<div class="line"><span class="lineno">  132</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> step = 0; step &lt; STEPS_COUNT; step++)</div>
<div class="line"><span class="lineno">  133</span>    {</div>
<div class="line"><span class="lineno">  134</span>      std::stringstream ss;</div>
<div class="line"><span class="lineno">  135</span>      ss &lt;&lt; short_prompt &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; step &lt;&lt; <span class="stringliteral">&quot;/&quot;</span> &lt;&lt; STEPS_COUNT;</div>
<div class="line"><span class="lineno">  136</span>      <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a462b4b6149ca7bf33b699eb3181c969f">getLcd</a>().<a class="code hl_function" href="classfabomatic_1_1_l_c_d_wrapper.xhtml#a965b81b3102972fdfd7bd5889f703904">setRow</a>(1, ss.str());</div>
<div class="line"><span class="lineno">  137</span>      <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a462b4b6149ca7bf33b699eb3181c969f">getLcd</a>().<a class="code hl_function" href="classfabomatic_1_1_l_c_d_wrapper.xhtml#aad6858b0cdc35041a714b582134e16f1">update</a>(bi);</div>
<div class="line"><span class="lineno">  138</span> </div>
<div class="line"><span class="lineno">  139</span>      <span class="keyword">const</span> <span class="keyword">auto</span> start = std::chrono::system_clock::now();</div>
<div class="line"><span class="lineno">  140</span>      <span class="keywordflow">if</span> (!<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a7b151fca2de8263b021b8b6f26e5d0ab">getRfid</a>().cardStillThere(card, delay_per_step))</div>
<div class="line"><span class="lineno">  141</span>      {</div>
<div class="line"><span class="lineno">  142</span>        <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a462b4b6149ca7bf33b699eb3181c969f">getLcd</a>().<a class="code hl_function" href="classfabomatic_1_1_l_c_d_wrapper.xhtml#a965b81b3102972fdfd7bd5889f703904">setRow</a>(1, strings::S_CANCELLED);</div>
<div class="line"><span class="lineno">  143</span>        <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a462b4b6149ca7bf33b699eb3181c969f">getLcd</a>().<a class="code hl_function" href="classfabomatic_1_1_l_c_d_wrapper.xhtml#aad6858b0cdc35041a714b582134e16f1">update</a>(bi);</div>
<div class="line"><span class="lineno">  144</span>        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  145</span>      }</div>
<div class="line"><span class="lineno">  146</span> </div>
<div class="line"><span class="lineno">  147</span>      <span class="comment">// cardStillThere may have returned immediately, so we need to wait a bit</span></div>
<div class="line"><span class="lineno">  148</span>      <span class="keyword">const</span> <span class="keyword">auto</span> elapsed = std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(std::chrono::system_clock::now() - start);</div>
<div class="line"><span class="lineno">  149</span>      <span class="keywordflow">if</span> (delay_per_step - elapsed &gt; 10ms)</div>
<div class="line"><span class="lineno">  150</span>      {</div>
<div class="line"><span class="lineno">  151</span>        <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(delay_per_step - elapsed);</div>
<div class="line"><span class="lineno">  152</span>      }</div>
<div class="line"><span class="lineno">  153</span>    }</div>
<div class="line"><span class="lineno">  154</span> </div>
<div class="line"><span class="lineno">  155</span>    <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a462b4b6149ca7bf33b699eb3181c969f">getLcd</a>().<a class="code hl_function" href="classfabomatic_1_1_l_c_d_wrapper.xhtml#a965b81b3102972fdfd7bd5889f703904">setRow</a>(1, strings::S_CONFIRMED);</div>
<div class="line"><span class="lineno">  156</span>    <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a462b4b6149ca7bf33b699eb3181c969f">getLcd</a>().<a class="code hl_function" href="classfabomatic_1_1_l_c_d_wrapper.xhtml#aad6858b0cdc35041a714b582134e16f1">update</a>(bi);</div>
<div class="line"><span class="lineno">  157</span>    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  158</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_l_c_d_wrapper_xhtml_a965b81b3102972fdfd7bd5889f703904"><div class="ttname"><a href="classfabomatic_1_1_l_c_d_wrapper.xhtml#a965b81b3102972fdfd7bd5889f703904">fabomatic::LCDWrapper::setRow</a></div><div class="ttdeci">auto setRow(uint8_t row, const std::string_view &amp;text) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_l_c_d_wrapper_8cpp_source.xhtml#l00200">LCDWrapper.cpp:200</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_l_c_d_wrapper_xhtml_aad6858b0cdc35041a714b582134e16f1"><div class="ttname"><a href="classfabomatic_1_1_l_c_d_wrapper.xhtml#aad6858b0cdc35041a714b582134e16f1">fabomatic::LCDWrapper::update</a></div><div class="ttdeci">auto update(const BoardInfo &amp;boardinfo, bool forced=false) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_l_c_d_wrapper_8cpp_source.xhtml#l00066">LCDWrapper.cpp:66</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a3c5304fd80e0cc1c2118a59c64222d6d"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a3c5304fd80e0cc1c2118a59c64222d6d">fabomatic::Machine::getPowerState</a></div><div class="ttdeci">auto getPowerState() const -&gt; PowerState</div><div class="ttdoc">Returns the current power state of the machine.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00080">Machine.cpp:80</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1machine_xhtml_a02738ffd3c6433a682f080b0e6741627"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1machine.xhtml#a02738ffd3c6433a682f080b0e6741627">fabomatic::conf::machine::LONG_TAP_DURATION</a></div><div class="ttdeci">static constexpr auto LONG_TAP_DURATION</div><div class="ttdoc">Minimum time to confirm by long tap maintenance.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00071">conf.hpp:71</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_ae782aea667d4a7a1a9f42217a5b172ed"><div class="ttname"><a href="namespacefabomatic.xhtml#ae782aea667d4a7a1a9f42217a5b172ed">fabomatic::milliseconds</a></div><div class="ttdeci">std::chrono::milliseconds milliseconds</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00026">BoardLogic.cpp:26</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8cpp_source.xhtml#l00250">fabomatic::Tasks::delay()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00605">getLcd()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00080">fabomatic::Machine::getPowerState()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00028">getRfid()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00235">fabomatic::FabBackend::isOnline()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00123">fabomatic::Machine::isShutdownImminent()</a>, <a class="el" href="conf_8hpp_source.xhtml#l00071">fabomatic::conf::machine::LONG_TAP_DURATION</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00101">machine</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00095">server</a>, <a class="el" href="_l_c_d_wrapper_8cpp_source.xhtml#l00200">fabomatic::LCDWrapper::setRow()</a>, and <a class="el" href="_l_c_d_wrapper_8cpp_source.xhtml#l00066">fabomatic::LCDWrapper::update()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00163">authorize()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a420a0d05a91a02c27ad3b63a030738a0_cgraph.svg" width="574" height="476"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a420a0d05a91a02c27ad3b63a030738a0_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a983c8de8b9c8881fc0a4e60dddc7f0c6" name="a983c8de8b9c8881fc0a4e60dddc7f0c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a983c8de8b9c8881fc0a4e60dddc7f0c6">&#9670;&#160;</a></span>onNewCard()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::BoardLogic::onNewCard </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a>&#160;</td>
          <td class="paramname"><em>uid</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called when a RFID tag has been detected. </p>

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00073">73</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   74</span>  {</div>
<div class="line"><span class="lineno">   75</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;New card present&quot;</span>);</div>
<div class="line"><span class="lineno">   76</span> </div>
<div class="line"><span class="lineno">   77</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a942b82f86ec363c7777f9fc2918e0f64">ready_for_a_new_card</a>)</div>
<div class="line"><span class="lineno">   78</span>    {</div>
<div class="line"><span class="lineno">   79</span>      <span class="keywordflow">return</span>;</div>
<div class="line"><span class="lineno">   80</span>    }</div>
<div class="line"><span class="lineno">   81</span>    <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a942b82f86ec363c7777f9fc2918e0f64">ready_for_a_new_card</a> = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">   82</span> </div>
<div class="line"><span class="lineno">   83</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a74aa0b2cd34205ba57710affc56f5c3c">isFree</a>())</div>
<div class="line"><span class="lineno">   84</span>    {</div>
<div class="line"><span class="lineno">   85</span>      <span class="comment">// machine is free</span></div>
<div class="line"><span class="lineno">   86</span>      <span class="keywordflow">if</span> (!<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a51390e6bf10c4de427abd7f175a2e6a8">authorize</a>(uid))</div>
<div class="line"><span class="lineno">   87</span>      {</div>
<div class="line"><span class="lineno">   88</span>        ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Login failed for %s&quot;</span>, <a class="code hl_function" href="namespacefabomatic_1_1card.xhtml#aef091ec171625c69f9d4eab20ebaefec">card::uid_str</a>(uid).c_str());</div>
<div class="line"><span class="lineno">   89</span>      }</div>
<div class="line"><span class="lineno">   90</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1lcd.xhtml#a4ccf8844fd20c9c331edcca4bbaf231f">conf::lcd::SHORT_MESSAGE_DELAY</a>);</div>
<div class="line"><span class="lineno">   91</span>      <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#aa0d3d3aa742eba1ffd00b97868ce7edc">refreshFromServer</a>();</div>
<div class="line"><span class="lineno">   92</span>      <span class="keywordflow">return</span>;</div>
<div class="line"><span class="lineno">   93</span>    }</div>
<div class="line"><span class="lineno">   94</span> </div>
<div class="line"><span class="lineno">   95</span>    <span class="comment">// machine is busy</span></div>
<div class="line"><span class="lineno">   96</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a39c30eaa242d5cc2ce784dbafeef87e8">getActiveUser</a>().card_uid == uid)</div>
<div class="line"><span class="lineno">   97</span>    {</div>
<div class="line"><span class="lineno">   98</span>      <span class="comment">// we can logout. we should require that the card stays in the field for some seconds, to prevent accidental logout. maybe sound a buzzer?</span></div>
<div class="line"><span class="lineno">   99</span>      <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a98a15cc323f97adc394c29e897afc12d">logout</a>();</div>
<div class="line"><span class="lineno">  100</span>    }</div>
<div class="line"><span class="lineno">  101</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  102</span>    {</div>
<div class="line"><span class="lineno">  103</span>      <span class="comment">// user is not the same, display who is using it</span></div>
<div class="line"><span class="lineno">  104</span>      <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(Status::AlreadyInUse);</div>
<div class="line"><span class="lineno">  105</span>    }</div>
<div class="line"><span class="lineno">  106</span>    <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1lcd.xhtml#a4ccf8844fd20c9c331edcca4bbaf231f">conf::lcd::SHORT_MESSAGE_DELAY</a>);</div>
<div class="line"><span class="lineno">  107</span>    <span class="keywordflow">return</span>;</div>
<div class="line"><span class="lineno">  108</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a51390e6bf10c4de427abd7f175a2e6a8"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a51390e6bf10c4de427abd7f175a2e6a8">fabomatic::BoardLogic::authorize</a></div><div class="ttdeci">auto authorize(const card::uid_t uid) -&gt; bool</div><div class="ttdoc">Checks if the card UID is valid, and tries to check the user in to the machine.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00163">BoardLogic.cpp:163</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a98a15cc323f97adc394c29e897afc12d"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a98a15cc323f97adc394c29e897afc12d">fabomatic::BoardLogic::logout</a></div><div class="ttdeci">auto logout() -&gt; void</div><div class="ttdoc">Removes the current machine user and changes the status to LoggedOut.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00111">BoardLogic.cpp:111</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_aa0d3d3aa742eba1ffd00b97868ce7edc"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#aa0d3d3aa742eba1ffd00b97868ce7edc">fabomatic::BoardLogic::refreshFromServer</a></div><div class="ttdeci">auto refreshFromServer() -&gt; void</div><div class="ttdoc">connects and polls the server for up-to-date machine information</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00041">BoardLogic.cpp:41</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8cpp_source.xhtml#l00163">authorize()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00272">changeStatus()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00250">fabomatic::Tasks::delay()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00219">fabomatic::Machine::getActiveUser()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00056">fabomatic::Machine::isFree()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00111">logout()</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00101">machine</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00098">ready_for_a_new_card</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00041">refreshFromServer()</a>, <a class="el" href="conf_8hpp_source.xhtml#l00051">fabomatic::conf::lcd::SHORT_MESSAGE_DELAY</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>, and <a class="el" href="card_8hpp_source.xhtml#l00022">fabomatic::card::uid_str()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00548">checkRfid()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a983c8de8b9c8881fc0a4e60dddc7f0c6_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a983c8de8b9c8881fc0a4e60dddc7f0c6_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ab7b70f563e50df2759cd5055c32b1d8a" name="ab7b70f563e50df2759cd5055c32b1d8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7b70f563e50df2759cd5055c32b1d8a">&#9670;&#160;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">BoardLogic</a> &amp; fabomatic::BoardLogic::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">BoardLogic</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2c60d10e5e82f986b7b047d26f577e4c" name="a2c60d10e5e82f986b7b047d26f577e4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c60d10e5e82f986b7b047d26f577e4c">&#9670;&#160;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">BoardLogic</a> &amp; fabomatic::BoardLogic::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfabomatic_1_1_board_logic.xhtml">BoardLogic</a> &amp;&#160;</td>
          <td class="paramname"><em>board</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad4d15925f4f48caa25335db63aeab734" name="ad4d15925f4f48caa25335db63aeab734"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4d15925f4f48caa25335db63aeab734">&#9670;&#160;</a></span>reconfigure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::BoardLogic::reconfigure </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures the board with the given references. </p>

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00463">463</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  464</span>  {</div>
<div class="line"><span class="lineno">  465</span>    <span class="keyword">auto</span> success = <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  466</span> </div>
<div class="line"><span class="lineno">  467</span>    <span class="comment">// Load configuration</span></div>
<div class="line"><span class="lineno">  468</span>    <span class="keyword">auto</span> config = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">SavedConfig::LoadFromEEPROM</a>();</div>
<div class="line"><span class="lineno">  469</span>    <span class="keywordflow">if</span> (!config)</div>
<div class="line"><span class="lineno">  470</span>    {</div>
<div class="line"><span class="lineno">  471</span>      ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;No configuration found in EEPROM, using defaults.&quot;</span>);</div>
<div class="line"><span class="lineno">  472</span>      <span class="keyword">auto</span> new_config = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">SavedConfig::DefaultConfig</a>();</div>
<div class="line"><span class="lineno">  473</span>      success &amp;= new_config.SaveToEEPROM();</div>
<div class="line"><span class="lineno">  474</span>      config = new_config;</div>
<div class="line"><span class="lineno">  475</span>    }</div>
<div class="line"><span class="lineno">  476</span> </div>
<div class="line"><span class="lineno">  477</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Configuration found in EEPROM: %s&quot;</span>, config-&gt;toString().c_str());</div>
<div class="line"><span class="lineno">  478</span> </div>
<div class="line"><span class="lineno">  479</span>    <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#abdb945dbd83a84d36f8127a3cf91f1f0">server</a>.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#acf5644d920896038018f990568e710c3">configure</a>(config.value());</div>
<div class="line"><span class="lineno">  480</span> </div>
<div class="line"><span class="lineno">  481</span>    <a class="code hl_struct" href="struct_machine_i_d.xhtml">MachineID</a> mid = config.value().getMachineID();</div>
<div class="line"><span class="lineno">  482</span>    MachineConfig machine_conf(mid,</div>
<div class="line"><span class="lineno">  483</span>                               <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1default__config.xhtml#a6b5c8a84a78bdc711054601365f16378">conf::default_config::machine_type</a>,</div>
<div class="line"><span class="lineno">  484</span>                               std::string{<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1default__config.xhtml#a2a77484183bbfbb6330615405509a615">conf::default_config::machine_name</a>},</div>
<div class="line"><span class="lineno">  485</span>                               <a class="code hl_variable" href="namespacefabomatic.xhtml#a90e4180ab5a1ffd3393b4f0d6b01f2b3">pins</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#a310be8cfdd1f9617522c2eb0dd02f252">relay</a>,</div>
<div class="line"><span class="lineno">  486</span>                               std::string{config.value().mqtt_switch_topic},</div>
<div class="line"><span class="lineno">  487</span>                               <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1machine.xhtml#ad6ef16188656c4ca243871b47ae55f33">conf::machine::DEFAULT_AUTO_LOGOFF_DELAY</a>,</div>
<div class="line"><span class="lineno">  488</span>                               <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1machine.xhtml#ae8241f637717805c02c092b26b3e5091">conf::machine::DEFAULT_GRACE_PERIOD</a>);</div>
<div class="line"><span class="lineno">  489</span> </div>
<div class="line"><span class="lineno">  490</span>    <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a75d5f7be60826db90c639b138a7153e3">configure</a>(machine_conf, <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#abdb945dbd83a84d36f8127a3cf91f1f0">server</a>);</div>
<div class="line"><span class="lineno">  491</span>    <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a4f4bd1de660b9868243e427e9fd9a32c">buzzer</a>.<a class="code hl_function" href="classfabomatic_1_1_buzzer.xhtml#ab94d2e6a23316fe30e909ab0e4481347">configure</a>();</div>
<div class="line"><span class="lineno">  492</span>    <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aa0463643253d16620af0c40e0970b343">auth</a>.<a class="code hl_function" href="classfabomatic_1_1_auth_provider.xhtml#ac703cf6e2b6a2a10c946937e83df418d">loadCache</a>();</div>
<div class="line"><span class="lineno">  493</span> </div>
<div class="line"><span class="lineno">  494</span>    <span class="keywordflow">return</span> success;</div>
<div class="line"><span class="lineno">  495</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_auth_provider_xhtml_ac703cf6e2b6a2a10c946937e83df418d"><div class="ttname"><a href="classfabomatic_1_1_auth_provider.xhtml#ac703cf6e2b6a2a10c946937e83df418d">fabomatic::AuthProvider::loadCache</a></div><div class="ttdeci">auto loadCache() -&gt; void</div><div class="ttdoc">Loads the cache from EEPROM.</div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8cpp_source.xhtml#l00163">AuthProvider.cpp:163</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buzzer_xhtml_ab94d2e6a23316fe30e909ab0e4481347"><div class="ttname"><a href="classfabomatic_1_1_buzzer.xhtml#ab94d2e6a23316fe30e909ab0e4481347">fabomatic::Buzzer::configure</a></div><div class="ttdeci">auto configure() -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buzzer_8cpp_source.xhtml#l00009">Buzzer.cpp:9</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_acf5644d920896038018f990568e710c3"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#acf5644d920896038018f990568e710c3">fabomatic::FabBackend::configure</a></div><div class="ttdeci">auto configure(const SavedConfig &amp;config) -&gt; void</div><div class="ttdoc">Configures the FabBackend with the given configuration.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00021">FabBackend.cpp:21</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a75d5f7be60826db90c639b138a7153e3"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a75d5f7be60826db90c639b138a7153e3">fabomatic::Machine::configure</a></div><div class="ttdeci">void configure(const MachineConfig &amp;new_config, FabBackend &amp;serv)</div><div class="ttdoc">Configure the machine, it must be called before most methods.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00025">Machine.cpp:25</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a3a6f62510c34ed7a4491022e4e43b9c2"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">fabomatic::SavedConfig::DefaultConfig</a></div><div class="ttdeci">static auto DefaultConfig() -&gt; SavedConfig</div><div class="ttdoc">Returns the default configuration built from conf.hpp and secrets.hpp.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00028">SavedConfig.cpp:28</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_aca3fe97dfa74c005d47ffef700392d99"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">fabomatic::SavedConfig::LoadFromEEPROM</a></div><div class="ttdeci">static auto LoadFromEEPROM() -&gt; std::optional&lt; SavedConfig &gt;</div><div class="ttdoc">Loads the configuration from EEPROM if available and matching revision number.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00052">SavedConfig.cpp:52</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1default__config_xhtml_a2a77484183bbfbb6330615405509a615"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1default__config.xhtml#a2a77484183bbfbb6330615405509a615">fabomatic::conf::default_config::machine_name</a></div><div class="ttdeci">static constexpr std::string_view machine_name</div><div class="ttdoc">Default machine name for LCD. Will be overriden with Backend config data.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00021">conf.hpp:21</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1default__config_xhtml_a6b5c8a84a78bdc711054601365f16378"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1default__config.xhtml#a6b5c8a84a78bdc711054601365f16378">fabomatic::conf::default_config::machine_type</a></div><div class="ttdeci">static constexpr MachineType machine_type</div><div class="ttdoc">Default machine type. No impact on code.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00024">conf.hpp:24</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1machine_xhtml_ad6ef16188656c4ca243871b47ae55f33"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1machine.xhtml#ad6ef16188656c4ca243871b47ae55f33">fabomatic::conf::machine::DEFAULT_AUTO_LOGOFF_DELAY</a></div><div class="ttdeci">static constexpr auto DEFAULT_AUTO_LOGOFF_DELAY</div><div class="ttdoc">User will be log out after this delay. If 0h, no auto-logout. This may be overriden by backend data.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00059">conf.hpp:59</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1machine_xhtml_ae8241f637717805c02c092b26b3e5091"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1machine.xhtml#ae8241f637717805c02c092b26b3e5091">fabomatic::conf::machine::DEFAULT_GRACE_PERIOD</a></div><div class="ttdeci">static constexpr auto DEFAULT_GRACE_PERIOD</div><div class="ttdoc">Idle time before poweroff. If 0min, machine will stay on.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00062">conf.hpp:62</a></div></div>
<div class="ttc" id="astruct_machine_i_d_xhtml"><div class="ttname"><a href="struct_machine_i_d.xhtml">MachineID</a></div><div class="ttdoc">The unique machine identifier for the backend.</div><div class="ttdef"><b>Definition</b> <a href="_machine_i_d_8hpp_source.xhtml#l00019">MachineID.hpp:20</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_xhtml_a310be8cfdd1f9617522c2eb0dd02f252"><div class="ttname"><a href="structfabomatic_1_1pins__config.xhtml#a310be8cfdd1f9617522c2eb0dd02f252">fabomatic::pins_config::relay</a></div><div class="ttdeci">relay_config relay</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00070">PinsConfig.hpp:70</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8hpp_source.xhtml#l00102">auth</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00108">buzzer</a>, <a class="el" href="_buzzer_8cpp_source.xhtml#l00009">fabomatic::Buzzer::configure()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00025">fabomatic::Machine::configure()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">fabomatic::FabBackend::configure()</a>, <a class="el" href="conf_8hpp_source.xhtml#l00059">fabomatic::conf::machine::DEFAULT_AUTO_LOGOFF_DELAY</a>, <a class="el" href="conf_8hpp_source.xhtml#l00062">fabomatic::conf::machine::DEFAULT_GRACE_PERIOD</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00028">fabomatic::SavedConfig::DefaultConfig()</a>, <a class="el" href="_auth_provider_8cpp_source.xhtml#l00163">fabomatic::AuthProvider::loadCache()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00052">fabomatic::SavedConfig::LoadFromEEPROM()</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00101">machine</a>, <a class="el" href="conf_8hpp_source.xhtml#l00021">fabomatic::conf::default_config::machine_name</a>, <a class="el" href="conf_8hpp_source.xhtml#l00024">fabomatic::conf::default_config::machine_type</a>, <a class="el" href="pins_8hpp_source.xhtml#l00246">fabomatic::pins</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00070">fabomatic::pins_config::relay</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00095">server</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00455">configure()</a>, and <a class="el" href="test__logic_8cpp_source.xhtml#l00070">fabomatic::tests::test_simple_methods()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_ad4d15925f4f48caa25335db63aeab734_cgraph.svg" width="574" height="346"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_ad4d15925f4f48caa25335db63aeab734_icgraph.svg" width="464" height="151"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aa0d3d3aa742eba1ffd00b97868ce7edc" name="aa0d3d3aa742eba1ffd00b97868ce7edc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0d3d3aa742eba1ffd00b97868ce7edc">&#9670;&#160;</a></span>refreshFromServer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::BoardLogic::refreshFromServer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>connects and polls the server for up-to-date machine information </p>

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00041">41</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   42</span>  {</div>
<div class="line"><span class="lineno">   43</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;BoardLogic::refreshFromServer() called&quot;</span>);</div>
<div class="line"><span class="lineno">   44</span> </div>
<div class="line"><span class="lineno">   45</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#abdb945dbd83a84d36f8127a3cf91f1f0">server</a>.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">connect</a>())</div>
<div class="line"><span class="lineno">   46</span>    {</div>
<div class="line"><span class="lineno">   47</span>      <span class="comment">// Check the configured machine data from the server</span></div>
<div class="line"><span class="lineno">   48</span>      <span class="keyword">const</span> <span class="keyword">auto</span> result = <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#abdb945dbd83a84d36f8127a3cf91f1f0">server</a>.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a9b07e09fc8f9e46ec370f0927049d5a7">checkMachine</a>();</div>
<div class="line"><span class="lineno">   49</span>      <span class="keywordflow">if</span> (result-&gt;request_ok)</div>
<div class="line"><span class="lineno">   50</span>      {</div>
<div class="line"><span class="lineno">   51</span>        <span class="keywordflow">if</span> (result-&gt;is_valid)</div>
<div class="line"><span class="lineno">   52</span>        {</div>
<div class="line"><span class="lineno">   53</span>          <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a921c78777a6cb9f7fdb9780a8c1aa8c0">setMaintenanceNeeded</a>(result-&gt;maintenance);</div>
<div class="line"><span class="lineno">   54</span>          <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#addd23c892c39f3c1e26d611059273081">setAllowed</a>(result-&gt;allowed);</div>
<div class="line"><span class="lineno">   55</span>          <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#ace7ccce1b3fabde562cfc7c5645dd6a3">setAutologoffDelay</a>(std::chrono::minutes(result-&gt;logoff));</div>
<div class="line"><span class="lineno">   56</span>          <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a30c12cef5abca43d82f7c378430a79b6">setGracePeriod</a>(std::chrono::minutes(result-&gt;grace));</div>
<div class="line"><span class="lineno">   57</span>          <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#ac8513321c0c184312c66087e7104d066">setMachineName</a>(result-&gt;name);</div>
<div class="line"><span class="lineno">   58</span>          <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#ab39e2dee601ccaeab1e02cf28a14306b">setMaintenanceInfo</a>(result-&gt;description);</div>
<div class="line"><span class="lineno">   59</span>          <a class="code hl_enumeration" href="_machine_i_d_8hpp.xhtml#a35cc1c75e4e55a13e5075b9331a37dc5">MachineType</a> mt = <span class="keyword">static_cast&lt;</span><a class="code hl_enumeration" href="_machine_i_d_8hpp.xhtml#a35cc1c75e4e55a13e5075b9331a37dc5">MachineType</a><span class="keyword">&gt;</span>(result-&gt;type);</div>
<div class="line"><span class="lineno">   60</span>          <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a9d109ed7b9c5e40768bc4edf62377aa8">setMachineType</a>(mt);</div>
<div class="line"><span class="lineno">   61</span> </div>
<div class="line"><span class="lineno">   62</span>          ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Machine data updated:%s&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a39fbf9cad912d735cf84b75c0674646f">toString</a>().c_str());</div>
<div class="line"><span class="lineno">   63</span>        }</div>
<div class="line"><span class="lineno">   64</span>        <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">   65</span>        {</div>
<div class="line"><span class="lineno">   66</span>          ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;The configured machine ID %u is unknown to the server\r\n&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a8bde1bdf40d146c521b623d54e2df1cf">getMachineId</a>().id);</div>
<div class="line"><span class="lineno">   67</span>        }</div>
<div class="line"><span class="lineno">   68</span>      }</div>
<div class="line"><span class="lineno">   69</span>    }</div>
<div class="line"><span class="lineno">   70</span>  }</div>
<div class="ttc" id="a_machine_i_d_8hpp_xhtml_a35cc1c75e4e55a13e5075b9331a37dc5"><div class="ttname"><a href="_machine_i_d_8hpp.xhtml#a35cc1c75e4e55a13e5075b9331a37dc5">MachineType</a></div><div class="ttdeci">MachineType</div><div class="ttdoc">Classification of the machine.</div><div class="ttdef"><b>Definition</b> <a href="_machine_i_d_8hpp_source.xhtml#l00008">MachineID.hpp:9</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a1a45f556aadcbc428d14b7c7577ed43d"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">fabomatic::FabBackend::connect</a></div><div class="ttdeci">auto connect() -&gt; bool</div><div class="ttdoc">Establishes a connection to the WiFi network and the MQTT server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00291">FabBackend.cpp:291</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a9b07e09fc8f9e46ec370f0927049d5a7"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a9b07e09fc8f9e46ec370f0927049d5a7">fabomatic::FabBackend::checkMachine</a></div><div class="ttdeci">auto checkMachine() -&gt; std::unique_ptr&lt; MQTT::MachineResponse &gt;</div><div class="ttdoc">Checks the machine status on the server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00517">FabBackend.cpp:517</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a30c12cef5abca43d82f7c378430a79b6"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a30c12cef5abca43d82f7c378430a79b6">fabomatic::Machine::setGracePeriod</a></div><div class="ttdeci">auto setGracePeriod(std::chrono::seconds new_delay) -&gt; void</div><div class="ttdoc">Sets the idle period after which the machine will power off automatically.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00352">Machine.cpp:352</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a39fbf9cad912d735cf84b75c0674646f"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a39fbf9cad912d735cf84b75c0674646f">fabomatic::Machine::toString</a></div><div class="ttdeci">auto toString() const -&gt; const std::string</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00241">Machine.cpp:241</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a8bde1bdf40d146c521b623d54e2df1cf"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a8bde1bdf40d146c521b623d54e2df1cf">fabomatic::Machine::getMachineId</a></div><div class="ttdeci">auto getMachineId() const -&gt; MachineID</div><div class="ttdoc">Returns the machine identifier.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00048">Machine.cpp:48</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a9d109ed7b9c5e40768bc4edf62377aa8"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a9d109ed7b9c5e40768bc4edf62377aa8">fabomatic::Machine::setMachineType</a></div><div class="ttdeci">auto setMachineType(MachineType new_type) -&gt; void</div><div class="ttdoc">Sets the machine type as per backend configuration.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00306">Machine.cpp:306</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_ab39e2dee601ccaeab1e02cf28a14306b"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#ab39e2dee601ccaeab1e02cf28a14306b">fabomatic::Machine::setMaintenanceInfo</a></div><div class="ttdeci">auto setMaintenanceInfo(const std::string &amp;new_description) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00370">Machine.cpp:370</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_ac8513321c0c184312c66087e7104d066"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#ac8513321c0c184312c66087e7104d066">fabomatic::Machine::setMachineName</a></div><div class="ttdeci">auto setMachineName(const std::string &amp;new_name) -&gt; void</div><div class="ttdoc">Sets the machine name as per backend configuration.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00294">Machine.cpp:294</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_ace7ccce1b3fabde562cfc7c5645dd6a3"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#ace7ccce1b3fabde562cfc7c5645dd6a3">fabomatic::Machine::setAutologoffDelay</a></div><div class="ttdeci">auto setAutologoffDelay(std::chrono::seconds new_delay) -&gt; void</div><div class="ttdoc">Sets the delay after which the user will be logged off automatically.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00275">Machine.cpp:275</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_addd23c892c39f3c1e26d611059273081"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#addd23c892c39f3c1e26d611059273081">fabomatic::Machine::setAllowed</a></div><div class="ttdeci">auto setAllowed(bool new_allowed) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00331">Machine.cpp:331</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_fab_backend_8cpp_source.xhtml#l00517">fabomatic::FabBackend::checkMachine()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">fabomatic::FabBackend::connect()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00048">fabomatic::Machine::getMachineId()</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00101">machine</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00095">server</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00331">fabomatic::Machine::setAllowed()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00275">fabomatic::Machine::setAutologoffDelay()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00352">fabomatic::Machine::setGracePeriod()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00294">fabomatic::Machine::setMachineName()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00306">fabomatic::Machine::setMachineType()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00370">fabomatic::Machine::setMaintenanceInfo()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00341">fabomatic::Machine::setMaintenanceNeeded()</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>, and <a class="el" href="_machine_8cpp_source.xhtml#l00241">fabomatic::Machine::toString()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00073">onNewCard()</a>, <a class="el" href="main_8cpp_source.xhtml#l00042">fabomatic::taskConnect()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00222">fabomatic::tests::test_taskConnect()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_aa0d3d3aa742eba1ffd00b97868ce7edc_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_aa0d3d3aa742eba1ffd00b97868ce7edc_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a7bf98b454f093c4a9da2109301532905" name="a7bf98b454f093c4a9da2109301532905"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7bf98b454f093c4a9da2109301532905">&#9670;&#160;</a></span>saveRfidCache()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::BoardLogic::saveRfidCache </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00648">648</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  649</span>  {</div>
<div class="line"><span class="lineno">  650</span>    <span class="keywordflow">return</span> this-&gt;<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aa0463643253d16620af0c40e0970b343">auth</a>.<a class="code hl_function" href="classfabomatic_1_1_auth_provider.xhtml#acb92a9381bc8e14bd57b819fc9162750">saveCache</a>();</div>
<div class="line"><span class="lineno">  651</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_auth_provider_xhtml_acb92a9381bc8e14bd57b819fc9162750"><div class="ttname"><a href="classfabomatic_1_1_auth_provider.xhtml#acb92a9381bc8e14bd57b819fc9162750">fabomatic::AuthProvider::saveCache</a></div><div class="ttdeci">auto saveCache() const -&gt; bool</div><div class="ttdoc">Saves the cache of RFID to EEPROM.</div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8cpp_source.xhtml#l00183">AuthProvider.cpp:183</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a49df0c7440292476d25f1e76973cadb4" name="a49df0c7440292476d25f1e76973cadb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49df0c7440292476d25f1e76973cadb4">&#9670;&#160;</a></span>setAutologoffDelay()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::BoardLogic::setAutologoffDelay </td>
          <td>(</td>
          <td class="paramtype">std::chrono::seconds&#160;</td>
          <td class="paramname"><em>delay</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the autologoff delay. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">delay</td><td>new delay </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00623">623</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  624</span>  {</div>
<div class="line"><span class="lineno">  625</span>    <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#ace7ccce1b3fabde562cfc7c5645dd6a3">setAutologoffDelay</a>(delay);</div>
<div class="line"><span class="lineno">  626</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="test__logic_8cpp_source.xhtml#l00204">fabomatic::tests::test_user_autologoff()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a49df0c7440292476d25f1e76973cadb4_icgraph.svg" width="452" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a8e96c827d26aa04175d58d34d3f74e71" name="a8e96c827d26aa04175d58d34d3f74e71"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e96c827d26aa04175d58d34d3f74e71">&#9670;&#160;</a></span>setRebootRequest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::BoardLogic::setRebootRequest </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>request</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00638">638</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  639</span>  {</div>
<div class="line"><span class="lineno">  640</span>    <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8e08e14e6bc026b3a695b19fe0941e14">rebootRequest</a> = request;</div>
<div class="line"><span class="lineno">  641</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_o_t_a_8cpp_source.xhtml#l00047">fabomatic::openConfigPortal()</a>, and <a class="el" href="_o_t_a_8cpp_source.xhtml#l00132">fabomatic::OTAComplete()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a8e96c827d26aa04175d58d34d3f74e71_icgraph.svg" width="100%" height="379"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a9a548ef4e0beba3b67d85d7d80dbaf18" name="a9a548ef4e0beba3b67d85d7d80dbaf18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a548ef4e0beba3b67d85d7d80dbaf18">&#9670;&#160;</a></span>setWhitelist()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::BoardLogic::setWhitelist </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacefabomatic.xhtml#a626fe6fe3dcf9b459c45e9f769f7b8e7">WhiteList</a>&#160;</td>
          <td class="paramname"><em>whitelist</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00628">628</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  629</span>  {</div>
<div class="line"><span class="lineno">  630</span>    <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aa0463643253d16620af0c40e0970b343">auth</a>.<a class="code hl_function" href="classfabomatic_1_1_auth_provider.xhtml#a73f75d68b999225f12b28c64cd603b8f">setWhitelist</a>(whitelist);</div>
<div class="line"><span class="lineno">  631</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_auth_provider_xhtml_a73f75d68b999225f12b28c64cd603b8f"><div class="ttname"><a href="classfabomatic_1_1_auth_provider.xhtml#a73f75d68b999225f12b28c64cd603b8f">fabomatic::AuthProvider::setWhitelist</a></div><div class="ttdeci">auto setWhitelist(WhiteList list) -&gt; void</div><div class="ttdoc">Sets the whitelist.</div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8cpp_source.xhtml#l00177">AuthProvider.cpp:177</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="test__logic_8cpp_source.xhtml#l00334">setUp()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a9a548ef4e0beba3b67d85d7d80dbaf18_icgraph.svg" width="266" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a47b4d515c0d3488eceb49769036bce8b" name="a47b4d515c0d3488eceb49769036bce8b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47b4d515c0d3488eceb49769036bce8b">&#9670;&#160;</a></span>updateLCD()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::BoardLogic::updateLCD </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Updates the LCD screen as per the current status. </p>

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00284">284</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  285</span>  {</div>
<div class="line"><span class="lineno">  286</span>    std::stringstream buffer; <span class="comment">// Null terminated strings</span></div>
<div class="line"><span class="lineno">  287</span>    std::string user_name, machine_name, <a class="code hl_function" href="namespacefabomatic_1_1card.xhtml#aef091ec171625c69f9d4eab20ebaefec">uid_str</a>;</div>
<div class="line"><span class="lineno">  288</span> </div>
<div class="line"><span class="lineno">  289</span>    <span class="keyword">auto</span> &amp;<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a> = <a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a462b4b6149ca7bf33b699eb3181c969f">getLcd</a>();</div>
<div class="line"><span class="lineno">  290</span>    <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.showConnection(<span class="keyword">true</span>);</div>
<div class="line"><span class="lineno">  291</span>    <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.showPower(<span class="keyword">true</span>);</div>
<div class="line"><span class="lineno">  292</span> </div>
<div class="line"><span class="lineno">  293</span>    user_name = <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a39c30eaa242d5cc2ce784dbafeef87e8">getActiveUser</a>().holder_name;</div>
<div class="line"><span class="lineno">  294</span>    machine_name = <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a9fd614d86b6108a5a7b54fc9eee0d9a6">isConfigured</a>() ? <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a1637e99f2d70262d2ab26f69ed4f0e47">getMachineName</a>() : <span class="stringliteral">&quot;-&quot;</span>;</div>
<div class="line"><span class="lineno">  295</span> </div>
<div class="line"><span class="lineno">  296</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a610fd3a8610427084ee039424fbe2f24">rfid</a>.has_value())</div>
<div class="line"><span class="lineno">  297</span>    {</div>
<div class="line"><span class="lineno">  298</span>      <span class="keyword">auto</span> uid = <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a610fd3a8610427084ee039424fbe2f24">rfid</a>.value().get().getUid();</div>
<div class="line"><span class="lineno">  299</span>      <a class="code hl_function" href="namespacefabomatic_1_1card.xhtml#aef091ec171625c69f9d4eab20ebaefec">uid_str</a> = <a class="code hl_function" href="namespacefabomatic_1_1card.xhtml#aef091ec171625c69f9d4eab20ebaefec">card::uid_str</a>(uid);</div>
<div class="line"><span class="lineno">  300</span>    }</div>
<div class="line"><span class="lineno">  301</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  302</span>    {</div>
<div class="line"><span class="lineno">  303</span>      <a class="code hl_function" href="namespacefabomatic_1_1card.xhtml#aef091ec171625c69f9d4eab20ebaefec">uid_str</a> = <span class="stringliteral">&quot;????????&quot;</span>;</div>
<div class="line"><span class="lineno">  304</span>    }</div>
<div class="line"><span class="lineno">  305</span>    std::stringstream idv;</div>
<div class="line"><span class="lineno">  306</span>    idv &lt;&lt; <span class="stringliteral">&quot;ID:&quot;</span> &lt;&lt; this-&gt;<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().getMachineId()</div>
<div class="line"><span class="lineno">  307</span>        &lt;&lt; <span class="stringliteral">&quot; V&quot;</span> &lt;&lt; <a class="code hl_define" href="_board_logic_8cpp.xhtml#aef0b5124fcadf80db529fcb6df42808a">GIT_VERSION</a>;</div>
<div class="line"><span class="lineno">  308</span> </div>
<div class="line"><span class="lineno">  309</span>    <span class="keywordflow">switch</span> (<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a64706a55ef40b2ba1578d6a78a37361e">status</a>)</div>
<div class="line"><span class="lineno">  310</span>    {</div>
<div class="line"><span class="lineno">  311</span>    <span class="keywordflow">case</span> Status::Clear:</div>
<div class="line"><span class="lineno">  312</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.clear();</div>
<div class="line"><span class="lineno">  313</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  314</span>    <span class="keywordflow">case</span> Status::MachineFree:</div>
<div class="line"><span class="lineno">  315</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, machine_name);</div>
<div class="line"><span class="lineno">  316</span>      <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a4b40dcb31af466acc85f66c845516c82">isAllowed</a>())</div>
<div class="line"><span class="lineno">  317</span>      {</div>
<div class="line"><span class="lineno">  318</span>        <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, strings::S_MACHINE_BLOCKED);</div>
<div class="line"><span class="lineno">  319</span>      }</div>
<div class="line"><span class="lineno">  320</span>      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a34b0deb04494137cf321e94d50dedf90">isMaintenanceNeeded</a>())</div>
<div class="line"><span class="lineno">  321</span>      {</div>
<div class="line"><span class="lineno">  322</span>        <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_MACHINE_MAINTENANCE);</div>
<div class="line"><span class="lineno">  323</span>        <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#ad511c567c7cb7487d19019550c9a4e32">getMaintenanceInfo</a>());</div>
<div class="line"><span class="lineno">  324</span>      }</div>
<div class="line"><span class="lineno">  325</span>      <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  326</span>      {</div>
<div class="line"><span class="lineno">  327</span>        <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, strings::S_CARD_PROMPT);</div>
<div class="line"><span class="lineno">  328</span>      }</div>
<div class="line"><span class="lineno">  329</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  330</span>    <span class="keywordflow">case</span> Status::AlreadyInUse:</div>
<div class="line"><span class="lineno">  331</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_USED_BY);</div>
<div class="line"><span class="lineno">  332</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, user_name);</div>
<div class="line"><span class="lineno">  333</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  334</span>    <span class="keywordflow">case</span> Status::LoggedIn:</div>
<div class="line"><span class="lineno">  335</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_START_USE);</div>
<div class="line"><span class="lineno">  336</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, user_name);</div>
<div class="line"><span class="lineno">  337</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  338</span>    <span class="keywordflow">case</span> Status::LoginDenied:</div>
<div class="line"><span class="lineno">  339</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_LOGIN_DENIED);</div>
<div class="line"><span class="lineno">  340</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, uid_str);</div>
<div class="line"><span class="lineno">  341</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  342</span>    <span class="keywordflow">case</span> Status::LoggedOut:</div>
<div class="line"><span class="lineno">  343</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_GOODBYE);</div>
<div class="line"><span class="lineno">  344</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, user_name);</div>
<div class="line"><span class="lineno">  345</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  346</span>    <span class="keywordflow">case</span> Status::Connecting:</div>
<div class="line"><span class="lineno">  347</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_CONNECTING_MQTT_1);</div>
<div class="line"><span class="lineno">  348</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, strings::S_CONNECTING_MQTT_2);</div>
<div class="line"><span class="lineno">  349</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  350</span>    <span class="keywordflow">case</span> Status::Connected:</div>
<div class="line"><span class="lineno">  351</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_CONNECTED);</div>
<div class="line"><span class="lineno">  352</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, <span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><span class="lineno">  353</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  354</span>    <span class="keywordflow">case</span> Status::MachineInUse:</div>
<div class="line"><span class="lineno">  355</span>      buffer &lt;&lt; strings::S_HELLO &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; user_name;</div>
<div class="line"><span class="lineno">  356</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, buffer.str());</div>
<div class="line"><span class="lineno">  357</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.convertSecondsToHHMMSS(<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a9c845a163660550fa779516a8be8681a">getUsageDuration</a>()));</div>
<div class="line"><span class="lineno">  358</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  359</span>    <span class="keywordflow">case</span> Status::Busy:</div>
<div class="line"><span class="lineno">  360</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_WORKING);</div>
<div class="line"><span class="lineno">  361</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, <span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><span class="lineno">  362</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  363</span>    <span class="keywordflow">case</span> Status::Offline:</div>
<div class="line"><span class="lineno">  364</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_OFFLINE_MODE);</div>
<div class="line"><span class="lineno">  365</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, <span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><span class="lineno">  366</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  367</span>    <span class="keywordflow">case</span> Status::NotAllowed:</div>
<div class="line"><span class="lineno">  368</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_BLOCKED_ADMIN_1);</div>
<div class="line"><span class="lineno">  369</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, strings::S_BLOCKED_ADMIN_2);</div>
<div class="line"><span class="lineno">  370</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  371</span>    <span class="keywordflow">case</span> Status::Verifying:</div>
<div class="line"><span class="lineno">  372</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_VERIFYING_1);</div>
<div class="line"><span class="lineno">  373</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, strings::S_VERIFYING_2);</div>
<div class="line"><span class="lineno">  374</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  375</span>    <span class="keywordflow">case</span> Status::MaintenanceNeeded:</div>
<div class="line"><span class="lineno">  376</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_BLOCKED_MAINTENANCE_1);</div>
<div class="line"><span class="lineno">  377</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, strings::S_BLOCKED_MAINTENANCE_2);</div>
<div class="line"><span class="lineno">  378</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  379</span>    <span class="keywordflow">case</span> Status::MaintenanceQuery:</div>
<div class="line"><span class="lineno">  380</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_PROMPT_MAINTENANCE_1);</div>
<div class="line"><span class="lineno">  381</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, strings::S_PROMPT_MAINTENANCE_2);</div>
<div class="line"><span class="lineno">  382</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  383</span>    <span class="keywordflow">case</span> Status::MaintenanceDone:</div>
<div class="line"><span class="lineno">  384</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_MAINTENANCE_REGISTERED_1);</div>
<div class="line"><span class="lineno">  385</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, strings::S_MAINTENANCE_REGISTERED_2);</div>
<div class="line"><span class="lineno">  386</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  387</span>    <span class="keywordflow">case</span> Status::Error:</div>
<div class="line"><span class="lineno">  388</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_GENERIC_ERROR);</div>
<div class="line"><span class="lineno">  389</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, idv.str());</div>
<div class="line"><span class="lineno">  390</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  391</span>    <span class="keywordflow">case</span> Status::ErrorHardware:</div>
<div class="line"><span class="lineno">  392</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_HW_ERROR);</div>
<div class="line"><span class="lineno">  393</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, idv.str());</div>
<div class="line"><span class="lineno">  394</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  395</span>    <span class="keywordflow">case</span> Status::PortalFailed:</div>
<div class="line"><span class="lineno">  396</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_PORTAL_ERROR);</div>
<div class="line"><span class="lineno">  397</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, WiFi.softAPIP().toString().c_str());</div>
<div class="line"><span class="lineno">  398</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  399</span>    <span class="keywordflow">case</span> Status::PortalSuccess:</div>
<div class="line"><span class="lineno">  400</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_PORTAL_SUCCESS);</div>
<div class="line"><span class="lineno">  401</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, idv.str());</div>
<div class="line"><span class="lineno">  402</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  403</span>    <span class="keywordflow">case</span> Status::PortalStarting:</div>
<div class="line"><span class="lineno">  404</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_OPEN_PORTAL);</div>
<div class="line"><span class="lineno">  405</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, WiFi.softAPIP().toString().c_str());</div>
<div class="line"><span class="lineno">  406</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  407</span>    <span class="keywordflow">case</span> Status::Booting:</div>
<div class="line"><span class="lineno">  408</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_BOOTING);</div>
<div class="line"><span class="lineno">  409</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, idv.str());</div>
<div class="line"><span class="lineno">  410</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  411</span>    <span class="keywordflow">case</span> Status::ShuttingDown:</div>
<div class="line"><span class="lineno">  412</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, machine_name);</div>
<div class="line"><span class="lineno">  413</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, strings::S_SHUTTING_DOWN);</div>
<div class="line"><span class="lineno">  414</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  415</span>    <span class="keywordflow">case</span> Status::OTAStarting:</div>
<div class="line"><span class="lineno">  416</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::UPDATE_OTA_1);</div>
<div class="line"><span class="lineno">  417</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, strings::UPDATE_OTA_2);</div>
<div class="line"><span class="lineno">  418</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  419</span>    <span class="keywordflow">case</span> Status::FactoryDefaults:</div>
<div class="line"><span class="lineno">  420</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::FACTORY_RESET_DONE_1);</div>
<div class="line"><span class="lineno">  421</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, strings::FACTORY_RESET_DONE_2);</div>
<div class="line"><span class="lineno">  422</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  423</span>    <span class="keywordflow">case</span> Status::OTAError:</div>
<div class="line"><span class="lineno">  424</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_OTA_ERROR);</div>
<div class="line"><span class="lineno">  425</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, <span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><span class="lineno">  426</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  427</span>    <span class="keywordflow">default</span>:</div>
<div class="line"><span class="lineno">  428</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(0, strings::S_STATUS_ERROR_1);</div>
<div class="line"><span class="lineno">  429</span>      buffer &lt;&lt; strings::S_STATUS_ERROR_2 &lt;&lt; static_cast&lt;int&gt;(<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a64706a55ef40b2ba1578d6a78a37361e">status</a>);</div>
<div class="line"><span class="lineno">  430</span>      <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.setRow(1, buffer.str());</div>
<div class="line"><span class="lineno">  431</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  432</span>    }</div>
<div class="line"><span class="lineno">  433</span>    BoardInfo bi = {<a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#abdb945dbd83a84d36f8127a3cf91f1f0">server</a>.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>(), <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a3c5304fd80e0cc1c2118a59c64222d6d">getPowerState</a>(), <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a>.<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a871958cc57845c8651cf1058ed9b30e4">isShutdownImminent</a>()};</div>
<div class="line"><span class="lineno">  434</span>    <a class="code hl_variable" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a>.update(bi, <span class="keyword">false</span>);</div>
<div class="line"><span class="lineno">  435</span>  }</div>
<div class="ttc" id="a_board_logic_8cpp_xhtml_aef0b5124fcadf80db529fcb6df42808a"><div class="ttname"><a href="_board_logic_8cpp.xhtml#aef0b5124fcadf80db529fcb6df42808a">GIT_VERSION</a></div><div class="ttdeci">#define GIT_VERSION</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00021">BoardLogic.cpp:21</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a164e40105242d0b7c56c6b4f21155101"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">fabomatic::BoardLogic::getMachine</a></div><div class="ttdeci">auto getMachine() const -&gt; const Machine &amp;</div><div class="ttdoc">Gets the current machine.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00600">BoardLogic.cpp:600</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a1637e99f2d70262d2ab26f69ed4f0e47"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a1637e99f2d70262d2ab26f69ed4f0e47">fabomatic::Machine::getMachineName</a></div><div class="ttdeci">auto getMachineName() const -&gt; const std::string</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00235">Machine.cpp:235</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a9fd614d86b6108a5a7b54fc9eee0d9a6"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a9fd614d86b6108a5a7b54fc9eee0d9a6">fabomatic::Machine::isConfigured</a></div><div class="ttdeci">auto isConfigured() const -&gt; bool</div><div class="ttdoc">Indicates if the machine has been configured.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00316">Machine.cpp:316</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_ad511c567c7cb7487d19019550c9a4e32"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#ad511c567c7cb7487d19019550c9a4e32">fabomatic::Machine::getMaintenanceInfo</a></div><div class="ttdeci">auto getMaintenanceInfo() const -&gt; const std::string</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00365">Machine.cpp:365</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00219">fabomatic::Machine::getActiveUser()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00605">getLcd()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00600">getMachine()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00235">fabomatic::Machine::getMachineName()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00365">fabomatic::Machine::getMaintenanceInfo()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00080">fabomatic::Machine::getPowerState()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00226">fabomatic::Machine::getUsageDuration()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00021">GIT_VERSION</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00326">fabomatic::Machine::isAllowed()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00316">fabomatic::Machine::isConfigured()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00336">fabomatic::Machine::isMaintenanceNeeded()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00235">fabomatic::FabBackend::isOnline()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00123">fabomatic::Machine::isShutdownImminent()</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00097">lcd</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00101">machine</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00096">rfid</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00095">server</a>, <a class="el" href="_board_logic_8hpp_source.xhtml#l00093">status</a>, and <a class="el" href="card_8hpp_source.xhtml#l00022">fabomatic::card::uid_str()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00272">changeStatus()</a>, and <a class="el" href="test__logic_8cpp_source.xhtml#l00070">fabomatic::tests::test_simple_methods()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a47b4d515c0d3488eceb49769036bce8b_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_board_logic_a47b4d515c0d3488eceb49769036bce8b_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="aa0463643253d16620af0c40e0970b343" name="aa0463643253d16620af0c40e0970b343"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0463643253d16620af0c40e0970b343">&#9670;&#160;</a></span>auth</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_auth_provider.xhtml">AuthProvider</a> fabomatic::BoardLogic::auth {<a class="el" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#a83b3f579950d846c48fb7654ccef9e17">secrets::cards::whitelist</a>}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8hpp_source.xhtml#l00102">102</a> of file <a class="el" href="_board_logic_8hpp_source.xhtml">BoardLogic.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  102</span>{<a class="code hl_variable" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#a83b3f579950d846c48fb7654ccef9e17">secrets::cards::whitelist</a>};</div>
<div class="ttc" id="anamespacefabomatic_1_1secrets_1_1cards_xhtml_a83b3f579950d846c48fb7654ccef9e17"><div class="ttname"><a href="namespacefabomatic_1_1secrets_1_1cards.xhtml#a83b3f579950d846c48fb7654ccef9e17">fabomatic::secrets::cards::whitelist</a></div><div class="ttdeci">static constexpr WhiteList whitelist</div><div class="ttdoc">Static list of whitelisted RFID cards.</div><div class="ttdef"><b>Definition</b> <a href="secrets_8hpp_source.xhtml#l00023">secrets.hpp:23</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00163">authorize()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00463">reconfigure()</a>.</p>

</div>
</div>
<a id="a4f4bd1de660b9868243e427e9fd9a32c" name="a4f4bd1de660b9868243e427e9fd9a32c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f4bd1de660b9868243e427e9fd9a32c">&#9670;&#160;</a></span>buzzer</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_buzzer.xhtml">Buzzer</a> fabomatic::BoardLogic::buzzer</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8hpp_source.xhtml#l00108">108</a> of file <a class="el" href="_board_logic_8hpp_source.xhtml">BoardLogic.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00449">beepFail()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00444">beepOk()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00463">reconfigure()</a>.</p>

</div>
</div>
<a id="a8875de8e4bd5dce01b78477d980e0c42" name="a8875de8e4bd5dce01b78477d980e0c42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8875de8e4bd5dce01b78477d980e0c42">&#9670;&#160;</a></span>lcd</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;std::reference_wrapper&lt;<a class="el" href="classfabomatic_1_1_l_c_d_wrapper.xhtml">LCDWrapper</a>&gt; &gt; fabomatic::BoardLogic::lcd {std::nullopt}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8hpp_source.xhtml#l00097">97</a> of file <a class="el" href="_board_logic_8hpp_source.xhtml">BoardLogic.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   97</span>{std::nullopt};       <span class="comment">// Configured at runtime</span></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00455">configure()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00605">getLcd()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00284">updateLCD()</a>.</p>

</div>
</div>
<a id="a3c1219f3f6b27492b679ccb46c001513" name="a3c1219f3f6b27492b679ccb46c001513"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c1219f3f6b27492b679ccb46c001513">&#9670;&#160;</a></span>led</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_led.xhtml">Led</a> fabomatic::BoardLogic::led</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8hpp_source.xhtml#l00094">94</a> of file <a class="el" href="_board_logic_8hpp_source.xhtml">BoardLogic.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00498">blinkLed()</a>.</p>

</div>
</div>
<a id="a0bbd244d2c4ef4627ba78f4691be64ba" name="a0bbd244d2c4ef4627ba78f4691be64ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0bbd244d2c4ef4627ba78f4691be64ba">&#9670;&#160;</a></span>led_status</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::BoardLogic::led_status {false}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8hpp_source.xhtml#l00099">99</a> of file <a class="el" href="_board_logic_8hpp_source.xhtml">BoardLogic.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   99</span>{<span class="keyword">false</span>};</div>
</div><!-- fragment -->
</div>
</div>
<a id="aca61a2fd110df34c29db94fc02e99174" name="aca61a2fd110df34c29db94fc02e99174"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca61a2fd110df34c29db94fc02e99174">&#9670;&#160;</a></span>machine</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a> fabomatic::BoardLogic::machine</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8hpp_source.xhtml#l00101">101</a> of file <a class="el" href="_board_logic_8hpp_source.xhtml">BoardLogic.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00163">authorize()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00498">blinkLed()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00576">checkPowerOff()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00548">checkRfid()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00600">getMachine()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00111">logout()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00126">longTap()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00073">onNewCard()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00463">reconfigure()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00041">refreshFromServer()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00284">updateLCD()</a>.</p>

</div>
</div>
<a id="a942b82f86ec363c7777f9fc2918e0f64" name="a942b82f86ec363c7777f9fc2918e0f64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a942b82f86ec363c7777f9fc2918e0f64">&#9670;&#160;</a></span>ready_for_a_new_card</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::BoardLogic::ready_for_a_new_card {true}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8hpp_source.xhtml#l00098">98</a> of file <a class="el" href="_board_logic_8hpp_source.xhtml">BoardLogic.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   98</span>{<span class="keyword">true</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00548">checkRfid()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00073">onNewCard()</a>.</p>

</div>
</div>
<a id="a8e08e14e6bc026b3a695b19fe0941e14" name="a8e08e14e6bc026b3a695b19fe0941e14"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e08e14e6bc026b3a695b19fe0941e14">&#9670;&#160;</a></span>rebootRequest</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::BoardLogic::rebootRequest {false}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8hpp_source.xhtml#l00107">107</a> of file <a class="el" href="_board_logic_8hpp_source.xhtml">BoardLogic.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  107</span>{<span class="keyword">false</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00643">getRebootRequest()</a>.</p>

</div>
</div>
<a id="a610fd3a8610427084ee039424fbe2f24" name="a610fd3a8610427084ee039424fbe2f24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a610fd3a8610427084ee039424fbe2f24">&#9670;&#160;</a></span>rfid</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;std::reference_wrapper&lt;<a class="el" href="classfabomatic_1_1_base_r_f_i_d_wrapper.xhtml">BaseRFIDWrapper</a>&gt; &gt; fabomatic::BoardLogic::rfid {std::nullopt}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8hpp_source.xhtml#l00096">96</a> of file <a class="el" href="_board_logic_8hpp_source.xhtml">BoardLogic.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   96</span>{std::nullopt}; <span class="comment">// Configured at runtime</span></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00548">checkRfid()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00455">configure()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00028">getRfid()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00284">updateLCD()</a>.</p>

</div>
</div>
<a id="abdb945dbd83a84d36f8127a3cf91f1f0" name="abdb945dbd83a84d36f8127a3cf91f1f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdb945dbd83a84d36f8127a3cf91f1f0">&#9670;&#160;</a></span>server</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> fabomatic::BoardLogic::server</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8hpp_source.xhtml#l00095">95</a> of file <a class="el" href="_board_logic_8hpp_source.xhtml">BoardLogic.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00163">authorize()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00498">blinkLed()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00111">logout()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00126">longTap()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00463">reconfigure()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00041">refreshFromServer()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00284">updateLCD()</a>.</p>

</div>
</div>
<a id="a64706a55ef40b2ba1578d6a78a37361e" name="a64706a55ef40b2ba1578d6a78a37361e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64706a55ef40b2ba1578d6a78a37361e">&#9670;&#160;</a></span>status</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0">Status</a> fabomatic::BoardLogic::status {Status::Clear}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8hpp_source.xhtml#l00093">93</a> of file <a class="el" href="_board_logic_8hpp_source.xhtml">BoardLogic.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   93</span>{Status::Clear};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00498">blinkLed()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00272">changeStatus()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00439">getStatus()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00284">updateLCD()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="_board_logic_8hpp_source.xhtml">BoardLogic.hpp</a></li>
<li><a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Jul 2 2024 19:30:05 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
