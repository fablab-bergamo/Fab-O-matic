#ifndef _SECRETS_H_
#define _SECRETS_H_

#include <cstdint>
#include <array>
#include <string_view>
#include "Machine.h"
#include "conf.h"
#include "FabUser.h"

namespace secrets
{
  namespace cards
  {
    static constexpr std::array<std::tuple<card::uid_t, FabUser::UserLevel, std::string_view>, conf::whitelist::LEN> whitelist /* List of RFID tags whitelisted, regardless of connection */
        {
          std::make_tuple(0xF6F07894, FabUser::UserLevel::FABLAB_ADMIN, "ADMIN1"),
          std::make_tuple(0x835c43e5, FabUser::UserLevel::FABLAB_ADMIN, "TEST1"),
          std::make_tuple(0xAABBCCDD, FabUser::UserLevel::FABLAB_USER, "USER1"),
          std::make_tuple(0xAABBCCDD,FabUser::UserLevel::FABLAB_USER, "USER1"),
          std::make_tuple(0xAABBCCDD,FabUser::UserLevel::FABLAB_USER, "USER1"),
          std::make_tuple(0xAABBCCDD,FabUser::UserLevel::FABLAB_USER, "USER1"),
          std::make_tuple(0xAABBCCDD,FabUser::UserLevel::FABLAB_USER, "USER1"),
          std::make_tuple(0xAABBCCDD,FabUser::UserLevel::FABLAB_USER, "USER1"),
          std::make_tuple(0xAABBCCDD,FabUser::UserLevel::FABLAB_USER, "USER1"),
          std::make_tuple(0xAABBCCDD, FabUser::UserLevel::FABLAB_USER, "USER1")
        };
  }

  namespace machine
  {
    const std::string machine_name = "LASER1";
    static constexpr Machine::MachineID machine_id = {45678};   /* Machine connected to the ESP32 */
  }
  namespace wifi
  {
    const std::string ssid = "EXAMPLE_SSID";         /* Change with WIFI SSID name */
    const std::string password = "EXAMPLE_PASSWORD"; /* Change with WIFI SSID password */
  }
}
#endif