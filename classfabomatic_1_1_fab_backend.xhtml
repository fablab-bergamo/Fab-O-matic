<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: fabomatic::FabBackend Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacefabomatic.xhtml">fabomatic</a></li><li class="navelem"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-types">Private Types</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="#pri-static-attribs">Static Private Attributes</a> &#124;
<a href="classfabomatic_1_1_fab_backend-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">fabomatic::FabBackend Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for fabomatic::FabBackend:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa343ded14ec2838927c2ed7dc5eda985" id="r_aa343ded14ec2838927c2ed7dc5eda985"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#aa343ded14ec2838927c2ed7dc5eda985">FabBackend</a> ()=default</td></tr>
<tr class="separator:aa343ded14ec2838927c2ed7dc5eda985"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec5c26ad6c62b7446ca18841910ef82d" id="r_aec5c26ad6c62b7446ca18841910ef82d"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#aec5c26ad6c62b7446ca18841910ef82d">checkCard</a> (const <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> uid) -&gt; std::unique_ptr&lt; <a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_response.xhtml">ServerMQTT::UserResponse</a> &gt;</td></tr>
<tr class="memdesc:aec5c26ad6c62b7446ca18841910ef82d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the card ID is known to the server.  <br /></td></tr>
<tr class="separator:aec5c26ad6c62b7446ca18841910ef82d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78f56442b255e95b0930f9800bd91ec4" id="r_a78f56442b255e95b0930f9800bd91ec4"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a78f56442b255e95b0930f9800bd91ec4">checkMachine</a> () -&gt; std::unique_ptr&lt; <a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml">ServerMQTT::MachineResponse</a> &gt;</td></tr>
<tr class="memdesc:a78f56442b255e95b0930f9800bd91ec4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks the machine status on the server.  <br /></td></tr>
<tr class="separator:a78f56442b255e95b0930f9800bd91ec4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b45b2e58a6358c640c48e636e3cb5db" id="r_a2b45b2e58a6358c640c48e636e3cb5db"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a2b45b2e58a6358c640c48e636e3cb5db">startUse</a> (const <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> uid) -&gt; std::unique_ptr&lt; <a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml">ServerMQTT::SimpleResponse</a> &gt;</td></tr>
<tr class="memdesc:a2b45b2e58a6358c640c48e636e3cb5db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers the start of machine usage.  <br /></td></tr>
<tr class="separator:a2b45b2e58a6358c640c48e636e3cb5db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac33b68d0146302e9db6a0adc7b8c3ac0" id="r_ac33b68d0146302e9db6a0adc7b8c3ac0"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#ac33b68d0146302e9db6a0adc7b8c3ac0">inUse</a> (const <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> uid, std::chrono::seconds duration) -&gt; std::unique_ptr&lt; <a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml">ServerMQTT::SimpleResponse</a> &gt;</td></tr>
<tr class="memdesc:ac33b68d0146302e9db6a0adc7b8c3ac0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Informs the backend that the machine is in use.  <br /></td></tr>
<tr class="separator:ac33b68d0146302e9db6a0adc7b8c3ac0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa312ecaa96c4ccd3fc4e822b5495c8fe" id="r_aa312ecaa96c4ccd3fc4e822b5495c8fe"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#aa312ecaa96c4ccd3fc4e822b5495c8fe">finishUse</a> (const <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> uid, std::chrono::seconds duration) -&gt; std::unique_ptr&lt; <a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml">ServerMQTT::SimpleResponse</a> &gt;</td></tr>
<tr class="memdesc:aa312ecaa96c4ccd3fc4e822b5495c8fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers the end of machine usage.  <br /></td></tr>
<tr class="separator:aa312ecaa96c4ccd3fc4e822b5495c8fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a2b36c40f955744965d385e8cad6fb7" id="r_a4a2b36c40f955744965d385e8cad6fb7"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a4a2b36c40f955744965d385e8cad6fb7">registerMaintenance</a> (const <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> maintainer) -&gt; std::unique_ptr&lt; <a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml">ServerMQTT::SimpleResponse</a> &gt;</td></tr>
<tr class="memdesc:a4a2b36c40f955744965d385e8cad6fb7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers a maintenance action.  <br /></td></tr>
<tr class="separator:a4a2b36c40f955744965d385e8cad6fb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb44b529c858ddc1006592e9bac8a815" id="r_abb44b529c858ddc1006592e9bac8a815"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#abb44b529c858ddc1006592e9bac8a815">alive</a> () -&gt; bool</td></tr>
<tr class="memdesc:abb44b529c858ddc1006592e9bac8a815"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a ping to the server.  <br /></td></tr>
<tr class="separator:abb44b529c858ddc1006592e9bac8a815"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0510999bee5e4fe5d31d7ad5496f889c" id="r_a0510999bee5e4fe5d31d7ad5496f889c"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a0510999bee5e4fe5d31d7ad5496f889c">publish</a> (String <a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a8790b1b9b5909541c62cd1ea7577e9d6">topic</a>, String payload, bool <a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a04951b9823ac466be2285640171013e5">waitForAnswer</a>) -&gt; bool</td></tr>
<tr class="memdesc:a0510999bee5e4fe5d31d7ad5496f889c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Publishes a message on the MQTT server.  <br /></td></tr>
<tr class="separator:a0510999bee5e4fe5d31d7ad5496f889c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef092e0e1db0c3539d5474fad2456255" id="r_aef092e0e1db0c3539d5474fad2456255"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a> () const -&gt; bool</td></tr>
<tr class="memdesc:aef092e0e1db0c3539d5474fad2456255"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the client is online.  <br /></td></tr>
<tr class="separator:aef092e0e1db0c3539d5474fad2456255"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac80b4835d858bea27da461b18df5f570" id="r_ac80b4835d858bea27da461b18df5f570"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">hasBufferedMsg</a> () const -&gt; bool</td></tr>
<tr class="separator:ac80b4835d858bea27da461b18df5f570"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d0b8d49942ff06c02abbcbfe7a4784a" id="r_a4d0b8d49942ff06c02abbcbfe7a4784a"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a4d0b8d49942ff06c02abbcbfe7a4784a">transmitBuffer</a> () -&gt; bool</td></tr>
<tr class="separator:a4d0b8d49942ff06c02abbcbfe7a4784a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a044a94e7220ee295bfab801b6ca32e32" id="r_a044a94e7220ee295bfab801b6ca32e32"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a044a94e7220ee295bfab801b6ca32e32">saveBuffer</a> () -&gt; bool</td></tr>
<tr class="separator:a044a94e7220ee295bfab801b6ca32e32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a45f556aadcbc428d14b7c7577ed43d" id="r_a1a45f556aadcbc428d14b7c7577ed43d"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">connect</a> () -&gt; bool</td></tr>
<tr class="memdesc:a1a45f556aadcbc428d14b7c7577ed43d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Establishes a connection to the WiFi network and the MQTT server.  <br /></td></tr>
<tr class="separator:a1a45f556aadcbc428d14b7c7577ed43d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad928751b2f967feaac0f2cb708c0d6e9" id="r_ad928751b2f967feaac0f2cb708c0d6e9"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#ad928751b2f967feaac0f2cb708c0d6e9">connectWiFi</a> () -&gt; bool</td></tr>
<tr class="memdesc:ad928751b2f967feaac0f2cb708c0d6e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Connects to the WiFi network.  <br /></td></tr>
<tr class="separator:ad928751b2f967feaac0f2cb708c0d6e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf05998bb9dec17ae98283969109bb2d" id="r_aaf05998bb9dec17ae98283969109bb2d"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#aaf05998bb9dec17ae98283969109bb2d">loop</a> () -&gt; bool</td></tr>
<tr class="memdesc:aaf05998bb9dec17ae98283969109bb2d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Main loop for the MQTT client.  <br /></td></tr>
<tr class="separator:aaf05998bb9dec17ae98283969109bb2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf5644d920896038018f990568e710c3" id="r_acf5644d920896038018f990568e710c3"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#acf5644d920896038018f990568e710c3">configure</a> (const <a class="el" href="classfabomatic_1_1_saved_config.xhtml">SavedConfig</a> &amp;config) -&gt; void</td></tr>
<tr class="memdesc:acf5644d920896038018f990568e710c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures the <a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> with the given configuration.  <br /></td></tr>
<tr class="separator:acf5644d920896038018f990568e710c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad558116614ee45601f4665d395838727" id="r_ad558116614ee45601f4665d395838727"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#ad558116614ee45601f4665d395838727">disconnect</a> () -&gt; void</td></tr>
<tr class="memdesc:ad558116614ee45601f4665d395838727"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disconnects from the MQTT server.  <br /></td></tr>
<tr class="separator:ad558116614ee45601f4665d395838727"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a492c94ed0682ad834ccd7ddc7c20a55a" id="r_a492c94ed0682ad834ccd7ddc7c20a55a"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a492c94ed0682ad834ccd7ddc7c20a55a">setChannel</a> (int32_t <a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a12a4f3f195db522c6b108deacf1219b9">channel</a>) -&gt; void</td></tr>
<tr class="memdesc:a492c94ed0682ad834ccd7ddc7c20a55a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the WiFi channel to use.  <br /></td></tr>
<tr class="separator:a492c94ed0682ad834ccd7ddc7c20a55a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab87aaf8b939b792a6032320f3a44a258" id="r_ab87aaf8b939b792a6032320f3a44a258"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#ab87aaf8b939b792a6032320f3a44a258">FabBackend</a> (const <a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp;)=delete</td></tr>
<tr class="separator:ab87aaf8b939b792a6032320f3a44a258"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d63fd3d34cdbc3661f4d496f5805c32" id="r_a9d63fd3d34cdbc3661f4d496f5805c32"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a9d63fd3d34cdbc3661f4d496f5805c32">operator=</a> (const <a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp;)=delete</td></tr>
<tr class="separator:a9d63fd3d34cdbc3661f4d496f5805c32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2164c5d7787bd16b06a37dce72f86ee0" id="r_a2164c5d7787bd16b06a37dce72f86ee0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a2164c5d7787bd16b06a37dce72f86ee0">FabBackend</a> (<a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp;&amp;)=delete</td></tr>
<tr class="separator:a2164c5d7787bd16b06a37dce72f86ee0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeec6b24254c7320f1ec17d362644a92b" id="r_aeec6b24254c7320f1ec17d362644a92b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#aeec6b24254c7320f1ec17d362644a92b">operator=</a> (<a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp;&amp;)=delete</td></tr>
<tr class="separator:aeec6b24254c7320f1ec17d362644a92b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa691642839e9196217684949621f2a4" id="r_aaa691642839e9196217684949621f2a4"><td class="memTemplParams" colspan="2">template&lt;typename RespT , typename QueryT , typename... QueryArgs&gt; </td></tr>
<tr class="memitem:aaa691642839e9196217684949621f2a4"><td class="memTemplItemLeft" align="right" valign="top">std::unique_ptr&lt; RespT &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#aaa691642839e9196217684949621f2a4">processQuery</a> (QueryArgs &amp;&amp;...args)</td></tr>
<tr class="memdesc:aaa691642839e9196217684949621f2a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processes a query and returns the response.  <br /></td></tr>
<tr class="separator:aaa691642839e9196217684949621f2a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc71dbb44c3446fa985744ad4563faeb" id="r_adc71dbb44c3446fa985744ad4563faeb"><td class="memTemplParams" colspan="2">template&lt;typename QueryT , typename... QueryArgs&gt; </td></tr>
<tr class="memitem:adc71dbb44c3446fa985744ad4563faeb"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#adc71dbb44c3446fa985744ad4563faeb">processQuery</a> (QueryArgs &amp;&amp;...args)</td></tr>
<tr class="memdesc:adc71dbb44c3446fa985744ad4563faeb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processes a query.  <br /></td></tr>
<tr class="separator:adc71dbb44c3446fa985744ad4563faeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-types" name="pri-types"></a>
Private Types</h2></td></tr>
<tr class="memitem:af3e533d72406fdddc602359fdb9a5ae3" id="r_af3e533d72406fdddc602359fdb9a5ae3"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3">PublishResult</a> : uint8_t { <a class="el" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3ae8c9e67c4a17670c41289fcc8c3a38c5">ErrorNotPublished</a>
, <a class="el" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3a4586da37f65c0965ce6973ceb7f65c40">PublishedWithoutAnswer</a>
, <a class="el" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3af6278bbfdfc6fff58dae91a03d739c93">PublishedWithAnswer</a>
 }</td></tr>
<tr class="separator:af3e533d72406fdddc602359fdb9a5ae3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a3ab102598ee93269de90a0170e024619" id="r_a3ab102598ee93269de90a0170e024619"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a3ab102598ee93269de90a0170e024619">messageReceived</a> (String &amp;<a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a8790b1b9b5909541c62cd1ea7577e9d6">topic</a>, String &amp;payload) -&gt; void</td></tr>
<tr class="memdesc:a3ab102598ee93269de90a0170e024619"><td class="mdescLeft">&#160;</td><td class="mdescRight">Callback function for received MQTT messages.  <br /></td></tr>
<tr class="separator:a3ab102598ee93269de90a0170e024619"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee0cf549bea2daebc3e08742853d36c1" id="r_aee0cf549bea2daebc3e08742853d36c1"><td class="memTemplParams" colspan="2">template&lt;typename QueryT &gt; </td></tr>
<tr class="memitem:aee0cf549bea2daebc3e08742853d36c1"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#aee0cf549bea2daebc3e08742853d36c1">publish</a> (const QueryT &amp;payload) -&gt; <a class="el" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3">PublishResult</a></td></tr>
<tr class="memdesc:aee0cf549bea2daebc3e08742853d36c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Publishes a query on the MQTT server.  <br /></td></tr>
<tr class="separator:aee0cf549bea2daebc3e08742853d36c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04951b9823ac466be2285640171013e5" id="r_a04951b9823ac466be2285640171013e5"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a04951b9823ac466be2285640171013e5">waitForAnswer</a> (std::chrono::milliseconds timeout) -&gt; bool</td></tr>
<tr class="memdesc:a04951b9823ac466be2285640171013e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Waits for an answer from the MQTT server.  <br /></td></tr>
<tr class="separator:a04951b9823ac466be2285640171013e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f5341d851e1cd24dfaa64be0237dd5a" id="r_a8f5341d851e1cd24dfaa64be0237dd5a"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a8f5341d851e1cd24dfaa64be0237dd5a">publishWithReply</a> (const <a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml">ServerMQTT::Query</a> &amp;payload) -&gt; <a class="el" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3">PublishResult</a></td></tr>
<tr class="memdesc:a8f5341d851e1cd24dfaa64be0237dd5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Posts a query to the MQTT server and waits for a reply.  <br /></td></tr>
<tr class="separator:a8f5341d851e1cd24dfaa64be0237dd5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf87e6d61085a67255fac06e491fbf90" id="r_aaf87e6d61085a67255fac06e491fbf90"><td class="memTemplParams" colspan="2">template&lt;typename RespT , typename QueryT , typename... QueryArgs&gt; </td></tr>
<tr class="memitem:aaf87e6d61085a67255fac06e491fbf90"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#aaf87e6d61085a67255fac06e491fbf90">processQuery</a> (QueryArgs &amp;&amp;...) -&gt; std::unique_ptr&lt; RespT &gt;</td></tr>
<tr class="separator:aaf87e6d61085a67255fac06e491fbf90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22f82810e59bb150c2fd6a5ee910f22d" id="r_a22f82810e59bb150c2fd6a5ee910f22d"><td class="memTemplParams" colspan="2">template&lt;typename QueryT , typename... QueryArgs&gt; </td></tr>
<tr class="memitem:a22f82810e59bb150c2fd6a5ee910f22d"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a22f82810e59bb150c2fd6a5ee910f22d">processQuery</a> (QueryArgs &amp;&amp;...args) -&gt; bool</td></tr>
<tr class="separator:a22f82810e59bb150c2fd6a5ee910f22d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39353e6b4057e97b216a520fc7bef017" id="r_a39353e6b4057e97b216a520fc7bef017"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a39353e6b4057e97b216a520fc7bef017">loadBuffer</a> (const <a class="el" href="classfabomatic_1_1_buffer.xhtml">Buffer</a> &amp;new_buffer) -&gt; void</td></tr>
<tr class="separator:a39353e6b4057e97b216a520fc7bef017"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a22c2488e6a6c94c283ad7158ff37ca61" id="r_a22c2488e6a6c94c283ad7158ff37ca61"><td class="memItemLeft" align="right" valign="top">MQTTClient&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a> {<a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a9367a14306331d326e5e7971a0728633">MAX_MSG_SIZE</a>}</td></tr>
<tr class="separator:a22c2488e6a6c94c283ad7158ff37ca61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1218ae004e0146262801967ee50ec17a" id="r_a1218ae004e0146262801967ee50ec17a"><td class="memItemLeft" align="right" valign="top">JsonDocument&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a1218ae004e0146262801967ee50ec17a">doc</a></td></tr>
<tr class="separator:a1218ae004e0146262801967ee50ec17a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a893e412def82572f4281bdcd92bfcb36" id="r_a893e412def82572f4281bdcd92bfcb36"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a893e412def82572f4281bdcd92bfcb36">wifi_ssid</a> {&quot;&quot;}</td></tr>
<tr class="separator:a893e412def82572f4281bdcd92bfcb36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a532fe40b9761d95b1acc6572df24cd68" id="r_a532fe40b9761d95b1acc6572df24cd68"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a532fe40b9761d95b1acc6572df24cd68">wifi_password</a> {&quot;&quot;}</td></tr>
<tr class="separator:a532fe40b9761d95b1acc6572df24cd68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7464218df94ba7854cb34aaab314cbc2" id="r_a7464218df94ba7854cb34aaab314cbc2"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a7464218df94ba7854cb34aaab314cbc2">broker_hostname</a> {&quot;&quot;}</td></tr>
<tr class="separator:a7464218df94ba7854cb34aaab314cbc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02ce02db60b18f3de30e251ba14807bb" id="r_a02ce02db60b18f3de30e251ba14807bb"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a02ce02db60b18f3de30e251ba14807bb">mqtt_user</a> {&quot;&quot;}</td></tr>
<tr class="separator:a02ce02db60b18f3de30e251ba14807bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4de362845adea42309283248654cf46" id="r_ac4de362845adea42309283248654cf46"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#ac4de362845adea42309283248654cf46">mqtt_password</a> {&quot;&quot;}</td></tr>
<tr class="separator:ac4de362845adea42309283248654cf46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac77de5d35fe86ccf4b23c97548187256" id="r_ac77de5d35fe86ccf4b23c97548187256"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#ac77de5d35fe86ccf4b23c97548187256">mqtt_client_name</a> {&quot;&quot;}</td></tr>
<tr class="separator:ac77de5d35fe86ccf4b23c97548187256"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8af330c9d926f6ef6e6307ab3fd23834" id="r_a8af330c9d926f6ef6e6307ab3fd23834"><td class="memItemLeft" align="right" valign="top">MQTTClientCallbackSimpleFunction&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a8af330c9d926f6ef6e6307ab3fd23834">callback</a></td></tr>
<tr class="separator:a8af330c9d926f6ef6e6307ab3fd23834"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2924692a0dca43597d2cc594cb0573d2" id="r_a2924692a0dca43597d2cc594cb0573d2"><td class="memItemLeft" align="right" valign="top">WiFiClient&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a2924692a0dca43597d2cc594cb0573d2">wifi_client</a></td></tr>
<tr class="separator:a2924692a0dca43597d2cc594cb0573d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8790b1b9b5909541c62cd1ea7577e9d6" id="r_a8790b1b9b5909541c62cd1ea7577e9d6"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a8790b1b9b5909541c62cd1ea7577e9d6">topic</a> {&quot;&quot;}</td></tr>
<tr class="separator:a8790b1b9b5909541c62cd1ea7577e9d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8129677184366856b2f1c3a582e10bdb" id="r_a8129677184366856b2f1c3a582e10bdb"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a8129677184366856b2f1c3a582e10bdb">response_topic</a> {&quot;&quot;}</td></tr>
<tr class="separator:a8129677184366856b2f1c3a582e10bdb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a567eee830bd65f941ba98428e2642f4f" id="r_a567eee830bd65f941ba98428e2642f4f"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a567eee830bd65f941ba98428e2642f4f">last_query</a> {&quot;&quot;}</td></tr>
<tr class="separator:a567eee830bd65f941ba98428e2642f4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0308ae992bc86c1b41bdd78f9536f553" id="r_a0308ae992bc86c1b41bdd78f9536f553"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a0308ae992bc86c1b41bdd78f9536f553">last_reply</a> {&quot;&quot;}</td></tr>
<tr class="separator:a0308ae992bc86c1b41bdd78f9536f553"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a66b317f253de31ec0147c4e28aba6b" id="r_a3a66b317f253de31ec0147c4e28aba6b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">online</a> {false}</td></tr>
<tr class="separator:a3a66b317f253de31ec0147c4e28aba6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab91778bc8d79c8265b68b00ff01b17e5" id="r_ab91778bc8d79c8265b68b00ff01b17e5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#ab91778bc8d79c8265b68b00ff01b17e5">answer_pending</a> {false}</td></tr>
<tr class="separator:ab91778bc8d79c8265b68b00ff01b17e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12a4f3f195db522c6b108deacf1219b9" id="r_a12a4f3f195db522c6b108deacf1219b9"><td class="memItemLeft" align="right" valign="top">int16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a12a4f3f195db522c6b108deacf1219b9">channel</a> {-1}</td></tr>
<tr class="separator:a12a4f3f195db522c6b108deacf1219b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afee0d715d6f61ca3306dd60de5b79fd1" id="r_afee0d715d6f61ca3306dd60de5b79fd1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_buffer.xhtml">Buffer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a></td></tr>
<tr class="separator:afee0d715d6f61ca3306dd60de5b79fd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-static-attribs" name="pri-static-attribs"></a>
Static Private Attributes</h2></td></tr>
<tr class="memitem:a9367a14306331d326e5e7971a0728633" id="r_a9367a14306331d326e5e7971a0728633"><td class="memItemLeft" align="right" valign="top">static constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a9367a14306331d326e5e7971a0728633">MAX_MSG_SIZE</a> = 300</td></tr>
<tr class="separator:a9367a14306331d326e5e7971a0728633"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class is used to exchange messages with the MQTT broker and the backend </p>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00024">24</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="af3e533d72406fdddc602359fdb9a5ae3" name="af3e533d72406fdddc602359fdb9a5ae3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af3e533d72406fdddc602359fdb9a5ae3">&#9670;&#160;</a></span>PublishResult</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3">fabomatic::FabBackend::PublishResult</a> : uint8_t</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="af3e533d72406fdddc602359fdb9a5ae3ae8c9e67c4a17670c41289fcc8c3a38c5" name="af3e533d72406fdddc602359fdb9a5ae3ae8c9e67c4a17670c41289fcc8c3a38c5"></a>ErrorNotPublished&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="af3e533d72406fdddc602359fdb9a5ae3a4586da37f65c0965ce6973ceb7f65c40" name="af3e533d72406fdddc602359fdb9a5ae3a4586da37f65c0965ce6973ceb7f65c40"></a>PublishedWithoutAnswer&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="af3e533d72406fdddc602359fdb9a5ae3af6278bbfdfc6fff58dae91a03d739c93" name="af3e533d72406fdddc602359fdb9a5ae3af6278bbfdfc6fff58dae91a03d739c93"></a>PublishedWithAnswer&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00028">28</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   29</span>    {</div>
<div class="line"><span class="lineno">   30</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3ae8c9e67c4a17670c41289fcc8c3a38c5">ErrorNotPublished</a>,</div>
<div class="line"><span class="lineno">   31</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3a4586da37f65c0965ce6973ceb7f65c40">PublishedWithoutAnswer</a>,</div>
<div class="line"><span class="lineno">   32</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3af6278bbfdfc6fff58dae91a03d739c93">PublishedWithAnswer</a></div>
<div class="line"><span class="lineno">   33</span>    };</div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_af3e533d72406fdddc602359fdb9a5ae3a4586da37f65c0965ce6973ceb7f65c40"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3a4586da37f65c0965ce6973ceb7f65c40">fabomatic::FabBackend::PublishResult::PublishedWithoutAnswer</a></div><div class="ttdeci">@ PublishedWithoutAnswer</div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_af3e533d72406fdddc602359fdb9a5ae3ae8c9e67c4a17670c41289fcc8c3a38c5"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3ae8c9e67c4a17670c41289fcc8c3a38c5">fabomatic::FabBackend::PublishResult::ErrorNotPublished</a></div><div class="ttdeci">@ ErrorNotPublished</div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_af3e533d72406fdddc602359fdb9a5ae3af6278bbfdfc6fff58dae91a03d739c93"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3af6278bbfdfc6fff58dae91a03d739c93">fabomatic::FabBackend::PublishResult::PublishedWithAnswer</a></div><div class="ttdeci">@ PublishedWithAnswer</div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aa343ded14ec2838927c2ed7dc5eda985" name="aa343ded14ec2838927c2ed7dc5eda985"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa343ded14ec2838927c2ed7dc5eda985">&#9670;&#160;</a></span>FabBackend() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">fabomatic::FabBackend::FabBackend </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab87aaf8b939b792a6032320f3a44a258" name="ab87aaf8b939b792a6032320f3a44a258"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab87aaf8b939b792a6032320f3a44a258">&#9670;&#160;</a></span>FabBackend() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">fabomatic::FabBackend::FabBackend </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2164c5d7787bd16b06a37dce72f86ee0" name="a2164c5d7787bd16b06a37dce72f86ee0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2164c5d7787bd16b06a37dce72f86ee0">&#9670;&#160;</a></span>FabBackend() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">fabomatic::FabBackend::FabBackend </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="abb44b529c858ddc1006592e9bac8a815" name="abb44b529c858ddc1006592e9bac8a815"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb44b529c858ddc1006592e9bac8a815">&#9670;&#160;</a></span>alive()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::FabBackend::alive </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends a ping to the server. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the ping was sent successfully, false otherwise. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00573">573</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  574</span>  {</div>
<div class="line"><span class="lineno">  575</span>    <span class="keywordflow">return</span> processQuery&lt;ServerMQTT::AliveQuery&gt;();</div>
<div class="line"><span class="lineno">  576</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00184">fabomatic::taskIsAlive()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00079">fabomatic::tests::test_check_transmission()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00133">fabomatic::tests::test_fabserver_calls()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_abb44b529c858ddc1006592e9bac8a815_icgraph.svg" width="467" height="167"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aec5c26ad6c62b7446ca18841910ef82d" name="aec5c26ad6c62b7446ca18841910ef82d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec5c26ad6c62b7446ca18841910ef82d">&#9670;&#160;</a></span>checkCard()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_response.xhtml">ServerMQTT::UserResponse</a> &gt; fabomatic::FabBackend::checkCard </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a>&#160;</td>
          <td class="paramname"><em>uid</em></td><td>)</td>
          <td> -&gt; std::unique_ptr&lt;<a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_response.xhtml">ServerMQTT::UserResponse</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the card ID is known to the server. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uid</td><td>The card UID. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A unique_ptr to the server response. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00507">507</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  508</span>  {</div>
<div class="line"><span class="lineno">  509</span>    <span class="keywordflow">return</span> processQuery&lt;ServerMQTT::UserResponse, ServerMQTT::UserQuery&gt;(uid);</div>
<div class="line"><span class="lineno">  510</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="test__mqtt_8cpp_source.xhtml#l00133">fabomatic::tests::test_fabserver_calls()</a>, and <a class="el" href="_auth_provider_8cpp_source.xhtml#l00054">fabomatic::AuthProvider::tryLogin()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_aec5c26ad6c62b7446ca18841910ef82d_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a78f56442b255e95b0930f9800bd91ec4" name="a78f56442b255e95b0930f9800bd91ec4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78f56442b255e95b0930f9800bd91ec4">&#9670;&#160;</a></span>checkMachine()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml">ServerMQTT::MachineResponse</a> &gt; fabomatic::FabBackend::checkMachine </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; std::unique_ptr&lt;<a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml">ServerMQTT::MachineResponse</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks the machine status on the server. </p>
<dl class="section return"><dt>Returns</dt><dd>A unique_ptr to the server response. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00517">517</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  518</span>  {</div>
<div class="line"><span class="lineno">  519</span>    <span class="keywordflow">return</span> processQuery&lt;ServerMQTT::MachineResponse, ServerMQTT::MachineQuery&gt;();</div>
<div class="line"><span class="lineno">  520</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00041">fabomatic::BoardLogic::refreshFromServer()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00133">fabomatic::tests::test_fabserver_calls()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_a78f56442b255e95b0930f9800bd91ec4_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="acf5644d920896038018f990568e710c3" name="acf5644d920896038018f990568e710c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf5644d920896038018f990568e710c3">&#9670;&#160;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::FabBackend::configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfabomatic_1_1_saved_config.xhtml">SavedConfig</a> &amp;&#160;</td>
          <td class="paramname"><em>config</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures the <a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> with the given configuration. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">config</td><td>The <a class="el" href="classfabomatic_1_1_saved_config.xhtml">SavedConfig</a> object containing the configuration parameters. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">21</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   22</span>  {</div>
<div class="line"><span class="lineno">   23</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a893e412def82572f4281bdcd92bfcb36">wifi_ssid</a> = config.ssid;</div>
<div class="line"><span class="lineno">   24</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a532fe40b9761d95b1acc6572df24cd68">wifi_password</a> = config.password;</div>
<div class="line"><span class="lineno">   25</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a7464218df94ba7854cb34aaab314cbc2">broker_hostname</a> = config.mqtt_server;</div>
<div class="line"><span class="lineno">   26</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a02ce02db60b18f3de30e251ba14807bb">mqtt_user</a> = config.mqtt_user;</div>
<div class="line"><span class="lineno">   27</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#ac4de362845adea42309283248654cf46">mqtt_password</a> = config.mqtt_password;</div>
<div class="line"><span class="lineno">   28</span> </div>
<div class="line"><span class="lineno">   29</span><span class="preprocessor">#if (PINS_WOKWI)</span></div>
<div class="line"><span class="lineno">   30</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a12a4f3f195db522c6b108deacf1219b9">channel</a> = 6;</div>
<div class="line"><span class="lineno">   31</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a7464218df94ba7854cb34aaab314cbc2">broker_hostname</a> = <span class="stringliteral">&quot;localhost&quot;</span>;</div>
<div class="line"><span class="lineno">   32</span><span class="preprocessor">#else</span></div>
<div class="line"><span class="lineno">   33</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a12a4f3f195db522c6b108deacf1219b9">channel</a> = -1;</div>
<div class="line"><span class="lineno">   34</span><span class="preprocessor">#endif</span></div>
<div class="line"><span class="lineno">   35</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">online</a> = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">   36</span> </div>
<div class="line"><span class="lineno">   37</span>    std::stringstream ss_topic_name, ss_client_name;</div>
<div class="line"><span class="lineno">   38</span>    ss_topic_name &lt;&lt; <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a6828edf0ca1e3124b91c14d7f4f04045">conf::mqtt::topic</a> &lt;&lt; <span class="stringliteral">&quot;/&quot;</span> &lt;&lt; config.machine_id;</div>
<div class="line"><span class="lineno">   39</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8790b1b9b5909541c62cd1ea7577e9d6">topic</a> = ss_topic_name.str();</div>
<div class="line"><span class="lineno">   40</span> </div>
<div class="line"><span class="lineno">   41</span>    ss_client_name &lt;&lt; <span class="stringliteral">&quot;BOARD&quot;</span> &lt;&lt; random(0, 1000);</div>
<div class="line"><span class="lineno">   42</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#ac77de5d35fe86ccf4b23c97548187256">mqtt_client_name</a> = ss_client_name.str();</div>
<div class="line"><span class="lineno">   43</span> </div>
<div class="line"><span class="lineno">   44</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.connected()) <span class="comment">// Topic or IP may also have changed</span></div>
<div class="line"><span class="lineno">   45</span>    {</div>
<div class="line"><span class="lineno">   46</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.disconnect();</div>
<div class="line"><span class="lineno">   47</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a2924692a0dca43597d2cc594cb0573d2">wifi_client</a>.stop();</div>
<div class="line"><span class="lineno">   48</span>    }</div>
<div class="line"><span class="lineno">   49</span> </div>
<div class="line"><span class="lineno">   50</span>    <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a39353e6b4057e97b216a520fc7bef017">loadBuffer</a>(config.message_buffer);</div>
<div class="line"><span class="lineno">   51</span> </div>
<div class="line"><span class="lineno">   52</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;FabServer configured&quot;</span>);</div>
<div class="line"><span class="lineno">   53</span>  }</div>
<div class="ttc" id="a_logging_8hpp_xhtml_a4ef5b5f197804a60836ab1e8907d8301"><div class="ttname"><a href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a></div><div class="ttdeci">static const char *const TAG</div><div class="ttdef"><b>Definition</b> <a href="_logging_8hpp_source.xhtml#l00006">Logging.hpp:6</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a02ce02db60b18f3de30e251ba14807bb"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a02ce02db60b18f3de30e251ba14807bb">fabomatic::FabBackend::mqtt_user</a></div><div class="ttdeci">std::string mqtt_user</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00041">FabBackend.hpp:41</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a12a4f3f195db522c6b108deacf1219b9"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a12a4f3f195db522c6b108deacf1219b9">fabomatic::FabBackend::channel</a></div><div class="ttdeci">int16_t channel</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00055">FabBackend.hpp:55</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a22c2488e6a6c94c283ad7158ff37ca61"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">fabomatic::FabBackend::client</a></div><div class="ttdeci">MQTTClient client</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00035">FabBackend.hpp:35</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a2924692a0dca43597d2cc594cb0573d2"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a2924692a0dca43597d2cc594cb0573d2">fabomatic::FabBackend::wifi_client</a></div><div class="ttdeci">WiFiClient wifi_client</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00046">FabBackend.hpp:46</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a39353e6b4057e97b216a520fc7bef017"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a39353e6b4057e97b216a520fc7bef017">fabomatic::FabBackend::loadBuffer</a></div><div class="ttdeci">auto loadBuffer(const Buffer &amp;new_buffer) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00654">FabBackend.cpp:654</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a3a66b317f253de31ec0147c4e28aba6b"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">fabomatic::FabBackend::online</a></div><div class="ttdeci">bool online</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00053">FabBackend.hpp:53</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a532fe40b9761d95b1acc6572df24cd68"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a532fe40b9761d95b1acc6572df24cd68">fabomatic::FabBackend::wifi_password</a></div><div class="ttdeci">std::string wifi_password</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00039">FabBackend.hpp:39</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a7464218df94ba7854cb34aaab314cbc2"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a7464218df94ba7854cb34aaab314cbc2">fabomatic::FabBackend::broker_hostname</a></div><div class="ttdeci">std::string broker_hostname</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00040">FabBackend.hpp:40</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a8790b1b9b5909541c62cd1ea7577e9d6"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a8790b1b9b5909541c62cd1ea7577e9d6">fabomatic::FabBackend::topic</a></div><div class="ttdeci">std::string topic</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00048">FabBackend.hpp:48</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a893e412def82572f4281bdcd92bfcb36"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a893e412def82572f4281bdcd92bfcb36">fabomatic::FabBackend::wifi_ssid</a></div><div class="ttdeci">std::string wifi_ssid</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00038">FabBackend.hpp:38</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ac4de362845adea42309283248654cf46"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ac4de362845adea42309283248654cf46">fabomatic::FabBackend::mqtt_password</a></div><div class="ttdeci">std::string mqtt_password</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00042">FabBackend.hpp:42</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ac77de5d35fe86ccf4b23c97548187256"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ac77de5d35fe86ccf4b23c97548187256">fabomatic::FabBackend::mqtt_client_name</a></div><div class="ttdeci">std::string mqtt_client_name</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00043">FabBackend.hpp:43</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1mqtt_xhtml_a6828edf0ca1e3124b91c14d7f4f04045"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a6828edf0ca1e3124b91c14d7f4f04045">fabomatic::conf::mqtt::topic</a></div><div class="ttdeci">static constexpr std::string_view topic</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00217">conf.hpp:217</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_fab_backend_8hpp_source.xhtml#l00040">broker_hostname</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00055">channel</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00035">client</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00654">loadBuffer()</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00068">fabomatic::SavedConfig::machine_id</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00076">fabomatic::SavedConfig::message_buffer</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00043">mqtt_client_name</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00042">mqtt_password</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00061">fabomatic::SavedConfig::mqtt_password</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00055">fabomatic::SavedConfig::mqtt_server</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00041">mqtt_user</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00058">fabomatic::SavedConfig::mqtt_user</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00053">online</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00052">fabomatic::SavedConfig::password</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00049">fabomatic::SavedConfig::ssid</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>, <a class="el" href="conf_8hpp_source.xhtml#l00217">fabomatic::conf::mqtt::topic</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00048">topic</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00046">wifi_client</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00039">wifi_password</a>, and <a class="el" href="_fab_backend_8hpp_source.xhtml#l00038">wifi_ssid</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00463">fabomatic::BoardLogic::reconfigure()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00133">fabomatic::tests::test_fabserver_calls()</a>, <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00094">fabomatic::tests::test_rfid_cache()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00097">fabomatic::tests::test_start_broker()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_acf5644d920896038018f990568e710c3_cgraph.svg" width="374" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_acf5644d920896038018f990568e710c3_icgraph.svg" width="100%" height="535"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a1a45f556aadcbc428d14b7c7577ed43d" name="a1a45f556aadcbc428d14b7c7577ed43d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a45f556aadcbc428d14b7c7577ed43d">&#9670;&#160;</a></span>connect()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::FabBackend::connect </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Establishes a connection to the WiFi network and the MQTT server. </p>
<dl class="section return"><dt>Returns</dt><dd>true if both operations succeeded, false otherwise. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">291</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  292</span>  {</div>
<div class="line"><span class="lineno">  293</span>    <span class="keyword">const</span> <span class="keyword">auto</span> status = WiFi.status();</div>
<div class="line"><span class="lineno">  294</span> </div>
<div class="line"><span class="lineno">  295</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;FabServer::connect() called, Wifi status=%d&quot;</span>, status);</div>
<div class="line"><span class="lineno">  296</span> </div>
<div class="line"><span class="lineno">  297</span>    <span class="comment">// Check if WiFi network is available, and if not, try to connect</span></div>
<div class="line"><span class="lineno">  298</span>    <span class="keywordflow">if</span> (status != WL_CONNECTED)</div>
<div class="line"><span class="lineno">  299</span>    {</div>
<div class="line"><span class="lineno">  300</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">online</a> = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  301</span> </div>
<div class="line"><span class="lineno">  302</span>      <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.connected())</div>
<div class="line"><span class="lineno">  303</span>      {</div>
<div class="line"><span class="lineno">  304</span>        ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Closing MQTT client due to WiFi down&quot;</span>);</div>
<div class="line"><span class="lineno">  305</span>        <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.disconnect();</div>
<div class="line"><span class="lineno">  306</span>      }</div>
<div class="line"><span class="lineno">  307</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(100ms);</div>
<div class="line"><span class="lineno">  308</span>      <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ad928751b2f967feaac0f2cb708c0d6e9">connectWiFi</a>();</div>
<div class="line"><span class="lineno">  309</span>    }</div>
<div class="line"><span class="lineno">  310</span> </div>
<div class="line"><span class="lineno">  311</span>    <span class="comment">// Check if WiFi is available but MQTT client is not</span></div>
<div class="line"><span class="lineno">  312</span>    <span class="keywordflow">if</span> (WiFi.status() == WL_CONNECTED &amp;&amp;</div>
<div class="line"><span class="lineno">  313</span>        !<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.connected())</div>
<div class="line"><span class="lineno">  314</span>    {</div>
<div class="line"><span class="lineno">  315</span>      IPAddress ip;</div>
<div class="line"><span class="lineno">  316</span>      <span class="keywordflow">if</span> (WiFi.hostByName(<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a7464218df94ba7854cb34aaab314cbc2">broker_hostname</a>.c_str(), ip))</div>
<div class="line"><span class="lineno">  317</span>      {</div>
<div class="line"><span class="lineno">  318</span>        ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Resolved MQTT server [%s] as [%s]&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a7464218df94ba7854cb34aaab314cbc2">broker_hostname</a>.c_str(), ip.toString().c_str());</div>
<div class="line"><span class="lineno">  319</span>      }</div>
<div class="line"><span class="lineno">  320</span>      <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  321</span>      {</div>
<div class="line"><span class="lineno">  322</span>        ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failed to resolve MQTT server [%s]&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a7464218df94ba7854cb34aaab314cbc2">broker_hostname</a>.c_str());</div>
<div class="line"><span class="lineno">  323</span>        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  324</span>      }</div>
<div class="line"><span class="lineno">  325</span> </div>
<div class="line"><span class="lineno">  326</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Connecting to MQTT server [%s:%d]...&quot;</span>, ip.toString().c_str(), <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#ac26a2c6d2866b19ee035b735bdfaff54">conf::mqtt::PORT_NUMBER</a>);</div>
<div class="line"><span class="lineno">  327</span> </div>
<div class="line"><span class="lineno">  328</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.begin(ip, <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#ac26a2c6d2866b19ee035b735bdfaff54">conf::mqtt::PORT_NUMBER</a>, <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a2924692a0dca43597d2cc594cb0573d2">wifi_client</a>);</div>
<div class="line"><span class="lineno">  329</span> </div>
<div class="line"><span class="lineno">  330</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8af330c9d926f6ef6e6307ab3fd23834">callback</a> = [&amp;](String &amp;a, String &amp;b)</div>
<div class="line"><span class="lineno">  331</span>      { <span class="keywordflow">return</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a3ab102598ee93269de90a0170e024619">messageReceived</a>(a, b); };</div>
<div class="line"><span class="lineno">  332</span> </div>
<div class="line"><span class="lineno">  333</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.onMessage(<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8af330c9d926f6ef6e6307ab3fd23834">callback</a>);</div>
<div class="line"><span class="lineno">  334</span> </div>
<div class="line"><span class="lineno">  335</span>      <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.connect(<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#ac77de5d35fe86ccf4b23c97548187256">mqtt_client_name</a>.c_str(),</div>
<div class="line"><span class="lineno">  336</span>                          <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a02ce02db60b18f3de30e251ba14807bb">mqtt_user</a>.c_str(),</div>
<div class="line"><span class="lineno">  337</span>                          <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#ac4de362845adea42309283248654cf46">mqtt_password</a>.c_str(), <span class="keyword">false</span>))</div>
<div class="line"><span class="lineno">  338</span>      {</div>
<div class="line"><span class="lineno">  339</span>        ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failure to connect as client: %s with username %s, last error %d&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#ac77de5d35fe86ccf4b23c97548187256">mqtt_client_name</a>.c_str(), <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a02ce02db60b18f3de30e251ba14807bb">mqtt_user</a>.c_str(), <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.lastError());</div>
<div class="line"><span class="lineno">  340</span>        <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.disconnect();</div>
<div class="line"><span class="lineno">  341</span>      }</div>
<div class="line"><span class="lineno">  342</span> </div>
<div class="line"><span class="lineno">  343</span>      <span class="comment">// Setup subscriptions</span></div>
<div class="line"><span class="lineno">  344</span>      <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.connected())</div>
<div class="line"><span class="lineno">  345</span>      {</div>
<div class="line"><span class="lineno">  346</span>        std::stringstream tmp_topic;</div>
<div class="line"><span class="lineno">  347</span>        tmp_topic &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8790b1b9b5909541c62cd1ea7577e9d6">topic</a> &lt;&lt; <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a606e6b5c7c411ba632b27c92882edb32">conf::mqtt::response_topic</a>;</div>
<div class="line"><span class="lineno">  348</span>        <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8129677184366856b2f1c3a582e10bdb">response_topic</a>.assign(tmp_topic.str());</div>
<div class="line"><span class="lineno">  349</span> </div>
<div class="line"><span class="lineno">  350</span>        <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.subscribe(<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8129677184366856b2f1c3a582e10bdb">response_topic</a>.c_str()))</div>
<div class="line"><span class="lineno">  351</span>        {</div>
<div class="line"><span class="lineno">  352</span>          ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: failure to subscribe to reply topic %s&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8129677184366856b2f1c3a582e10bdb">response_topic</a>.c_str());</div>
<div class="line"><span class="lineno">  353</span>        }</div>
<div class="line"><span class="lineno">  354</span>        <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  355</span>        {</div>
<div class="line"><span class="lineno">  356</span>          ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: subscribed to reply topic %s&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8129677184366856b2f1c3a582e10bdb">response_topic</a>.c_str());</div>
<div class="line"><span class="lineno">  357</span>          <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">online</a> = <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  358</span>        }</div>
<div class="line"><span class="lineno">  359</span>        <span class="comment">// Announce the board to the server</span></div>
<div class="line"><span class="lineno">  360</span>        <span class="keywordflow">if</span> (<span class="keyword">auto</span> query = ServerMQTT::AliveQuery{}; <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aee0cf549bea2daebc3e08742853d36c1">publish</a>(query) == <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3a4586da37f65c0965ce6973ceb7f65c40">PublishResult::PublishedWithoutAnswer</a>)</div>
<div class="line"><span class="lineno">  361</span>        {</div>
<div class="line"><span class="lineno">  362</span>          ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: board announced to server&quot;</span>);</div>
<div class="line"><span class="lineno">  363</span>        }</div>
<div class="line"><span class="lineno">  364</span>        <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  365</span>        {</div>
<div class="line"><span class="lineno">  366</span>          ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: failure to announce board to server&quot;</span>);</div>
<div class="line"><span class="lineno">  367</span>        }</div>
<div class="line"><span class="lineno">  368</span>      }</div>
<div class="line"><span class="lineno">  369</span>      <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  370</span>      {</div>
<div class="line"><span class="lineno">  371</span>        ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failure to connect to MQTT server %s&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a7464218df94ba7854cb34aaab314cbc2">broker_hostname</a>.c_str());</div>
<div class="line"><span class="lineno">  372</span>      }</div>
<div class="line"><span class="lineno">  373</span>    }</div>
<div class="line"><span class="lineno">  374</span> </div>
<div class="line"><span class="lineno">  375</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.connected())</div>
<div class="line"><span class="lineno">  376</span>    {</div>
<div class="line"><span class="lineno">  377</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">online</a> = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  378</span>    }</div>
<div class="line"><span class="lineno">  379</span> </div>
<div class="line"><span class="lineno">  380</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">online</a>;</div>
<div class="line"><span class="lineno">  381</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a3ab102598ee93269de90a0170e024619"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a3ab102598ee93269de90a0170e024619">fabomatic::FabBackend::messageReceived</a></div><div class="ttdeci">auto messageReceived(String &amp;topic, String &amp;payload) -&gt; void</div><div class="ttdoc">Callback function for received MQTT messages.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00246">FabBackend.cpp:246</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a8129677184366856b2f1c3a582e10bdb"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a8129677184366856b2f1c3a582e10bdb">fabomatic::FabBackend::response_topic</a></div><div class="ttdeci">std::string response_topic</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00049">FabBackend.hpp:49</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a8af330c9d926f6ef6e6307ab3fd23834"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a8af330c9d926f6ef6e6307ab3fd23834">fabomatic::FabBackend::callback</a></div><div class="ttdeci">MQTTClientCallbackSimpleFunction callback</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00045">FabBackend.hpp:45</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ad928751b2f967feaac0f2cb708c0d6e9"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ad928751b2f967feaac0f2cb708c0d6e9">fabomatic::FabBackend::connectWiFi</a></div><div class="ttdeci">auto connectWiFi() -&gt; bool</div><div class="ttdoc">Connects to the WiFi network.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00259">FabBackend.cpp:259</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_aee0cf549bea2daebc3e08742853d36c1"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#aee0cf549bea2daebc3e08742853d36c1">fabomatic::FabBackend::publish</a></div><div class="ttdeci">auto publish(const QueryT &amp;payload) -&gt; PublishResult</div><div class="ttdoc">Publishes a query on the MQTT server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00141">FabBackend.cpp:141</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_tasks_xhtml_a5c20f560f5934822d39ba116a16f3ab6"><div class="ttname"><a href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">fabomatic::Tasks::delay</a></div><div class="ttdeci">auto delay(const milliseconds duration) -&gt; void</div><div class="ttdoc">Wait for a delay, allowing OTA updates.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00250">Tasks.cpp:250</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1mqtt_xhtml_a606e6b5c7c411ba632b27c92882edb32"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a606e6b5c7c411ba632b27c92882edb32">fabomatic::conf::mqtt::response_topic</a></div><div class="ttdeci">static constexpr std::string_view response_topic</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00222">conf.hpp:222</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1mqtt_xhtml_ac26a2c6d2866b19ee035b735bdfaff54"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#ac26a2c6d2866b19ee035b735bdfaff54">fabomatic::conf::mqtt::PORT_NUMBER</a></div><div class="ttdeci">static constexpr auto PORT_NUMBER</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00237">conf.hpp:237</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_fab_backend_8hpp_source.xhtml#l00040">broker_hostname</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00045">callback</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00035">client</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00259">connectWiFi()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00250">fabomatic::Tasks::delay()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00246">messageReceived()</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00043">mqtt_client_name</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00042">mqtt_password</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00041">mqtt_user</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00053">online</a>, <a class="el" href="conf_8hpp_source.xhtml#l00237">fabomatic::conf::mqtt::PORT_NUMBER</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00141">publish()</a>, <a class="el" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3a4586da37f65c0965ce6973ceb7f65c40">PublishedWithoutAnswer</a>, <a class="el" href="conf_8hpp_source.xhtml#l00222">fabomatic::conf::mqtt::response_topic</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00049">response_topic</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00048">topic</a>, and <a class="el" href="_fab_backend_8hpp_source.xhtml#l00046">wifi_client</a>.</p>

<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00402">processQuery()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00041">fabomatic::BoardLogic::refreshFromServer()</a>, <a class="el" href="main_8cpp_source.xhtml#l00042">fabomatic::taskConnect()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00079">fabomatic::tests::test_check_transmission()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00133">fabomatic::tests::test_fabserver_calls()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00097">fabomatic::tests::test_start_broker()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00222">fabomatic::tests::test_taskConnect()</a>, <a class="el" href="_auth_provider_8cpp_source.xhtml#l00054">fabomatic::AuthProvider::tryLogin()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00204">waitForAnswer()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_a1a45f556aadcbc428d14b7c7577ed43d_cgraph.svg" width="578" height="232"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_a1a45f556aadcbc428d14b7c7577ed43d_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ad928751b2f967feaac0f2cb708c0d6e9" name="ad928751b2f967feaac0f2cb708c0d6e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad928751b2f967feaac0f2cb708c0d6e9">&#9670;&#160;</a></span>connectWiFi()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::FabBackend::connectWiFi </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Connects to the WiFi network. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the connection succeeded, false otherwise. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00259">259</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  260</span>  {</div>
<div class="line"><span class="lineno">  261</span>    <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> NB_TRIES = 15;</div>
<div class="line"><span class="lineno">  262</span>    <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> DELAY_MS = 250ms;</div>
<div class="line"><span class="lineno">  263</span> </div>
<div class="line"><span class="lineno">  264</span>    <span class="comment">// Connect WiFi if needed</span></div>
<div class="line"><span class="lineno">  265</span>    <span class="keywordflow">if</span> (WiFi.status() != WL_CONNECTED)</div>
<div class="line"><span class="lineno">  266</span>    {</div>
<div class="line"><span class="lineno">  267</span>      WiFi.setAutoReconnect(<span class="keyword">true</span>);</div>
<div class="line"><span class="lineno">  268</span>      WiFi.persistent(<span class="keyword">true</span>);</div>
<div class="line"><span class="lineno">  269</span>      WiFi.mode(WIFI_STA);</div>
<div class="line"><span class="lineno">  270</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;FabServer::connectWiFi() : WiFi connection state=%d, connecting to SSID:%s (channel:%d)&quot;</span>, WiFi.status(), <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a893e412def82572f4281bdcd92bfcb36">wifi_ssid</a>.c_str(), <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a12a4f3f195db522c6b108deacf1219b9">channel</a>);</div>
<div class="line"><span class="lineno">  271</span>      WiFi.begin(<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a893e412def82572f4281bdcd92bfcb36">wifi_ssid</a>.data(), <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a532fe40b9761d95b1acc6572df24cd68">wifi_password</a>.data(), <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a12a4f3f195db522c6b108deacf1219b9">channel</a>);</div>
<div class="line"><span class="lineno">  272</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(DELAY_MS);</div>
<div class="line"><span class="lineno">  273</span>      <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; NB_TRIES; i++)</div>
<div class="line"><span class="lineno">  274</span>      {</div>
<div class="line"><span class="lineno">  275</span>        <span class="keywordflow">if</span> (WiFi.status() == WL_CONNECTED)</div>
<div class="line"><span class="lineno">  276</span>        {</div>
<div class="line"><span class="lineno">  277</span>          ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;FabServer::connectWiFi() : WiFi connection successful&quot;</span>);</div>
<div class="line"><span class="lineno">  278</span>          <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  279</span>        }</div>
<div class="line"><span class="lineno">  280</span>        <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(DELAY_MS);</div>
<div class="line"><span class="lineno">  281</span>      }</div>
<div class="line"><span class="lineno">  282</span>    }</div>
<div class="line"><span class="lineno">  283</span>    <span class="keywordflow">return</span> WiFi.status() == WL_CONNECTED;</div>
<div class="line"><span class="lineno">  284</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_fab_backend_8hpp_source.xhtml#l00055">channel</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00250">fabomatic::Tasks::delay()</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00039">wifi_password</a>, and <a class="el" href="_fab_backend_8hpp_source.xhtml#l00038">wifi_ssid</a>.</p>

<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">connect()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00097">fabomatic::tests::test_start_broker()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_ad928751b2f967feaac0f2cb708c0d6e9_cgraph.svg" width="372" height="68"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_ad928751b2f967feaac0f2cb708c0d6e9_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ad558116614ee45601f4665d395838727" name="ad558116614ee45601f4665d395838727"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad558116614ee45601f4665d395838727">&#9670;&#160;</a></span>disconnect()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::FabBackend::disconnect </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disconnects from the MQTT server. </p>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00386">386</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  387</span>  {</div>
<div class="line"><span class="lineno">  388</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.disconnect();</div>
<div class="line"><span class="lineno">  389</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a2924692a0dca43597d2cc594cb0573d2">wifi_client</a>.stop();</div>
<div class="line"><span class="lineno">  390</span>    <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(100ms);</div>
<div class="line"><span class="lineno">  391</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_fab_backend_8hpp_source.xhtml#l00035">client</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00250">fabomatic::Tasks::delay()</a>, and <a class="el" href="_fab_backend_8hpp_source.xhtml#l00046">wifi_client</a>.</p>

<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00402">processQuery()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00133">fabomatic::tests::test_fabserver_calls()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_ad558116614ee45601f4665d395838727_cgraph.svg" width="372" height="68"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_ad558116614ee45601f4665d395838727_icgraph.svg" width="475" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aa312ecaa96c4ccd3fc4e822b5495c8fe" name="aa312ecaa96c4ccd3fc4e822b5495c8fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa312ecaa96c4ccd3fc4e822b5495c8fe">&#9670;&#160;</a></span>finishUse()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml">ServerMQTT::SimpleResponse</a> &gt; fabomatic::FabBackend::finishUse </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a>&#160;</td>
          <td class="paramname"><em>uid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::chrono::seconds&#160;</td>
          <td class="paramname"><em>duration_s</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> -&gt; std::unique_ptr&lt;<a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml">ServerMQTT::SimpleResponse</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Registers the end of machine usage. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uid</td><td>The card UID of the user. </td></tr>
    <tr><td class="paramname">duration_s</td><td>The duration of usage in seconds. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A unique_ptr to the server response. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00540">540</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  541</span>  {</div>
<div class="line"><span class="lineno">  542</span>    <span class="keywordflow">return</span> processQuery&lt;ServerMQTT::SimpleResponse, ServerMQTT::StopUseQuery&gt;(uid, duration_s);</div>
<div class="line"><span class="lineno">  543</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00111">fabomatic::BoardLogic::logout()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00050">fabomatic::tests::test_create_buffered_messages()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00133">fabomatic::tests::test_fabserver_calls()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_aa312ecaa96c4ccd3fc4e822b5495c8fe_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ac80b4835d858bea27da461b18df5f570" name="ac80b4835d858bea27da461b18df5f570"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac80b4835d858bea27da461b18df5f570">&#9670;&#160;</a></span>hasBufferedMsg()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::FabBackend::hasBufferedMsg </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00588">588</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  589</span>  {</div>
<div class="line"><span class="lineno">  590</span>    <span class="keywordflow">return</span> this-&gt;<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a>.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">count</a>() &gt; 0;</div>
<div class="line"><span class="lineno">  591</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a9ff239a0ddbaed54bcf0a72f2517d7a0"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">fabomatic::Buffer::count</a></div><div class="ttdeci">auto count() const -&gt; size_t</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00062">BufferedMsg.cpp:62</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_afee0d715d6f61ca3306dd60de5b79fd1"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">fabomatic::FabBackend::buffer</a></div><div class="ttdeci">Buffer buffer</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00057">FabBackend.hpp:57</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_fab_backend_8hpp_source.xhtml#l00057">buffer</a>, and <a class="el" href="_buffered_msg_8cpp_source.xhtml#l00062">fabomatic::Buffer::count()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00402">processQuery()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00079">fabomatic::tests::test_check_transmission()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00050">fabomatic::tests::test_create_buffered_messages()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_ac80b4835d858bea27da461b18df5f570_cgraph.svg" width="340" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_ac80b4835d858bea27da461b18df5f570_icgraph.svg" width="502" height="183"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ac33b68d0146302e9db6a0adc7b8c3ac0" name="ac33b68d0146302e9db6a0adc7b8c3ac0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac33b68d0146302e9db6a0adc7b8c3ac0">&#9670;&#160;</a></span>inUse()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml">ServerMQTT::SimpleResponse</a> &gt; fabomatic::FabBackend::inUse </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a>&#160;</td>
          <td class="paramname"><em>uid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::chrono::seconds&#160;</td>
          <td class="paramname"><em>duration_s</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> -&gt; std::unique_ptr&lt;<a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml">ServerMQTT::SimpleResponse</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Informs the backend that the machine is in use. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uid</td><td>The card UID of the user. </td></tr>
    <tr><td class="paramname">duration_s</td><td>The duration of usage in seconds. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A unique_ptr to the server response. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00552">552</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  553</span>  {</div>
<div class="line"><span class="lineno">  554</span>    <span class="keywordflow">return</span> processQuery&lt;ServerMQTT::SimpleResponse, ServerMQTT::InUseQuery&gt;(uid, duration_s);</div>
<div class="line"><span class="lineno">  555</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="test__mqtt_8cpp_source.xhtml#l00050">fabomatic::tests::test_create_buffered_messages()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00133">fabomatic::tests::test_fabserver_calls()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_ac33b68d0146302e9db6a0adc7b8c3ac0_icgraph.svg" width="502" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aef092e0e1db0c3539d5474fad2456255" name="aef092e0e1db0c3539d5474fad2456255"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef092e0e1db0c3539d5474fad2456255">&#9670;&#160;</a></span>isOnline()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::FabBackend::isOnline </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the client is online. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the client is online, false otherwise. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00235">235</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  236</span>  {</div>
<div class="line"><span class="lineno">  237</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">online</a>;</div>
<div class="line"><span class="lineno">  238</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_fab_backend_8hpp_source.xhtml#l00053">online</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00498">fabomatic::BoardLogic::blinkLed()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00126">fabomatic::BoardLogic::longTap()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00402">processQuery()</a>, <a class="el" href="main_8cpp_source.xhtml#l00042">fabomatic::taskConnect()</a>, <a class="el" href="main_8cpp_source.xhtml#l00184">fabomatic::taskIsAlive()</a>, <a class="el" href="main_8cpp_source.xhtml#l00175">fabomatic::taskMQTTClientLoop()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00133">fabomatic::tests::test_fabserver_calls()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00222">fabomatic::tests::test_taskConnect()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00311">fabomatic::tests::test_taskMQTTAlive()</a>, <a class="el" href="_auth_provider_8cpp_source.xhtml#l00054">fabomatic::AuthProvider::tryLogin()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00284">fabomatic::BoardLogic::updateLCD()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_aef092e0e1db0c3539d5474fad2456255_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a39353e6b4057e97b216a520fc7bef017" name="a39353e6b4057e97b216a520fc7bef017"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39353e6b4057e97b216a520fc7bef017">&#9670;&#160;</a></span>loadBuffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::FabBackend::loadBuffer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfabomatic_1_1_buffer.xhtml">Buffer</a> &amp;&#160;</td>
          <td class="paramname"><em>new_buffer</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00654">654</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  655</span>  {</div>
<div class="line"><span class="lineno">  656</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a> = new_buffer;</div>
<div class="line"><span class="lineno">  657</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a>.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a0925c3a370f243ae3455108189e1afc6">setChanged</a>(<span class="keyword">false</span>);</div>
<div class="line"><span class="lineno">  658</span>    ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Loaded buffer with %d messages&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a>.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">count</a>());</div>
<div class="line"><span class="lineno">  659</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a0925c3a370f243ae3455108189e1afc6"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a0925c3a370f243ae3455108189e1afc6">fabomatic::Buffer::setChanged</a></div><div class="ttdeci">auto setChanged(bool new_value) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00046">BufferedMsg.hpp:46</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">configure()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_a39353e6b4057e97b216a520fc7bef017_icgraph.svg" width="100%" height="535"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="aaf05998bb9dec17ae98283969109bb2d" name="aaf05998bb9dec17ae98283969109bb2d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf05998bb9dec17ae98283969109bb2d">&#9670;&#160;</a></span>loop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::FabBackend::loop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Main loop for the MQTT client. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the client is running successfully, false otherwise. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00184">184</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  185</span>  {</div>
<div class="line"><span class="lineno">  186</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.loop())</div>
<div class="line"><span class="lineno">  187</span>    {</div>
<div class="line"><span class="lineno">  188</span>      <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">online</a>)</div>
<div class="line"><span class="lineno">  189</span>      {</div>
<div class="line"><span class="lineno">  190</span>        ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: connection lost&quot;</span>);</div>
<div class="line"><span class="lineno">  191</span>      }</div>
<div class="line"><span class="lineno">  192</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">online</a> = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  193</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  194</span>    }</div>
<div class="line"><span class="lineno">  195</span>    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  196</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_fab_backend_8hpp_source.xhtml#l00035">client</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00053">online</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00175">fabomatic::taskMQTTClientLoop()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00133">fabomatic::tests::test_fabserver_calls()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00311">fabomatic::tests::test_taskMQTTAlive()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_aaf05998bb9dec17ae98283969109bb2d_icgraph.svg" width="526" height="167"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a3ab102598ee93269de90a0170e024619" name="a3ab102598ee93269de90a0170e024619"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ab102598ee93269de90a0170e024619">&#9670;&#160;</a></span>messageReceived()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::FabBackend::messageReceived </td>
          <td>(</td>
          <td class="paramtype">String &amp;&#160;</td>
          <td class="paramname"><em>s_topic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">String &amp;&#160;</td>
          <td class="paramname"><em>s_payload</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> -&gt; void</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Callback function for received MQTT messages. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s_topic</td><td>The topic the message was received on. </td></tr>
    <tr><td class="paramname">s_payload</td><td>The payload of the message. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00246">246</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  247</span>  {</div>
<div class="line"><span class="lineno">  248</span>    ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: Received on %s -&gt; %s&quot;</span>, s_topic.c_str(), s_payload.c_str());</div>
<div class="line"><span class="lineno">  249</span> </div>
<div class="line"><span class="lineno">  250</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a0308ae992bc86c1b41bdd78f9536f553">last_reply</a>.assign(s_payload.c_str());</div>
<div class="line"><span class="lineno">  251</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#ab91778bc8d79c8265b68b00ff01b17e5">answer_pending</a> = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  252</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a0308ae992bc86c1b41bdd78f9536f553"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a0308ae992bc86c1b41bdd78f9536f553">fabomatic::FabBackend::last_reply</a></div><div class="ttdeci">std::string last_reply</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00051">FabBackend.hpp:51</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ab91778bc8d79c8265b68b00ff01b17e5"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ab91778bc8d79c8265b68b00ff01b17e5">fabomatic::FabBackend::answer_pending</a></div><div class="ttdeci">bool answer_pending</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00054">FabBackend.hpp:54</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_fab_backend_8hpp_source.xhtml#l00054">answer_pending</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00051">last_reply</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">connect()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_a3ab102598ee93269de90a0170e024619_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a9d63fd3d34cdbc3661f4d496f5805c32" name="a9d63fd3d34cdbc3661f4d496f5805c32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d63fd3d34cdbc3661f4d496f5805c32">&#9670;&#160;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp; fabomatic::FabBackend::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aeec6b24254c7320f1ec17d362644a92b" name="aeec6b24254c7320f1ec17d362644a92b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeec6b24254c7320f1ec17d362644a92b">&#9670;&#160;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp; fabomatic::FabBackend::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaf87e6d61085a67255fac06e491fbf90" name="aaf87e6d61085a67255fac06e491fbf90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf87e6d61085a67255fac06e491fbf90">&#9670;&#160;</a></span>processQuery() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename RespT , typename QueryT , typename... QueryArgs&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::FabBackend::processQuery </td>
          <td>(</td>
          <td class="paramtype">QueryArgs &amp;&amp;&#160;</td>
          <td class="paramname"><em>...</em></td><td>)</td>
          <td> -&gt;  std::unique_ptr&lt; RespT &gt;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaa691642839e9196217684949621f2a4" name="aaa691642839e9196217684949621f2a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa691642839e9196217684949621f2a4">&#9670;&#160;</a></span>processQuery() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename RespT , typename QueryT , typename... QueryArgs&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; RespT &gt; fabomatic::FabBackend::processQuery </td>
          <td>(</td>
          <td class="paramtype">QueryArgs &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processes a query and returns the response. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">RespT</td><td>The type of the response. </td></tr>
    <tr><td class="paramname">QueryT</td><td>The type of the query. </td></tr>
    <tr><td class="paramname">...Args</td><td>The arguments to be passed to the query constructor. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A unique_ptr to the response. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00402">402</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  403</span>  {</div>
<div class="line"><span class="lineno">  404</span>    <span class="keyword">static_assert</span>(std::is_base_of&lt;ServerMQTT::Query, QueryT&gt;::value, <span class="stringliteral">&quot;QueryT must inherit from Query&quot;</span>);</div>
<div class="line"><span class="lineno">  405</span>    <span class="keyword">static_assert</span>(std::is_base_of&lt;ServerMQTT::Response, RespT&gt;::value, <span class="stringliteral">&quot;RespT must inherit from Response&quot;</span>);</div>
<div class="line"><span class="lineno">  406</span>    QueryT query{args...};</div>
<div class="line"><span class="lineno">  407</span> </div>
<div class="line"><span class="lineno">  408</span>    <span class="keyword">auto</span> nb_tries = 0;</div>
<div class="line"><span class="lineno">  409</span>    <span class="keywordflow">while</span> (<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>() &amp;&amp; <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">hasBufferedMsg</a>() &amp;&amp; !<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a4d0b8d49942ff06c02abbcbfe7a4784a">transmitBuffer</a>() &amp;&amp; nb_tries &lt; 3)</div>
<div class="line"><span class="lineno">  410</span>    {</div>
<div class="line"><span class="lineno">  411</span>      <span class="comment">// To preserve chronological order, we cannot send new messages until the old ones have been sent.</span></div>
<div class="line"><span class="lineno">  412</span>      ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Online with pending messages that could not be transmitted, retrying...&quot;</span>);</div>
<div class="line"><span class="lineno">  413</span> </div>
<div class="line"><span class="lineno">  414</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(250ms);</div>
<div class="line"><span class="lineno">  415</span> </div>
<div class="line"><span class="lineno">  416</span>      <span class="keywordflow">if</span> (!<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>())</div>
<div class="line"><span class="lineno">  417</span>      {</div>
<div class="line"><span class="lineno">  418</span>        <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">connect</a>();</div>
<div class="line"><span class="lineno">  419</span>      }</div>
<div class="line"><span class="lineno">  420</span>      nb_tries++;</div>
<div class="line"><span class="lineno">  421</span>    }</div>
<div class="line"><span class="lineno">  422</span> </div>
<div class="line"><span class="lineno">  423</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>() &amp;&amp; !<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">hasBufferedMsg</a>())</div>
<div class="line"><span class="lineno">  424</span>    {</div>
<div class="line"><span class="lineno">  425</span>      <span class="keywordflow">if</span> (<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a8f5341d851e1cd24dfaa64be0237dd5a">publishWithReply</a>(query) == <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3af6278bbfdfc6fff58dae91a03d739c93">PublishResult::PublishedWithAnswer</a>)</div>
<div class="line"><span class="lineno">  426</span>      {</div>
<div class="line"><span class="lineno">  427</span>        <span class="comment">// Deserialize the JSON document</span></div>
<div class="line"><span class="lineno">  428</span>        <span class="keyword">const</span> <span class="keyword">auto</span> payload = <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a0308ae992bc86c1b41bdd78f9536f553">last_reply</a>.c_str();</div>
<div class="line"><span class="lineno">  429</span>        <span class="keywordflow">if</span> (DeserializationError error = deserializeJson(<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a1218ae004e0146262801967ee50ec17a">doc</a>, payload))</div>
<div class="line"><span class="lineno">  430</span>        {</div>
<div class="line"><span class="lineno">  431</span>          ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failed to parse json: %s (%s)&quot;</span>, payload, error.c_str());</div>
<div class="line"><span class="lineno">  432</span>          <span class="keywordflow">return</span> std::make_unique&lt;RespT&gt;(<span class="keyword">false</span>);</div>
<div class="line"><span class="lineno">  433</span>        }</div>
<div class="line"><span class="lineno">  434</span>        <span class="keywordflow">return</span> RespT::fromJson(<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a1218ae004e0146262801967ee50ec17a">doc</a>);</div>
<div class="line"><span class="lineno">  435</span>      }</div>
<div class="line"><span class="lineno">  436</span>      <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  437</span>      {</div>
<div class="line"><span class="lineno">  438</span>        ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failed to publish query %s&quot;</span>, query.payload().data());</div>
<div class="line"><span class="lineno">  439</span>        this-&gt;<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ad558116614ee45601f4665d395838727">disconnect</a>();</div>
<div class="line"><span class="lineno">  440</span>      }</div>
<div class="line"><span class="lineno">  441</span>    }</div>
<div class="line"><span class="lineno">  442</span> </div>
<div class="line"><span class="lineno">  443</span>    <span class="keywordflow">if</span> (query.buffered())</div>
<div class="line"><span class="lineno">  444</span>    {</div>
<div class="line"><span class="lineno">  445</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;msg = BufferedMsg{query.payload(), <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8790b1b9b5909541c62cd1ea7577e9d6">topic</a>, query.waitForReply()};</div>
<div class="line"><span class="lineno">  446</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a>.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#aad578ef8cbecdafb8c5ade345df415a3">push_back</a>(msg);</div>
<div class="line"><span class="lineno">  447</span>    }</div>
<div class="line"><span class="lineno">  448</span> </div>
<div class="line"><span class="lineno">  449</span>    <span class="keywordflow">return</span> std::make_unique&lt;RespT&gt;(<span class="keyword">false</span>);</div>
<div class="line"><span class="lineno">  450</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_aad578ef8cbecdafb8c5ade345df415a3"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#aad578ef8cbecdafb8c5ade345df415a3">fabomatic::Buffer::push_back</a></div><div class="ttdeci">auto push_back(const BufferedMsg &amp;message) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00009">BufferedMsg.cpp:9</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a1218ae004e0146262801967ee50ec17a"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a1218ae004e0146262801967ee50ec17a">fabomatic::FabBackend::doc</a></div><div class="ttdeci">JsonDocument doc</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00036">FabBackend.hpp:36</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a1a45f556aadcbc428d14b7c7577ed43d"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">fabomatic::FabBackend::connect</a></div><div class="ttdeci">auto connect() -&gt; bool</div><div class="ttdoc">Establishes a connection to the WiFi network and the MQTT server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00291">FabBackend.cpp:291</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a4d0b8d49942ff06c02abbcbfe7a4784a"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a4d0b8d49942ff06c02abbcbfe7a4784a">fabomatic::FabBackend::transmitBuffer</a></div><div class="ttdeci">auto transmitBuffer() -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00593">FabBackend.cpp:593</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a8f5341d851e1cd24dfaa64be0237dd5a"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a8f5341d851e1cd24dfaa64be0237dd5a">fabomatic::FabBackend::publishWithReply</a></div><div class="ttdeci">auto publishWithReply(const ServerMQTT::Query &amp;payload) -&gt; PublishResult</div><div class="ttdoc">Posts a query to the MQTT server and waits for a reply.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00061">FabBackend.cpp:61</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ac80b4835d858bea27da461b18df5f570"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">fabomatic::FabBackend::hasBufferedMsg</a></div><div class="ttdeci">auto hasBufferedMsg() const -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00588">FabBackend.cpp:588</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ad558116614ee45601f4665d395838727"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ad558116614ee45601f4665d395838727">fabomatic::FabBackend::disconnect</a></div><div class="ttdeci">auto disconnect() -&gt; void</div><div class="ttdoc">Disconnects from the MQTT server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00386">FabBackend.cpp:386</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_aef092e0e1db0c3539d5474fad2456255"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">fabomatic::FabBackend::isOnline</a></div><div class="ttdeci">auto isOnline() const -&gt; bool</div><div class="ttdoc">Checks if the client is online.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00235">FabBackend.cpp:235</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_fab_backend_8hpp_source.xhtml#l00057">buffer</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">connect()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00250">fabomatic::Tasks::delay()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00386">disconnect()</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00036">doc</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00588">hasBufferedMsg()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00235">isOnline()</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00051">last_reply</a>, <a class="el" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3af6278bbfdfc6fff58dae91a03d739c93">PublishedWithAnswer</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00061">publishWithReply()</a>, <a class="el" href="_buffered_msg_8cpp_source.xhtml#l00009">fabomatic::Buffer::push_back()</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00048">topic</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00593">transmitBuffer()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_aaa691642839e9196217684949621f2a4_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="adc71dbb44c3446fa985744ad4563faeb" name="adc71dbb44c3446fa985744ad4563faeb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc71dbb44c3446fa985744ad4563faeb">&#9670;&#160;</a></span>processQuery() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename QueryT , typename... QueryArgs&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::FabBackend::processQuery </td>
          <td>(</td>
          <td class="paramtype">QueryArgs &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processes a query. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">QueryT</td><td>The type of the query. </td></tr>
    <tr><td class="paramname">...Args</td><td>The arguments to be passed to the query constructor. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the query was processed successfully, false otherwise. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00460">460</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  461</span>  {</div>
<div class="line"><span class="lineno">  462</span>    <span class="keyword">static_assert</span>(std::is_base_of&lt;ServerMQTT::Query, QueryT&gt;::value, <span class="stringliteral">&quot;QueryT must inherit from Query&quot;</span>);</div>
<div class="line"><span class="lineno">  463</span>    QueryT query{args...};</div>
<div class="line"><span class="lineno">  464</span> </div>
<div class="line"><span class="lineno">  465</span>    <span class="keyword">auto</span> nb_tries = 0;</div>
<div class="line"><span class="lineno">  466</span>    <span class="keywordflow">while</span> (<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>() &amp;&amp; <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">hasBufferedMsg</a>() &amp;&amp; !<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a4d0b8d49942ff06c02abbcbfe7a4784a">transmitBuffer</a>() &amp;&amp; nb_tries &lt; 3)</div>
<div class="line"><span class="lineno">  467</span>    {</div>
<div class="line"><span class="lineno">  468</span>      <span class="comment">// To preserve chronological order, we cannot send new messages until the old ones have been sent.</span></div>
<div class="line"><span class="lineno">  469</span>      ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Online with pending messages that could not be transmitted, retrying...&quot;</span>);</div>
<div class="line"><span class="lineno">  470</span> </div>
<div class="line"><span class="lineno">  471</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(250ms);</div>
<div class="line"><span class="lineno">  472</span> </div>
<div class="line"><span class="lineno">  473</span>      <span class="keywordflow">if</span> (!<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>())</div>
<div class="line"><span class="lineno">  474</span>      {</div>
<div class="line"><span class="lineno">  475</span>        <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">connect</a>();</div>
<div class="line"><span class="lineno">  476</span>      }</div>
<div class="line"><span class="lineno">  477</span>      nb_tries++;</div>
<div class="line"><span class="lineno">  478</span>    }</div>
<div class="line"><span class="lineno">  479</span> </div>
<div class="line"><span class="lineno">  480</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>() &amp;&amp; !<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">hasBufferedMsg</a>())</div>
<div class="line"><span class="lineno">  481</span>    {</div>
<div class="line"><span class="lineno">  482</span>      <span class="keywordflow">if</span> (<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aee0cf549bea2daebc3e08742853d36c1">publish</a>(query) == <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3a4586da37f65c0965ce6973ceb7f65c40">PublishResult::PublishedWithoutAnswer</a>)</div>
<div class="line"><span class="lineno">  483</span>      {</div>
<div class="line"><span class="lineno">  484</span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  485</span>      }</div>
<div class="line"><span class="lineno">  486</span>      <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  487</span>      {</div>
<div class="line"><span class="lineno">  488</span>        ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failed to publish query %s&quot;</span>, query.payload().data());</div>
<div class="line"><span class="lineno">  489</span>        this-&gt;<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ad558116614ee45601f4665d395838727">disconnect</a>();</div>
<div class="line"><span class="lineno">  490</span>      }</div>
<div class="line"><span class="lineno">  491</span>    }</div>
<div class="line"><span class="lineno">  492</span> </div>
<div class="line"><span class="lineno">  493</span>    <span class="keywordflow">if</span> (query.buffered())</div>
<div class="line"><span class="lineno">  494</span>    {</div>
<div class="line"><span class="lineno">  495</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;msg = BufferedMsg{query.payload(), <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8790b1b9b5909541c62cd1ea7577e9d6">topic</a>, query.waitForReply()};</div>
<div class="line"><span class="lineno">  496</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a>.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#aad578ef8cbecdafb8c5ade345df415a3">push_back</a>(msg);</div>
<div class="line"><span class="lineno">  497</span>    }</div>
<div class="line"><span class="lineno">  498</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  499</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_fab_backend_8hpp_source.xhtml#l00057">buffer</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">connect()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00250">fabomatic::Tasks::delay()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00386">disconnect()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00588">hasBufferedMsg()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00235">isOnline()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00141">publish()</a>, <a class="el" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3a4586da37f65c0965ce6973ceb7f65c40">PublishedWithoutAnswer</a>, <a class="el" href="_buffered_msg_8cpp_source.xhtml#l00009">fabomatic::Buffer::push_back()</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00048">topic</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00593">transmitBuffer()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_adc71dbb44c3446fa985744ad4563faeb_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a22f82810e59bb150c2fd6a5ee910f22d" name="a22f82810e59bb150c2fd6a5ee910f22d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22f82810e59bb150c2fd6a5ee910f22d">&#9670;&#160;</a></span>processQuery() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename QueryT , typename... QueryArgs&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::FabBackend::processQuery </td>
          <td>(</td>
          <td class="paramtype">QueryArgs &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td> -&gt;  bool</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aee0cf549bea2daebc3e08742853d36c1" name="aee0cf549bea2daebc3e08742853d36c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee0cf549bea2daebc3e08742853d36c1">&#9670;&#160;</a></span>publish() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename QueryT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::FabBackend::publish </td>
          <td>(</td>
          <td class="paramtype">const QueryT &amp;&#160;</td>
          <td class="paramname"><em>query</em></td><td>)</td>
          <td> -&gt; <a class="el" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3">PublishResult</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Publishes a query on the MQTT server. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">query</td><td>The query to be published. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the query was published successfully, false otherwise. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00141">141</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  142</span>  {</div>
<div class="line"><span class="lineno">  143</span>    String s_payload(query.payload().c_str());</div>
<div class="line"><span class="lineno">  144</span>    std::string temp_topic;</div>
<div class="line"><span class="lineno">  145</span> </div>
<div class="line"><span class="lineno">  146</span>    <span class="comment">// Check at compile-time if topic is specified</span></div>
<div class="line"><span class="lineno">  147</span>    <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (std::is_base_of&lt;BufferedQuery, QueryT&gt;::value)</div>
<div class="line"><span class="lineno">  148</span>    {</div>
<div class="line"><span class="lineno">  149</span>      temp_topic = <span class="keyword">static_cast&lt;</span>BufferedQuery<span class="keyword">&gt;</span>(query).<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8790b1b9b5909541c62cd1ea7577e9d6">topic</a>();</div>
<div class="line"><span class="lineno">  150</span>    }</div>
<div class="line"><span class="lineno">  151</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  152</span>    {</div>
<div class="line"><span class="lineno">  153</span>      <span class="comment">// Just use the default topic for the machine</span></div>
<div class="line"><span class="lineno">  154</span>      temp_topic = this-&gt;<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8790b1b9b5909541c62cd1ea7577e9d6">topic</a>;</div>
<div class="line"><span class="lineno">  155</span>    }</div>
<div class="line"><span class="lineno">  156</span> </div>
<div class="line"><span class="lineno">  157</span>    String s_topic{temp_topic.c_str()};</div>
<div class="line"><span class="lineno">  158</span> </div>
<div class="line"><span class="lineno">  159</span>    <span class="keywordflow">if</span> (s_payload.length() + s_topic.length() &gt; <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a9367a14306331d326e5e7971a0728633">FabBackend::MAX_MSG_SIZE</a> - 8)</div>
<div class="line"><span class="lineno">  160</span>    {</div>
<div class="line"><span class="lineno">  161</span>      ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: Message is too long: %s&quot;</span>, s_payload.c_str());</div>
<div class="line"><span class="lineno">  162</span>      <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3ae8c9e67c4a17670c41289fcc8c3a38c5">PublishResult::ErrorNotPublished</a>;</div>
<div class="line"><span class="lineno">  163</span>    }</div>
<div class="line"><span class="lineno">  164</span> </div>
<div class="line"><span class="lineno">  165</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#ab91778bc8d79c8265b68b00ff01b17e5">answer_pending</a> = query.waitForReply(); <span class="comment">// Don&#39;t wait if not needed</span></div>
<div class="line"><span class="lineno">  166</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a567eee830bd65f941ba98428e2642f4f">last_query</a>.assign(s_payload.c_str());</div>
<div class="line"><span class="lineno">  167</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a0308ae992bc86c1b41bdd78f9536f553">last_reply</a>.clear();</div>
<div class="line"><span class="lineno">  168</span> </div>
<div class="line"><span class="lineno">  169</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: sending message %s on topic %s&quot;</span>, s_payload.c_str(), s_topic.c_str());</div>
<div class="line"><span class="lineno">  170</span> </div>
<div class="line"><span class="lineno">  171</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.publish(s_topic, s_payload))</div>
<div class="line"><span class="lineno">  172</span>    {</div>
<div class="line"><span class="lineno">  173</span>      <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3a4586da37f65c0965ce6973ceb7f65c40">PublishResult::PublishedWithoutAnswer</a>;</div>
<div class="line"><span class="lineno">  174</span>    }</div>
<div class="line"><span class="lineno">  175</span> </div>
<div class="line"><span class="lineno">  176</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3ae8c9e67c4a17670c41289fcc8c3a38c5">PublishResult::ErrorNotPublished</a>;</div>
<div class="line"><span class="lineno">  177</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a567eee830bd65f941ba98428e2642f4f"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a567eee830bd65f941ba98428e2642f4f">fabomatic::FabBackend::last_query</a></div><div class="ttdeci">std::string last_query</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00050">FabBackend.hpp:50</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a9367a14306331d326e5e7971a0728633"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a9367a14306331d326e5e7971a0728633">fabomatic::FabBackend::MAX_MSG_SIZE</a></div><div class="ttdeci">static constexpr auto MAX_MSG_SIZE</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00027">FabBackend.hpp:27</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_fab_backend_8hpp_source.xhtml#l00027">MAX_MSG_SIZE</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">connect()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00460">processQuery()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_aee0cf549bea2daebc3e08742853d36c1_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a0510999bee5e4fe5d31d7ad5496f889c" name="a0510999bee5e4fe5d31d7ad5496f889c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0510999bee5e4fe5d31d7ad5496f889c">&#9670;&#160;</a></span>publish() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::FabBackend::publish </td>
          <td>(</td>
          <td class="paramtype">String&#160;</td>
          <td class="paramname"><em>mqtt_topic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">String&#160;</td>
          <td class="paramname"><em>mqtt_payload</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>waitForAnswer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Publishes a message on the MQTT server. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mqtt_topic</td><td>The topic to publish to. </td></tr>
    <tr><td class="paramname">mqtt_payload</td><td>The payload to publish. </td></tr>
    <tr><td class="paramname">waitForAnswer</td><td>Whether to wait for an answer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the message was published successfully, false otherwise. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00118">118</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  119</span>  {</div>
<div class="line"><span class="lineno">  120</span>    <span class="keywordflow">if</span> (mqtt_payload.length() + mqtt_topic.length() &gt; <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a9367a14306331d326e5e7971a0728633">FabBackend::MAX_MSG_SIZE</a> - 8)</div>
<div class="line"><span class="lineno">  121</span>    {</div>
<div class="line"><span class="lineno">  122</span>      ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: Message is too long: %s&quot;</span>, mqtt_payload.c_str());</div>
<div class="line"><span class="lineno">  123</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  124</span>    }</div>
<div class="line"><span class="lineno">  125</span> </div>
<div class="line"><span class="lineno">  126</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#ab91778bc8d79c8265b68b00ff01b17e5">answer_pending</a> = <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a04951b9823ac466be2285640171013e5">waitForAnswer</a>;</div>
<div class="line"><span class="lineno">  127</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a567eee830bd65f941ba98428e2642f4f">last_query</a>.assign(mqtt_payload.c_str());</div>
<div class="line"><span class="lineno">  128</span> </div>
<div class="line"><span class="lineno">  129</span>    ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: sending message %s on topic %s&quot;</span>, mqtt_payload.c_str(), mqtt_topic.c_str());</div>
<div class="line"><span class="lineno">  130</span> </div>
<div class="line"><span class="lineno">  131</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.publish(mqtt_topic.c_str(), mqtt_payload.c_str());</div>
<div class="line"><span class="lineno">  132</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a04951b9823ac466be2285640171013e5"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a04951b9823ac466be2285640171013e5">fabomatic::FabBackend::waitForAnswer</a></div><div class="ttdeci">auto waitForAnswer(std::chrono::milliseconds timeout) -&gt; bool</div><div class="ttdoc">Waits for an answer from the MQTT server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00204">FabBackend.cpp:204</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_fab_backend_8hpp_source.xhtml#l00054">answer_pending</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00035">client</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00050">last_query</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00027">MAX_MSG_SIZE</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00204">waitForAnswer()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_a0510999bee5e4fe5d31d7ad5496f889c_cgraph.svg" width="100%" height="508"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a8f5341d851e1cd24dfaa64be0237dd5a" name="a8f5341d851e1cd24dfaa64be0237dd5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f5341d851e1cd24dfaa64be0237dd5a">&#9670;&#160;</a></span>publishWithReply()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::FabBackend::publishWithReply </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml">ServerMQTT::Query</a> &amp;&#160;</td>
          <td class="paramname"><em>query</em></td><td>)</td>
          <td> -&gt; <a class="el" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3">PublishResult</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Posts a query to the MQTT server and waits for a reply. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">query</td><td>The query to be posted. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the server answered, false otherwise. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00061">61</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   62</span>  {</div>
<div class="line"><span class="lineno">   63</span>    <span class="keyword">auto</span> try_cpt = 0;</div>
<div class="line"><span class="lineno">   64</span>    <span class="keyword">auto</span> published = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">   65</span> </div>
<div class="line"><span class="lineno">   66</span>    <span class="keywordflow">while</span> (try_cpt &lt; <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a9385c322eb16f7f09992855dec71df20">conf::mqtt::MAX_TRIES</a>)</div>
<div class="line"><span class="lineno">   67</span>    {</div>
<div class="line"><span class="lineno">   68</span>      try_cpt++;</div>
<div class="line"><span class="lineno">   69</span> </div>
<div class="line"><span class="lineno">   70</span>      <span class="keywordflow">if</span> (!published)</div>
<div class="line"><span class="lineno">   71</span>      {</div>
<div class="line"><span class="lineno">   72</span>        <span class="keywordflow">if</span> (<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aee0cf549bea2daebc3e08742853d36c1">publish</a>(query) == <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3a4586da37f65c0965ce6973ceb7f65c40">PublishResult::PublishedWithoutAnswer</a>)</div>
<div class="line"><span class="lineno">   73</span>        {</div>
<div class="line"><span class="lineno">   74</span>          published = <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">   75</span>        }</div>
<div class="line"><span class="lineno">   76</span>        <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">   77</span>        {</div>
<div class="line"><span class="lineno">   78</span>          ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: failure to send query %s&quot;</span>, query.payload().data());</div>
<div class="line"><span class="lineno">   79</span>          <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a8418761ec7353545c7130692339b9cc6">conf::mqtt::TIMEOUT_REPLY_SERVER</a>);</div>
<div class="line"><span class="lineno">   80</span>        }</div>
<div class="line"><span class="lineno">   81</span>      }</div>
<div class="line"><span class="lineno">   82</span> </div>
<div class="line"><span class="lineno">   83</span>      <span class="keywordflow">if</span> (<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a04951b9823ac466be2285640171013e5">waitForAnswer</a>(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a8418761ec7353545c7130692339b9cc6">conf::mqtt::TIMEOUT_REPLY_SERVER</a>))</div>
<div class="line"><span class="lineno">   84</span>      {</div>
<div class="line"><span class="lineno">   85</span>        ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: received answer: %s&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a0308ae992bc86c1b41bdd78f9536f553">last_reply</a>.data());</div>
<div class="line"><span class="lineno">   86</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3af6278bbfdfc6fff58dae91a03d739c93">PublishResult::PublishedWithAnswer</a>;</div>
<div class="line"><span class="lineno">   87</span>      }</div>
<div class="line"><span class="lineno">   88</span> </div>
<div class="line"><span class="lineno">   89</span>      ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: no answer received, retrying %d/%d&quot;</span>, try_cpt, <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a9385c322eb16f7f09992855dec71df20">conf::mqtt::MAX_TRIES</a>);</div>
<div class="line"><span class="lineno">   90</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a8418761ec7353545c7130692339b9cc6">conf::mqtt::TIMEOUT_REPLY_SERVER</a>);</div>
<div class="line"><span class="lineno">   91</span>    }</div>
<div class="line"><span class="lineno">   92</span> </div>
<div class="line"><span class="lineno">   93</span>    ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: failure to send query %s&quot;</span>, query.payload().data());</div>
<div class="line"><span class="lineno">   94</span> </div>
<div class="line"><span class="lineno">   95</span>    <span class="comment">// Do not send twice if response did not arrive</span></div>
<div class="line"><span class="lineno">   96</span>    <span class="keywordflow">if</span> (query.buffered() &amp;&amp; !published)</div>
<div class="line"><span class="lineno">   97</span>    {</div>
<div class="line"><span class="lineno">   98</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;msg = BufferedMsg{query.payload(), <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8790b1b9b5909541c62cd1ea7577e9d6">topic</a>, query.waitForReply()};</div>
<div class="line"><span class="lineno">   99</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a>.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#aad578ef8cbecdafb8c5ade345df415a3">push_back</a>(msg);</div>
<div class="line"><span class="lineno">  100</span>    }</div>
<div class="line"><span class="lineno">  101</span> </div>
<div class="line"><span class="lineno">  102</span>    <span class="keywordflow">if</span> (published)</div>
<div class="line"><span class="lineno">  103</span>    {</div>
<div class="line"><span class="lineno">  104</span>      <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3a4586da37f65c0965ce6973ceb7f65c40">PublishResult::PublishedWithoutAnswer</a>;</div>
<div class="line"><span class="lineno">  105</span>    }</div>
<div class="line"><span class="lineno">  106</span> </div>
<div class="line"><span class="lineno">  107</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3ae8c9e67c4a17670c41289fcc8c3a38c5">PublishResult::ErrorNotPublished</a>;</div>
<div class="line"><span class="lineno">  108</span>  }</div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1mqtt_xhtml_a8418761ec7353545c7130692339b9cc6"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a8418761ec7353545c7130692339b9cc6">fabomatic::conf::mqtt::TIMEOUT_REPLY_SERVER</a></div><div class="ttdeci">static constexpr auto TIMEOUT_REPLY_SERVER</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00232">conf.hpp:232</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1mqtt_xhtml_a9385c322eb16f7f09992855dec71df20"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a9385c322eb16f7f09992855dec71df20">fabomatic::conf::mqtt::MAX_TRIES</a></div><div class="ttdeci">static constexpr auto MAX_TRIES</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00227">conf.hpp:227</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8cpp_source.xhtml#l00250">fabomatic::Tasks::delay()</a>, <a class="el" href="conf_8hpp_source.xhtml#l00227">fabomatic::conf::mqtt::MAX_TRIES</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>, and <a class="el" href="conf_8hpp_source.xhtml#l00232">fabomatic::conf::mqtt::TIMEOUT_REPLY_SERVER</a>.</p>

<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00402">processQuery()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_a8f5341d851e1cd24dfaa64be0237dd5a_cgraph.svg" width="372" height="68"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_a8f5341d851e1cd24dfaa64be0237dd5a_icgraph.svg" width="374" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a4a2b36c40f955744965d385e8cad6fb7" name="a4a2b36c40f955744965d385e8cad6fb7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a2b36c40f955744965d385e8cad6fb7">&#9670;&#160;</a></span>registerMaintenance()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml">ServerMQTT::SimpleResponse</a> &gt; fabomatic::FabBackend::registerMaintenance </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a>&#160;</td>
          <td class="paramname"><em>maintainer</em></td><td>)</td>
          <td> -&gt; std::unique_ptr&lt;<a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml">ServerMQTT::SimpleResponse</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Registers a maintenance action. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">maintainer</td><td>The UID of the person performing maintenance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A unique_ptr to the server response. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00563">563</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  564</span>  {</div>
<div class="line"><span class="lineno">  565</span>    <span class="keywordflow">return</span> processQuery&lt;ServerMQTT::SimpleResponse, ServerMQTT::RegisterMaintenanceQuery&gt;(maintainer);</div>
<div class="line"><span class="lineno">  566</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00163">fabomatic::BoardLogic::authorize()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00050">fabomatic::tests::test_create_buffered_messages()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00133">fabomatic::tests::test_fabserver_calls()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_a4a2b36c40f955744965d385e8cad6fb7_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a044a94e7220ee295bfab801b6ca32e32" name="a044a94e7220ee295bfab801b6ca32e32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a044a94e7220ee295bfab801b6ca32e32">&#9670;&#160;</a></span>saveBuffer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::FabBackend::saveBuffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00633">633</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  634</span>  {</div>
<div class="line"><span class="lineno">  635</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a>.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#ae55d0197a2b50d55d1d762569b9c56da">hasChanged</a>())</div>
<div class="line"><span class="lineno">  636</span>    {</div>
<div class="line"><span class="lineno">  637</span>      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  638</span>    }</div>
<div class="line"><span class="lineno">  639</span> </div>
<div class="line"><span class="lineno">  640</span>    <span class="keyword">auto</span> sc = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">SavedConfig::LoadFromEEPROM</a>().value_or(<a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">SavedConfig::DefaultConfig</a>());</div>
<div class="line"><span class="lineno">  641</span>    sc.message_buffer = <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a>;</div>
<div class="line"><span class="lineno">  642</span> </div>
<div class="line"><span class="lineno">  643</span>    <span class="keywordflow">if</span> (sc.SaveToEEPROM())</div>
<div class="line"><span class="lineno">  644</span>    {</div>
<div class="line"><span class="lineno">  645</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a>.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a0925c3a370f243ae3455108189e1afc6">setChanged</a>(<span class="keyword">false</span>);</div>
<div class="line"><span class="lineno">  646</span>      ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Saved %d buffered messages&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a>.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">count</a>());</div>
<div class="line"><span class="lineno">  647</span>      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  648</span>    }</div>
<div class="line"><span class="lineno">  649</span> </div>
<div class="line"><span class="lineno">  650</span>    ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failed to save buffered messages!&quot;</span>);</div>
<div class="line"><span class="lineno">  651</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  652</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_ae55d0197a2b50d55d1d762569b9c56da"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#ae55d0197a2b50d55d1d762569b9c56da">fabomatic::Buffer::hasChanged</a></div><div class="ttdeci">auto hasChanged() const -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00045">BufferedMsg.hpp:45</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a3a6f62510c34ed7a4491022e4e43b9c2"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">fabomatic::SavedConfig::DefaultConfig</a></div><div class="ttdeci">static auto DefaultConfig() -&gt; SavedConfig</div><div class="ttdoc">Returns the default configuration built from conf.hpp and secrets.hpp.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00028">SavedConfig.cpp:28</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_aca3fe97dfa74c005d47ffef700392d99"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">fabomatic::SavedConfig::LoadFromEEPROM</a></div><div class="ttdeci">static auto LoadFromEEPROM() -&gt; std::optional&lt; SavedConfig &gt;</div><div class="ttdoc">Loads the configuration from EEPROM if available and matching revision number.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00052">SavedConfig.cpp:52</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_saved_config_8cpp_source.xhtml#l00028">fabomatic::SavedConfig::DefaultConfig()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00052">fabomatic::SavedConfig::LoadFromEEPROM()</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00184">fabomatic::taskIsAlive()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00079">fabomatic::tests::test_check_transmission()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00050">fabomatic::tests::test_create_buffered_messages()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_a044a94e7220ee295bfab801b6ca32e32_cgraph.svg" width="579" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_a044a94e7220ee295bfab801b6ca32e32_icgraph.svg" width="502" height="167"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a492c94ed0682ad834ccd7ddc7c20a55a" name="a492c94ed0682ad834ccd7ddc7c20a55a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a492c94ed0682ad834ccd7ddc7c20a55a">&#9670;&#160;</a></span>setChannel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::FabBackend::setChannel </td>
          <td>(</td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>channel</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the WiFi channel to use. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">channel</td><td>The channel number. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00583">583</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  584</span>  {</div>
<div class="line"><span class="lineno">  585</span>    this-&gt;<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a12a4f3f195db522c6b108deacf1219b9">channel</a> = <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a12a4f3f195db522c6b108deacf1219b9">channel</a>;</div>
<div class="line"><span class="lineno">  586</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_fab_backend_8hpp_source.xhtml#l00055">channel</a>.</p>

<p class="reference">Referenced by <a class="el" href="test__mqtt_8cpp_source.xhtml#l00097">fabomatic::tests::test_start_broker()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_a492c94ed0682ad834ccd7ddc7c20a55a_icgraph.svg" width="459" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a2b45b2e58a6358c640c48e636e3cb5db" name="a2b45b2e58a6358c640c48e636e3cb5db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b45b2e58a6358c640c48e636e3cb5db">&#9670;&#160;</a></span>startUse()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml">ServerMQTT::SimpleResponse</a> &gt; fabomatic::FabBackend::startUse </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a>&#160;</td>
          <td class="paramname"><em>uid</em></td><td>)</td>
          <td> -&gt; std::unique_ptr&lt;<a class="el" href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml">ServerMQTT::SimpleResponse</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Registers the start of machine usage. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uid</td><td>The card UID of the user. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A unique_ptr to the server response. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00528">528</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  529</span>  {</div>
<div class="line"><span class="lineno">  530</span>    <span class="keywordflow">return</span> processQuery&lt;ServerMQTT::SimpleResponse, ServerMQTT::StartUseQuery&gt;(uid);</div>
<div class="line"><span class="lineno">  531</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00163">fabomatic::BoardLogic::authorize()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00050">fabomatic::tests::test_create_buffered_messages()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00133">fabomatic::tests::test_fabserver_calls()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_a2b45b2e58a6358c640c48e636e3cb5db_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a4d0b8d49942ff06c02abbcbfe7a4784a" name="a4d0b8d49942ff06c02abbcbfe7a4784a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d0b8d49942ff06c02abbcbfe7a4784a">&#9670;&#160;</a></span>transmitBuffer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::FabBackend::transmitBuffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00593">593</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  594</span>  {</div>
<div class="line"><span class="lineno">  595</span>    <span class="keywordflow">while</span> (<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">hasBufferedMsg</a>() &amp;&amp; <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>())</div>
<div class="line"><span class="lineno">  596</span>    {</div>
<div class="line"><span class="lineno">  597</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Retransmitting buffered messages...&quot;</span>);</div>
<div class="line"><span class="lineno">  598</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;msg = <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a>.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a6301e1ea47622d36474ee031a17b9bb4">getMessage</a>();</div>
<div class="line"><span class="lineno">  599</span>      <span class="keyword">const</span> BufferedQuery bq{msg.mqtt_message, msg.mqtt_topic, msg.wait_for_answer};</div>
<div class="line"><span class="lineno">  600</span>      <span class="keywordflow">if</span> (bq.waitForReply())</div>
<div class="line"><span class="lineno">  601</span>      {</div>
<div class="line"><span class="lineno">  602</span>        <span class="keywordflow">if</span> (<span class="keyword">auto</span> result = <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a8f5341d851e1cd24dfaa64be0237dd5a">publishWithReply</a>(bq); result != <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3af6278bbfdfc6fff58dae91a03d739c93">PublishResult::PublishedWithAnswer</a>)</div>
<div class="line"><span class="lineno">  603</span>        {</div>
<div class="line"><span class="lineno">  604</span>          ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Retransmitting buffered message failed!&quot;</span>);</div>
<div class="line"><span class="lineno">  605</span> </div>
<div class="line"><span class="lineno">  606</span>          <span class="comment">// If it has been published but not answered, do not try again</span></div>
<div class="line"><span class="lineno">  607</span>          <span class="keywordflow">if</span> (result == <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3a4586da37f65c0965ce6973ceb7f65c40">PublishResult::PublishedWithoutAnswer</a>)</div>
<div class="line"><span class="lineno">  608</span>          {</div>
<div class="line"><span class="lineno">  609</span>            <span class="keyword">const</span> <span class="keyword">auto</span> &amp;bmsg = BufferedMsg{msg.mqtt_message, msg.mqtt_topic, msg.wait_for_answer};</div>
<div class="line"><span class="lineno">  610</span>            <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a>.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a06b997e6e4f83f208250b739f9e2a2db">push_front</a>(bmsg);</div>
<div class="line"><span class="lineno">  611</span>          }</div>
<div class="line"><span class="lineno">  612</span>          <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  613</span>        }</div>
<div class="line"><span class="lineno">  614</span>      }</div>
<div class="line"><span class="lineno">  615</span>      <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  616</span>      {</div>
<div class="line"><span class="lineno">  617</span>        <span class="keywordflow">if</span> (<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aee0cf549bea2daebc3e08742853d36c1">publish</a>(bq) == <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3ae8c9e67c4a17670c41289fcc8c3a38c5">PublishResult::ErrorNotPublished</a>)</div>
<div class="line"><span class="lineno">  618</span>        {</div>
<div class="line"><span class="lineno">  619</span>          <span class="comment">// Will try again</span></div>
<div class="line"><span class="lineno">  620</span>          ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Retransmitting buffered message failed!&quot;</span>);</div>
<div class="line"><span class="lineno">  621</span>          <span class="keyword">const</span> <span class="keyword">auto</span> &amp;bmsg = BufferedMsg{msg.mqtt_message, msg.mqtt_topic, msg.wait_for_answer};</div>
<div class="line"><span class="lineno">  622</span>          <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a>.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a06b997e6e4f83f208250b739f9e2a2db">push_front</a>(bmsg);</div>
<div class="line"><span class="lineno">  623</span>          <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  624</span>        }</div>
<div class="line"><span class="lineno">  625</span>      }</div>
<div class="line"><span class="lineno">  626</span>    }</div>
<div class="line"><span class="lineno">  627</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a0308ae992bc86c1b41bdd78f9536f553">last_reply</a> = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><span class="lineno">  628</span> </div>
<div class="line"><span class="lineno">  629</span>    ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Retransmittion completed, remaining messages=%d&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a>.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">count</a>());</div>
<div class="line"><span class="lineno">  630</span>    <span class="keywordflow">return</span> !<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">hasBufferedMsg</a>();</div>
<div class="line"><span class="lineno">  631</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a06b997e6e4f83f208250b739f9e2a2db"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a06b997e6e4f83f208250b739f9e2a2db">fabomatic::Buffer::push_front</a></div><div class="ttdeci">auto push_front(const BufferedMsg &amp;message) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00028">BufferedMsg.cpp:28</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a6301e1ea47622d36474ee031a17b9bb4"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a6301e1ea47622d36474ee031a17b9bb4">fabomatic::Buffer::getMessage</a></div><div class="ttdeci">auto getMessage() -&gt; const BufferedMsg</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00047">BufferedMsg.cpp:47</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_buffered_msg_8hpp_source.xhtml#l00020">fabomatic::BufferedMsg::mqtt_message</a>, <a class="el" href="_buffered_msg_8hpp_source.xhtml#l00059">fabomatic::BufferedQuery::mqtt_topic</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00402">processQuery()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_a4d0b8d49942ff06c02abbcbfe7a4784a_icgraph.svg" width="374" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a04951b9823ac466be2285640171013e5" name="a04951b9823ac466be2285640171013e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04951b9823ac466be2285640171013e5">&#9670;&#160;</a></span>waitForAnswer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::FabBackend::waitForAnswer </td>
          <td>(</td>
          <td class="paramtype">std::chrono::milliseconds&#160;</td>
          <td class="paramname"><em>max_duration</em></td><td>)</td>
          <td> -&gt; bool</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Waits for an answer from the MQTT server. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">max_duration</td><td>The maximum duration to wait. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the server answered, false otherwise. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_fab_backend_8cpp_source.xhtml#l00204">204</a> of file <a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  205</span>  {</div>
<div class="line"><span class="lineno">  206</span>    <span class="keyword">const</span> <span class="keyword">auto</span> start_time = std::chrono::system_clock::now();</div>
<div class="line"><span class="lineno">  207</span>    <span class="keyword">const</span> <span class="keyword">auto</span> DELAY_MS = 25ms;</div>
<div class="line"><span class="lineno">  208</span>    <span class="keywordflow">do</span></div>
<div class="line"><span class="lineno">  209</span>    {</div>
<div class="line"><span class="lineno">  210</span>      <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#ab91778bc8d79c8265b68b00ff01b17e5">answer_pending</a>)</div>
<div class="line"><span class="lineno">  211</span>      {</div>
<div class="line"><span class="lineno">  212</span>        <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.loop();</div>
<div class="line"><span class="lineno">  213</span>        <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.connected())</div>
<div class="line"><span class="lineno">  214</span>        {</div>
<div class="line"><span class="lineno">  215</span>          ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: connection lost while waiting for answer&quot;</span>);</div>
<div class="line"><span class="lineno">  216</span>          <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">connect</a>();</div>
<div class="line"><span class="lineno">  217</span>        }</div>
<div class="line"><span class="lineno">  218</span>        <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(DELAY_MS);</div>
<div class="line"><span class="lineno">  219</span>      }</div>
<div class="line"><span class="lineno">  220</span>      <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  221</span>      {</div>
<div class="line"><span class="lineno">  222</span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  223</span>      }</div>
<div class="line"><span class="lineno">  224</span>    } <span class="keywordflow">while</span> (std::chrono::system_clock::now() &lt; (start_time + max_duration));</div>
<div class="line"><span class="lineno">  225</span> </div>
<div class="line"><span class="lineno">  226</span>    ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failure, no answer from MQTT server (timeout:%lld ms)&quot;</span>, max_duration.count());</div>
<div class="line"><span class="lineno">  227</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  228</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_fab_backend_8hpp_source.xhtml#l00054">answer_pending</a>, <a class="el" href="_fab_backend_8hpp_source.xhtml#l00035">client</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">connect()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00250">fabomatic::Tasks::delay()</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00118">publish()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_a04951b9823ac466be2285640171013e5_cgraph.svg" width="100%" height="508"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_fab_backend_a04951b9823ac466be2285640171013e5_icgraph.svg" width="374" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ab91778bc8d79c8265b68b00ff01b17e5" name="ab91778bc8d79c8265b68b00ff01b17e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab91778bc8d79c8265b68b00ff01b17e5">&#9670;&#160;</a></span>answer_pending</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::FabBackend::answer_pending {false}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00054">54</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   54</span>{<span class="keyword">false</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00246">messageReceived()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00118">publish()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00204">waitForAnswer()</a>.</p>

</div>
</div>
<a id="a7464218df94ba7854cb34aaab314cbc2" name="a7464218df94ba7854cb34aaab314cbc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7464218df94ba7854cb34aaab314cbc2">&#9670;&#160;</a></span>broker_hostname</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::FabBackend::broker_hostname {&quot;&quot;}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00040">40</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   40</span>{<span class="stringliteral">&quot;&quot;</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">configure()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">connect()</a>.</p>

</div>
</div>
<a id="afee0d715d6f61ca3306dd60de5b79fd1" name="afee0d715d6f61ca3306dd60de5b79fd1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afee0d715d6f61ca3306dd60de5b79fd1">&#9670;&#160;</a></span>buffer</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_buffer.xhtml">Buffer</a> fabomatic::FabBackend::buffer</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00057">57</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00588">hasBufferedMsg()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00402">processQuery()</a>.</p>

</div>
</div>
<a id="a8af330c9d926f6ef6e6307ab3fd23834" name="a8af330c9d926f6ef6e6307ab3fd23834"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8af330c9d926f6ef6e6307ab3fd23834">&#9670;&#160;</a></span>callback</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MQTTClientCallbackSimpleFunction fabomatic::FabBackend::callback</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00045">45</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">connect()</a>.</p>

</div>
</div>
<a id="a12a4f3f195db522c6b108deacf1219b9" name="a12a4f3f195db522c6b108deacf1219b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12a4f3f195db522c6b108deacf1219b9">&#9670;&#160;</a></span>channel</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16_t fabomatic::FabBackend::channel {-1}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00055">55</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   55</span>{-1};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">configure()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00259">connectWiFi()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00583">setChannel()</a>.</p>

</div>
</div>
<a id="a22c2488e6a6c94c283ad7158ff37ca61" name="a22c2488e6a6c94c283ad7158ff37ca61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22c2488e6a6c94c283ad7158ff37ca61">&#9670;&#160;</a></span>client</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MQTTClient fabomatic::FabBackend::client {<a class="el" href="classfabomatic_1_1_fab_backend.xhtml#a9367a14306331d326e5e7971a0728633">MAX_MSG_SIZE</a>}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00035">35</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   35</span>{<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a9367a14306331d326e5e7971a0728633">MAX_MSG_SIZE</a>}; <span class="comment">// Default is 128, and can be reached with some messages</span></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">configure()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">connect()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00386">disconnect()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00184">loop()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00118">publish()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00204">waitForAnswer()</a>.</p>

</div>
</div>
<a id="a1218ae004e0146262801967ee50ec17a" name="a1218ae004e0146262801967ee50ec17a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1218ae004e0146262801967ee50ec17a">&#9670;&#160;</a></span>doc</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">JsonDocument fabomatic::FabBackend::doc</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00036">36</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00402">processQuery()</a>.</p>

</div>
</div>
<a id="a567eee830bd65f941ba98428e2642f4f" name="a567eee830bd65f941ba98428e2642f4f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a567eee830bd65f941ba98428e2642f4f">&#9670;&#160;</a></span>last_query</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::FabBackend::last_query {&quot;&quot;}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00050">50</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   50</span>{<span class="stringliteral">&quot;&quot;</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00118">publish()</a>.</p>

</div>
</div>
<a id="a0308ae992bc86c1b41bdd78f9536f553" name="a0308ae992bc86c1b41bdd78f9536f553"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0308ae992bc86c1b41bdd78f9536f553">&#9670;&#160;</a></span>last_reply</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::FabBackend::last_reply {&quot;&quot;}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00051">51</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   51</span>{<span class="stringliteral">&quot;&quot;</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00246">messageReceived()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00402">processQuery()</a>.</p>

</div>
</div>
<a id="a9367a14306331d326e5e7971a0728633" name="a9367a14306331d326e5e7971a0728633"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9367a14306331d326e5e7971a0728633">&#9670;&#160;</a></span>MAX_MSG_SIZE</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fabomatic::FabBackend::MAX_MSG_SIZE = 300</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00027">27</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00141">publish()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00118">publish()</a>.</p>

</div>
</div>
<a id="ac77de5d35fe86ccf4b23c97548187256" name="ac77de5d35fe86ccf4b23c97548187256"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac77de5d35fe86ccf4b23c97548187256">&#9670;&#160;</a></span>mqtt_client_name</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::FabBackend::mqtt_client_name {&quot;&quot;}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00043">43</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   43</span>{<span class="stringliteral">&quot;&quot;</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">configure()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">connect()</a>.</p>

</div>
</div>
<a id="ac4de362845adea42309283248654cf46" name="ac4de362845adea42309283248654cf46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4de362845adea42309283248654cf46">&#9670;&#160;</a></span>mqtt_password</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::FabBackend::mqtt_password {&quot;&quot;}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00042">42</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   42</span>{<span class="stringliteral">&quot;&quot;</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">configure()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">connect()</a>.</p>

</div>
</div>
<a id="a02ce02db60b18f3de30e251ba14807bb" name="a02ce02db60b18f3de30e251ba14807bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02ce02db60b18f3de30e251ba14807bb">&#9670;&#160;</a></span>mqtt_user</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::FabBackend::mqtt_user {&quot;&quot;}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00041">41</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   41</span>{<span class="stringliteral">&quot;&quot;</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">configure()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">connect()</a>.</p>

</div>
</div>
<a id="a3a66b317f253de31ec0147c4e28aba6b" name="a3a66b317f253de31ec0147c4e28aba6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a66b317f253de31ec0147c4e28aba6b">&#9670;&#160;</a></span>online</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::FabBackend::online {false}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00053">53</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   53</span>{<span class="keyword">false</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">configure()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">connect()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00235">isOnline()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00184">loop()</a>.</p>

</div>
</div>
<a id="a8129677184366856b2f1c3a582e10bdb" name="a8129677184366856b2f1c3a582e10bdb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8129677184366856b2f1c3a582e10bdb">&#9670;&#160;</a></span>response_topic</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::FabBackend::response_topic {&quot;&quot;}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00049">49</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   49</span>{<span class="stringliteral">&quot;&quot;</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">connect()</a>.</p>

</div>
</div>
<a id="a8790b1b9b5909541c62cd1ea7577e9d6" name="a8790b1b9b5909541c62cd1ea7577e9d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8790b1b9b5909541c62cd1ea7577e9d6">&#9670;&#160;</a></span>topic</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::FabBackend::topic {&quot;&quot;}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00048">48</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   48</span>{<span class="stringliteral">&quot;&quot;</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">configure()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">connect()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00402">processQuery()</a>.</p>

</div>
</div>
<a id="a2924692a0dca43597d2cc594cb0573d2" name="a2924692a0dca43597d2cc594cb0573d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2924692a0dca43597d2cc594cb0573d2">&#9670;&#160;</a></span>wifi_client</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">WiFiClient fabomatic::FabBackend::wifi_client</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00046">46</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">configure()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">connect()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00386">disconnect()</a>.</p>

</div>
</div>
<a id="a532fe40b9761d95b1acc6572df24cd68" name="a532fe40b9761d95b1acc6572df24cd68"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a532fe40b9761d95b1acc6572df24cd68">&#9670;&#160;</a></span>wifi_password</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::FabBackend::wifi_password {&quot;&quot;}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00039">39</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   39</span>{<span class="stringliteral">&quot;&quot;</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">configure()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00259">connectWiFi()</a>.</p>

</div>
</div>
<a id="a893e412def82572f4281bdcd92bfcb36" name="a893e412def82572f4281bdcd92bfcb36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a893e412def82572f4281bdcd92bfcb36">&#9670;&#160;</a></span>wifi_ssid</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::FabBackend::wifi_ssid {&quot;&quot;}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_fab_backend_8hpp_source.xhtml#l00038">38</a> of file <a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   38</span>{<span class="stringliteral">&quot;&quot;</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_fab_backend_8cpp_source.xhtml#l00021">configure()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00259">connectWiFi()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a></li>
<li><a class="el" href="_fab_backend_8cpp_source.xhtml">FabBackend.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Jul 1 2024 20:53:05 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
