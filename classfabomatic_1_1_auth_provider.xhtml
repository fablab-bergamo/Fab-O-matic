<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: fabomatic::AuthProvider Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacefabomatic.xhtml">fabomatic</a></li><li class="navelem"><a class="el" href="classfabomatic_1_1_auth_provider.xhtml">AuthProvider</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classfabomatic_1_1_auth_provider-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">fabomatic::AuthProvider Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_auth_provider_8hpp_source.xhtml">AuthProvider.hpp</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for fabomatic::AuthProvider:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_auth_provider__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a08b53ec0127693d0d6d65aad45145d09" id="r_a08b53ec0127693d0d6d65aad45145d09"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_auth_provider.xhtml#a08b53ec0127693d0d6d65aad45145d09">AuthProvider</a> ()=delete</td></tr>
<tr class="separator:a08b53ec0127693d0d6d65aad45145d09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ed47ab8b5c782b7374d7e5b202534e4" id="r_a9ed47ab8b5c782b7374d7e5b202534e4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_auth_provider.xhtml#a9ed47ab8b5c782b7374d7e5b202534e4">AuthProvider</a> (<a class="el" href="namespacefabomatic.xhtml#a626fe6fe3dcf9b459c45e9f769f7b8e7">WhiteList</a> <a class="el" href="classfabomatic_1_1_auth_provider.xhtml#a52f8cf328edafb65b42c3117d06afaf7">whitelist</a>)</td></tr>
<tr class="separator:a9ed47ab8b5c782b7374d7e5b202534e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeae9923535dcf6cfa9eaf9e5f90e5e64" id="r_aeae9923535dcf6cfa9eaf9e5f90e5e64"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_auth_provider.xhtml#aeae9923535dcf6cfa9eaf9e5f90e5e64">tryLogin</a> (<a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> uid, <a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp;server) const -&gt; std::optional&lt; <a class="el" href="structfabomatic_1_1_fab_user.xhtml">FabUser</a> &gt;</td></tr>
<tr class="memdesc:aeae9923535dcf6cfa9eaf9e5f90e5e64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Verifies the card ID against the server (if available) or the whitelist.  <br /></td></tr>
<tr class="separator:aeae9923535dcf6cfa9eaf9e5f90e5e64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73f75d68b999225f12b28c64cd603b8f" id="r_a73f75d68b999225f12b28c64cd603b8f"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_auth_provider.xhtml#a73f75d68b999225f12b28c64cd603b8f">setWhitelist</a> (<a class="el" href="namespacefabomatic.xhtml#a626fe6fe3dcf9b459c45e9f769f7b8e7">WhiteList</a> list) -&gt; void</td></tr>
<tr class="memdesc:a73f75d68b999225f12b28c64cd603b8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the whitelist.  <br /></td></tr>
<tr class="separator:a73f75d68b999225f12b28c64cd603b8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb92a9381bc8e14bd57b819fc9162750" id="r_acb92a9381bc8e14bd57b819fc9162750"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_auth_provider.xhtml#acb92a9381bc8e14bd57b819fc9162750">saveCache</a> () const -&gt; bool</td></tr>
<tr class="memdesc:acb92a9381bc8e14bd57b819fc9162750"><td class="mdescLeft">&#160;</td><td class="mdescRight">Saves the cache of RFID to EEPROM.  <br /></td></tr>
<tr class="separator:acb92a9381bc8e14bd57b819fc9162750"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac703cf6e2b6a2a10c946937e83df418d" id="r_ac703cf6e2b6a2a10c946937e83df418d"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_auth_provider.xhtml#ac703cf6e2b6a2a10c946937e83df418d">loadCache</a> () -&gt; void</td></tr>
<tr class="memdesc:ac703cf6e2b6a2a10c946937e83df418d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads the cache from EEPROM.  <br /></td></tr>
<tr class="separator:ac703cf6e2b6a2a10c946937e83df418d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a220558f8443c82ecc235fadb5ea44236" id="r_a220558f8443c82ecc235fadb5ea44236"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_auth_provider.xhtml#a220558f8443c82ecc235fadb5ea44236">uidInWhitelist</a> (<a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> uid) const -&gt; std::optional&lt; <a class="el" href="namespacefabomatic.xhtml#a23bf7a1d8cf94adbb1df8f8edd882501">WhiteListEntry</a> &gt;</td></tr>
<tr class="memdesc:a220558f8443c82ecc235fadb5ea44236"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the card ID is whitelisted.  <br /></td></tr>
<tr class="separator:a220558f8443c82ecc235fadb5ea44236"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cd100fbd42df4bce2cb926fcbe45594" id="r_a1cd100fbd42df4bce2cb926fcbe45594"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_auth_provider.xhtml#a1cd100fbd42df4bce2cb926fcbe45594">uidInCache</a> (<a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> uid) const -&gt; std::optional&lt; <a class="el" href="structfabomatic_1_1_cached_card.xhtml">CachedCard</a> &gt;</td></tr>
<tr class="memdesc:a1cd100fbd42df4bce2cb926fcbe45594"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the card ID is whitelisted.  <br /></td></tr>
<tr class="separator:a1cd100fbd42df4bce2cb926fcbe45594"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2ea4c3cd36a3f77ed5804cd4b7a9b82" id="r_ae2ea4c3cd36a3f77ed5804cd4b7a9b82"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_auth_provider.xhtml#ae2ea4c3cd36a3f77ed5804cd4b7a9b82">searchCache</a> (<a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> candidate_uid) const -&gt; std::optional&lt; <a class="el" href="structfabomatic_1_1_cached_card.xhtml">CachedCard</a> &gt;</td></tr>
<tr class="separator:ae2ea4c3cd36a3f77ed5804cd4b7a9b82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83eb4a5350f9d6ac79f2721b81f6ce5d" id="r_a83eb4a5350f9d6ac79f2721b81f6ce5d"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_auth_provider.xhtml#a83eb4a5350f9d6ac79f2721b81f6ce5d">updateCache</a> (<a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> candidate_uid, <a class="el" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0">FabUser::UserLevel</a> level) const -&gt; void</td></tr>
<tr class="memdesc:a83eb4a5350f9d6ac79f2721b81f6ce5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cache the user request.  <br /></td></tr>
<tr class="separator:a83eb4a5350f9d6ac79f2721b81f6ce5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a52f8cf328edafb65b42c3117d06afaf7" id="r_a52f8cf328edafb65b42c3117d06afaf7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacefabomatic.xhtml#a626fe6fe3dcf9b459c45e9f769f7b8e7">WhiteList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_auth_provider.xhtml#a52f8cf328edafb65b42c3117d06afaf7">whitelist</a></td></tr>
<tr class="separator:a52f8cf328edafb65b42c3117d06afaf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0db2e829ff5db93ecddf4279ce61fe31" id="r_a0db2e829ff5db93ecddf4279ce61fe31"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfabomatic_1_1_cached_cards.xhtml">CachedCards</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">cache</a></td></tr>
<tr class="separator:a0db2e829ff5db93ecddf4279ce61fe31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff7ea2388179e603ba65e88dea0fe5de" id="r_aff7ea2388179e603ba65e88dea0fe5de"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_auth_provider.xhtml#aff7ea2388179e603ba65e88dea0fe5de">cache_idx</a> {0}</td></tr>
<tr class="separator:aff7ea2388179e603ba65e88dea0fe5de"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class manages authentication of a RFID tag through cache, whitelist or network request. </p>

<p class="definition">Definition at line <a class="el" href="_auth_provider_8hpp_source.xhtml#l00019">19</a> of file <a class="el" href="_auth_provider_8hpp_source.xhtml">AuthProvider.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a08b53ec0127693d0d6d65aad45145d09" name="a08b53ec0127693d0d6d65aad45145d09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08b53ec0127693d0d6d65aad45145d09">&#9670;&#160;</a></span>AuthProvider() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">fabomatic::AuthProvider::AuthProvider </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9ed47ab8b5c782b7374d7e5b202534e4" name="a9ed47ab8b5c782b7374d7e5b202534e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ed47ab8b5c782b7374d7e5b202534e4">&#9670;&#160;</a></span>AuthProvider() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">fabomatic::AuthProvider::AuthProvider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacefabomatic.xhtml#a626fe6fe3dcf9b459c45e9f769f7b8e7">WhiteList</a>&#160;</td>
          <td class="paramname"><em>whitelist</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_auth_provider_8cpp_source.xhtml#l00018">18</a> of file <a class="el" href="_auth_provider_8cpp_source.xhtml">AuthProvider.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   18</span>: <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a52f8cf328edafb65b42c3117d06afaf7">whitelist</a>{list}, <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">cache</a>{} {}</div>
<div class="ttc" id="aclassfabomatic_1_1_auth_provider_xhtml_a0db2e829ff5db93ecddf4279ce61fe31"><div class="ttname"><a href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">fabomatic::AuthProvider::cache</a></div><div class="ttdeci">CachedCards cache</div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8hpp_source.xhtml#l00023">AuthProvider.hpp:23</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_auth_provider_xhtml_a52f8cf328edafb65b42c3117d06afaf7"><div class="ttname"><a href="classfabomatic_1_1_auth_provider.xhtml#a52f8cf328edafb65b42c3117d06afaf7">fabomatic::AuthProvider::whitelist</a></div><div class="ttdeci">WhiteList whitelist</div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8hpp_source.xhtml#l00022">AuthProvider.hpp:22</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ac703cf6e2b6a2a10c946937e83df418d" name="ac703cf6e2b6a2a10c946937e83df418d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac703cf6e2b6a2a10c946937e83df418d">&#9670;&#160;</a></span>loadCache()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::AuthProvider::loadCache </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Loads the cache from EEPROM. </p>

<p class="definition">Definition at line <a class="el" href="_auth_provider_8cpp_source.xhtml#l00163">163</a> of file <a class="el" href="_auth_provider_8cpp_source.xhtml">AuthProvider.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  164</span>  {</div>
<div class="line"><span class="lineno">  165</span>    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;config = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">SavedConfig::LoadFromEEPROM</a>();</div>
<div class="line"><span class="lineno">  166</span>    <span class="keywordflow">if</span> (!config.has_value())</div>
<div class="line"><span class="lineno">  167</span>      <span class="keywordflow">return</span>;</div>
<div class="line"><span class="lineno">  168</span> </div>
<div class="line"><span class="lineno">  169</span>    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;loaded = config.value().cachedRfid;</div>
<div class="line"><span class="lineno">  170</span> </div>
<div class="line"><span class="lineno">  171</span>    std::copy(loaded.cards.cbegin(), loaded.cards.cend(), <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">cache</a>.<a class="code hl_variable" href="structfabomatic_1_1_cached_cards.xhtml#a1d33c066725fe6ef09e8bee7743e14dd">cards</a>.begin());</div>
<div class="line"><span class="lineno">  172</span>    std::copy(loaded.levels.cbegin(), loaded.levels.cend(), <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">cache</a>.<a class="code hl_variable" href="structfabomatic_1_1_cached_cards.xhtml#a3fdcaa4338d567cde40f9631bb11bc44">levels</a>.begin());</div>
<div class="line"><span class="lineno">  173</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_aca3fe97dfa74c005d47ffef700392d99"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">fabomatic::SavedConfig::LoadFromEEPROM</a></div><div class="ttdeci">static auto LoadFromEEPROM() -&gt; std::optional&lt; SavedConfig &gt;</div><div class="ttdoc">Loads the configuration from EEPROM if available and matching revision number.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00052">SavedConfig.cpp:52</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_cached_cards_xhtml_a1d33c066725fe6ef09e8bee7743e14dd"><div class="ttname"><a href="structfabomatic_1_1_cached_cards.xhtml#a1d33c066725fe6ef09e8bee7743e14dd">fabomatic::CachedCards::cards</a></div><div class="ttdeci">std::array&lt; card::uid_t, conf::rfid_tags::CACHE_LEN &gt; cards</div><div class="ttdef"><b>Definition</b> <a href="_cached_cards_8hpp_source.xhtml#l00029">CachedCards.hpp:29</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_cached_cards_xhtml_a3fdcaa4338d567cde40f9631bb11bc44"><div class="ttname"><a href="structfabomatic_1_1_cached_cards.xhtml#a3fdcaa4338d567cde40f9631bb11bc44">fabomatic::CachedCards::levels</a></div><div class="ttdeci">std::array&lt; FabUser::UserLevel, conf::rfid_tags::CACHE_LEN &gt; levels</div><div class="ttdef"><b>Definition</b> <a href="_cached_cards_8hpp_source.xhtml#l00030">CachedCards.hpp:30</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_saved_config_8cpp_source.xhtml#l00052">fabomatic::SavedConfig::LoadFromEEPROM()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00463">fabomatic::BoardLogic::reconfigure()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_auth_provider_ac703cf6e2b6a2a10c946937e83df418d_cgraph.svg" width="376" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_auth_provider_ac703cf6e2b6a2a10c946937e83df418d_icgraph.svg" width="100%" height="413"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="acb92a9381bc8e14bd57b819fc9162750" name="acb92a9381bc8e14bd57b819fc9162750"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb92a9381bc8e14bd57b819fc9162750">&#9670;&#160;</a></span>saveCache()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::AuthProvider::saveCache </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Saves the cache of RFID to EEPROM. </p>

<p class="definition">Definition at line <a class="el" href="_auth_provider_8cpp_source.xhtml#l00183">183</a> of file <a class="el" href="_auth_provider_8cpp_source.xhtml">AuthProvider.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  184</span>  {</div>
<div class="line"><span class="lineno">  185</span>    SavedConfig config = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">SavedConfig::LoadFromEEPROM</a>().value_or(<a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">SavedConfig::DefaultConfig</a>());</div>
<div class="line"><span class="lineno">  186</span> </div>
<div class="line"><span class="lineno">  187</span>    <span class="keywordflow">if</span> (std::equal(config.cachedRfid.cards.cbegin(), config.cachedRfid.cards.cend(), <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">cache</a>.<a class="code hl_variable" href="structfabomatic_1_1_cached_cards.xhtml#a1d33c066725fe6ef09e8bee7743e14dd">cards</a>.cbegin()) &amp;&amp;</div>
<div class="line"><span class="lineno">  188</span>        std::equal(config.cachedRfid.levels.cbegin(), config.cachedRfid.levels.cend(), <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">cache</a>.<a class="code hl_variable" href="structfabomatic_1_1_cached_cards.xhtml#a3fdcaa4338d567cde40f9631bb11bc44">levels</a>.cbegin()))</div>
<div class="line"><span class="lineno">  189</span>    {</div>
<div class="line"><span class="lineno">  190</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Cache is the same, not saving&quot;</span>);</div>
<div class="line"><span class="lineno">  191</span>      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  192</span>    }</div>
<div class="line"><span class="lineno">  193</span> </div>
<div class="line"><span class="lineno">  194</span>    std::copy(<a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">cache</a>.<a class="code hl_variable" href="structfabomatic_1_1_cached_cards.xhtml#a1d33c066725fe6ef09e8bee7743e14dd">cards</a>.cbegin(), <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">cache</a>.<a class="code hl_variable" href="structfabomatic_1_1_cached_cards.xhtml#a1d33c066725fe6ef09e8bee7743e14dd">cards</a>.cend(), config.cachedRfid.cards.begin());</div>
<div class="line"><span class="lineno">  195</span>    std::copy(<a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">cache</a>.<a class="code hl_variable" href="structfabomatic_1_1_cached_cards.xhtml#a3fdcaa4338d567cde40f9631bb11bc44">levels</a>.cbegin(), <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">cache</a>.<a class="code hl_variable" href="structfabomatic_1_1_cached_cards.xhtml#a3fdcaa4338d567cde40f9631bb11bc44">levels</a>.cend(), config.cachedRfid.levels.begin());</div>
<div class="line"><span class="lineno">  196</span> </div>
<div class="line"><span class="lineno">  197</span>    <span class="keywordflow">return</span> config.SaveToEEPROM();</div>
<div class="line"><span class="lineno">  198</span>  }</div>
<div class="ttc" id="a_logging_8hpp_xhtml_a4ef5b5f197804a60836ab1e8907d8301"><div class="ttname"><a href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a></div><div class="ttdeci">static const char *const TAG</div><div class="ttdef"><b>Definition</b> <a href="_logging_8hpp_source.xhtml#l00006">Logging.hpp:6</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a3a6f62510c34ed7a4491022e4e43b9c2"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">fabomatic::SavedConfig::DefaultConfig</a></div><div class="ttdeci">static auto DefaultConfig() -&gt; SavedConfig</div><div class="ttdoc">Returns the default configuration built from conf.hpp and secrets.hpp.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00028">SavedConfig.cpp:28</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_auth_provider_8hpp_source.xhtml#l00023">cache</a>, <a class="el" href="_saved_config_8hpp_source.xhtml#l00046">fabomatic::SavedConfig::cachedRfid</a>, <a class="el" href="_cached_cards_8hpp_source.xhtml#l00029">fabomatic::CachedCards::cards</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00028">fabomatic::SavedConfig::DefaultConfig()</a>, <a class="el" href="_cached_cards_8hpp_source.xhtml#l00030">fabomatic::CachedCards::levels</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00052">fabomatic::SavedConfig::LoadFromEEPROM()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00172">fabomatic::SavedConfig::SaveToEEPROM()</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="test__mqtt_8cpp_source.xhtml#l00133">fabomatic::tests::test_fabserver_calls()</a>, and <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00094">fabomatic::tests::test_rfid_cache()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_auth_provider_acb92a9381bc8e14bd57b819fc9162750_cgraph.svg" width="100%" height="461"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_auth_provider_acb92a9381bc8e14bd57b819fc9162750_icgraph.svg" width="462" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ae2ea4c3cd36a3f77ed5804cd4b7a9b82" name="ae2ea4c3cd36a3f77ed5804cd4b7a9b82"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2ea4c3cd36a3f77ed5804cd4b7a9b82">&#9670;&#160;</a></span>searchCache()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::AuthProvider::searchCache </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a>&#160;</td>
          <td class="paramname"><em>candidate_uid</em></td><td>)</td>
          <td> const -&gt;  std::optional&lt; <a class="el" href="structfabomatic_1_1_cached_card.xhtml">CachedCard</a> &gt;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a73f75d68b999225f12b28c64cd603b8f" name="a73f75d68b999225f12b28c64cd603b8f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73f75d68b999225f12b28c64cd603b8f">&#9670;&#160;</a></span>setWhitelist()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::AuthProvider::setWhitelist </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacefabomatic.xhtml#a626fe6fe3dcf9b459c45e9f769f7b8e7">WhiteList</a>&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the whitelist. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the whitelist to set </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_auth_provider_8cpp_source.xhtml#l00177">177</a> of file <a class="el" href="_auth_provider_8cpp_source.xhtml">AuthProvider.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  178</span>  {</div>
<div class="line"><span class="lineno">  179</span>    <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a52f8cf328edafb65b42c3117d06afaf7">whitelist</a> = list;</div>
<div class="line"><span class="lineno">  180</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="aeae9923535dcf6cfa9eaf9e5f90e5e64" name="aeae9923535dcf6cfa9eaf9e5f90e5e64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeae9923535dcf6cfa9eaf9e5f90e5e64">&#9670;&#160;</a></span>tryLogin()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::AuthProvider::tryLogin </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a>&#160;</td>
          <td class="paramname"><em>uid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp;&#160;</td>
          <td class="paramname"><em>server</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const -&gt; std::optional&lt;<a class="el" href="structfabomatic_1_1_fab_user.xhtml">FabUser</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Verifies the card ID against the server (if available) or the whitelist. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uid</td><td>card ID </td></tr>
    <tr><td class="paramname">server</td><td>the server to check the card against </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a <a class="el" href="structfabomatic_1_1_fab_user.xhtml">FabUser</a> with an authenticated flag==true if valid, otherwise nullopt or <a class="el" href="structfabomatic_1_1_fab_user.xhtml">FabUser</a> with authenticated==False. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_auth_provider_8cpp_source.xhtml#l00054">54</a> of file <a class="el" href="_auth_provider_8cpp_source.xhtml">AuthProvider.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   55</span>  {</div>
<div class="line"><span class="lineno">   56</span>    FabUser user;</div>
<div class="line"><span class="lineno">   57</span>    <span class="keyword">using </span><a class="code hl_enumeration" href="namespacefabomatic_1_1_server_m_q_t_t.xhtml#a84cb68ff1e79f3f6d5e3cd37a3289d9d">UserResult</a> = <a class="code hl_enumeration" href="namespacefabomatic_1_1_server_m_q_t_t.xhtml#a84cb68ff1e79f3f6d5e3cd37a3289d9d">ServerMQTT::UserResult</a>;</div>
<div class="line"><span class="lineno">   58</span>    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code hl_function" href="namespacefabomatic_1_1card.xhtml#aef091ec171625c69f9d4eab20ebaefec">uid_str</a> = <a class="code hl_function" href="namespacefabomatic_1_1card.xhtml#aef091ec171625c69f9d4eab20ebaefec">card::uid_str</a>(uid);</div>
<div class="line"><span class="lineno">   59</span> </div>
<div class="line"><span class="lineno">   60</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;tryLogin called for %s&quot;</span>, <a class="code hl_function" href="namespacefabomatic_1_1card.xhtml#aef091ec171625c69f9d4eab20ebaefec">uid_str</a>.c_str());</div>
<div class="line"><span class="lineno">   61</span> </div>
<div class="line"><span class="lineno">   62</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="namespacefabomatic_1_1_board.xhtml#a57517d1e4e586f81a847e56fc92678bc">server</a>.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>())</div>
<div class="line"><span class="lineno">   63</span>      <a class="code hl_variable" href="namespacefabomatic_1_1_board.xhtml#a57517d1e4e586f81a847e56fc92678bc">server</a>.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">connect</a>();</div>
<div class="line"><span class="lineno">   64</span> </div>
<div class="line"><span class="lineno">   65</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="namespacefabomatic_1_1_board.xhtml#a57517d1e4e586f81a847e56fc92678bc">server</a>.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>())</div>
<div class="line"><span class="lineno">   66</span>    {</div>
<div class="line"><span class="lineno">   67</span>      <span class="keyword">const</span> <span class="keyword">auto</span> response = <a class="code hl_variable" href="namespacefabomatic_1_1_board.xhtml#a57517d1e4e586f81a847e56fc92678bc">server</a>.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aec5c26ad6c62b7446ca18841910ef82d">checkCard</a>(uid);</div>
<div class="line"><span class="lineno">   68</span>      <span class="keywordflow">if</span> (response-&gt;request_ok)</div>
<div class="line"><span class="lineno">   69</span>      {</div>
<div class="line"><span class="lineno">   70</span>        user.card_uid = uid;</div>
<div class="line"><span class="lineno">   71</span> </div>
<div class="line"><span class="lineno">   72</span>        <span class="keywordflow">if</span> (response-&gt;getResult() == UserResult::Authorized)</div>
<div class="line"><span class="lineno">   73</span>        {</div>
<div class="line"><span class="lineno">   74</span>          user.authenticated = <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">   75</span>          user.holder_name = response-&gt;holder_name;</div>
<div class="line"><span class="lineno">   76</span>          user.user_level = response-&gt;user_level;</div>
<div class="line"><span class="lineno">   77</span>          <span class="comment">// Cache the positive result</span></div>
<div class="line"><span class="lineno">   78</span>          <a class="code hl_function" href="classfabomatic_1_1_auth_provider.xhtml#a83eb4a5350f9d6ac79f2721b81f6ce5d">updateCache</a>(uid, response-&gt;user_level);</div>
<div class="line"><span class="lineno">   79</span> </div>
<div class="line"><span class="lineno">   80</span>          ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot; -&gt; online check OK (%s)&quot;</span>, user.toString().c_str());</div>
<div class="line"><span class="lineno">   81</span> </div>
<div class="line"><span class="lineno">   82</span>          <span class="keywordflow">return</span> user;</div>
<div class="line"><span class="lineno">   83</span>        }</div>
<div class="line"><span class="lineno">   84</span> </div>
<div class="line"><span class="lineno">   85</span>        <span class="comment">// Invalidate the cache entries</span></div>
<div class="line"><span class="lineno">   86</span>        <a class="code hl_function" href="classfabomatic_1_1_auth_provider.xhtml#a83eb4a5350f9d6ac79f2721b81f6ce5d">updateCache</a>(uid, <a class="code hl_enumvalue" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">FabUser::UserLevel::Unknown</a>);</div>
<div class="line"><span class="lineno">   87</span> </div>
<div class="line"><span class="lineno">   88</span>      } <span class="comment">// if (response-&gt;request_ok)</span></div>
<div class="line"><span class="lineno">   89</span> </div>
<div class="line"><span class="lineno">   90</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot; -&gt; online check NOT OK&quot;</span>);</div>
<div class="line"><span class="lineno">   91</span> </div>
<div class="line"><span class="lineno">   92</span>      user.authenticated = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">   93</span> </div>
<div class="line"><span class="lineno">   94</span>      <span class="keywordflow">if</span> (response-&gt;request_ok) <span class="comment">// Server replied but user is not valid</span></div>
<div class="line"><span class="lineno">   95</span>      {</div>
<div class="line"><span class="lineno">   96</span>        <span class="keywordflow">return</span> user;</div>
<div class="line"><span class="lineno">   97</span>      }</div>
<div class="line"><span class="lineno">   98</span>    }</div>
<div class="line"><span class="lineno">   99</span>    <span class="comment">// Check whitelist if offline</span></div>
<div class="line"><span class="lineno">  100</span>    <span class="keywordflow">if</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;result = <a class="code hl_function" href="classfabomatic_1_1_auth_provider.xhtml#a220558f8443c82ecc235fadb5ea44236">uidInWhitelist</a>(uid); result.has_value())</div>
<div class="line"><span class="lineno">  101</span>    {</div>
<div class="line"><span class="lineno">  102</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;[card, level, name] = result.value();</div>
<div class="line"><span class="lineno">  103</span>      user.card_uid = card;</div>
<div class="line"><span class="lineno">  104</span>      user.authenticated = <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  105</span>      user.user_level = level;</div>
<div class="line"><span class="lineno">  106</span>      user.holder_name = name;</div>
<div class="line"><span class="lineno">  107</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot; -&gt; whilelist check OK (%s)&quot;</span>, user.toString().c_str());</div>
<div class="line"><span class="lineno">  108</span> </div>
<div class="line"><span class="lineno">  109</span>      <span class="keywordflow">return</span> user;</div>
<div class="line"><span class="lineno">  110</span>    }</div>
<div class="line"><span class="lineno">  111</span> </div>
<div class="line"><span class="lineno">  112</span>    <span class="comment">// Finally check the cached values</span></div>
<div class="line"><span class="lineno">  113</span>    <span class="keywordflow">if</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;result = <a class="code hl_function" href="classfabomatic_1_1_auth_provider.xhtml#a1cd100fbd42df4bce2cb926fcbe45594">uidInCache</a>(uid); result.has_value())</div>
<div class="line"><span class="lineno">  114</span>    {</div>
<div class="line"><span class="lineno">  115</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;cached = result.value();</div>
<div class="line"><span class="lineno">  116</span>      user.card_uid = cached.uid;</div>
<div class="line"><span class="lineno">  117</span>      user.authenticated = (cached.level != <a class="code hl_enumvalue" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">FabUser::UserLevel::Unknown</a>);</div>
<div class="line"><span class="lineno">  118</span>      user.user_level = cached.level;</div>
<div class="line"><span class="lineno">  119</span>      user.holder_name = <a class="code hl_function" href="namespacefabomatic_1_1card.xhtml#aef091ec171625c69f9d4eab20ebaefec">card::uid_str</a>(uid);</div>
<div class="line"><span class="lineno">  120</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot; -&gt; cache check OK (%s)&quot;</span>, user.toString().c_str());</div>
<div class="line"><span class="lineno">  121</span>      <span class="keywordflow">return</span> user;</div>
<div class="line"><span class="lineno">  122</span>    }</div>
<div class="line"><span class="lineno">  123</span> </div>
<div class="line"><span class="lineno">  124</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot; -&gt; whilelist check NOK&quot;</span>);</div>
<div class="line"><span class="lineno">  125</span>    <span class="keywordflow">return</span> std::nullopt;</div>
<div class="line"><span class="lineno">  126</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_auth_provider_xhtml_a1cd100fbd42df4bce2cb926fcbe45594"><div class="ttname"><a href="classfabomatic_1_1_auth_provider.xhtml#a1cd100fbd42df4bce2cb926fcbe45594">fabomatic::AuthProvider::uidInCache</a></div><div class="ttdeci">auto uidInCache(card::uid_t uid) const -&gt; std::optional&lt; CachedCard &gt;</div><div class="ttdoc">Checks if the card ID is whitelisted.</div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8cpp_source.xhtml#l00157">AuthProvider.cpp:157</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_auth_provider_xhtml_a220558f8443c82ecc235fadb5ea44236"><div class="ttname"><a href="classfabomatic_1_1_auth_provider.xhtml#a220558f8443c82ecc235fadb5ea44236">fabomatic::AuthProvider::uidInWhitelist</a></div><div class="ttdeci">auto uidInWhitelist(card::uid_t uid) const -&gt; std::optional&lt; WhiteListEntry &gt;</div><div class="ttdoc">Checks if the card ID is whitelisted.</div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8cpp_source.xhtml#l00131">AuthProvider.cpp:131</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_auth_provider_xhtml_a83eb4a5350f9d6ac79f2721b81f6ce5d"><div class="ttname"><a href="classfabomatic_1_1_auth_provider.xhtml#a83eb4a5350f9d6ac79f2721b81f6ce5d">fabomatic::AuthProvider::updateCache</a></div><div class="ttdeci">auto updateCache(card::uid_t candidate_uid, FabUser::UserLevel level) const -&gt; void</div><div class="ttdoc">Cache the user request.</div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8cpp_source.xhtml#l00024">AuthProvider.cpp:24</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a1a45f556aadcbc428d14b7c7577ed43d"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">fabomatic::FabBackend::connect</a></div><div class="ttdeci">auto connect() -&gt; bool</div><div class="ttdoc">Establishes a connection to the WiFi network and the MQTT server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00291">FabBackend.cpp:291</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_aec5c26ad6c62b7446ca18841910ef82d"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#aec5c26ad6c62b7446ca18841910ef82d">fabomatic::FabBackend::checkCard</a></div><div class="ttdeci">auto checkCard(const card::uid_t uid) -&gt; std::unique_ptr&lt; ServerMQTT::UserResponse &gt;</div><div class="ttdoc">Checks if the card ID is known to the server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00507">FabBackend.cpp:507</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_aef092e0e1db0c3539d5474fad2456255"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">fabomatic::FabBackend::isOnline</a></div><div class="ttdeci">auto isOnline() const -&gt; bool</div><div class="ttdoc">Checks if the client is online.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00235">FabBackend.cpp:235</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_board_xhtml_a57517d1e4e586f81a847e56fc92678bc"><div class="ttname"><a href="namespacefabomatic_1_1_board.xhtml#a57517d1e4e586f81a847e56fc92678bc">fabomatic::Board::server</a></div><div class="ttdeci">FabBackend server</div></div>
<div class="ttc" id="anamespacefabomatic_1_1_server_m_q_t_t_xhtml_a84cb68ff1e79f3f6d5e3cd37a3289d9d"><div class="ttname"><a href="namespacefabomatic_1_1_server_m_q_t_t.xhtml#a84cb68ff1e79f3f6d5e3cd37a3289d9d">fabomatic::ServerMQTT::UserResult</a></div><div class="ttdeci">UserResult</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00125">MQTTtypes.hpp:126</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1card_xhtml_aef091ec171625c69f9d4eab20ebaefec"><div class="ttname"><a href="namespacefabomatic_1_1card.xhtml#aef091ec171625c69f9d4eab20ebaefec">fabomatic::card::uid_str</a></div><div class="ttdeci">auto uid_str(const card::uid_t uid) -&gt; const std::string</div><div class="ttdoc">Returns a string representation of the UID.</div><div class="ttdef"><b>Definition</b> <a href="card_8hpp_source.xhtml#l00020">card.hpp:20</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_fab_user_xhtml_a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e"><div class="ttname"><a href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">fabomatic::FabUser::UserLevel::Unknown</a></div><div class="ttdeci">@ Unknown</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_fab_user_8hpp_source.xhtml#l00029">fabomatic::FabUser::authenticated</a>, <a class="el" href="_fab_user_8hpp_source.xhtml#l00027">fabomatic::FabUser::card_uid</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00507">fabomatic::FabBackend::checkCard()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">fabomatic::FabBackend::connect()</a>, <a class="el" href="_fab_user_8hpp_source.xhtml#l00028">fabomatic::FabUser::holder_name</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00235">fabomatic::FabBackend::isOnline()</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>, <a class="el" href="_fab_user_8hpp_source.xhtml#l00056">fabomatic::FabUser::toString()</a>, <a class="el" href="card_8hpp_source.xhtml#l00020">fabomatic::card::uid_str()</a>, <a class="el" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">fabomatic::FabUser::Unknown</a>, and <a class="el" href="_fab_user_8hpp_source.xhtml#l00030">fabomatic::FabUser::user_level</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00163">fabomatic::BoardLogic::authorize()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00133">fabomatic::tests::test_fabserver_calls()</a>, and <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00094">fabomatic::tests::test_rfid_cache()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_auth_provider_aeae9923535dcf6cfa9eaf9e5f90e5e64_cgraph.svg" width="100%" height="538"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_auth_provider_aeae9923535dcf6cfa9eaf9e5f90e5e64_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a1cd100fbd42df4bce2cb926fcbe45594" name="a1cd100fbd42df4bce2cb926fcbe45594"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1cd100fbd42df4bce2cb926fcbe45594">&#9670;&#160;</a></span>uidInCache()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::AuthProvider::uidInCache </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a>&#160;</td>
          <td class="paramname"><em>candidate_uid</em></td><td>)</td>
          <td> const -&gt; std::optional&lt;<a class="el" href="structfabomatic_1_1_cached_card.xhtml">CachedCard</a>&gt;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if the card ID is whitelisted. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uid</td><td>card ID </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a whitelistentry object if the card is found in whitelist </dd></dl>

<p class="definition">Definition at line <a class="el" href="_auth_provider_8cpp_source.xhtml#l00157">157</a> of file <a class="el" href="_auth_provider_8cpp_source.xhtml">AuthProvider.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  158</span>  {</div>
<div class="line"><span class="lineno">  159</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">cache</a>.<a class="code hl_function" href="structfabomatic_1_1_cached_cards.xhtml#a7e846148aa4b716ebeb3ea5a5f24ac77">find_uid</a>(candidate_uid);</div>
<div class="line"><span class="lineno">  160</span>  }</div>
<div class="ttc" id="astructfabomatic_1_1_cached_cards_xhtml_a7e846148aa4b716ebeb3ea5a5f24ac77"><div class="ttname"><a href="structfabomatic_1_1_cached_cards.xhtml#a7e846148aa4b716ebeb3ea5a5f24ac77">fabomatic::CachedCards::find_uid</a></div><div class="ttdeci">auto find_uid(const card::uid_t &amp;search_uid) const -&gt; const std::optional&lt; CachedCard &gt;</div><div class="ttdef"><b>Definition</b> <a href="_cached_cards_8hpp_source.xhtml#l00039">CachedCards.hpp:39</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a220558f8443c82ecc235fadb5ea44236" name="a220558f8443c82ecc235fadb5ea44236"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a220558f8443c82ecc235fadb5ea44236">&#9670;&#160;</a></span>uidInWhitelist()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::AuthProvider::uidInWhitelist </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a>&#160;</td>
          <td class="paramname"><em>candidate_uid</em></td><td>)</td>
          <td> const -&gt; std::optional&lt;<a class="el" href="namespacefabomatic.xhtml#a23bf7a1d8cf94adbb1df8f8edd882501">WhiteListEntry</a>&gt;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if the card ID is whitelisted. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uid</td><td>card ID </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a whitelistentry object if the card is found in whitelist </dd></dl>

<p class="definition">Definition at line <a class="el" href="_auth_provider_8cpp_source.xhtml#l00131">131</a> of file <a class="el" href="_auth_provider_8cpp_source.xhtml">AuthProvider.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  132</span>  {</div>
<div class="line"><span class="lineno">  133</span>    <span class="keywordflow">if</span> (candidate_uid == <a class="code hl_variable" href="namespacefabomatic_1_1card.xhtml#a9ef4a9f5f43c63cf872a2d52a7af11cf">card::INVALID</a>)</div>
<div class="line"><span class="lineno">  134</span>    {</div>
<div class="line"><span class="lineno">  135</span>      <span class="keywordflow">return</span> std::nullopt;</div>
<div class="line"><span class="lineno">  136</span>    }</div>
<div class="line"><span class="lineno">  137</span> </div>
<div class="line"><span class="lineno">  138</span>    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;elem = std::find_if(<a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a52f8cf328edafb65b42c3117d06afaf7">whitelist</a>.cbegin(), <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a52f8cf328edafb65b42c3117d06afaf7">whitelist</a>.cend(),</div>
<div class="line"><span class="lineno">  139</span>                                    [candidate_uid](<span class="keyword">const</span> <span class="keyword">auto</span> &amp;input)</div>
<div class="line"><span class="lineno">  140</span>                                    {</div>
<div class="line"><span class="lineno">  141</span>                                      const auto &amp;[w_uid, w_level, w_name] = input;</div>
<div class="line"><span class="lineno">  142</span>                                      return w_uid == candidate_uid;</div>
<div class="line"><span class="lineno">  143</span>                                    });</div>
<div class="line"><span class="lineno">  144</span> </div>
<div class="line"><span class="lineno">  145</span>    <span class="keywordflow">if</span> (elem == <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a52f8cf328edafb65b42c3117d06afaf7">whitelist</a>.cend())</div>
<div class="line"><span class="lineno">  146</span>    {</div>
<div class="line"><span class="lineno">  147</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;%s not found in whitelist&quot;</span>, <a class="code hl_function" href="namespacefabomatic_1_1card.xhtml#aef091ec171625c69f9d4eab20ebaefec">card::uid_str</a>(candidate_uid).c_str());</div>
<div class="line"><span class="lineno">  148</span>      <span class="keywordflow">return</span> std::nullopt;</div>
<div class="line"><span class="lineno">  149</span>    }</div>
<div class="line"><span class="lineno">  150</span> </div>
<div class="line"><span class="lineno">  151</span>    <span class="keywordflow">return</span> {*elem};</div>
<div class="line"><span class="lineno">  152</span>  }</div>
<div class="ttc" id="anamespacefabomatic_1_1card_xhtml_a9ef4a9f5f43c63cf872a2d52a7af11cf"><div class="ttname"><a href="namespacefabomatic_1_1card.xhtml#a9ef4a9f5f43c63cf872a2d52a7af11cf">fabomatic::card::INVALID</a></div><div class="ttdeci">static constexpr uid_t INVALID</div><div class="ttdef"><b>Definition</b> <a href="card_8hpp_source.xhtml#l00015">card.hpp:15</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="card_8hpp_source.xhtml#l00015">fabomatic::card::INVALID</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>, and <a class="el" href="card_8hpp_source.xhtml#l00020">fabomatic::card::uid_str()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_auth_provider_a220558f8443c82ecc235fadb5ea44236_cgraph.svg" width="372" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a83eb4a5350f9d6ac79f2721b81f6ce5d" name="a83eb4a5350f9d6ac79f2721b81f6ce5d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83eb4a5350f9d6ac79f2721b81f6ce5d">&#9670;&#160;</a></span>updateCache()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::AuthProvider::updateCache </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a>&#160;</td>
          <td class="paramname"><em>uid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0">FabUser::UserLevel</a>&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const -&gt; void</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Cache the user request. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uid</td><td>card id of the user </td></tr>
    <tr><td class="paramname">name</td><td>name of the user to be cached </td></tr>
    <tr><td class="paramname">level</td><td>priviledge level of the user </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_auth_provider_8cpp_source.xhtml#l00024">24</a> of file <a class="el" href="_auth_provider_8cpp_source.xhtml">AuthProvider.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   25</span>  {</div>
<div class="line"><span class="lineno">   26</span>    <span class="comment">// Search for the card in the cache</span></div>
<div class="line"><span class="lineno">   27</span>    <span class="keyword">const</span> <span class="keyword">auto</span> pos = std::find(<a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">cache</a>.<a class="code hl_variable" href="structfabomatic_1_1_cached_cards.xhtml#a1d33c066725fe6ef09e8bee7743e14dd">cards</a>.cbegin(), <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">cache</a>.<a class="code hl_variable" href="structfabomatic_1_1_cached_cards.xhtml#a1d33c066725fe6ef09e8bee7743e14dd">cards</a>.cend(), uid);</div>
<div class="line"><span class="lineno">   28</span>    <span class="keywordflow">if</span> (pos != <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">cache</a>.<a class="code hl_variable" href="structfabomatic_1_1_cached_cards.xhtml#a1d33c066725fe6ef09e8bee7743e14dd">cards</a>.cend())</div>
<div class="line"><span class="lineno">   29</span>    {</div>
<div class="line"><span class="lineno">   30</span>      <span class="comment">// Update the level at same index</span></div>
<div class="line"><span class="lineno">   31</span>      <span class="keyword">const</span> <span class="keyword">auto</span> idx = std::distance(<a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">cache</a>.<a class="code hl_variable" href="structfabomatic_1_1_cached_cards.xhtml#a1d33c066725fe6ef09e8bee7743e14dd">cards</a>.cbegin(), pos);</div>
<div class="line"><span class="lineno">   32</span>      <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">cache</a>.<a class="code hl_variable" href="structfabomatic_1_1_cached_cards.xhtml#a3fdcaa4338d567cde40f9631bb11bc44">levels</a>[idx] = level;</div>
<div class="line"><span class="lineno">   33</span>      <span class="keywordflow">return</span>;</div>
<div class="line"><span class="lineno">   34</span>    }</div>
<div class="line"><span class="lineno">   35</span> </div>
<div class="line"><span class="lineno">   36</span>    <span class="comment">// No need to add in cache invalid cards</span></div>
<div class="line"><span class="lineno">   37</span>    <span class="keywordflow">if</span> (level == <a class="code hl_enumvalue" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">FabUser::UserLevel::Unknown</a>)</div>
<div class="line"><span class="lineno">   38</span>      <span class="keywordflow">return</span>;</div>
<div class="line"><span class="lineno">   39</span> </div>
<div class="line"><span class="lineno">   40</span>    <span class="comment">// Sanity check</span></div>
<div class="line"><span class="lineno">   41</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#aff7ea2388179e603ba65e88dea0fe5de">cache_idx</a> &gt;= <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">cache</a>.<a class="code hl_function" href="structfabomatic_1_1_cached_cards.xhtml#a128c3db6758b1e630855e673a44c585f">size</a>())</div>
<div class="line"><span class="lineno">   42</span>      <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#aff7ea2388179e603ba65e88dea0fe5de">cache_idx</a> = 0;</div>
<div class="line"><span class="lineno">   43</span> </div>
<div class="line"><span class="lineno">   44</span>    <span class="comment">// Add into list</span></div>
<div class="line"><span class="lineno">   45</span>    <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#a0db2e829ff5db93ecddf4279ce61fe31">cache</a>.<a class="code hl_function" href="structfabomatic_1_1_cached_cards.xhtml#a7d802081604574a8a905b5f98e80746b">set_at</a>(<a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#aff7ea2388179e603ba65e88dea0fe5de">cache_idx</a>, uid, level);</div>
<div class="line"><span class="lineno">   46</span> </div>
<div class="line"><span class="lineno">   47</span>    <a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#aff7ea2388179e603ba65e88dea0fe5de">cache_idx</a> = (<a class="code hl_variable" href="classfabomatic_1_1_auth_provider.xhtml#aff7ea2388179e603ba65e88dea0fe5de">cache_idx</a> + 1) % <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1rfid__tags.xhtml#a786cf57e36da88ed2d6c153e3b6fdc30">conf::rfid_tags::CACHE_LEN</a>;</div>
<div class="line"><span class="lineno">   48</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_auth_provider_xhtml_aff7ea2388179e603ba65e88dea0fe5de"><div class="ttname"><a href="classfabomatic_1_1_auth_provider.xhtml#aff7ea2388179e603ba65e88dea0fe5de">fabomatic::AuthProvider::cache_idx</a></div><div class="ttdeci">size_t cache_idx</div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8hpp_source.xhtml#l00024">AuthProvider.hpp:24</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1rfid__tags_xhtml_a786cf57e36da88ed2d6c153e3b6fdc30"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1rfid__tags.xhtml#a786cf57e36da88ed2d6c153e3b6fdc30">fabomatic::conf::rfid_tags::CACHE_LEN</a></div><div class="ttdeci">static constexpr uint8_t CACHE_LEN</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00066">conf.hpp:66</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_cached_cards_xhtml_a128c3db6758b1e630855e673a44c585f"><div class="ttname"><a href="structfabomatic_1_1_cached_cards.xhtml#a128c3db6758b1e630855e673a44c585f">fabomatic::CachedCards::size</a></div><div class="ttdeci">constexpr auto size() const -&gt; size_t</div><div class="ttdef"><b>Definition</b> <a href="_cached_cards_8hpp_source.xhtml#l00060">CachedCards.hpp:60</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_cached_cards_xhtml_a7d802081604574a8a905b5f98e80746b"><div class="ttname"><a href="structfabomatic_1_1_cached_cards.xhtml#a7d802081604574a8a905b5f98e80746b">fabomatic::CachedCards::set_at</a></div><div class="ttdeci">constexpr auto set_at(int idx, const card::uid_t &amp;uid, const FabUser::UserLevel &amp;level) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_cached_cards_8hpp_source.xhtml#l00054">CachedCards.hpp:54</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_auth_provider_8hpp_source.xhtml#l00023">cache</a>, <a class="el" href="_auth_provider_8hpp_source.xhtml#l00024">cache_idx</a>, <a class="el" href="conf_8hpp_source.xhtml#l00066">fabomatic::conf::rfid_tags::CACHE_LEN</a>, <a class="el" href="_cached_cards_8hpp_source.xhtml#l00029">fabomatic::CachedCards::cards</a>, <a class="el" href="_cached_cards_8hpp_source.xhtml#l00030">fabomatic::CachedCards::levels</a>, <a class="el" href="_cached_cards_8hpp_source.xhtml#l00054">fabomatic::CachedCards::set_at()</a>, <a class="el" href="_cached_cards_8hpp_source.xhtml#l00060">fabomatic::CachedCards::size()</a>, and <a class="el" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">fabomatic::FabUser::Unknown</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_auth_provider_a83eb4a5350f9d6ac79f2721b81f6ce5d_cgraph.svg" width="380" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a0db2e829ff5db93ecddf4279ce61fe31" name="a0db2e829ff5db93ecddf4279ce61fe31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0db2e829ff5db93ecddf4279ce61fe31">&#9670;&#160;</a></span>cache</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfabomatic_1_1_cached_cards.xhtml">CachedCards</a> fabomatic::AuthProvider::cache</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">mutable</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_auth_provider_8hpp_source.xhtml#l00023">23</a> of file <a class="el" href="_auth_provider_8hpp_source.xhtml">AuthProvider.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_auth_provider_8cpp_source.xhtml#l00183">saveCache()</a>, and <a class="el" href="_auth_provider_8cpp_source.xhtml#l00024">updateCache()</a>.</p>

</div>
</div>
<a id="aff7ea2388179e603ba65e88dea0fe5de" name="aff7ea2388179e603ba65e88dea0fe5de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff7ea2388179e603ba65e88dea0fe5de">&#9670;&#160;</a></span>cache_idx</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t fabomatic::AuthProvider::cache_idx {0}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">mutable</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_auth_provider_8hpp_source.xhtml#l00024">24</a> of file <a class="el" href="_auth_provider_8hpp_source.xhtml">AuthProvider.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   24</span>{0};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_auth_provider_8cpp_source.xhtml#l00024">updateCache()</a>.</p>

</div>
</div>
<a id="a52f8cf328edafb65b42c3117d06afaf7" name="a52f8cf328edafb65b42c3117d06afaf7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52f8cf328edafb65b42c3117d06afaf7">&#9670;&#160;</a></span>whitelist</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacefabomatic.xhtml#a626fe6fe3dcf9b459c45e9f769f7b8e7">WhiteList</a> fabomatic::AuthProvider::whitelist</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_auth_provider_8hpp_source.xhtml#l00022">22</a> of file <a class="el" href="_auth_provider_8hpp_source.xhtml">AuthProvider.hpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="_auth_provider_8hpp_source.xhtml">AuthProvider.hpp</a></li>
<li><a class="el" href="_auth_provider_8cpp_source.xhtml">AuthProvider.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Jul 1 2024 20:53:05 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
