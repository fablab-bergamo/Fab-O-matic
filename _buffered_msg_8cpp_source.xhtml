<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: BufferedMsg.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(0); });
/* @license-end */
</script>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">BufferedMsg.cpp</div></div>
</div><!--header-->
<div class="contents">
<a href="_buffered_msg_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#include &quot;<a class="code" href="_buffered_msg_8hpp.xhtml">BufferedMsg.hpp</a>&quot;</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;ArduinoJson.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &quot;<a class="code" href="_logging_8hpp.xhtml">Logging.hpp</a>&quot;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefabomatic.xhtml">fabomatic</a></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>{</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="foldopen" id="foldopen00009" data-start="{" data-end="}">
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffer.xhtml#aad578ef8cbecdafb8c5ade345df415a3">    9</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#aad578ef8cbecdafb8c5ade345df415a3">Buffer::push_back</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a> &amp;message) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>  {</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>    <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1debug.xhtml#a5facfa139bf1642294264da0584f4691">conf::debug::ENABLE_BUFFERING</a>)</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>    {</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>      msg_queue.push_back(message);</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>      <span class="keywordflow">if</span> (msg_queue.size() &gt; MAX_MESSAGES)</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>      {</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>        msg_queue.pop_front();</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>        ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Removing first message from the buffer&quot;</span>);</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>      }</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>      has_changed = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>      ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Buffered %s on %s, %lu messages queued&quot;</span>,</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>               message.mqtt_message.c_str(),</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>               message.mqtt_topic.c_str(),</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>               msg_queue.size());</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>    }</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>  }</div>
</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span> </div>
<div class="foldopen" id="foldopen00028" data-start="{" data-end="}">
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffer.xhtml#a06b997e6e4f83f208250b739f9e2a2db">   28</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a06b997e6e4f83f208250b739f9e2a2db">Buffer::push_front</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a> &amp;message) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  {</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>    <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1debug.xhtml#a5facfa139bf1642294264da0584f4691">conf::debug::ENABLE_BUFFERING</a>)</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>    {</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>      msg_queue.push_front(message);</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>      <span class="keywordflow">if</span> (msg_queue.size() &gt; MAX_MESSAGES)</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>      {</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>        msg_queue.pop_back();</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>        ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Removing last message from the buffer&quot;</span>);</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>      }</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>      has_changed = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>      ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Buffered %s on %s, %lu messages queued&quot;</span>,</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>               message.mqtt_message.c_str(),</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>               message.mqtt_topic.c_str(),</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>               msg_queue.size());</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    }</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  }</div>
</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="foldopen" id="foldopen00047" data-start="{" data-end="}">
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffer.xhtml#a6301e1ea47622d36474ee031a17b9bb4">   47</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a6301e1ea47622d36474ee031a17b9bb4">Buffer::getMessage</a>() -&gt; <span class="keyword">const</span> <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  {</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>    <span class="keywordflow">if</span> (msg_queue.size() == 0)</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>    {</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>      ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Calling getMessage() on empty queue!&quot;</span>);</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>      <span class="keywordflow">return</span> {<span class="stringliteral">&quot;&quot;</span>, <span class="stringliteral">&quot;&quot;</span>, <span class="keyword">false</span>};</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>    }</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>    <span class="keyword">auto</span> elem = msg_queue.front();</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>    msg_queue.pop_front();</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>    has_changed = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>    <span class="keywordflow">return</span> elem;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  }</div>
</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="foldopen" id="foldopen00062" data-start="{" data-end="}">
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">   62</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">Buffer::count</a>() const -&gt; <span class="keywordtype">size_t</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  {</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_buffer.xhtml#a24764f4964eca4b9c68b6e98e1d38349">msg_queue</a>.size();</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  }</div>
</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="foldopen" id="foldopen00067" data-start="{" data-end="}">
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffer.xhtml#a72f029c82552ccea45eaf611f345c079">   67</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a72f029c82552ccea45eaf611f345c079">Buffer::toJson</a>(JsonDocument &amp;doc, <span class="keyword">const</span> std::string &amp;element_name) <span class="keyword">const</span> -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  {</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>    <span class="keyword">auto</span> obj = doc.createNestedObject(element_name);</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>    obj[<span class="stringliteral">&quot;VERSION&quot;</span>] = MAGIC_NUMBER;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    <span class="keyword">auto</span> json_elem = obj.createNestedArray(<span class="stringliteral">&quot;messages&quot;</span>);</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> elem = msg_queue.begin(); elem != msg_queue.end(); elem++)</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>    {</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>      <span class="keyword">auto</span> obj_msg = json_elem.createNestedObject();</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>      obj_msg[<span class="stringliteral">&quot;tp&quot;</span>] = elem-&gt;mqtt_topic;</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>      obj_msg[<span class="stringliteral">&quot;msg&quot;</span>] = elem-&gt;mqtt_message;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>      obj_msg[<span class="stringliteral">&quot;wait&quot;</span>] = elem-&gt;wait_for_answer;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    }</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  }</div>
</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="foldopen" id="foldopen00082" data-start="{" data-end="}">
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffer.xhtml#ad6d946c6ad24dd1a0ab695bb8874b554">   82</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#ad6d946c6ad24dd1a0ab695bb8874b554">Buffer::fromJsonElement</a>(<span class="keyword">const</span> JsonObject &amp;json_obj) -&gt; std::optional&lt;Buffer&gt;</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  {</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    <a class="code hl_class" href="classfabomatic_1_1_buffer.xhtml">Buffer</a> buff;</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    <span class="comment">// Check that the version is the same</span></div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    <span class="keyword">auto</span> version = json_obj[<span class="stringliteral">&quot;VERSION&quot;</span>].as&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;();</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>    <span class="keywordflow">if</span> (version != MAGIC_NUMBER)</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    {</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Buffer::fromJson() : wrong version number (%d, expected %d)&quot;</span>, version, MAGIC_NUMBER);</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>      <span class="keywordflow">return</span> std::nullopt;</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>    }</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;elem : json_obj[<span class="stringliteral">&quot;messages&quot;</span>].as&lt;JsonArray&gt;())</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>    {</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;msg = <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a>{elem[<span class="stringliteral">&quot;msg&quot;</span>].as&lt;std::string&gt;(),</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>                                    elem[<span class="stringliteral">&quot;tp&quot;</span>].as&lt;std::string&gt;(),</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>                                    elem[<span class="stringliteral">&quot;wait&quot;</span>].as&lt;<span class="keywordtype">bool</span>&gt;()};</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>      buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#aad578ef8cbecdafb8c5ade345df415a3">push_back</a>(msg);</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>    }</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span> </div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Buffer::fromJsonElement() : data loaded successfully&quot;</span>);</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span> </div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>    <span class="keywordflow">return</span> buff;</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  }</div>
</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>} <span class="comment">// namespace fabomatic</span></div>
<div class="ttc" id="a_buffered_msg_8hpp_xhtml"><div class="ttname"><a href="_buffered_msg_8hpp.xhtml">BufferedMsg.hpp</a></div></div>
<div class="ttc" id="a_logging_8hpp_xhtml"><div class="ttname"><a href="_logging_8hpp.xhtml">Logging.hpp</a></div></div>
<div class="ttc" id="a_logging_8hpp_xhtml_a4ef5b5f197804a60836ab1e8907d8301"><div class="ttname"><a href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a></div><div class="ttdeci">static const char *const TAG</div><div class="ttdef"><b>Definition</b> <a href="_logging_8hpp_source.xhtml#l00006">Logging.hpp:6</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml">fabomatic::Buffer</a></div><div class="ttdoc">Class containing the buffered messages for future replay.</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00028">BufferedMsg.hpp:29</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a06b997e6e4f83f208250b739f9e2a2db"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a06b997e6e4f83f208250b739f9e2a2db">fabomatic::Buffer::push_front</a></div><div class="ttdeci">auto push_front(const BufferedMsg &amp;message) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00028">BufferedMsg.cpp:28</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a24764f4964eca4b9c68b6e98e1d38349"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a24764f4964eca4b9c68b6e98e1d38349">fabomatic::Buffer::msg_queue</a></div><div class="ttdeci">std::deque&lt; BufferedMsg &gt; msg_queue</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00031">BufferedMsg.hpp:31</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a6301e1ea47622d36474ee031a17b9bb4"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a6301e1ea47622d36474ee031a17b9bb4">fabomatic::Buffer::getMessage</a></div><div class="ttdeci">auto getMessage() -&gt; const BufferedMsg</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00047">BufferedMsg.cpp:47</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a72f029c82552ccea45eaf611f345c079"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a72f029c82552ccea45eaf611f345c079">fabomatic::Buffer::toJson</a></div><div class="ttdeci">auto toJson(JsonDocument &amp;doc, const std::string &amp;element_name) const -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00067">BufferedMsg.cpp:67</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a9ff239a0ddbaed54bcf0a72f2517d7a0"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">fabomatic::Buffer::count</a></div><div class="ttdeci">auto count() const -&gt; size_t</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00062">BufferedMsg.cpp:62</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_aad578ef8cbecdafb8c5ade345df415a3"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#aad578ef8cbecdafb8c5ade345df415a3">fabomatic::Buffer::push_back</a></div><div class="ttdeci">auto push_back(const BufferedMsg &amp;message) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00009">BufferedMsg.cpp:9</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_ad6d946c6ad24dd1a0ab695bb8874b554"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#ad6d946c6ad24dd1a0ab695bb8874b554">fabomatic::Buffer::fromJsonElement</a></div><div class="ttdeci">static auto fromJsonElement(const JsonObject &amp;json_obj) -&gt; std::optional&lt; Buffer &gt;</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00082">BufferedMsg.cpp:82</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1debug_xhtml_a5facfa139bf1642294264da0584f4691"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1debug.xhtml#a5facfa139bf1642294264da0584f4691">fabomatic::conf::debug::ENABLE_BUFFERING</a></div><div class="ttdeci">static constexpr bool ENABLE_BUFFERING</div><div class="ttdoc">True if important MQTT messages should be saved when network is down and replayed.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00092">conf.hpp:92</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml"><div class="ttname"><a href="namespacefabomatic.xhtml">fabomatic</a></div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8cpp_source.xhtml#l00010">AuthProvider.cpp:11</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_buffered_msg_xhtml"><div class="ttname"><a href="structfabomatic_1_1_buffered_msg.xhtml">fabomatic::BufferedMsg</a></div><div class="ttdoc">Message that can be saved in Flash for future replay.</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00016">BufferedMsg.hpp:17</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Jul 2 2024 19:19:45 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
