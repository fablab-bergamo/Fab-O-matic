<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: main.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle"><div class="title">main.cpp File Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;pthread.h&quot;</code><br />
<code>#include &lt;array&gt;</code><br />
<code>#include &lt;cstdint&gt;</code><br />
<code>#include &lt;iostream&gt;</code><br />
<code>#include &lt;string&gt;</code><br />
<code>#include &quot;<a class="el" href="_board_logic_8hpp_source.xhtml">BoardLogic.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_espressif_8hpp_source.xhtml">Espressif.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_logging_8hpp_source.xhtml">Logging.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_mrfc522_driver_8hpp_source.xhtml">Mrfc522Driver.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_tasks_8hpp_source.xhtml">Tasks.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="globals_8hpp_source.xhtml">globals.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="pins_8hpp_source.xhtml">pins.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="lang_8hpp_source.xhtml">language/lang.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_o_t_a_8hpp_source.xhtml">OTA.hpp</a>&quot;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for main.cpp:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="main_8cpp__incl.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</div>
<p><a href="main_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacefabomatic" id="r_namespacefabomatic"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml">fabomatic</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacefabomatic_1_1_board" id="r_namespacefabomatic_1_1_board"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1_board.xhtml">fabomatic::Board</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a18d0b3e1fea1fd3c19356465c52a3836" id="r_a18d0b3e1fea1fd3c19356465c52a3836"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a18d0b3e1fea1fd3c19356465c52a3836">fabomatic::Scheduler</a> = <a class="el" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml">Tasks::Scheduler</a></td></tr>
<tr class="separator:a18d0b3e1fea1fd3c19356465c52a3836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a911c79b3e3873c07d41263ff8b803833" id="r_a911c79b3e3873c07d41263ff8b803833"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">fabomatic::Task</a> = <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Tasks::Task</a></td></tr>
<tr class="separator:a911c79b3e3873c07d41263ff8b803833"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a314e8b965d8bef1c1ce19757a9ad2117" id="r_a314e8b965d8bef1c1ce19757a9ad2117"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a314e8b965d8bef1c1ce19757a9ad2117">fabomatic::Status</a> = <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0">BoardLogic::Status</a></td></tr>
<tr class="separator:a314e8b965d8bef1c1ce19757a9ad2117"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ae7de89faffd3bb8805727b8a1092a198" id="r_ae7de89faffd3bb8805727b8a1092a198"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#ae7de89faffd3bb8805727b8a1092a198">fabomatic::taskConnect</a> ()</td></tr>
<tr class="memdesc:ae7de89faffd3bb8805727b8a1092a198"><td class="mdescLeft">&#160;</td><td class="mdescRight">Opens WiFi and server connection and updates board state accordingly.  <br /></td></tr>
<tr class="separator:ae7de89faffd3bb8805727b8a1092a198"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e5c190499522bddad3f3cc69274f16c" id="r_a3e5c190499522bddad3f3cc69274f16c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a3e5c190499522bddad3f3cc69274f16c">fabomatic::taskCheckRfid</a> ()</td></tr>
<tr class="memdesc:a3e5c190499522bddad3f3cc69274f16c"><td class="mdescLeft">&#160;</td><td class="mdescRight">periodic check for new RFID card  <br /></td></tr>
<tr class="separator:a3e5c190499522bddad3f3cc69274f16c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bb86caf0357ce1dd9ffe2945dcfc6e4" id="r_a9bb86caf0357ce1dd9ffe2945dcfc6e4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a9bb86caf0357ce1dd9ffe2945dcfc6e4">fabomatic::taskBlink</a> ()</td></tr>
<tr class="memdesc:a9bb86caf0357ce1dd9ffe2945dcfc6e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">blink led  <br /></td></tr>
<tr class="separator:a9bb86caf0357ce1dd9ffe2945dcfc6e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa56f9324b5710d12bea42757af0289f2" id="r_aa56f9324b5710d12bea42757af0289f2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#aa56f9324b5710d12bea42757af0289f2">fabomatic::taskPoweroffCheck</a> ()</td></tr>
<tr class="memdesc:aa56f9324b5710d12bea42757af0289f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">periodic check if the machine must be powered off  <br /></td></tr>
<tr class="separator:aa56f9324b5710d12bea42757af0289f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86a02975f3cc660ebccdde8f217aa035" id="r_a86a02975f3cc660ebccdde8f217aa035"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a86a02975f3cc660ebccdde8f217aa035">fabomatic::taskPoweroffWarning</a> ()</td></tr>
<tr class="memdesc:a86a02975f3cc660ebccdde8f217aa035"><td class="mdescLeft">&#160;</td><td class="mdescRight">periodic check if the machine must be powered off  <br /></td></tr>
<tr class="separator:a86a02975f3cc660ebccdde8f217aa035"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8ee1c3cd4edf1a1ba27899da63b611a" id="r_af8ee1c3cd4edf1a1ba27899da63b611a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#af8ee1c3cd4edf1a1ba27899da63b611a">fabomatic::taskLogoffCheck</a> ()</td></tr>
<tr class="memdesc:af8ee1c3cd4edf1a1ba27899da63b611a"><td class="mdescLeft">&#160;</td><td class="mdescRight">periodic check if the user shall be logged off  <br /></td></tr>
<tr class="separator:af8ee1c3cd4edf1a1ba27899da63b611a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1348a9b7dbfe8fb026357347795ee7a1" id="r_a1348a9b7dbfe8fb026357347795ee7a1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a1348a9b7dbfe8fb026357347795ee7a1">fabomatic::taskEspWatchdog</a> ()</td></tr>
<tr class="memdesc:a1348a9b7dbfe8fb026357347795ee7a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Keep the ESP32 HW watchdog alive. If code gets stuck this will cause an automatic reset.  <br /></td></tr>
<tr class="separator:a1348a9b7dbfe8fb026357347795ee7a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a525d1f233a2f797801a9a659c5044cb7" id="r_a525d1f233a2f797801a9a659c5044cb7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a525d1f233a2f797801a9a659c5044cb7">fabomatic::taskRfidWatchdog</a> ()</td></tr>
<tr class="memdesc:a525d1f233a2f797801a9a659c5044cb7"><td class="mdescLeft">&#160;</td><td class="mdescRight">checks the RFID chip status and re-init it if necessary.  <br /></td></tr>
<tr class="separator:a525d1f233a2f797801a9a659c5044cb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a710739974eb0b1c5b53ffd75580ab54d" id="r_a710739974eb0b1c5b53ffd75580ab54d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a710739974eb0b1c5b53ffd75580ab54d">fabomatic::taskMQTTClientLoop</a> ()</td></tr>
<tr class="memdesc:a710739974eb0b1c5b53ffd75580ab54d"><td class="mdescLeft">&#160;</td><td class="mdescRight">sends the MQTT alive message  <br /></td></tr>
<tr class="separator:a710739974eb0b1c5b53ffd75580ab54d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77b0a5de55b2f507f610f1d0c5196bc2" id="r_a77b0a5de55b2f507f610f1d0c5196bc2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a77b0a5de55b2f507f610f1d0c5196bc2">fabomatic::taskIsAlive</a> ()</td></tr>
<tr class="separator:a77b0a5de55b2f507f610f1d0c5196bc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c7ad2690e92eb8ab98b6fadaa4df2bd" id="r_a2c7ad2690e92eb8ab98b6fadaa4df2bd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a2c7ad2690e92eb8ab98b6fadaa4df2bd">fabomatic::taskFactoryReset</a> ()</td></tr>
<tr class="separator:a2c7ad2690e92eb8ab98b6fadaa4df2bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba5f28d2cdf80fb0270592238bfee443" id="r_aba5f28d2cdf80fb0270592238bfee443"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#aba5f28d2cdf80fb0270592238bfee443">fabomatic::printCompileSettings</a> ()</td></tr>
<tr class="separator:aba5f28d2cdf80fb0270592238bfee443"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fc01d736fe50cf5b977f755b675f11d" id="r_a4fc01d736fe50cf5b977f755b675f11d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="main_8cpp.xhtml#a4fc01d736fe50cf5b977f755b675f11d">setup</a> ()</td></tr>
<tr class="separator:a4fc01d736fe50cf5b977f755b675f11d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe461d27b9c48d5921c00d521181f12f" id="r_afe461d27b9c48d5921c00d521181f12f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="main_8cpp.xhtml#afe461d27b9c48d5921c00d521181f12f">loop</a> ()</td></tr>
<tr class="separator:afe461d27b9c48d5921c00d521181f12f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a847a6d8ca985bca97bd3e60c3c5a7570" id="r_a847a6d8ca985bca97bd3e60c3c5a7570"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">RFIDWrapper</a>&lt; <a class="el" href="classfabomatic_1_1_mrfc522_driver.xhtml">Mrfc522Driver</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1_board.xhtml#a847a6d8ca985bca97bd3e60c3c5a7570">fabomatic::Board::rfid</a> {}</td></tr>
<tr class="separator:a847a6d8ca985bca97bd3e60c3c5a7570"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9268221ea7bfdcc46c3862fa7996d3d" id="r_af9268221ea7bfdcc46c3862fa7996d3d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacefabomatic.xhtml#a18d0b3e1fea1fd3c19356465c52a3836">Scheduler</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">fabomatic::Board::scheduler</a></td></tr>
<tr class="separator:af9268221ea7bfdcc46c3862fa7996d3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d4ea1d7cfe27d9d91f093a9b5b1a82a" id="r_a5d4ea1d7cfe27d9d91f093a9b5b1a82a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">BoardLogic</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1_board.xhtml#a5d4ea1d7cfe27d9d91f093a9b5b1a82a">fabomatic::Board::logic</a></td></tr>
<tr class="separator:a5d4ea1d7cfe27d9d91f093a9b5b1a82a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6df743788c6d2eb908bcee7dcdff7c9" id="r_af6df743788c6d2eb908bcee7dcdff7c9"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#af6df743788c6d2eb908bcee7dcdff7c9">fabomatic::t_rfid</a> (&quot;RFIDChip&quot;, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a71fac767ad71b5f26725d54869ed95d2">conf::tasks::RFID_CHECK_PERIOD</a>, &amp;<a class="el" href="namespacefabomatic.xhtml#a3e5c190499522bddad3f3cc69274f16c">taskCheckRfid</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true)</td></tr>
<tr class="separator:af6df743788c6d2eb908bcee7dcdff7c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62825a5ee62275ecf8035dbfe04c03b6" id="r_a62825a5ee62275ecf8035dbfe04c03b6"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a62825a5ee62275ecf8035dbfe04c03b6">fabomatic::t_network</a> (&quot;Wifi/MQTT&quot;, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#ad02ccc45b2e8b9ec6a675450b7cf0c9c">conf::tasks::MQTT_REFRESH_PERIOD</a>, &amp;<a class="el" href="namespacefabomatic.xhtml#ae7de89faffd3bb8805727b8a1092a198">taskConnect</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#ad02ccc45b2e8b9ec6a675450b7cf0c9c">conf::tasks::MQTT_REFRESH_PERIOD</a>)</td></tr>
<tr class="separator:a62825a5ee62275ecf8035dbfe04c03b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20cee87876cf5e777603e330941c5bb4" id="r_a20cee87876cf5e777603e330941c5bb4"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a20cee87876cf5e777603e330941c5bb4">fabomatic::t_powoff</a> (&quot;Poweroff&quot;, 1s, &amp;<a class="el" href="namespacefabomatic.xhtml#aa56f9324b5710d12bea42757af0289f2">taskPoweroffCheck</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true)</td></tr>
<tr class="separator:a20cee87876cf5e777603e330941c5bb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac30e3c9218c5d2581599acae8cafbd35" id="r_ac30e3c9218c5d2581599acae8cafbd35"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#ac30e3c9218c5d2581599acae8cafbd35">fabomatic::t_log</a> (&quot;Logoff&quot;, 1s, &amp;<a class="el" href="namespacefabomatic.xhtml#af8ee1c3cd4edf1a1ba27899da63b611a">taskLogoffCheck</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true)</td></tr>
<tr class="separator:ac30e3c9218c5d2581599acae8cafbd35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af362107d1aa514249d971e686c01abdd" id="r_af362107d1aa514249d971e686c01abdd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#af362107d1aa514249d971e686c01abdd">fabomatic::t_wdg</a> (&quot;Watchdog&quot;, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a227a2e840bdda9f2031217fbb91d045d">conf::tasks::WATCHDOG_PERIOD</a>, &amp;<a class="el" href="namespacefabomatic.xhtml#a1348a9b7dbfe8fb026357347795ee7a1">taskEspWatchdog</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, false)</td></tr>
<tr class="separator:af362107d1aa514249d971e686c01abdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12f86cb8f59298f8d7cc75d25786870c" id="r_a12f86cb8f59298f8d7cc75d25786870c"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a12f86cb8f59298f8d7cc75d25786870c">fabomatic::t_test</a> (&quot;Selftest&quot;, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a06a612b95a0c8e7e71993a5dd6384984">conf::tasks::RFID_SELFTEST_PERIOD</a>, &amp;<a class="el" href="namespacefabomatic.xhtml#a525d1f233a2f797801a9a659c5044cb7">taskRfidWatchdog</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true)</td></tr>
<tr class="separator:a12f86cb8f59298f8d7cc75d25786870c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5ad3332f56bc0f3e5e7a18650f7f9a4" id="r_ac5ad3332f56bc0f3e5e7a18650f7f9a4"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#ac5ad3332f56bc0f3e5e7a18650f7f9a4">fabomatic::t_warn</a> (&quot;PoweroffWarning&quot;, <a class="el" href="namespacefabomatic_1_1conf_1_1machine.xhtml#ac26edc4054f82d62fbd295e185c77a0d">conf::machine::DELAY_BETWEEN_BEEPS</a>, &amp;<a class="el" href="namespacefabomatic.xhtml#a86a02975f3cc660ebccdde8f217aa035">taskPoweroffWarning</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true)</td></tr>
<tr class="separator:ac5ad3332f56bc0f3e5e7a18650f7f9a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3afd4c8a229766158a4c701858f83bf3" id="r_a3afd4c8a229766158a4c701858f83bf3"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a3afd4c8a229766158a4c701858f83bf3">fabomatic::t_mqtt</a> (&quot;MQTT client loop&quot;, 1s, &amp;<a class="el" href="namespacefabomatic.xhtml#a710739974eb0b1c5b53ffd75580ab54d">taskMQTTClientLoop</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true)</td></tr>
<tr class="separator:a3afd4c8a229766158a4c701858f83bf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71064bb1692b34bdb1af73d9205f6826" id="r_a71064bb1692b34bdb1af73d9205f6826"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a71064bb1692b34bdb1af73d9205f6826">fabomatic::t_led</a> (&quot;LED&quot;, 1s, &amp;<a class="el" href="namespacefabomatic.xhtml#a9bb86caf0357ce1dd9ffe2945dcfc6e4">taskBlink</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true)</td></tr>
<tr class="separator:a71064bb1692b34bdb1af73d9205f6826"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae69308e67934372b46ed0cffa869c6b0" id="r_ae69308e67934372b46ed0cffa869c6b0"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#ae69308e67934372b46ed0cffa869c6b0">fabomatic::t_rst</a> (&quot;FactoryReset&quot;, 500ms, &amp;<a class="el" href="namespacefabomatic.xhtml#a2c7ad2690e92eb8ab98b6fadaa4df2bd">taskFactoryReset</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, pins.buttons.factory_defaults_pin !=<a class="el" href="namespacefabomatic.xhtml#a01a9e2e5f9e92f6f3fa9204ba3d946b9">NO_PIN</a>)</td></tr>
<tr class="separator:ae69308e67934372b46ed0cffa869c6b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a836ff5da9f16608b37915998ed449bf1" id="r_a836ff5da9f16608b37915998ed449bf1"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a836ff5da9f16608b37915998ed449bf1">fabomatic::t_alive</a> (&quot;IsAlive&quot;, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a426b86ab3d140378a98ed2f00d3fb3d2">conf::tasks::MQTT_ALIVE_PERIOD</a>, &amp;<a class="el" href="namespacefabomatic.xhtml#a77b0a5de55b2f507f610f1d0c5196bc2">taskIsAlive</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a426b86ab3d140378a98ed2f00d3fb3d2">conf::tasks::MQTT_ALIVE_PERIOD</a>)</td></tr>
<tr class="separator:a836ff5da9f16608b37915998ed449bf1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="afe461d27b9c48d5921c00d521181f12f" name="afe461d27b9c48d5921c00d521181f12f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe461d27b9c48d5921c00d521181f12f">&#9670;&#160;</a></span>loop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void loop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="main_8cpp_source.xhtml#l00495">495</a> of file <a class="el" href="main_8cpp_source.xhtml">main.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  496</span>{</div>
<div class="line"><span class="lineno">  497</span>  <a class="code hl_variable" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">fabomatic::Board::scheduler</a>.<a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a83cf39f760eb3248ceb7a4d805af198d">execute</a>();</div>
<div class="line"><span class="lineno">  498</span>  ArduinoOTA.handle();</div>
<div class="line"><span class="lineno">  499</span>}</div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_scheduler_xhtml_a83cf39f760eb3248ceb7a4d805af198d"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a83cf39f760eb3248ceb7a4d805af198d">fabomatic::Tasks::Scheduler::execute</a></div><div class="ttdeci">auto execute() const -&gt; void</div><div class="ttdoc">Execute all tasks that are ready to run.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00081">Tasks.cpp:81</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_board_xhtml_af9268221ea7bfdcc46c3862fa7996d3d"><div class="ttname"><a href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">fabomatic::Board::scheduler</a></div><div class="ttdeci">Scheduler scheduler</div><div class="ttdef"><b>Definition</b> <a href="globals_8hpp_source.xhtml#l00038">globals.hpp:38</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8cpp_source.xhtml#l00081">fabomatic::Tasks::Scheduler::execute()</a>, and <a class="el" href="globals_8hpp_source.xhtml#l00038">fabomatic::Board::scheduler</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="main_8cpp_afe461d27b9c48d5921c00d521181f12f_cgraph.svg" width="522" height="126"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a4fc01d736fe50cf5b977f755b675f11d" name="a4fc01d736fe50cf5b977f755b675f11d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fc01d736fe50cf5b977f755b675f11d">&#9670;&#160;</a></span>setup()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void setup </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="main_8cpp_source.xhtml#l00409">409</a> of file <a class="el" href="main_8cpp_source.xhtml">main.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  410</span>{</div>
<div class="line"><span class="lineno">  411</span>  <span class="keyword">using </span><a class="code hl_typedef" href="namespacefabomatic.xhtml#a314e8b965d8bef1c1ce19757a9ad2117">Status</a> = <a class="code hl_enumeration" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0">fabomatic::BoardLogic::Status</a>;</div>
<div class="line"><span class="lineno">  412</span>  <span class="keyword">auto</span> &amp;<a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a> = <a class="code hl_variable" href="namespacefabomatic_1_1_board.xhtml#a5d4ea1d7cfe27d9d91f093a9b5b1a82a">fabomatic::Board::logic</a>;</div>
<div class="line"><span class="lineno">  413</span>  <span class="keyword">auto</span> &amp;<a class="code hl_variable" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">scheduler</a> = <a class="code hl_variable" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">fabomatic::Board::scheduler</a>;</div>
<div class="line"><span class="lineno">  414</span>  <span class="keyword">auto</span> &amp;<a class="code hl_variable" href="test__logic_8cpp.xhtml#af6931c3ecf1cb64d3ff6cb0eab2e590c">rfid</a> = <a class="code hl_variable" href="namespacefabomatic_1_1_board.xhtml#a847a6d8ca985bca97bd3e60c3c5a7570">fabomatic::Board::rfid</a>;</div>
<div class="line"><span class="lineno">  415</span>  <span class="keyword">auto</span> &amp;<a class="code hl_variable" href="test__logic_8cpp.xhtml#aa6d5012c344613a7f0ff0c4ebbe13711">lcd</a> = <a class="code hl_variable" href="namespacefabomatic_1_1_board.xhtml#a8b197c87648668139822e6483e6332c8">fabomatic::Board::lcd</a>;</div>
<div class="line"><span class="lineno">  416</span> </div>
<div class="line"><span class="lineno">  417</span>  Serial.begin(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1debug.xhtml#ab2258714682f41918b9ee0d19535b9ad">fabomatic::conf::debug::SERIAL_SPEED_BDS</a>); <span class="comment">// Initialize serial communications with the PC for debugging.</span></div>
<div class="line"><span class="lineno">  418</span>  <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">delay</a>(3000);</div>
<div class="line"><span class="lineno">  419</span> </div>
<div class="line"><span class="lineno">  420</span>  <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1debug.xhtml#a2d99e9c2f641dbf9e4ede8fd59356af3">fabomatic::conf::debug::ENABLE_LOGS</a>)</div>
<div class="line"><span class="lineno">  421</span>  {</div>
<div class="line"><span class="lineno">  422</span>    Serial.setDebugOutput(<span class="keyword">true</span>);</div>
<div class="line"><span class="lineno">  423</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Starting setup!&quot;</span>);</div>
<div class="line"><span class="lineno">  424</span>    <a class="code hl_function" href="namespacefabomatic.xhtml#aba5f28d2cdf80fb0270592238bfee443">fabomatic::printCompileSettings</a>();</div>
<div class="line"><span class="lineno">  425</span>  }</div>
<div class="line"><span class="lineno">  426</span> </div>
<div class="line"><span class="lineno">  427</span>  <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1debug.xhtml#abff6613a08fc3c26c7151e576965bf22">fabomatic::conf::debug::LOAD_EEPROM_DEFAULTS</a>)</div>
<div class="line"><span class="lineno">  428</span>  {</div>
<div class="line"><span class="lineno">  429</span>    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;defaults = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">fabomatic::SavedConfig::DefaultConfig</a>();</div>
<div class="line"><span class="lineno">  430</span>    ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Forcing EEPROM defaults : %s&quot;</span>, defaults.toString().c_str());</div>
<div class="line"><span class="lineno">  431</span>    defaults.SaveToEEPROM();</div>
<div class="line"><span class="lineno">  432</span>  }</div>
<div class="line"><span class="lineno">  433</span> </div>
<div class="line"><span class="lineno">  434</span>  <a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ad05b4db308773e56d866fe87d34022d9">blinkLed</a>();</div>
<div class="line"><span class="lineno">  435</span> </div>
<div class="line"><span class="lineno">  436</span>  <span class="comment">// Initialize hardware (RFID, LCD)</span></div>
<div class="line"><span class="lineno">  437</span>  <span class="keyword">auto</span> hw_init = <a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ab027de5833962ba124d3ee54ce698ea7">configure</a>(<a class="code hl_variable" href="test__logic_8cpp.xhtml#af6931c3ecf1cb64d3ff6cb0eab2e590c">rfid</a>, <a class="code hl_variable" href="test__logic_8cpp.xhtml#aa6d5012c344613a7f0ff0c4ebbe13711">lcd</a>);</div>
<div class="line"><span class="lineno">  438</span>  hw_init &amp;= <a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3e9fedd51e4895834a9ebea17cba4331">initBoard</a>();</div>
<div class="line"><span class="lineno">  439</span> </div>
<div class="line"><span class="lineno">  440</span>  <span class="keyword">const</span> <span class="keyword">auto</span> count = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a9992ddd6912152983a8bf0d509a815a8">fabomatic::SavedConfig::IncrementBootCount</a>();</div>
<div class="line"><span class="lineno">  441</span>  ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Boot count: %d, reset reason: %d&quot;</span>, count, esp_reset_reason());</div>
<div class="line"><span class="lineno">  442</span> </div>
<div class="line"><span class="lineno">  443</span>  <a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(Status::Booting);</div>
<div class="line"><span class="lineno">  444</span> </div>
<div class="line"><span class="lineno">  445</span>  <span class="keywordflow">if</span> (!hw_init)</div>
<div class="line"><span class="lineno">  446</span>  {</div>
<div class="line"><span class="lineno">  447</span>    <a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(Status::ErrorHardware);</div>
<div class="line"><span class="lineno">  448</span>    <a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac198a07d00fda36a527cd9db2d97efc1">beepFail</a>();</div>
<div class="line"><span class="lineno">  449</span>    <a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ad05b4db308773e56d866fe87d34022d9">blinkLed</a>(64, 0, 0);</div>
<div class="line"><span class="lineno">  450</span>    ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Hardware initialization failed&quot;</span>);</div>
<div class="line"><span class="lineno">  451</span>  }</div>
<div class="line"><span class="lineno">  452</span>  <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  453</span>  {</div>
<div class="line"><span class="lineno">  454</span>    <a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a8e0c35d138333907cc217c9e141091cd">beepOk</a>();</div>
<div class="line"><span class="lineno">  455</span>    <a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ad05b4db308773e56d866fe87d34022d9">blinkLed</a>(0, 64, 0);</div>
<div class="line"><span class="lineno">  456</span>  }</div>
<div class="line"><span class="lineno">  457</span> </div>
<div class="line"><span class="lineno">  458</span>  <a class="code hl_function" href="namespacefabomatic.xhtml#a8374c0d1cef777c26dc13b4abc9c52b6">fabomatic::openConfigPortal</a>(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1debug.xhtml#abff6613a08fc3c26c7151e576965bf22">fabomatic::conf::debug::LOAD_EEPROM_DEFAULTS</a>,</div>
<div class="line"><span class="lineno">  459</span>                              !<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1debug.xhtml#a0def9684a8602f218c73f0f88c13e447">fabomatic::conf::debug::FORCE_PORTAL</a>);</div>
<div class="line"><span class="lineno">  460</span> </div>
<div class="line"><span class="lineno">  461</span><span class="preprocessor">#if (MQTT_SIMULATION)</span></div>
<div class="line"><span class="lineno">  462</span>  fabomatic::startMQTTBrocker();</div>
<div class="line"><span class="lineno">  463</span><span class="preprocessor">#endif</span></div>
<div class="line"><span class="lineno">  464</span> </div>
<div class="line"><span class="lineno">  465</span>  <a class="code hl_function" href="namespacefabomatic.xhtml#a7c95d667be308b87512da348c5f1a7f1">fabomatic::setupOTA</a>();</div>
<div class="line"><span class="lineno">  466</span> </div>
<div class="line"><span class="lineno">  467</span>  <span class="keywordflow">if</span> (!hw_init)</div>
<div class="line"><span class="lineno">  468</span>  {</div>
<div class="line"><span class="lineno">  469</span>    <span class="comment">// If hardware initialization failed, wait for OTA for 3 minutes</span></div>
<div class="line"><span class="lineno">  470</span>    <span class="keywordflow">if</span> (!<a class="code hl_function" href="namespacefabomatic_1_1esp32.xhtml#a8bec49abfae47da0cadccb6e486f69bb">fabomatic::esp32::setupWatchdog</a>(180s))</div>
<div class="line"><span class="lineno">  471</span>    {</div>
<div class="line"><span class="lineno">  472</span>      ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failed to setup watchdog!&quot;</span>);</div>
<div class="line"><span class="lineno">  473</span>    }</div>
<div class="line"><span class="lineno">  474</span>    <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><span class="lineno">  475</span>    {</div>
<div class="line"><span class="lineno">  476</span>      <a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ad05b4db308773e56d866fe87d34022d9">blinkLed</a>(64, 0, 0);</div>
<div class="line"><span class="lineno">  477</span>      <a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a1e50b02a42cd210ea7dc0ed55e79f9d6">fabomatic::BoardLogic::Status::ErrorHardware</a>);</div>
<div class="line"><span class="lineno">  478</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">fabomatic::Tasks::delay</a>(1s);</div>
<div class="line"><span class="lineno">  479</span>      ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Hardware failed, waiting for OTA&quot;</span>);</div>
<div class="line"><span class="lineno">  480</span>    }</div>
<div class="line"><span class="lineno">  481</span>  }</div>
<div class="line"><span class="lineno">  482</span> </div>
<div class="line"><span class="lineno">  483</span>  <span class="comment">// Let some time for WiFi to settle</span></div>
<div class="line"><span class="lineno">  484</span>  <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">fabomatic::Tasks::delay</a>(2s);</div>
<div class="line"><span class="lineno">  485</span> </div>
<div class="line"><span class="lineno">  486</span>  <span class="comment">// Enable the HW watchdog</span></div>
<div class="line"><span class="lineno">  487</span>  <a class="code hl_variable" href="namespacefabomatic.xhtml#af362107d1aa514249d971e686c01abdd">fabomatic::t_wdg</a>.<a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#aa3f970eab63a4ba06e92e49b23eaab45">enable</a>();</div>
<div class="line"><span class="lineno">  488</span>  <span class="comment">// Since the WiFiManager may have taken minutes, recompute the tasks schedule</span></div>
<div class="line"><span class="lineno">  489</span>  <a class="code hl_variable" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">scheduler</a>.<a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a2acce29901dbfd56a0f49beb277e3e76">updateSchedules</a>();</div>
<div class="line"><span class="lineno">  490</span> </div>
<div class="line"><span class="lineno">  491</span>  <span class="comment">// Try to connect immediately</span></div>
<div class="line"><span class="lineno">  492</span>  <a class="code hl_function" href="namespacefabomatic.xhtml#ae7de89faffd3bb8805727b8a1092a198">fabomatic::taskConnect</a>();</div>
<div class="line"><span class="lineno">  493</span>}</div>
<div class="ttc" id="a_logging_8hpp_xhtml_a4ef5b5f197804a60836ab1e8907d8301"><div class="ttname"><a href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a></div><div class="ttdeci">static const char *const TAG</div><div class="ttdef"><b>Definition</b> <a href="_logging_8hpp_source.xhtml#l00006">Logging.hpp:6</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0">fabomatic::BoardLogic::Status</a></div><div class="ttdeci">Status</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8hpp_source.xhtml#l00021">BoardLogic.hpp:22</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a1e50b02a42cd210ea7dc0ed55e79f9d6"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a1e50b02a42cd210ea7dc0ed55e79f9d6">fabomatic::BoardLogic::Status::ErrorHardware</a></div><div class="ttdeci">@ ErrorHardware</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3c38d7a3ed7952c6d6297efdf50ea4dd"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">fabomatic::BoardLogic::changeStatus</a></div><div class="ttdeci">auto changeStatus(Status newStatus) -&gt; void</div><div class="ttdoc">Sets the board in the state given.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00273">BoardLogic.cpp:273</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3e9fedd51e4895834a9ebea17cba4331"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3e9fedd51e4895834a9ebea17cba4331">fabomatic::BoardLogic::initBoard</a></div><div class="ttdeci">auto initBoard() -&gt; bool</div><div class="ttdoc">Initializes LCD and RFID classes.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00252">BoardLogic.cpp:252</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a8e0c35d138333907cc217c9e141091cd"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a8e0c35d138333907cc217c9e141091cd">fabomatic::BoardLogic::beepOk</a></div><div class="ttdeci">auto beepOk() const -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00445">BoardLogic.cpp:445</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_ab027de5833962ba124d3ee54ce698ea7"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#ab027de5833962ba124d3ee54ce698ea7">fabomatic::BoardLogic::configure</a></div><div class="ttdeci">auto configure(BaseRFIDWrapper &amp;rfid, BaseLCDWrapper &amp;lcd) -&gt; bool</div><div class="ttdoc">Configures the board with the given references.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00456">BoardLogic.cpp:456</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_ac198a07d00fda36a527cd9db2d97efc1"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#ac198a07d00fda36a527cd9db2d97efc1">fabomatic::BoardLogic::beepFail</a></div><div class="ttdeci">auto beepFail() const -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00450">BoardLogic.cpp:450</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_ad05b4db308773e56d866fe87d34022d9"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#ad05b4db308773e56d866fe87d34022d9">fabomatic::BoardLogic::blinkLed</a></div><div class="ttdeci">auto blinkLed(uint8_t r=0, uint8_t g=0, uint8_t b=0) -&gt; void</div><div class="ttdoc">Blinks the LED.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00499">BoardLogic.cpp:499</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a3a6f62510c34ed7a4491022e4e43b9c2"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">fabomatic::SavedConfig::DefaultConfig</a></div><div class="ttdeci">static auto DefaultConfig() -&gt; SavedConfig</div><div class="ttdoc">Returns the default configuration built from conf.hpp and secrets.hpp.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00028">SavedConfig.cpp:28</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a9992ddd6912152983a8bf0d509a815a8"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a9992ddd6912152983a8bf0d509a815a8">fabomatic::SavedConfig::IncrementBootCount</a></div><div class="ttdeci">static auto IncrementBootCount() -&gt; size_t</div><div class="ttdoc">Increments the boot count and saves it to EEPROM.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00219">SavedConfig.cpp:219</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_scheduler_xhtml_a2acce29901dbfd56a0f49beb277e3e76"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a2acce29901dbfd56a0f49beb277e3e76">fabomatic::Tasks::Scheduler::updateSchedules</a></div><div class="ttdeci">auto updateSchedules() const -&gt; void</div><div class="ttdoc">Recompute all the next run times for all the tasks.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00030">Tasks.cpp:30</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_aa3f970eab63a4ba06e92e49b23eaab45"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#aa3f970eab63a4ba06e92e49b23eaab45">fabomatic::Tasks::Task::enable</a></div><div class="ttdeci">auto enable() -&gt; void</div><div class="ttdoc">Allows the task to run again.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00171">Tasks.cpp:171</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_board_xhtml_a5d4ea1d7cfe27d9d91f093a9b5b1a82a"><div class="ttname"><a href="namespacefabomatic_1_1_board.xhtml#a5d4ea1d7cfe27d9d91f093a9b5b1a82a">fabomatic::Board::logic</a></div><div class="ttdeci">BoardLogic logic</div><div class="ttdef"><b>Definition</b> <a href="_o_t_a_8cpp_source.xhtml#l00015">OTA.cpp:15</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_board_xhtml_a847a6d8ca985bca97bd3e60c3c5a7570"><div class="ttname"><a href="namespacefabomatic_1_1_board.xhtml#a847a6d8ca985bca97bd3e60c3c5a7570">fabomatic::Board::rfid</a></div><div class="ttdeci">RFIDWrapper&lt; Mrfc522Driver &gt; rfid</div><div class="ttdef"><b>Definition</b> <a href="globals_8hpp_source.xhtml#l00033">globals.hpp:33</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_board_xhtml_a8b197c87648668139822e6483e6332c8"><div class="ttname"><a href="namespacefabomatic_1_1_board.xhtml#a8b197c87648668139822e6483e6332c8">fabomatic::Board::lcd</a></div><div class="ttdeci">LCDWrapper&lt; LiquidCrystal &gt; lcd</div><div class="ttdef"><b>Definition</b> <a href="globals_8hpp_source.xhtml#l00036">globals.hpp:36</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_tasks_xhtml_a5c20f560f5934822d39ba116a16f3ab6"><div class="ttname"><a href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">fabomatic::Tasks::delay</a></div><div class="ttdeci">auto delay(const milliseconds duration) -&gt; void</div><div class="ttdoc">Wait for a delay, allowing OTA updates.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00250">Tasks.cpp:250</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1debug_xhtml_a0def9684a8602f218c73f0f88c13e447"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1debug.xhtml#a0def9684a8602f218c73f0f88c13e447">fabomatic::conf::debug::FORCE_PORTAL</a></div><div class="ttdeci">static constexpr bool FORCE_PORTAL</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00070">conf.hpp:70</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1debug_xhtml_a2d99e9c2f641dbf9e4ede8fd59356af3"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1debug.xhtml#a2d99e9c2f641dbf9e4ede8fd59356af3">fabomatic::conf::debug::ENABLE_LOGS</a></div><div class="ttdeci">static constexpr bool ENABLE_LOGS</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00067">conf.hpp:67</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1debug_xhtml_ab2258714682f41918b9ee0d19535b9ad"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1debug.xhtml#ab2258714682f41918b9ee0d19535b9ad">fabomatic::conf::debug::SERIAL_SPEED_BDS</a></div><div class="ttdeci">static constexpr unsigned long SERIAL_SPEED_BDS</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00069">conf.hpp:69</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1debug_xhtml_abff6613a08fc3c26c7151e576965bf22"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1debug.xhtml#abff6613a08fc3c26c7151e576965bf22">fabomatic::conf::debug::LOAD_EEPROM_DEFAULTS</a></div><div class="ttdeci">static constexpr bool LOAD_EEPROM_DEFAULTS</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00071">conf.hpp:71</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1esp32_xhtml_a8bec49abfae47da0cadccb6e486f69bb"><div class="ttname"><a href="namespacefabomatic_1_1esp32.xhtml#a8bec49abfae47da0cadccb6e486f69bb">fabomatic::esp32::setupWatchdog</a></div><div class="ttdeci">auto setupWatchdog(std::chrono::milliseconds msecs) -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_espressif_8cpp_source.xhtml#l00032">Espressif.cpp:32</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_a314e8b965d8bef1c1ce19757a9ad2117"><div class="ttname"><a href="namespacefabomatic.xhtml#a314e8b965d8bef1c1ce19757a9ad2117">fabomatic::Status</a></div><div class="ttdeci">BoardLogic::Status Status</div><div class="ttdef"><b>Definition</b> <a href="main_8cpp_source.xhtml#l00027">main.cpp:27</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_a7c95d667be308b87512da348c5f1a7f1"><div class="ttname"><a href="namespacefabomatic.xhtml#a7c95d667be308b87512da348c5f1a7f1">fabomatic::setupOTA</a></div><div class="ttdeci">void setupOTA()</div><div class="ttdef"><b>Definition</b> <a href="_o_t_a_8cpp_source.xhtml#l00138">OTA.cpp:138</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_a8374c0d1cef777c26dc13b4abc9c52b6"><div class="ttname"><a href="namespacefabomatic.xhtml#a8374c0d1cef777c26dc13b4abc9c52b6">fabomatic::openConfigPortal</a></div><div class="ttdeci">void openConfigPortal(bool force_reset, bool disable_portal)</div><div class="ttdoc">Open the ArduinoOTA configuration portal.</div><div class="ttdef"><b>Definition</b> <a href="_o_t_a_8cpp_source.xhtml#l00047">OTA.cpp:47</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_aba5f28d2cdf80fb0270592238bfee443"><div class="ttname"><a href="namespacefabomatic.xhtml#aba5f28d2cdf80fb0270592238bfee443">fabomatic::printCompileSettings</a></div><div class="ttdeci">void printCompileSettings()</div><div class="ttdef"><b>Definition</b> <a href="main_8cpp_source.xhtml#l00320">main.cpp:320</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_ae7de89faffd3bb8805727b8a1092a198"><div class="ttname"><a href="namespacefabomatic.xhtml#ae7de89faffd3bb8805727b8a1092a198">fabomatic::taskConnect</a></div><div class="ttdeci">void taskConnect()</div><div class="ttdoc">Opens WiFi and server connection and updates board state accordingly.</div><div class="ttdef"><b>Definition</b> <a href="main_8cpp_source.xhtml#l00042">main.cpp:42</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_af362107d1aa514249d971e686c01abdd"><div class="ttname"><a href="namespacefabomatic.xhtml#af362107d1aa514249d971e686c01abdd">fabomatic::t_wdg</a></div><div class="ttdeci">Task t_wdg(&quot;Watchdog&quot;, conf::tasks::WATCHDOG_PERIOD, &amp;taskEspWatchdog, Board::scheduler, false)</div></div>
<div class="ttc" id="atest__logic_8cpp_xhtml_a07dd6eb8e9dc2dc50bf69ef6032c5055"><div class="ttname"><a href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a></div><div class="ttdeci">fabomatic::BoardLogic logic</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00029">test_logic.cpp:29</a></div></div>
<div class="ttc" id="atest__logic_8cpp_xhtml_aa6d5012c344613a7f0ff0c4ebbe13711"><div class="ttname"><a href="test__logic_8cpp.xhtml#aa6d5012c344613a7f0ff0c4ebbe13711">lcd</a></div><div class="ttdeci">fabomatic::LCDWrapper&lt; LiquidCrystal &gt; lcd</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00028">test_logic.cpp:28</a></div></div>
<div class="ttc" id="atest__logic_8cpp_xhtml_af6931c3ecf1cb64d3ff6cb0eab2e590c"><div class="ttname"><a href="test__logic_8cpp.xhtml#af6931c3ecf1cb64d3ff6cb0eab2e590c">rfid</a></div><div class="ttdeci">fabomatic::RFIDWrapper&lt; fabomatic::MockMrfc522 &gt; rfid</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00027">test_logic.cpp:27</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8cpp_source.xhtml#l00450">fabomatic::BoardLogic::beepFail()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00445">fabomatic::BoardLogic::beepOk()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00499">fabomatic::BoardLogic::blinkLed()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00273">fabomatic::BoardLogic::changeStatus()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00456">fabomatic::BoardLogic::configure()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00028">fabomatic::SavedConfig::DefaultConfig()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00250">fabomatic::Tasks::delay()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00171">fabomatic::Tasks::Task::enable()</a>, <a class="el" href="conf_8hpp_source.xhtml#l00067">fabomatic::conf::debug::ENABLE_LOGS</a>, <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a1e50b02a42cd210ea7dc0ed55e79f9d6">fabomatic::BoardLogic::ErrorHardware</a>, <a class="el" href="conf_8hpp_source.xhtml#l00070">fabomatic::conf::debug::FORCE_PORTAL</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00219">fabomatic::SavedConfig::IncrementBootCount()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00252">fabomatic::BoardLogic::initBoard()</a>, <a class="el" href="globals_8hpp_source.xhtml#l00036">fabomatic::Board::lcd</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00028">lcd</a>, <a class="el" href="conf_8hpp_source.xhtml#l00071">fabomatic::conf::debug::LOAD_EEPROM_DEFAULTS</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00015">fabomatic::Board::logic</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00029">logic</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00047">fabomatic::openConfigPortal()</a>, <a class="el" href="main_8cpp_source.xhtml#l00320">fabomatic::printCompileSettings()</a>, <a class="el" href="globals_8hpp_source.xhtml#l00033">fabomatic::Board::rfid</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00027">rfid</a>, <a class="el" href="globals_8hpp_source.xhtml#l00038">fabomatic::Board::scheduler</a>, <a class="el" href="conf_8hpp_source.xhtml#l00069">fabomatic::conf::debug::SERIAL_SPEED_BDS</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00138">fabomatic::setupOTA()</a>, <a class="el" href="_espressif_8cpp_source.xhtml#l00032">fabomatic::esp32::setupWatchdog()</a>, <a class="el" href="namespacefabomatic.xhtml#af362107d1aa514249d971e686c01abdd">fabomatic::t_wdg</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>, <a class="el" href="main_8cpp_source.xhtml#l00042">fabomatic::taskConnect()</a>, and <a class="el" href="_tasks_8cpp_source.xhtml#l00030">fabomatic::Tasks::Scheduler::updateSchedules()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="main_8cpp_a4fc01d736fe50cf5b977f755b675f11d_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jun 30 2024 19:53:34 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
