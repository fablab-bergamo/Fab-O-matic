<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: fabomatic::Machine Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacefabomatic.xhtml">fabomatic</a></li><li class="navelem"><a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a>  </div>
  <div class="headertitle"><div class="title">fabomatic::Machine Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_machine_8hpp_source.xhtml">Machine.hpp</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for fabomatic::Machine:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a409acc0089d7cfe849b2e775840e5838" id="r_a409acc0089d7cfe849b2e775840e5838"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838">PowerState</a> : uint8_t { <a class="el" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</a>
, <a class="el" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a5fb98f2976a3f8c8980354a730398a87">PoweredOn</a>
, <a class="el" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a878a40722160ead08a1f3cdef3e70a14">WaitingPowerOff</a>
, <a class="el" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838ab161cc0f80e1c236e1f0816a42c4a00c">PoweredOff</a>
 }</td></tr>
<tr class="separator:a409acc0089d7cfe849b2e775840e5838"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a29fe7e05be59e3554e3fef2e907aa520" id="r_a29fe7e05be59e3554e3fef2e907aa520"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a29fe7e05be59e3554e3fef2e907aa520">Machine</a> ()=default</td></tr>
<tr class="separator:a29fe7e05be59e3554e3fef2e907aa520"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bfdfa068fb4b8636ec61ac53c81b2b6" id="r_a7bfdfa068fb4b8636ec61ac53c81b2b6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a7bfdfa068fb4b8636ec61ac53c81b2b6">~Machine</a> ()=default</td></tr>
<tr class="separator:a7bfdfa068fb4b8636ec61ac53c81b2b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf645abc09745c39b353285321b60a5f" id="r_acf645abc09745c39b353285321b60a5f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#acf645abc09745c39b353285321b60a5f">Machine</a> (const <a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a> &amp;)=delete</td></tr>
<tr class="separator:acf645abc09745c39b353285321b60a5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1164ed13904884700104a96c0f5ad4e8" id="r_a1164ed13904884700104a96c0f5ad4e8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a1164ed13904884700104a96c0f5ad4e8">operator=</a> (const <a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a> &amp;x)=delete</td></tr>
<tr class="separator:a1164ed13904884700104a96c0f5ad4e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1dfd04e485e29f2a5bb88c4afccd7d04" id="r_a1dfd04e485e29f2a5bb88c4afccd7d04"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a1dfd04e485e29f2a5bb88c4afccd7d04">Machine</a> (<a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a> &amp;&amp;)=delete</td></tr>
<tr class="separator:a1dfd04e485e29f2a5bb88c4afccd7d04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bafcbac9c64db988abd94bad064064d" id="r_a3bafcbac9c64db988abd94bad064064d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a3bafcbac9c64db988abd94bad064064d">operator=</a> (<a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a> &amp;&amp;)=delete</td></tr>
<tr class="separator:a3bafcbac9c64db988abd94bad064064d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39c30eaa242d5cc2ce784dbafeef87e8" id="r_a39c30eaa242d5cc2ce784dbafeef87e8"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a39c30eaa242d5cc2ce784dbafeef87e8">getActiveUser</a> () const -&gt; <a class="el" href="structfabomatic_1_1_fab_user.xhtml">FabUser</a></td></tr>
<tr class="separator:a39c30eaa242d5cc2ce784dbafeef87e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75d5f7be60826db90c639b138a7153e3" id="r_a75d5f7be60826db90c639b138a7153e3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a75d5f7be60826db90c639b138a7153e3">configure</a> (const <a class="el" href="structfabomatic_1_1_machine_config.xhtml">MachineConfig</a> &amp;new_config, <a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp;serv)</td></tr>
<tr class="memdesc:a75d5f7be60826db90c639b138a7153e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configure the machine, it must be called before most methods.  <br /></td></tr>
<tr class="separator:a75d5f7be60826db90c639b138a7153e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bde1bdf40d146c521b623d54e2df1cf" id="r_a8bde1bdf40d146c521b623d54e2df1cf"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a8bde1bdf40d146c521b623d54e2df1cf">getMachineId</a> () const -&gt; <a class="el" href="struct_machine_i_d.xhtml">MachineID</a></td></tr>
<tr class="memdesc:a8bde1bdf40d146c521b623d54e2df1cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the machine identifier.  <br /></td></tr>
<tr class="separator:a8bde1bdf40d146c521b623d54e2df1cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1637e99f2d70262d2ab26f69ed4f0e47" id="r_a1637e99f2d70262d2ab26f69ed4f0e47"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a1637e99f2d70262d2ab26f69ed4f0e47">getMachineName</a> () const -&gt; const std::string</td></tr>
<tr class="separator:a1637e99f2d70262d2ab26f69ed4f0e47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c845a163660550fa779516a8be8681a" id="r_a9c845a163660550fa779516a8be8681a"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a9c845a163660550fa779516a8be8681a">getUsageDuration</a> () const -&gt; std::chrono::seconds</td></tr>
<tr class="memdesc:a9c845a163660550fa779516a8be8681a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Duration of the current usage, or 0s.  <br /></td></tr>
<tr class="separator:a9c845a163660550fa779516a8be8681a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a725099e117c8abf8182631d9334c4286" id="r_a725099e117c8abf8182631d9334c4286"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a725099e117c8abf8182631d9334c4286">getAutologoffDelay</a> () const -&gt; std::chrono::seconds</td></tr>
<tr class="separator:a725099e117c8abf8182631d9334c4286"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeee64b0919798272dfe45d40eb2e96be" id="r_aeee64b0919798272dfe45d40eb2e96be"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#aeee64b0919798272dfe45d40eb2e96be">getGracePeriod</a> () const -&gt; std::chrono::seconds</td></tr>
<tr class="separator:aeee64b0919798272dfe45d40eb2e96be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0591da2ff437cd6c7cc91bd09b4dff7" id="r_ac0591da2ff437cd6c7cc91bd09b4dff7"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#ac0591da2ff437cd6c7cc91bd09b4dff7">login</a> (const <a class="el" href="structfabomatic_1_1_fab_user.xhtml">FabUser</a> &amp;user) -&gt; bool</td></tr>
<tr class="memdesc:ac0591da2ff437cd6c7cc91bd09b4dff7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Try to login the user and start the usage timer.  <br /></td></tr>
<tr class="separator:ac0591da2ff437cd6c7cc91bd09b4dff7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86cd6dfd9fefa7221a49cc07c78fc851" id="r_a86cd6dfd9fefa7221a49cc07c78fc851"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a86cd6dfd9fefa7221a49cc07c78fc851">logout</a> () -&gt; void</td></tr>
<tr class="memdesc:a86cd6dfd9fefa7221a49cc07c78fc851"><td class="mdescLeft">&#160;</td><td class="mdescRight">Logoff the user and stop the usage timer.  <br /></td></tr>
<tr class="separator:a86cd6dfd9fefa7221a49cc07c78fc851"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace7ccce1b3fabde562cfc7c5645dd6a3" id="r_ace7ccce1b3fabde562cfc7c5645dd6a3"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#ace7ccce1b3fabde562cfc7c5645dd6a3">setAutologoffDelay</a> (std::chrono::seconds new_delay) -&gt; void</td></tr>
<tr class="memdesc:ace7ccce1b3fabde562cfc7c5645dd6a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the delay after which the user will be logged off automatically.  <br /></td></tr>
<tr class="separator:ace7ccce1b3fabde562cfc7c5645dd6a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30c12cef5abca43d82f7c378430a79b6" id="r_a30c12cef5abca43d82f7c378430a79b6"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a30c12cef5abca43d82f7c378430a79b6">setGracePeriod</a> (std::chrono::seconds new_delay) -&gt; void</td></tr>
<tr class="memdesc:a30c12cef5abca43d82f7c378430a79b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the idle period after which the machine will power off automatically.  <br /></td></tr>
<tr class="separator:a30c12cef5abca43d82f7c378430a79b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0aa6c35ee214314d87297013cc29a8aa" id="r_a0aa6c35ee214314d87297013cc29a8aa"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a0aa6c35ee214314d87297013cc29a8aa">power</a> (bool on_or_off) -&gt; void</td></tr>
<tr class="memdesc:a0aa6c35ee214314d87297013cc29a8aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Powers the machine on or off using relay/MQTT/both.  <br /></td></tr>
<tr class="separator:a0aa6c35ee214314d87297013cc29a8aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8513321c0c184312c66087e7104d066" id="r_ac8513321c0c184312c66087e7104d066"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#ac8513321c0c184312c66087e7104d066">setMachineName</a> (const std::string &amp;new_name) -&gt; void</td></tr>
<tr class="memdesc:ac8513321c0c184312c66087e7104d066"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the machine name as per backend configuration.  <br /></td></tr>
<tr class="separator:ac8513321c0c184312c66087e7104d066"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d109ed7b9c5e40768bc4edf62377aa8" id="r_a9d109ed7b9c5e40768bc4edf62377aa8"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a9d109ed7b9c5e40768bc4edf62377aa8">setMachineType</a> (<a class="el" href="_machine_i_d_8hpp.xhtml#a35cc1c75e4e55a13e5075b9331a37dc5">MachineType</a> new_type) -&gt; void</td></tr>
<tr class="memdesc:a9d109ed7b9c5e40768bc4edf62377aa8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the machine type as per backend configuration.  <br /></td></tr>
<tr class="separator:a9d109ed7b9c5e40768bc4edf62377aa8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c5304fd80e0cc1c2118a59c64222d6d" id="r_a3c5304fd80e0cc1c2118a59c64222d6d"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a3c5304fd80e0cc1c2118a59c64222d6d">getPowerState</a> () const -&gt; <a class="el" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838">PowerState</a></td></tr>
<tr class="memdesc:a3c5304fd80e0cc1c2118a59c64222d6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current power state of the machine.  <br /></td></tr>
<tr class="separator:a3c5304fd80e0cc1c2118a59c64222d6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a871958cc57845c8651cf1058ed9b30e4" id="r_a871958cc57845c8651cf1058ed9b30e4"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a871958cc57845c8651cf1058ed9b30e4">isShutdownImminent</a> () const -&gt; bool</td></tr>
<tr class="memdesc:a871958cc57845c8651cf1058ed9b30e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates if the machine will power down in less than BEEP_REMAINING_MINUTES.  <br /></td></tr>
<tr class="separator:a871958cc57845c8651cf1058ed9b30e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74aa0b2cd34205ba57710affc56f5c3c" id="r_a74aa0b2cd34205ba57710affc56f5c3c"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a74aa0b2cd34205ba57710affc56f5c3c">isFree</a> () const -&gt; bool</td></tr>
<tr class="memdesc:a74aa0b2cd34205ba57710affc56f5c3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates is the machine is not used by anybody.  <br /></td></tr>
<tr class="separator:a74aa0b2cd34205ba57710affc56f5c3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1161d52e85bff96812852f50f53335c9" id="r_a1161d52e85bff96812852f50f53335c9"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a1161d52e85bff96812852f50f53335c9">canPowerOff</a> () const -&gt; bool</td></tr>
<tr class="memdesc:a1161d52e85bff96812852f50f53335c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates if POWEROFF_DELAY_MINUTES delay has expired,and the machine is still idle.  <br /></td></tr>
<tr class="separator:a1161d52e85bff96812852f50f53335c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39fbf9cad912d735cf84b75c0674646f" id="r_a39fbf9cad912d735cf84b75c0674646f"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a39fbf9cad912d735cf84b75c0674646f">toString</a> () const -&gt; const std::string</td></tr>
<tr class="separator:a39fbf9cad912d735cf84b75c0674646f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08685d0fb2bec894f77756f79c020bf9" id="r_a08685d0fb2bec894f77756f79c020bf9"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a08685d0fb2bec894f77756f79c020bf9">isAutologoffExpired</a> () const -&gt; bool</td></tr>
<tr class="memdesc:a08685d0fb2bec894f77756f79c020bf9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates ff the user shall be logged off automatically.  <br /></td></tr>
<tr class="separator:a08685d0fb2bec894f77756f79c020bf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fd614d86b6108a5a7b54fc9eee0d9a6" id="r_a9fd614d86b6108a5a7b54fc9eee0d9a6"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a9fd614d86b6108a5a7b54fc9eee0d9a6">isConfigured</a> () const -&gt; bool</td></tr>
<tr class="memdesc:a9fd614d86b6108a5a7b54fc9eee0d9a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates if the machine has been configured.  <br /></td></tr>
<tr class="separator:a9fd614d86b6108a5a7b54fc9eee0d9a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a433bd1e854ac0d4471f9f08af8f57a8d" id="r_a433bd1e854ac0d4471f9f08af8f57a8d"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a433bd1e854ac0d4471f9f08af8f57a8d">getConfig</a> () const -&gt; std::optional&lt; <a class="el" href="structfabomatic_1_1_machine_config.xhtml">MachineConfig</a> &gt;</td></tr>
<tr class="memdesc:a433bd1e854ac0d4471f9f08af8f57a8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current configuration of the machine, used for testing.  <br /></td></tr>
<tr class="separator:a433bd1e854ac0d4471f9f08af8f57a8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b40dcb31af466acc85f66c845516c82" id="r_a4b40dcb31af466acc85f66c845516c82"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a4b40dcb31af466acc85f66c845516c82">isAllowed</a> () const -&gt; bool</td></tr>
<tr class="separator:a4b40dcb31af466acc85f66c845516c82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addd23c892c39f3c1e26d611059273081" id="r_addd23c892c39f3c1e26d611059273081"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#addd23c892c39f3c1e26d611059273081">setAllowed</a> (bool new_allowed) -&gt; void</td></tr>
<tr class="separator:addd23c892c39f3c1e26d611059273081"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34b0deb04494137cf321e94d50dedf90" id="r_a34b0deb04494137cf321e94d50dedf90"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a34b0deb04494137cf321e94d50dedf90">isMaintenanceNeeded</a> () const -&gt; bool</td></tr>
<tr class="separator:a34b0deb04494137cf321e94d50dedf90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a921c78777a6cb9f7fdb9780a8c1aa8c0" id="r_a921c78777a6cb9f7fdb9780a8c1aa8c0"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a921c78777a6cb9f7fdb9780a8c1aa8c0">setMaintenanceNeeded</a> (bool new_maintenance_needed) -&gt; void</td></tr>
<tr class="separator:a921c78777a6cb9f7fdb9780a8c1aa8c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad511c567c7cb7487d19019550c9a4e32" id="r_ad511c567c7cb7487d19019550c9a4e32"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#ad511c567c7cb7487d19019550c9a4e32">getMaintenanceInfo</a> () const -&gt; const std::string</td></tr>
<tr class="separator:ad511c567c7cb7487d19019550c9a4e32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab39e2dee601ccaeab1e02cf28a14306b" id="r_ab39e2dee601ccaeab1e02cf28a14306b"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#ab39e2dee601ccaeab1e02cf28a14306b">setMaintenanceInfo</a> (const std::string &amp;new_description) -&gt; void</td></tr>
<tr class="separator:ab39e2dee601ccaeab1e02cf28a14306b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a116376ca892e59b8f754696161657631" id="r_a116376ca892e59b8f754696161657631"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a116376ca892e59b8f754696161657631">power_mqtt</a> (bool on_or_off) -&gt; void</td></tr>
<tr class="memdesc:a116376ca892e59b8f754696161657631"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets the machine power to on (true) or off (false)  <br /></td></tr>
<tr class="separator:a116376ca892e59b8f754696161657631"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af80723250a85368e53055b5f91c14840" id="r_af80723250a85368e53055b5f91c14840"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#af80723250a85368e53055b5f91c14840">power_relay</a> (bool on_or_off) -&gt; void</td></tr>
<tr class="memdesc:af80723250a85368e53055b5f91c14840"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets the machine power to on (true) or off (false)  <br /></td></tr>
<tr class="separator:af80723250a85368e53055b5f91c14840"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a8545b7a1a969dddc47d35d921091ed5b" id="r_a8545b7a1a969dddc47d35d921091ed5b"><td class="memItemLeft" align="right" valign="top">std::optional&lt; <a class="el" href="structfabomatic_1_1_machine_config.xhtml">MachineConfig</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a> {std::nullopt}</td></tr>
<tr class="separator:a8545b7a1a969dddc47d35d921091ed5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb98818468832f2327b4a25a199cdb0e" id="r_adb98818468832f2327b4a25a199cdb0e"><td class="memItemLeft" align="right" valign="top">std::optional&lt; std::reference_wrapper&lt; <a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#adb98818468832f2327b4a25a199cdb0e">server</a> {std::nullopt}</td></tr>
<tr class="separator:adb98818468832f2327b4a25a199cdb0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b30e014bf3166b1f6692d3e64d18827" id="r_a7b30e014bf3166b1f6692d3e64d18827"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a7b30e014bf3166b1f6692d3e64d18827">active</a> {false}</td></tr>
<tr class="separator:a7b30e014bf3166b1f6692d3e64d18827"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa39977d690373313aa7c24f52679cc5b" id="r_aa39977d690373313aa7c24f52679cc5b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfabomatic_1_1_fab_user.xhtml">FabUser</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#aa39977d690373313aa7c24f52679cc5b">current_user</a> {}</td></tr>
<tr class="separator:aa39977d690373313aa7c24f52679cc5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a215bab25e0b9555c733d1ffcb6330a06" id="r_a215bab25e0b9555c733d1ffcb6330a06"><td class="memItemLeft" align="right" valign="top">std::optional&lt; std::chrono::time_point&lt; std::chrono::system_clock &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a215bab25e0b9555c733d1ffcb6330a06">usage_start_timestamp</a> {std::nullopt}</td></tr>
<tr class="separator:a215bab25e0b9555c733d1ffcb6330a06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9973764a444fc39727def61c053c62c3" id="r_a9973764a444fc39727def61c053c62c3"><td class="memItemLeft" align="right" valign="top">std::optional&lt; std::chrono::time_point&lt; std::chrono::system_clock &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a9973764a444fc39727def61c053c62c3">logoff_timestamp</a> {std::nullopt}</td></tr>
<tr class="separator:a9973764a444fc39727def61c053c62c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bc2b55d0e25444c6c169a94c44ba571" id="r_a2bc2b55d0e25444c6c169a94c44ba571"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838">PowerState</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a2bc2b55d0e25444c6c169a94c44ba571">power_state</a> {<a class="el" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838ab161cc0f80e1c236e1f0816a42c4a00c">PowerState::PoweredOff</a>}</td></tr>
<tr class="separator:a2bc2b55d0e25444c6c169a94c44ba571"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6e53363524fca589cea90c51f953b7d" id="r_af6e53363524fca589cea90c51f953b7d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#af6e53363524fca589cea90c51f953b7d">maintenanceNeeded</a> {false}</td></tr>
<tr class="memdesc:af6e53363524fca589cea90c51f953b7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">If true, machine needs maintenance.  <br /></td></tr>
<tr class="separator:af6e53363524fca589cea90c51f953b7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a503004fad0cb04f4e525b60f8e7e9e0c" id="r_a503004fad0cb04f4e525b60f8e7e9e0c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a503004fad0cb04f4e525b60f8e7e9e0c">allowed</a> {true}</td></tr>
<tr class="memdesc:a503004fad0cb04f4e525b60f8e7e9e0c"><td class="mdescLeft">&#160;</td><td class="mdescRight">If true, machine is allowed to be used by anybody.  <br /></td></tr>
<tr class="separator:a503004fad0cb04f4e525b60f8e7e9e0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77c8d3c024aa9bc8822ab8038e9cdd4d" id="r_a77c8d3c024aa9bc8822ab8038e9cdd4d"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml#a77c8d3c024aa9bc8822ab8038e9cdd4d">maintenanceInfo</a> {&quot;&quot;}</td></tr>
<tr class="separator:a77c8d3c024aa9bc8822ab8038e9cdd4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_machine_8hpp_source.xhtml#l00014">14</a> of file <a class="el" href="_machine_8hpp_source.xhtml">Machine.hpp</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a409acc0089d7cfe849b2e775840e5838" name="a409acc0089d7cfe849b2e775840e5838"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a409acc0089d7cfe849b2e775840e5838">&#9670;&#160;</a></span>PowerState</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838">fabomatic::Machine::PowerState</a> : uint8_t</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a409acc0089d7cfe849b2e775840e5838a88183b946cc5f0e8c96b2e66e1c74a7e" name="a409acc0089d7cfe849b2e775840e5838a88183b946cc5f0e8c96b2e66e1c74a7e"></a>Unknown&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a409acc0089d7cfe849b2e775840e5838a5fb98f2976a3f8c8980354a730398a87" name="a409acc0089d7cfe849b2e775840e5838a5fb98f2976a3f8c8980354a730398a87"></a>PoweredOn&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a409acc0089d7cfe849b2e775840e5838a878a40722160ead08a1f3cdef3e70a14" name="a409acc0089d7cfe849b2e775840e5838a878a40722160ead08a1f3cdef3e70a14"></a>WaitingPowerOff&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a409acc0089d7cfe849b2e775840e5838ab161cc0f80e1c236e1f0816a42c4a00c" name="a409acc0089d7cfe849b2e775840e5838ab161cc0f80e1c236e1f0816a42c4a00c"></a>PoweredOff&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="_machine_8hpp_source.xhtml#l00017">17</a> of file <a class="el" href="_machine_8hpp_source.xhtml">Machine.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   18</span>    {</div>
<div class="line"><span class="lineno">   19</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</a>,</div>
<div class="line"><span class="lineno">   20</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a5fb98f2976a3f8c8980354a730398a87">PoweredOn</a>,</div>
<div class="line"><span class="lineno">   21</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a878a40722160ead08a1f3cdef3e70a14">WaitingPowerOff</a>,</div>
<div class="line"><span class="lineno">   22</span>      <a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838ab161cc0f80e1c236e1f0816a42c4a00c">PoweredOff</a>,</div>
<div class="line"><span class="lineno">   23</span>    };</div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a409acc0089d7cfe849b2e775840e5838a5fb98f2976a3f8c8980354a730398a87"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a5fb98f2976a3f8c8980354a730398a87">fabomatic::Machine::PowerState::PoweredOn</a></div><div class="ttdeci">@ PoweredOn</div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a409acc0089d7cfe849b2e775840e5838a878a40722160ead08a1f3cdef3e70a14"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a878a40722160ead08a1f3cdef3e70a14">fabomatic::Machine::PowerState::WaitingPowerOff</a></div><div class="ttdeci">@ WaitingPowerOff</div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a409acc0089d7cfe849b2e775840e5838a88183b946cc5f0e8c96b2e66e1c74a7e"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a88183b946cc5f0e8c96b2e66e1c74a7e">fabomatic::Machine::PowerState::Unknown</a></div><div class="ttdeci">@ Unknown</div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a409acc0089d7cfe849b2e775840e5838ab161cc0f80e1c236e1f0816a42c4a00c"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838ab161cc0f80e1c236e1f0816a42c4a00c">fabomatic::Machine::PowerState::PoweredOff</a></div><div class="ttdeci">@ PoweredOff</div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a29fe7e05be59e3554e3fef2e907aa520" name="a29fe7e05be59e3554e3fef2e907aa520"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29fe7e05be59e3554e3fef2e907aa520">&#9670;&#160;</a></span>Machine() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">fabomatic::Machine::Machine </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7bfdfa068fb4b8636ec61ac53c81b2b6" name="a7bfdfa068fb4b8636ec61ac53c81b2b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7bfdfa068fb4b8636ec61ac53c81b2b6">&#9670;&#160;</a></span>~Machine()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">fabomatic::Machine::~Machine </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acf645abc09745c39b353285321b60a5f" name="acf645abc09745c39b353285321b60a5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf645abc09745c39b353285321b60a5f">&#9670;&#160;</a></span>Machine() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">fabomatic::Machine::Machine </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1dfd04e485e29f2a5bb88c4afccd7d04" name="a1dfd04e485e29f2a5bb88c4afccd7d04"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1dfd04e485e29f2a5bb88c4afccd7d04">&#9670;&#160;</a></span>Machine() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">fabomatic::Machine::Machine </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a1161d52e85bff96812852f50f53335c9" name="a1161d52e85bff96812852f50f53335c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1161d52e85bff96812852f50f53335c9">&#9670;&#160;</a></span>canPowerOff()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::canPowerOff </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates if POWEROFF_DELAY_MINUTES delay has expired,and the machine is still idle. </p>
<p>indicates if the machine can be powered off</p>
<dl class="section return"><dt>Returns</dt><dd>true if the grace period has expired </dd></dl>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00110">110</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  111</span>  {</div>
<div class="line"><span class="lineno">  112</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a9973764a444fc39727def61c053c62c3">logoff_timestamp</a>.has_value())</div>
<div class="line"><span class="lineno">  113</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  114</span> </div>
<div class="line"><span class="lineno">  115</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">bool</span>);</div>
<div class="line"><span class="lineno">  116</span> </div>
<div class="line"><span class="lineno">  117</span>    <span class="keywordflow">return</span> (<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a2bc2b55d0e25444c6c169a94c44ba571">power_state</a> == <a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a878a40722160ead08a1f3cdef3e70a14">PowerState::WaitingPowerOff</a> &amp;&amp;</div>
<div class="line"><span class="lineno">  118</span>            std::chrono::system_clock::now() - <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a9973764a444fc39727def61c053c62c3">logoff_timestamp</a>.value() &gt; <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().grace_period);</div>
<div class="line"><span class="lineno">  119</span>  }</div>
<div class="ttc" id="a_machine_8cpp_xhtml_a22d2ecd6e476d01bda4d7f7f4af2b787"><div class="ttname"><a href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a></div><div class="ttdeci">#define CHECK_CONFIGURED(ret_type)</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00018">Machine.cpp:18</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a2bc2b55d0e25444c6c169a94c44ba571"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a2bc2b55d0e25444c6c169a94c44ba571">fabomatic::Machine::power_state</a></div><div class="ttdeci">PowerState power_state</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00110">Machine.hpp:110</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a8545b7a1a969dddc47d35d921091ed5b"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">fabomatic::Machine::config</a></div><div class="ttdeci">std::optional&lt; MachineConfig &gt; config</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00102">Machine.hpp:102</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a9973764a444fc39727def61c053c62c3"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a9973764a444fc39727def61c053c62c3">fabomatic::Machine::logoff_timestamp</a></div><div class="ttdeci">std::optional&lt; std::chrono::time_point&lt; std::chrono::system_clock &gt; &gt; logoff_timestamp</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00109">Machine.hpp:109</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00018">CHECK_CONFIGURED</a>, <a class="el" href="_machine_8hpp_source.xhtml#l00102">config</a>, <a class="el" href="_machine_8hpp_source.xhtml#l00109">logoff_timestamp</a>, <a class="el" href="_machine_8hpp_source.xhtml#l00110">power_state</a>, and <a class="el" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a878a40722160ead08a1f3cdef3e70a14">WaitingPowerOff</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00577">fabomatic::BoardLogic::checkPowerOff()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a1161d52e85bff96812852f50f53335c9_icgraph.svg" width="100%" height="425"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a75d5f7be60826db90c639b138a7153e3" name="a75d5f7be60826db90c639b138a7153e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75d5f7be60826db90c639b138a7153e3">&#9670;&#160;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfabomatic_1_1_machine_config.xhtml">MachineConfig</a> &amp;&#160;</td>
          <td class="paramname"><em>new_config</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp;&#160;</td>
          <td class="paramname"><em>serv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configure the machine, it must be called before most methods. </p>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00025">25</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   26</span>  {</div>
<div class="line"><span class="lineno">   27</span>    <span class="comment">// https://stackoverflow.com/questions/67596731/why-is-stdoptionaltoperator-deleted-when-t-contains-a-const-data-memb</span></div>
<div class="line"><span class="lineno">   28</span>    <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.emplace(new_config);</div>
<div class="line"><span class="lineno">   29</span> </div>
<div class="line"><span class="lineno">   30</span>    <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#adb98818468832f2327b4a25a199cdb0e">server</a> = std::reference_wrapper&lt;FabBackend&gt;(serv);</div>
<div class="line"><span class="lineno">   31</span> </div>
<div class="line"><span class="lineno">   32</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().hasRelay())</div>
<div class="line"><span class="lineno">   33</span>    {</div>
<div class="line"><span class="lineno">   34</span>      <span class="keyword">const</span> <span class="keyword">auto</span> pin = <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().relay_config.ch1_pin;</div>
<div class="line"><span class="lineno">   35</span>      digitalWrite(pin,</div>
<div class="line"><span class="lineno">   36</span>                   <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().relay_config.active_low ? HIGH : LOW);</div>
<div class="line"><span class="lineno">   37</span>      pinMode(pin, OUTPUT);</div>
<div class="line"><span class="lineno">   38</span> </div>
<div class="line"><span class="lineno">   39</span>      <span class="comment">// Relay coil requires some juice</span></div>
<div class="line"><span class="lineno">   40</span>      gpio_set_drive_capability(<span class="keyword">static_cast&lt;</span>gpio_num_t<span class="keyword">&gt;</span>(pin), GPIO_DRIVE_CAP_3);</div>
<div class="line"><span class="lineno">   41</span>    }</div>
<div class="line"><span class="lineno">   42</span> </div>
<div class="line"><span class="lineno">   43</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Machine configured : %s&quot;</span>, <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a39fbf9cad912d735cf84b75c0674646f">toString</a>().c_str());</div>
<div class="line"><span class="lineno">   44</span>  }</div>
<div class="ttc" id="a_logging_8hpp_xhtml_a4ef5b5f197804a60836ab1e8907d8301"><div class="ttname"><a href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a></div><div class="ttdeci">static const char *const TAG</div><div class="ttdef"><b>Definition</b> <a href="_logging_8hpp_source.xhtml#l00006">Logging.hpp:6</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a39fbf9cad912d735cf84b75c0674646f"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a39fbf9cad912d735cf84b75c0674646f">fabomatic::Machine::toString</a></div><div class="ttdeci">auto toString() const -&gt; const std::string</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00241">Machine.cpp:241</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_adb98818468832f2327b4a25a199cdb0e"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#adb98818468832f2327b4a25a199cdb0e">fabomatic::Machine::server</a></div><div class="ttdeci">std::optional&lt; std::reference_wrapper&lt; FabBackend &gt; &gt; server</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00103">Machine.hpp:103</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00464">fabomatic::BoardLogic::reconfigure()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a75d5f7be60826db90c639b138a7153e3_icgraph.svg" width="646" height="151"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a39c30eaa242d5cc2ce784dbafeef87e8" name="a39c30eaa242d5cc2ce784dbafeef87e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39c30eaa242d5cc2ce784dbafeef87e8">&#9670;&#160;</a></span>getActiveUser()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::getActiveUser </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; <a class="el" href="structfabomatic_1_1_fab_user.xhtml">FabUser</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00219">219</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  220</span>  {</div>
<div class="line"><span class="lineno">  221</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#aa39977d690373313aa7c24f52679cc5b">current_user</a>;</div>
<div class="line"><span class="lineno">  222</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_aa39977d690373313aa7c24f52679cc5b"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#aa39977d690373313aa7c24f52679cc5b">fabomatic::Machine::current_user</a></div><div class="ttdeci">FabUser current_user</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00106">Machine.hpp:106</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8hpp_source.xhtml#l00106">current_user</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00164">fabomatic::BoardLogic::authorize()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00112">fabomatic::BoardLogic::logout()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00074">fabomatic::BoardLogic::onNewCard()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00285">fabomatic::BoardLogic::updateLCD()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a39c30eaa242d5cc2ce784dbafeef87e8_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a725099e117c8abf8182631d9334c4286" name="a725099e117c8abf8182631d9334c4286"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a725099e117c8abf8182631d9334c4286">&#9670;&#160;</a></span>getAutologoffDelay()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::getAutologoffDelay </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; std::chrono::seconds</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00269">269</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  270</span>  {</div>
<div class="line"><span class="lineno">  271</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(std::chrono::seconds);</div>
<div class="line"><span class="lineno">  272</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().autologoff;</div>
<div class="line"><span class="lineno">  273</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00018">CHECK_CONFIGURED</a>, and <a class="el" href="_machine_8hpp_source.xhtml#l00102">config</a>.</p>

<p class="reference">Referenced by <a class="el" href="_machine_8cpp_source.xhtml#l00288">isAutologoffExpired()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a725099e117c8abf8182631d9334c4286_icgraph.svg" width="332" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a433bd1e854ac0d4471f9f08af8f57a8d" name="a433bd1e854ac0d4471f9f08af8f57a8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a433bd1e854ac0d4471f9f08af8f57a8d">&#9670;&#160;</a></span>getConfig()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::getConfig </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; std::optional&lt;<a class="el" href="structfabomatic_1_1_machine_config.xhtml">MachineConfig</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the current configuration of the machine, used for testing. </p>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00321">321</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  322</span>  {</div>
<div class="line"><span class="lineno">  323</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>;</div>
<div class="line"><span class="lineno">  324</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8hpp_source.xhtml#l00102">config</a>.</p>

</div>
</div>
<a id="aeee64b0919798272dfe45d40eb2e96be" name="aeee64b0919798272dfe45d40eb2e96be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeee64b0919798272dfe45d40eb2e96be">&#9670;&#160;</a></span>getGracePeriod()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::getGracePeriod </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; std::chrono::seconds</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00346">346</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  347</span>  {</div>
<div class="line"><span class="lineno">  348</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(std::chrono::seconds);</div>
<div class="line"><span class="lineno">  349</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().grace_period;</div>
<div class="line"><span class="lineno">  350</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00018">CHECK_CONFIGURED</a>, and <a class="el" href="_machine_8hpp_source.xhtml#l00102">config</a>.</p>

<p class="reference">Referenced by <a class="el" href="_machine_8cpp_source.xhtml#l00241">toString()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_aeee64b0919798272dfe45d40eb2e96be_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a8bde1bdf40d146c521b623d54e2df1cf" name="a8bde1bdf40d146c521b623d54e2df1cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8bde1bdf40d146c521b623d54e2df1cf">&#9670;&#160;</a></span>getMachineId()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::getMachineId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; <a class="el" href="struct_machine_i_d.xhtml">MachineID</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the machine identifier. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a> identifier </dd></dl>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00048">48</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   49</span>  {</div>
<div class="line"><span class="lineno">   50</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<a class="code hl_struct" href="struct_machine_i_d.xhtml">MachineID</a>);</div>
<div class="line"><span class="lineno">   51</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().machine_id;</div>
<div class="line"><span class="lineno">   52</span>  }</div>
<div class="ttc" id="astruct_machine_i_d_xhtml"><div class="ttname"><a href="struct_machine_i_d.xhtml">MachineID</a></div><div class="ttdef"><b>Definition</b> <a href="_machine_i_d_8hpp_source.xhtml#l00016">MachineID.hpp:17</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00018">CHECK_CONFIGURED</a>, and <a class="el" href="_machine_8hpp_source.xhtml#l00102">config</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00042">fabomatic::BoardLogic::refreshFromServer()</a>, and <a class="el" href="_machine_8cpp_source.xhtml#l00241">toString()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a8bde1bdf40d146c521b623d54e2df1cf_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a1637e99f2d70262d2ab26f69ed4f0e47" name="a1637e99f2d70262d2ab26f69ed4f0e47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1637e99f2d70262d2ab26f69ed4f0e47">&#9670;&#160;</a></span>getMachineName()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::getMachineName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; const std::string</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00235">235</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  236</span>  {</div>
<div class="line"><span class="lineno">  237</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(std::string);</div>
<div class="line"><span class="lineno">  238</span>    <span class="keywordflow">return</span> std::string{<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().machine_name.data()};</div>
<div class="line"><span class="lineno">  239</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00018">CHECK_CONFIGURED</a>, and <a class="el" href="_machine_8hpp_source.xhtml#l00102">config</a>.</p>

<p class="reference">Referenced by <a class="el" href="_machine_8cpp_source.xhtml#l00241">toString()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00285">fabomatic::BoardLogic::updateLCD()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a1637e99f2d70262d2ab26f69ed4f0e47_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ad511c567c7cb7487d19019550c9a4e32" name="ad511c567c7cb7487d19019550c9a4e32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad511c567c7cb7487d19019550c9a4e32">&#9670;&#160;</a></span>getMaintenanceInfo()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::getMaintenanceInfo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; const std::string</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00365">365</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  366</span>  {</div>
<div class="line"><span class="lineno">  367</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a77c8d3c024aa9bc8822ab8038e9cdd4d">maintenanceInfo</a>;</div>
<div class="line"><span class="lineno">  368</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a77c8d3c024aa9bc8822ab8038e9cdd4d"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a77c8d3c024aa9bc8822ab8038e9cdd4d">fabomatic::Machine::maintenanceInfo</a></div><div class="ttdeci">std::string maintenanceInfo</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00117">Machine.hpp:117</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8hpp_source.xhtml#l00117">maintenanceInfo</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00285">fabomatic::BoardLogic::updateLCD()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_ad511c567c7cb7487d19019550c9a4e32_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a3c5304fd80e0cc1c2118a59c64222d6d" name="a3c5304fd80e0cc1c2118a59c64222d6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c5304fd80e0cc1c2118a59c64222d6d">&#9670;&#160;</a></span>getPowerState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::getPowerState </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; <a class="el" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838">PowerState</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the current power state of the machine. </p>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00080">80</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   81</span>  {</div>
<div class="line"><span class="lineno">   82</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a2bc2b55d0e25444c6c169a94c44ba571">power_state</a>;</div>
<div class="line"><span class="lineno">   83</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8hpp_source.xhtml#l00110">power_state</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00127">fabomatic::BoardLogic::longTap()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00241">toString()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00285">fabomatic::BoardLogic::updateLCD()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a3c5304fd80e0cc1c2118a59c64222d6d_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a9c845a163660550fa779516a8be8681a" name="a9c845a163660550fa779516a8be8681a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c845a163660550fa779516a8be8681a">&#9670;&#160;</a></span>getUsageDuration()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::getUsageDuration </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; std::chrono::seconds</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Duration of the current usage, or 0s. </p>
<p>Gets the duration the machine has been used.</p>
<dl class="section return"><dt>Returns</dt><dd>milliseconds since the machine has been started </dd></dl>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00226">226</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  227</span>  {</div>
<div class="line"><span class="lineno">  228</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a215bab25e0b9555c733d1ffcb6330a06">usage_start_timestamp</a>.has_value())</div>
<div class="line"><span class="lineno">  229</span>    {</div>
<div class="line"><span class="lineno">  230</span>      <span class="keywordflow">return</span> std::chrono::duration_cast&lt;std::chrono::seconds&gt;(std::chrono::system_clock::now() - <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a215bab25e0b9555c733d1ffcb6330a06">usage_start_timestamp</a>.value());</div>
<div class="line"><span class="lineno">  231</span>    }</div>
<div class="line"><span class="lineno">  232</span>    <span class="keywordflow">return</span> 0s;</div>
<div class="line"><span class="lineno">  233</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a215bab25e0b9555c733d1ffcb6330a06"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a215bab25e0b9555c733d1ffcb6330a06">fabomatic::Machine::usage_start_timestamp</a></div><div class="ttdeci">std::optional&lt; std::chrono::time_point&lt; std::chrono::system_clock &gt; &gt; usage_start_timestamp</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00108">Machine.hpp:108</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8hpp_source.xhtml#l00108">usage_start_timestamp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_machine_8cpp_source.xhtml#l00288">isAutologoffExpired()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00112">fabomatic::BoardLogic::logout()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00241">toString()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00285">fabomatic::BoardLogic::updateLCD()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a9c845a163660550fa779516a8be8681a_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a4b40dcb31af466acc85f66c845516c82" name="a4b40dcb31af466acc85f66c845516c82"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b40dcb31af466acc85f66c845516c82">&#9670;&#160;</a></span>isAllowed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::isAllowed </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00326">326</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  327</span>  {</div>
<div class="line"><span class="lineno">  328</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a503004fad0cb04f4e525b60f8e7e9e0c">allowed</a>;</div>
<div class="line"><span class="lineno">  329</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a503004fad0cb04f4e525b60f8e7e9e0c"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a503004fad0cb04f4e525b60f8e7e9e0c">fabomatic::Machine::allowed</a></div><div class="ttdeci">bool allowed</div><div class="ttdoc">If true, machine is allowed to be used by anybody.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00115">Machine.hpp:115</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8hpp_source.xhtml#l00115">allowed</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00164">fabomatic::BoardLogic::authorize()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00499">fabomatic::BoardLogic::blinkLed()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00285">fabomatic::BoardLogic::updateLCD()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a4b40dcb31af466acc85f66c845516c82_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a08685d0fb2bec894f77756f79c020bf9" name="a08685d0fb2bec894f77756f79c020bf9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08685d0fb2bec894f77756f79c020bf9">&#9670;&#160;</a></span>isAutologoffExpired()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::isAutologoffExpired </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates ff the user shall be logged off automatically. </p>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00288">288</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  289</span>  {</div>
<div class="line"><span class="lineno">  290</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a725099e117c8abf8182631d9334c4286">getAutologoffDelay</a>() &gt; 0min &amp;&amp;</div>
<div class="line"><span class="lineno">  291</span>           <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a9c845a163660550fa779516a8be8681a">getUsageDuration</a>() &gt; <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a725099e117c8abf8182631d9334c4286">getAutologoffDelay</a>();</div>
<div class="line"><span class="lineno">  292</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a725099e117c8abf8182631d9334c4286"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a725099e117c8abf8182631d9334c4286">fabomatic::Machine::getAutologoffDelay</a></div><div class="ttdeci">auto getAutologoffDelay() const -&gt; std::chrono::seconds</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00269">Machine.cpp:269</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a9c845a163660550fa779516a8be8681a"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a9c845a163660550fa779516a8be8681a">fabomatic::Machine::getUsageDuration</a></div><div class="ttdeci">auto getUsageDuration() const -&gt; std::chrono::seconds</div><div class="ttdoc">Duration of the current usage, or 0s.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00226">Machine.cpp:226</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00269">getAutologoffDelay()</a>, and <a class="el" href="_machine_8cpp_source.xhtml#l00226">getUsageDuration()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a08685d0fb2bec894f77756f79c020bf9_cgraph.svg" width="332" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a9fd614d86b6108a5a7b54fc9eee0d9a6" name="a9fd614d86b6108a5a7b54fc9eee0d9a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fd614d86b6108a5a7b54fc9eee0d9a6">&#9670;&#160;</a></span>isConfigured()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::isConfigured </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates if the machine has been configured. </p>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00316">316</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  317</span>  {</div>
<div class="line"><span class="lineno">  318</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.has_value() &amp;&amp; <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#adb98818468832f2327b4a25a199cdb0e">server</a>.has_value();</div>
<div class="line"><span class="lineno">  319</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8hpp_source.xhtml#l00102">config</a>, and <a class="el" href="_machine_8hpp_source.xhtml#l00103">server</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00285">fabomatic::BoardLogic::updateLCD()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a9fd614d86b6108a5a7b54fc9eee0d9a6_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a74aa0b2cd34205ba57710affc56f5c3c" name="a74aa0b2cd34205ba57710affc56f5c3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74aa0b2cd34205ba57710affc56f5c3c">&#9670;&#160;</a></span>isFree()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::isFree </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates is the machine is not used by anybody. </p>
<p>Indicates whether the machine is used by somebody.</p>
<dl class="section return"><dt>Returns</dt><dd>boolean </dd></dl>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00056">56</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   57</span>  {</div>
<div class="line"><span class="lineno">   58</span>    <span class="keywordflow">return</span> !<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a7b30e014bf3166b1f6692d3e64d18827">active</a>;</div>
<div class="line"><span class="lineno">   59</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a7b30e014bf3166b1f6692d3e64d18827"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a7b30e014bf3166b1f6692d3e64d18827">fabomatic::Machine::active</a></div><div class="ttdeci">bool active</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00105">Machine.hpp:105</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8hpp_source.xhtml#l00105">active</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00499">fabomatic::BoardLogic::blinkLed()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00549">fabomatic::BoardLogic::checkRfid()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00074">fabomatic::BoardLogic::onNewCard()</a>, and <a class="el" href="_machine_8cpp_source.xhtml#l00241">toString()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a74aa0b2cd34205ba57710affc56f5c3c_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a34b0deb04494137cf321e94d50dedf90" name="a34b0deb04494137cf321e94d50dedf90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34b0deb04494137cf321e94d50dedf90">&#9670;&#160;</a></span>isMaintenanceNeeded()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::isMaintenanceNeeded </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00336">336</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  337</span>  {</div>
<div class="line"><span class="lineno">  338</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#af6e53363524fca589cea90c51f953b7d">maintenanceNeeded</a>;</div>
<div class="line"><span class="lineno">  339</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_af6e53363524fca589cea90c51f953b7d"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#af6e53363524fca589cea90c51f953b7d">fabomatic::Machine::maintenanceNeeded</a></div><div class="ttdeci">bool maintenanceNeeded</div><div class="ttdoc">If true, machine needs maintenance.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00113">Machine.hpp:113</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8hpp_source.xhtml#l00113">maintenanceNeeded</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00164">fabomatic::BoardLogic::authorize()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00499">fabomatic::BoardLogic::blinkLed()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00285">fabomatic::BoardLogic::updateLCD()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a34b0deb04494137cf321e94d50dedf90_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a871958cc57845c8651cf1058ed9b30e4" name="a871958cc57845c8651cf1058ed9b30e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a871958cc57845c8651cf1058ed9b30e4">&#9670;&#160;</a></span>isShutdownImminent()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::isShutdownImminent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates if the machine will power down in less than BEEP_REMAINING_MINUTES. </p>
<p>indicates if the machine is about to shudown and board should beep</p>
<dl class="section return"><dt>Returns</dt><dd>true if shutdown is imminent (within grace_period after last logoff) </dd></dl>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00123">123</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  124</span>  {</div>
<div class="line"><span class="lineno">  125</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a9973764a444fc39727def61c053c62c3">logoff_timestamp</a>.has_value())</div>
<div class="line"><span class="lineno">  126</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  127</span> </div>
<div class="line"><span class="lineno">  128</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">bool</span>);</div>
<div class="line"><span class="lineno">  129</span> </div>
<div class="line"><span class="lineno">  130</span>    <span class="keywordflow">return</span> (<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a2bc2b55d0e25444c6c169a94c44ba571">power_state</a> == <a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a878a40722160ead08a1f3cdef3e70a14">PowerState::WaitingPowerOff</a> &amp;&amp;</div>
<div class="line"><span class="lineno">  131</span>            std::chrono::system_clock::now() - <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a9973764a444fc39727def61c053c62c3">logoff_timestamp</a>.value() &lt;= <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().grace_period);</div>
<div class="line"><span class="lineno">  132</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00018">CHECK_CONFIGURED</a>, <a class="el" href="_machine_8hpp_source.xhtml#l00102">config</a>, <a class="el" href="_machine_8hpp_source.xhtml#l00109">logoff_timestamp</a>, <a class="el" href="_machine_8hpp_source.xhtml#l00110">power_state</a>, and <a class="el" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a878a40722160ead08a1f3cdef3e70a14">WaitingPowerOff</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00499">fabomatic::BoardLogic::blinkLed()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00127">fabomatic::BoardLogic::longTap()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00241">toString()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00285">fabomatic::BoardLogic::updateLCD()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a871958cc57845c8651cf1058ed9b30e4_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ac0591da2ff437cd6c7cc91bd09b4dff7" name="ac0591da2ff437cd6c7cc91bd09b4dff7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0591da2ff437cd6c7cc91bd09b4dff7">&#9670;&#160;</a></span>login()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::login </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfabomatic_1_1_fab_user.xhtml">FabUser</a> &amp;&#160;</td>
          <td class="paramname"><em>user</em></td><td>)</td>
          <td> -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Try to login the user and start the usage timer. </p>
<p>Log the given user onto the machine, if free and not blocked.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">user</td><td>user to login </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true of the user has been successfully logged in </dd></dl>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00064">64</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   65</span>  {</div>
<div class="line"><span class="lineno">   66</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">bool</span>);</div>
<div class="line"><span class="lineno">   67</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a74aa0b2cd34205ba57710affc56f5c3c">isFree</a>() &amp;&amp; <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a503004fad0cb04f4e525b60f8e7e9e0c">allowed</a>)</div>
<div class="line"><span class="lineno">   68</span>    {</div>
<div class="line"><span class="lineno">   69</span>      <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a7b30e014bf3166b1f6692d3e64d18827">active</a> = <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">   70</span>      <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#aa39977d690373313aa7c24f52679cc5b">current_user</a> = user;</div>
<div class="line"><span class="lineno">   71</span>      <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a0aa6c35ee214314d87297013cc29a8aa">power</a>(<span class="keyword">true</span>);</div>
<div class="line"><span class="lineno">   72</span>      <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a215bab25e0b9555c733d1ffcb6330a06">usage_start_timestamp</a> = std::chrono::system_clock::now();</div>
<div class="line"><span class="lineno">   73</span>      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">   74</span>    }</div>
<div class="line"><span class="lineno">   75</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">   76</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a0aa6c35ee214314d87297013cc29a8aa"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a0aa6c35ee214314d87297013cc29a8aa">fabomatic::Machine::power</a></div><div class="ttdeci">auto power(bool on_or_off) -&gt; void</div><div class="ttdoc">Powers the machine on or off using relay/MQTT/both.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00203">Machine.cpp:203</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a74aa0b2cd34205ba57710affc56f5c3c"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a74aa0b2cd34205ba57710affc56f5c3c">fabomatic::Machine::isFree</a></div><div class="ttdeci">auto isFree() const -&gt; bool</div><div class="ttdoc">Indicates is the machine is not used by anybody.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00056">Machine.cpp:56</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00018">CHECK_CONFIGURED</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00164">fabomatic::BoardLogic::authorize()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_ac0591da2ff437cd6c7cc91bd09b4dff7_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a86cd6dfd9fefa7221a49cc07c78fc851" name="a86cd6dfd9fefa7221a49cc07c78fc851"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86cd6dfd9fefa7221a49cc07c78fc851">&#9670;&#160;</a></span>logout()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::logout </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Logoff the user and stop the usage timer. </p>
<p>Removes the user from the machine, and powers off the machine (respecting POWEROFF_DELAY_MINUTES setting) </p>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00086">86</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   87</span>  {</div>
<div class="line"><span class="lineno">   88</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><span class="lineno">   89</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a7b30e014bf3166b1f6692d3e64d18827">active</a>)</div>
<div class="line"><span class="lineno">   90</span>    {</div>
<div class="line"><span class="lineno">   91</span>      <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a7b30e014bf3166b1f6692d3e64d18827">active</a> = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">   92</span>      <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a2bc2b55d0e25444c6c169a94c44ba571">power_state</a> = <a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a878a40722160ead08a1f3cdef3e70a14">PowerState::WaitingPowerOff</a>;</div>
<div class="line"><span class="lineno">   93</span>      <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a215bab25e0b9555c733d1ffcb6330a06">usage_start_timestamp</a> = std::nullopt;</div>
<div class="line"><span class="lineno">   94</span> </div>
<div class="line"><span class="lineno">   95</span>      <span class="comment">// Sets the countdown to power off</span></div>
<div class="line"><span class="lineno">   96</span>      <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a9973764a444fc39727def61c053c62c3">logoff_timestamp</a> = std::chrono::system_clock::now();</div>
<div class="line"><span class="lineno">   97</span> </div>
<div class="line"><span class="lineno">   98</span>      <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().grace_period == 0s)</div>
<div class="line"><span class="lineno">   99</span>      {</div>
<div class="line"><span class="lineno">  100</span>        <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a0aa6c35ee214314d87297013cc29a8aa">power</a>(<span class="keyword">false</span>);</div>
<div class="line"><span class="lineno">  101</span>      }</div>
<div class="line"><span class="lineno">  102</span> </div>
<div class="line"><span class="lineno">  103</span>      ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Machine will be shutdown in %lld s&quot;</span>,</div>
<div class="line"><span class="lineno">  104</span>               <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().grace_period.count());</div>
<div class="line"><span class="lineno">  105</span>    }</div>
<div class="line"><span class="lineno">  106</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00018">CHECK_CONFIGURED</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00112">fabomatic::BoardLogic::logout()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a86cd6dfd9fefa7221a49cc07c78fc851_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a1164ed13904884700104a96c0f5ad4e8" name="a1164ed13904884700104a96c0f5ad4e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1164ed13904884700104a96c0f5ad4e8">&#9670;&#160;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a> &amp; fabomatic::Machine::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a> &amp;&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3bafcbac9c64db988abd94bad064064d" name="a3bafcbac9c64db988abd94bad064064d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3bafcbac9c64db988abd94bad064064d">&#9670;&#160;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a> &amp; fabomatic::Machine::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0aa6c35ee214314d87297013cc29a8aa" name="a0aa6c35ee214314d87297013cc29a8aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0aa6c35ee214314d87297013cc29a8aa">&#9670;&#160;</a></span>power()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::power </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>on_or_off</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Powers the machine on or off using relay/MQTT/both. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">on_or_off</td><td>new power state </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00203">203</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  204</span>  {</div>
<div class="line"><span class="lineno">  205</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><span class="lineno">  206</span> </div>
<div class="line"><span class="lineno">  207</span>    ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Machine::power : power set to %d&quot;</span>, on_or_off);</div>
<div class="line"><span class="lineno">  208</span> </div>
<div class="line"><span class="lineno">  209</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().hasRelay())</div>
<div class="line"><span class="lineno">  210</span>    {</div>
<div class="line"><span class="lineno">  211</span>      <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#af80723250a85368e53055b5f91c14840">power_relay</a>(on_or_off);</div>
<div class="line"><span class="lineno">  212</span>    }</div>
<div class="line"><span class="lineno">  213</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().hasMqttSwitch())</div>
<div class="line"><span class="lineno">  214</span>    {</div>
<div class="line"><span class="lineno">  215</span>      <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a116376ca892e59b8f754696161657631">power_mqtt</a>(on_or_off);</div>
<div class="line"><span class="lineno">  216</span>    }</div>
<div class="line"><span class="lineno">  217</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a116376ca892e59b8f754696161657631"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a116376ca892e59b8f754696161657631">fabomatic::Machine::power_mqtt</a></div><div class="ttdeci">auto power_mqtt(bool on_or_off) -&gt; void</div><div class="ttdoc">sets the machine power to on (true) or off (false)</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00165">Machine.cpp:165</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_af80723250a85368e53055b5f91c14840"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#af80723250a85368e53055b5f91c14840">fabomatic::Machine::power_relay</a></div><div class="ttdeci">auto power_relay(bool on_or_off) -&gt; void</div><div class="ttdoc">sets the machine power to on (true) or off (false)</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00136">Machine.cpp:136</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00018">CHECK_CONFIGURED</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00577">fabomatic::BoardLogic::checkPowerOff()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a0aa6c35ee214314d87297013cc29a8aa_icgraph.svg" width="100%" height="425"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a116376ca892e59b8f754696161657631" name="a116376ca892e59b8f754696161657631"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a116376ca892e59b8f754696161657631">&#9670;&#160;</a></span>power_mqtt()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::power_mqtt </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>sets the machine power to on (true) or off (false) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>setpoint </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00165">165</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  166</span>  {</div>
<div class="line"><span class="lineno">  167</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><span class="lineno">  168</span> </div>
<div class="line"><span class="lineno">  169</span>    ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Machine::power_mqtt : power set to %d&quot;</span>, value);</div>
<div class="line"><span class="lineno">  170</span> </div>
<div class="line"><span class="lineno">  171</span>    <span class="keyword">auto</span> &amp;mqtt_server = <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#adb98818468832f2327b4a25a199cdb0e">server</a>.value().get();</div>
<div class="line"><span class="lineno">  172</span>    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;sw_topic = <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().mqtt_switch_topic;</div>
<div class="line"><span class="lineno">  173</span> </div>
<div class="line"><span class="lineno">  174</span>    String topic{sw_topic.data()};</div>
<div class="line"><span class="lineno">  175</span>    String payload = value ? <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1default__config.xhtml#a191409a379c1a2de5a3525e5e0f2e83f">conf::default_config::mqtt_switch_on_message</a>.data() : <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1default__config.xhtml#a191409a379c1a2de5a3525e5e0f2e83f">conf::default_config::mqtt_switch_on_message</a>.data();</div>
<div class="line"><span class="lineno">  176</span> </div>
<div class="line"><span class="lineno">  177</span>    <span class="keyword">auto</span> retries = 0;</div>
<div class="line"><span class="lineno">  178</span>    <span class="keywordflow">while</span> (!mqtt_server.publish(topic, payload, <span class="keyword">false</span>))</div>
<div class="line"><span class="lineno">  179</span>    {</div>
<div class="line"><span class="lineno">  180</span>      ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Error while publishing %s to %s&quot;</span>, payload.c_str(), topic.c_str());</div>
<div class="line"><span class="lineno">  181</span> </div>
<div class="line"><span class="lineno">  182</span>      mqtt_server.connect();</div>
<div class="line"><span class="lineno">  183</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a8418761ec7353545c7130692339b9cc6">conf::mqtt::TIMEOUT_REPLY_SERVER</a>);</div>
<div class="line"><span class="lineno">  184</span>      retries++;</div>
<div class="line"><span class="lineno">  185</span>      <span class="keywordflow">if</span> (retries &gt; <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a9385c322eb16f7f09992855dec71df20">conf::mqtt::MAX_TRIES</a>)</div>
<div class="line"><span class="lineno">  186</span>      {</div>
<div class="line"><span class="lineno">  187</span>        ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Unable to publish to MQTT (%d/%d)&quot;</span>, retries, <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a9385c322eb16f7f09992855dec71df20">conf::mqtt::MAX_TRIES</a>);</div>
<div class="line"><span class="lineno">  188</span>        <span class="keywordflow">return</span>;</div>
<div class="line"><span class="lineno">  189</span>      }</div>
<div class="line"><span class="lineno">  190</span>    }</div>
<div class="line"><span class="lineno">  191</span> </div>
<div class="line"><span class="lineno">  192</span>    <span class="keywordflow">if</span> (value)</div>
<div class="line"><span class="lineno">  193</span>    {</div>
<div class="line"><span class="lineno">  194</span>      <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a9973764a444fc39727def61c053c62c3">logoff_timestamp</a> = std::nullopt;</div>
<div class="line"><span class="lineno">  195</span>      <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a2bc2b55d0e25444c6c169a94c44ba571">power_state</a> = <a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a5fb98f2976a3f8c8980354a730398a87">PowerState::PoweredOn</a>;</div>
<div class="line"><span class="lineno">  196</span>    }</div>
<div class="line"><span class="lineno">  197</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  198</span>    {</div>
<div class="line"><span class="lineno">  199</span>      <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a2bc2b55d0e25444c6c169a94c44ba571">power_state</a> = <a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838ab161cc0f80e1c236e1f0816a42c4a00c">PowerState::PoweredOff</a>;</div>
<div class="line"><span class="lineno">  200</span>    }</div>
<div class="line"><span class="lineno">  201</span>  }</div>
<div class="ttc" id="anamespacefabomatic_1_1_tasks_xhtml_a5c20f560f5934822d39ba116a16f3ab6"><div class="ttname"><a href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">fabomatic::Tasks::delay</a></div><div class="ttdeci">auto delay(const milliseconds duration) -&gt; void</div><div class="ttdoc">Wait for a delay, allowing OTA updates.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00250">Tasks.cpp:250</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1default__config_xhtml_a191409a379c1a2de5a3525e5e0f2e83f"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1default__config.xhtml#a191409a379c1a2de5a3525e5e0f2e83f">fabomatic::conf::default_config::mqtt_switch_on_message</a></div><div class="ttdeci">static constexpr std::string_view mqtt_switch_on_message</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00021">conf.hpp:21</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1mqtt_xhtml_a8418761ec7353545c7130692339b9cc6"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a8418761ec7353545c7130692339b9cc6">fabomatic::conf::mqtt::TIMEOUT_REPLY_SERVER</a></div><div class="ttdeci">static constexpr auto TIMEOUT_REPLY_SERVER</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00100">conf.hpp:100</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1mqtt_xhtml_a9385c322eb16f7f09992855dec71df20"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a9385c322eb16f7f09992855dec71df20">fabomatic::conf::mqtt::MAX_TRIES</a></div><div class="ttdeci">static constexpr auto MAX_TRIES</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00099">conf.hpp:99</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00018">CHECK_CONFIGURED</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00250">fabomatic::Tasks::delay()</a>, <a class="el" href="conf_8hpp_source.xhtml#l00099">fabomatic::conf::mqtt::MAX_TRIES</a>, <a class="el" href="conf_8hpp_source.xhtml#l00021">fabomatic::conf::default_config::mqtt_switch_on_message</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>, and <a class="el" href="conf_8hpp_source.xhtml#l00100">fabomatic::conf::mqtt::TIMEOUT_REPLY_SERVER</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a116376ca892e59b8f754696161657631_cgraph.svg" width="348" height="68"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="af80723250a85368e53055b5f91c14840" name="af80723250a85368e53055b5f91c14840"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af80723250a85368e53055b5f91c14840">&#9670;&#160;</a></span>power_relay()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::power_relay </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>sets the machine power to on (true) or off (false) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>setpoint </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00136">136</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  137</span>  {</div>
<div class="line"><span class="lineno">  138</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><span class="lineno">  139</span>    ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Machine::power_relay : power set to %d&quot;</span>, value);</div>
<div class="line"><span class="lineno">  140</span> </div>
<div class="line"><span class="lineno">  141</span>    <span class="keyword">const</span> <span class="keyword">auto</span> pin = <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().relay_config.ch1_pin;</div>
<div class="line"><span class="lineno">  142</span> </div>
<div class="line"><span class="lineno">  143</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().relay_config.active_low)</div>
<div class="line"><span class="lineno">  144</span>    {</div>
<div class="line"><span class="lineno">  145</span>      digitalWrite(pin, value ? LOW : HIGH);</div>
<div class="line"><span class="lineno">  146</span>    }</div>
<div class="line"><span class="lineno">  147</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  148</span>    {</div>
<div class="line"><span class="lineno">  149</span>      digitalWrite(pin, value ? HIGH : LOW);</div>
<div class="line"><span class="lineno">  150</span>    }</div>
<div class="line"><span class="lineno">  151</span> </div>
<div class="line"><span class="lineno">  152</span>    <span class="keywordflow">if</span> (value)</div>
<div class="line"><span class="lineno">  153</span>    {</div>
<div class="line"><span class="lineno">  154</span>      <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a9973764a444fc39727def61c053c62c3">logoff_timestamp</a> = std::nullopt;</div>
<div class="line"><span class="lineno">  155</span>      <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a2bc2b55d0e25444c6c169a94c44ba571">power_state</a> = <a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a5fb98f2976a3f8c8980354a730398a87">PowerState::PoweredOn</a>;</div>
<div class="line"><span class="lineno">  156</span>    }</div>
<div class="line"><span class="lineno">  157</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  158</span>    {</div>
<div class="line"><span class="lineno">  159</span>      <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a2bc2b55d0e25444c6c169a94c44ba571">power_state</a> = <a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838ab161cc0f80e1c236e1f0816a42c4a00c">PowerState::PoweredOff</a>;</div>
<div class="line"><span class="lineno">  160</span>    }</div>
<div class="line"><span class="lineno">  161</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00018">CHECK_CONFIGURED</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

</div>
</div>
<a id="addd23c892c39f3c1e26d611059273081" name="addd23c892c39f3c1e26d611059273081"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addd23c892c39f3c1e26d611059273081">&#9670;&#160;</a></span>setAllowed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::setAllowed </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>new_allowed</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00331">331</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  332</span>  {</div>
<div class="line"><span class="lineno">  333</span>    <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a503004fad0cb04f4e525b60f8e7e9e0c">allowed</a> = new_allowed;</div>
<div class="line"><span class="lineno">  334</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00042">fabomatic::BoardLogic::refreshFromServer()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_addd23c892c39f3c1e26d611059273081_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ace7ccce1b3fabde562cfc7c5645dd6a3" name="ace7ccce1b3fabde562cfc7c5645dd6a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace7ccce1b3fabde562cfc7c5645dd6a3">&#9670;&#160;</a></span>setAutologoffDelay()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::setAutologoffDelay </td>
          <td>(</td>
          <td class="paramtype">std::chrono::seconds&#160;</td>
          <td class="paramname"><em>new_delay</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the delay after which the user will be logged off automatically. </p>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00275">275</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  276</span>  {</div>
<div class="line"><span class="lineno">  277</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><span class="lineno">  278</span> </div>
<div class="line"><span class="lineno">  279</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().autologoff != new_delay)</div>
<div class="line"><span class="lineno">  280</span>    {</div>
<div class="line"><span class="lineno">  281</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Changing autologoff delay to %lld min&quot;</span>,</div>
<div class="line"><span class="lineno">  282</span>               std::chrono::duration_cast&lt;std::chrono::minutes&gt;(<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().autologoff).count());</div>
<div class="line"><span class="lineno">  283</span>    }</div>
<div class="line"><span class="lineno">  284</span> </div>
<div class="line"><span class="lineno">  285</span>    <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().autologoff = new_delay;</div>
<div class="line"><span class="lineno">  286</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00018">CHECK_CONFIGURED</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00042">fabomatic::BoardLogic::refreshFromServer()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_ace7ccce1b3fabde562cfc7c5645dd6a3_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a30c12cef5abca43d82f7c378430a79b6" name="a30c12cef5abca43d82f7c378430a79b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a30c12cef5abca43d82f7c378430a79b6">&#9670;&#160;</a></span>setGracePeriod()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::setGracePeriod </td>
          <td>(</td>
          <td class="paramtype">std::chrono::seconds&#160;</td>
          <td class="paramname"><em>new_delay</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the idle period after which the machine will power off automatically. </p>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00352">352</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  353</span>  {</div>
<div class="line"><span class="lineno">  354</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><span class="lineno">  355</span> </div>
<div class="line"><span class="lineno">  356</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().grace_period != new_delay)</div>
<div class="line"><span class="lineno">  357</span>    {</div>
<div class="line"><span class="lineno">  358</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Changing grace period to %lld seconds&quot;</span>,</div>
<div class="line"><span class="lineno">  359</span>               new_delay.count());</div>
<div class="line"><span class="lineno">  360</span>    }</div>
<div class="line"><span class="lineno">  361</span> </div>
<div class="line"><span class="lineno">  362</span>    <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().grace_period = new_delay;</div>
<div class="line"><span class="lineno">  363</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00018">CHECK_CONFIGURED</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00042">fabomatic::BoardLogic::refreshFromServer()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a30c12cef5abca43d82f7c378430a79b6_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ac8513321c0c184312c66087e7104d066" name="ac8513321c0c184312c66087e7104d066"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8513321c0c184312c66087e7104d066">&#9670;&#160;</a></span>setMachineName()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::setMachineName </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>new_name</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the machine name as per backend configuration. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">new_name</td><td>Will be shown on LCD, keep it short. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00294">294</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  295</span>  {</div>
<div class="line"><span class="lineno">  296</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><span class="lineno">  297</span> </div>
<div class="line"><span class="lineno">  298</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().machine_name != new_name)</div>
<div class="line"><span class="lineno">  299</span>    {</div>
<div class="line"><span class="lineno">  300</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Changing machine name to %s&quot;</span>, new_name.data());</div>
<div class="line"><span class="lineno">  301</span>    }</div>
<div class="line"><span class="lineno">  302</span> </div>
<div class="line"><span class="lineno">  303</span>    <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().machine_name = new_name;</div>
<div class="line"><span class="lineno">  304</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00018">CHECK_CONFIGURED</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00042">fabomatic::BoardLogic::refreshFromServer()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_ac8513321c0c184312c66087e7104d066_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a9d109ed7b9c5e40768bc4edf62377aa8" name="a9d109ed7b9c5e40768bc4edf62377aa8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d109ed7b9c5e40768bc4edf62377aa8">&#9670;&#160;</a></span>setMachineType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::setMachineType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_machine_i_d_8hpp.xhtml#a35cc1c75e4e55a13e5075b9331a37dc5">MachineType</a>&#160;</td>
          <td class="paramname"><em>new_type</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the machine type as per backend configuration. </p>

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00306">306</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  307</span>  {</div>
<div class="line"><span class="lineno">  308</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><span class="lineno">  309</span> </div>
<div class="line"><span class="lineno">  310</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().machine_type != new_type)</div>
<div class="line"><span class="lineno">  311</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Changing machine type to %d&quot;</span>, <span class="keyword">static_cast&lt;</span>uint8_t<span class="keyword">&gt;</span>(new_type));</div>
<div class="line"><span class="lineno">  312</span> </div>
<div class="line"><span class="lineno">  313</span>    <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().machine_type = new_type;</div>
<div class="line"><span class="lineno">  314</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8cpp_source.xhtml#l00018">CHECK_CONFIGURED</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00042">fabomatic::BoardLogic::refreshFromServer()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a9d109ed7b9c5e40768bc4edf62377aa8_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ab39e2dee601ccaeab1e02cf28a14306b" name="ab39e2dee601ccaeab1e02cf28a14306b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab39e2dee601ccaeab1e02cf28a14306b">&#9670;&#160;</a></span>setMaintenanceInfo()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::setMaintenanceInfo </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>new_description</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00370">370</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  371</span>  {</div>
<div class="line"><span class="lineno">  372</span>    <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a77c8d3c024aa9bc8822ab8038e9cdd4d">maintenanceInfo</a> = new_description;</div>
<div class="line"><span class="lineno">  373</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00042">fabomatic::BoardLogic::refreshFromServer()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_ab39e2dee601ccaeab1e02cf28a14306b_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a921c78777a6cb9f7fdb9780a8c1aa8c0" name="a921c78777a6cb9f7fdb9780a8c1aa8c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a921c78777a6cb9f7fdb9780a8c1aa8c0">&#9670;&#160;</a></span>setMaintenanceNeeded()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::setMaintenanceNeeded </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>new_maintenance_needed</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00341">341</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  342</span>  {</div>
<div class="line"><span class="lineno">  343</span>    <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#af6e53363524fca589cea90c51f953b7d">maintenanceNeeded</a> = new_maintenance_needed;</div>
<div class="line"><span class="lineno">  344</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00164">fabomatic::BoardLogic::authorize()</a>, and <a class="el" href="_board_logic_8cpp_source.xhtml#l00042">fabomatic::BoardLogic::refreshFromServer()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a921c78777a6cb9f7fdb9780a8c1aa8c0_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a39fbf9cad912d735cf84b75c0674646f" name="a39fbf9cad912d735cf84b75c0674646f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39fbf9cad912d735cf84b75c0674646f">&#9670;&#160;</a></span>toString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Machine::toString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; const std::string</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8cpp_source.xhtml#l00241">241</a> of file <a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  242</span>  {</div>
<div class="line"><span class="lineno">  243</span>    std::stringstream sstream{};</div>
<div class="line"><span class="lineno">  244</span> </div>
<div class="line"><span class="lineno">  245</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.has_value() || !<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#adb98818468832f2327b4a25a199cdb0e">server</a>.has_value())</div>
<div class="line"><span class="lineno">  246</span>    {</div>
<div class="line"><span class="lineno">  247</span>      sstream &lt;&lt; <span class="stringliteral">&quot;Machine (not configured)&quot;</span>;</div>
<div class="line"><span class="lineno">  248</span>      <span class="keywordflow">return</span> sstream.str();</div>
<div class="line"><span class="lineno">  249</span>    }</div>
<div class="line"><span class="lineno">  250</span> </div>
<div class="line"><span class="lineno">  251</span>    sstream &lt;&lt; <span class="stringliteral">&quot;Machine (ID:&quot;</span> &lt;&lt; <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a8bde1bdf40d146c521b623d54e2df1cf">getMachineId</a>().id;</div>
<div class="line"><span class="lineno">  252</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, Name:&quot;</span> &lt;&lt; <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a1637e99f2d70262d2ab26f69ed4f0e47">getMachineName</a>();</div>
<div class="line"><span class="lineno">  253</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, IsFree: &quot;</span> &lt;&lt; <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a74aa0b2cd34205ba57710affc56f5c3c">isFree</a>();</div>
<div class="line"><span class="lineno">  254</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, IsAllowed:&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a503004fad0cb04f4e525b60f8e7e9e0c">allowed</a>;</div>
<div class="line"><span class="lineno">  255</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, PowerState:&quot;</span> &lt;&lt; <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a3c5304fd80e0cc1c2118a59c64222d6d">getPowerState</a>());</div>
<div class="line"><span class="lineno">  256</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, &quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#aa39977d690373313aa7c24f52679cc5b">current_user</a>.<a class="code hl_function" href="structfabomatic_1_1_fab_user.xhtml#ab4b54f1830f1536824583e973d670582">toString</a>();</div>
<div class="line"><span class="lineno">  257</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, UsageDuration (s):&quot;</span> &lt;&lt; <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a9c845a163660550fa779516a8be8681a">getUsageDuration</a>().count();</div>
<div class="line"><span class="lineno">  258</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, ShutdownImminent:&quot;</span> &lt;&lt; <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a871958cc57845c8651cf1058ed9b30e4">isShutdownImminent</a>();</div>
<div class="line"><span class="lineno">  259</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, MaintenanceNeeded:&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#af6e53363524fca589cea90c51f953b7d">maintenanceNeeded</a>;</div>
<div class="line"><span class="lineno">  260</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, &quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().toString();</div>
<div class="line"><span class="lineno">  261</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, Active:&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a7b30e014bf3166b1f6692d3e64d18827">active</a>;</div>
<div class="line"><span class="lineno">  262</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, Last logoff:&quot;</span> &lt;&lt; (<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a9973764a444fc39727def61c053c62c3">logoff_timestamp</a>.has_value() ? <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a9973764a444fc39727def61c053c62c3">logoff_timestamp</a>.value().time_since_epoch().count() : 0);</div>
<div class="line"><span class="lineno">  263</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, GracePeriod (s):&quot;</span> &lt;&lt; <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#aeee64b0919798272dfe45d40eb2e96be">getGracePeriod</a>().count();</div>
<div class="line"><span class="lineno">  264</span>    sstream &lt;&lt; <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><span class="lineno">  265</span> </div>
<div class="line"><span class="lineno">  266</span>    <span class="keywordflow">return</span> sstream.str();</div>
<div class="line"><span class="lineno">  267</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a1637e99f2d70262d2ab26f69ed4f0e47"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a1637e99f2d70262d2ab26f69ed4f0e47">fabomatic::Machine::getMachineName</a></div><div class="ttdeci">auto getMachineName() const -&gt; const std::string</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00235">Machine.cpp:235</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a3c5304fd80e0cc1c2118a59c64222d6d"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a3c5304fd80e0cc1c2118a59c64222d6d">fabomatic::Machine::getPowerState</a></div><div class="ttdeci">auto getPowerState() const -&gt; PowerState</div><div class="ttdoc">Returns the current power state of the machine.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00080">Machine.cpp:80</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a871958cc57845c8651cf1058ed9b30e4"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a871958cc57845c8651cf1058ed9b30e4">fabomatic::Machine::isShutdownImminent</a></div><div class="ttdeci">auto isShutdownImminent() const -&gt; bool</div><div class="ttdoc">Indicates if the machine will power down in less than BEEP_REMAINING_MINUTES.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00123">Machine.cpp:123</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a8bde1bdf40d146c521b623d54e2df1cf"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a8bde1bdf40d146c521b623d54e2df1cf">fabomatic::Machine::getMachineId</a></div><div class="ttdeci">auto getMachineId() const -&gt; MachineID</div><div class="ttdoc">Returns the machine identifier.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00048">Machine.cpp:48</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_aeee64b0919798272dfe45d40eb2e96be"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#aeee64b0919798272dfe45d40eb2e96be">fabomatic::Machine::getGracePeriod</a></div><div class="ttdeci">auto getGracePeriod() const -&gt; std::chrono::seconds</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00346">Machine.cpp:346</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_fab_user_xhtml_ab4b54f1830f1536824583e973d670582"><div class="ttname"><a href="structfabomatic_1_1_fab_user.xhtml#ab4b54f1830f1536824583e973d670582">fabomatic::FabUser::toString</a></div><div class="ttdeci">auto toString() const -&gt; const std::string</div><div class="ttdef"><b>Definition</b> <a href="_fab_user_8hpp_source.xhtml#l00053">FabUser.hpp:53</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_machine_8hpp_source.xhtml#l00105">active</a>, <a class="el" href="_machine_8hpp_source.xhtml#l00115">allowed</a>, <a class="el" href="_machine_8hpp_source.xhtml#l00102">config</a>, <a class="el" href="_machine_8hpp_source.xhtml#l00106">current_user</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00346">getGracePeriod()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00048">getMachineId()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00235">getMachineName()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00080">getPowerState()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00226">getUsageDuration()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00056">isFree()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00123">isShutdownImminent()</a>, <a class="el" href="_machine_8hpp_source.xhtml#l00109">logoff_timestamp</a>, <a class="el" href="_machine_8hpp_source.xhtml#l00113">maintenanceNeeded</a>, <a class="el" href="_machine_8hpp_source.xhtml#l00103">server</a>, and <a class="el" href="_fab_user_8hpp_source.xhtml#l00053">fabomatic::FabUser::toString()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00042">fabomatic::BoardLogic::refreshFromServer()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a39fbf9cad912d735cf84b75c0674646f_cgraph.svg" width="342" height="510"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_machine_a39fbf9cad912d735cf84b75c0674646f_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="a7b30e014bf3166b1f6692d3e64d18827" name="a7b30e014bf3166b1f6692d3e64d18827"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b30e014bf3166b1f6692d3e64d18827">&#9670;&#160;</a></span>active</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::Machine::active {false}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8hpp_source.xhtml#l00105">105</a> of file <a class="el" href="_machine_8hpp_source.xhtml">Machine.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  105</span>{<span class="keyword">false</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_machine_8cpp_source.xhtml#l00056">isFree()</a>, and <a class="el" href="_machine_8cpp_source.xhtml#l00241">toString()</a>.</p>

</div>
</div>
<a id="a503004fad0cb04f4e525b60f8e7e9e0c" name="a503004fad0cb04f4e525b60f8e7e9e0c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a503004fad0cb04f4e525b60f8e7e9e0c">&#9670;&#160;</a></span>allowed</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::Machine::allowed {true}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>If true, machine is allowed to be used by anybody. </p>

<p class="definition">Definition at line <a class="el" href="_machine_8hpp_source.xhtml#l00115">115</a> of file <a class="el" href="_machine_8hpp_source.xhtml">Machine.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  115</span>{<span class="keyword">true</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_machine_8cpp_source.xhtml#l00326">isAllowed()</a>, and <a class="el" href="_machine_8cpp_source.xhtml#l00241">toString()</a>.</p>

</div>
</div>
<a id="a8545b7a1a969dddc47d35d921091ed5b" name="a8545b7a1a969dddc47d35d921091ed5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8545b7a1a969dddc47d35d921091ed5b">&#9670;&#160;</a></span>config</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;<a class="el" href="structfabomatic_1_1_machine_config.xhtml">MachineConfig</a>&gt; fabomatic::Machine::config {std::nullopt}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8hpp_source.xhtml#l00102">102</a> of file <a class="el" href="_machine_8hpp_source.xhtml">Machine.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  102</span>{std::nullopt};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_machine_8cpp_source.xhtml#l00110">canPowerOff()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00269">getAutologoffDelay()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00321">getConfig()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00346">getGracePeriod()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00048">getMachineId()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00235">getMachineName()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00316">isConfigured()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00123">isShutdownImminent()</a>, and <a class="el" href="_machine_8cpp_source.xhtml#l00241">toString()</a>.</p>

</div>
</div>
<a id="aa39977d690373313aa7c24f52679cc5b" name="aa39977d690373313aa7c24f52679cc5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa39977d690373313aa7c24f52679cc5b">&#9670;&#160;</a></span>current_user</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfabomatic_1_1_fab_user.xhtml">FabUser</a> fabomatic::Machine::current_user {}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8hpp_source.xhtml#l00106">106</a> of file <a class="el" href="_machine_8hpp_source.xhtml">Machine.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  106</span>{};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_machine_8cpp_source.xhtml#l00219">getActiveUser()</a>, and <a class="el" href="_machine_8cpp_source.xhtml#l00241">toString()</a>.</p>

</div>
</div>
<a id="a9973764a444fc39727def61c053c62c3" name="a9973764a444fc39727def61c053c62c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9973764a444fc39727def61c053c62c3">&#9670;&#160;</a></span>logoff_timestamp</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;std::chrono::time_point&lt;std::chrono::system_clock&gt; &gt; fabomatic::Machine::logoff_timestamp {std::nullopt}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8hpp_source.xhtml#l00109">109</a> of file <a class="el" href="_machine_8hpp_source.xhtml">Machine.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  109</span>{std::nullopt};      <span class="comment">// When did the last user log off?</span></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_machine_8cpp_source.xhtml#l00110">canPowerOff()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00123">isShutdownImminent()</a>, and <a class="el" href="_machine_8cpp_source.xhtml#l00241">toString()</a>.</p>

</div>
</div>
<a id="a77c8d3c024aa9bc8822ab8038e9cdd4d" name="a77c8d3c024aa9bc8822ab8038e9cdd4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77c8d3c024aa9bc8822ab8038e9cdd4d">&#9670;&#160;</a></span>maintenanceInfo</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string fabomatic::Machine::maintenanceInfo {&quot;&quot;}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8hpp_source.xhtml#l00117">117</a> of file <a class="el" href="_machine_8hpp_source.xhtml">Machine.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  117</span>{<span class="stringliteral">&quot;&quot;</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_machine_8cpp_source.xhtml#l00365">getMaintenanceInfo()</a>.</p>

</div>
</div>
<a id="af6e53363524fca589cea90c51f953b7d" name="af6e53363524fca589cea90c51f953b7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6e53363524fca589cea90c51f953b7d">&#9670;&#160;</a></span>maintenanceNeeded</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::Machine::maintenanceNeeded {false}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>If true, machine needs maintenance. </p>

<p class="definition">Definition at line <a class="el" href="_machine_8hpp_source.xhtml#l00113">113</a> of file <a class="el" href="_machine_8hpp_source.xhtml">Machine.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  113</span>{<span class="keyword">false</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_machine_8cpp_source.xhtml#l00336">isMaintenanceNeeded()</a>, and <a class="el" href="_machine_8cpp_source.xhtml#l00241">toString()</a>.</p>

</div>
</div>
<a id="a2bc2b55d0e25444c6c169a94c44ba571" name="a2bc2b55d0e25444c6c169a94c44ba571"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bc2b55d0e25444c6c169a94c44ba571">&#9670;&#160;</a></span>power_state</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838">PowerState</a> fabomatic::Machine::power_state {<a class="el" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838ab161cc0f80e1c236e1f0816a42c4a00c">PowerState::PoweredOff</a>}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8hpp_source.xhtml#l00110">110</a> of file <a class="el" href="_machine_8hpp_source.xhtml">Machine.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  110</span>{<a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838ab161cc0f80e1c236e1f0816a42c4a00c">PowerState::PoweredOff</a>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_machine_8cpp_source.xhtml#l00110">canPowerOff()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00080">getPowerState()</a>, and <a class="el" href="_machine_8cpp_source.xhtml#l00123">isShutdownImminent()</a>.</p>

</div>
</div>
<a id="adb98818468832f2327b4a25a199cdb0e" name="adb98818468832f2327b4a25a199cdb0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb98818468832f2327b4a25a199cdb0e">&#9670;&#160;</a></span>server</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;std::reference_wrapper&lt;<a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a>&gt; &gt; fabomatic::Machine::server {std::nullopt}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8hpp_source.xhtml#l00103">103</a> of file <a class="el" href="_machine_8hpp_source.xhtml">Machine.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  103</span>{std::nullopt};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_machine_8cpp_source.xhtml#l00316">isConfigured()</a>, and <a class="el" href="_machine_8cpp_source.xhtml#l00241">toString()</a>.</p>

</div>
</div>
<a id="a215bab25e0b9555c733d1ffcb6330a06" name="a215bab25e0b9555c733d1ffcb6330a06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a215bab25e0b9555c733d1ffcb6330a06">&#9670;&#160;</a></span>usage_start_timestamp</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;std::chrono::time_point&lt;std::chrono::system_clock&gt; &gt; fabomatic::Machine::usage_start_timestamp {std::nullopt}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_machine_8hpp_source.xhtml#l00108">108</a> of file <a class="el" href="_machine_8hpp_source.xhtml">Machine.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  108</span>{std::nullopt}; <span class="comment">// When did the machine start?</span></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_machine_8cpp_source.xhtml#l00226">getUsageDuration()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="_machine_8hpp_source.xhtml">Machine.hpp</a></li>
<li><a class="el" href="_machine_8cpp_source.xhtml">Machine.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jun 30 2024 19:56:55 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
