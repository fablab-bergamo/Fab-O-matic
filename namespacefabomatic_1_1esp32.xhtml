<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: fabomatic::esp32 Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacefabomatic.xhtml">fabomatic</a></li><li class="navelem"><a class="el" href="namespacefabomatic_1_1esp32.xhtml">esp32</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">fabomatic::esp32 Namespace Reference</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a5f5bb4a72418870dbcddd266b5bb0fcd" id="r_a5f5bb4a72418870dbcddd266b5bb0fcd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1esp32.xhtml#a5f5bb4a72418870dbcddd266b5bb0fcd">showHeapStats</a> ()</td></tr>
<tr class="separator:a5f5bb4a72418870dbcddd266b5bb0fcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bec49abfae47da0cadccb6e486f69bb" id="r_a8bec49abfae47da0cadccb6e486f69bb"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1esp32.xhtml#a8bec49abfae47da0cadccb6e486f69bb">setupWatchdog</a> (std::chrono::milliseconds msecs) -&gt; bool</td></tr>
<tr class="separator:a8bec49abfae47da0cadccb6e486f69bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7eca0f98345aa2c296103d6dc9fff01" id="r_ac7eca0f98345aa2c296103d6dc9fff01"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1esp32.xhtml#ac7eca0f98345aa2c296103d6dc9fff01">signalWatchdog</a> () -&gt; bool</td></tr>
<tr class="separator:ac7eca0f98345aa2c296103d6dc9fff01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae78a1408710128cb446f2cde991017dd" id="r_ae78a1408710128cb446f2cde991017dd"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1esp32.xhtml#ae78a1408710128cb446f2cde991017dd">removeWatchdog</a> () -&gt; void</td></tr>
<tr class="separator:ae78a1408710128cb446f2cde991017dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8d867c42c073a3e44e6292db72e1f94" id="r_ac8d867c42c073a3e44e6292db72e1f94"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1esp32.xhtml#ac8d867c42c073a3e44e6292db72e1f94">esp_serial</a> () -&gt; const std::string_view</td></tr>
<tr class="memdesc:ac8d867c42c073a3e44e6292db72e1f94"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the ESP32 serial number as a string.  <br /></td></tr>
<tr class="separator:ac8d867c42c073a3e44e6292db72e1f94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07750a641e5cfe3207bbdf72813af628" id="r_a07750a641e5cfe3207bbdf72813af628"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1esp32.xhtml#a07750a641e5cfe3207bbdf72813af628">getFreeHeap</a> () -&gt; uint32_t</td></tr>
<tr class="separator:a07750a641e5cfe3207bbdf72813af628"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6afa9ef478bc8a9ca73049f33b8fb8af" id="r_a6afa9ef478bc8a9ca73049f33b8fb8af"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1esp32.xhtml#a6afa9ef478bc8a9ca73049f33b8fb8af">restart</a> () -&gt; void</td></tr>
<tr class="separator:a6afa9ef478bc8a9ca73049f33b8fb8af"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="ac8d867c42c073a3e44e6292db72e1f94" name="ac8d867c42c073a3e44e6292db72e1f94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8d867c42c073a3e44e6292db72e1f94">&#9670;&#160;</a></span>esp_serial()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::esp32::esp_serial </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt;  const std::string_view</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the ESP32 serial number as a string. </p>

<p class="definition">Definition at line <a class="el" href="_espressif_8cpp_source.xhtml#l00067">67</a> of file <a class="el" href="_espressif_8cpp_source.xhtml">Espressif.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   68</span>  {</div>
<div class="line"><span class="lineno">   69</span>    <span class="keyword">static</span> std::array&lt;char, 13&gt; result; <span class="comment">// +1 for null termination</span></div>
<div class="line"><span class="lineno">   70</span> </div>
<div class="line"><span class="lineno">   71</span>    <span class="keywordflow">if</span> (result[0] == <span class="charliteral">&#39;\0&#39;</span>) <span class="comment">// Compute only once</span></div>
<div class="line"><span class="lineno">   72</span>    {</div>
<div class="line"><span class="lineno">   73</span>      std::stringstream serial{};</div>
<div class="line"><span class="lineno">   74</span>      std::array&lt;uint8_t, 8&gt; mac{0};</div>
<div class="line"><span class="lineno">   75</span> </div>
<div class="line"><span class="lineno">   76</span>      esp_efuse_mac_get_default(mac.data());</div>
<div class="line"><span class="lineno">   77</span>      <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> val : mac)</div>
<div class="line"><span class="lineno">   78</span>      {</div>
<div class="line"><span class="lineno">   79</span>        serial &lt;&lt; std::setfill(<span class="charliteral">&#39;0&#39;</span>) &lt;&lt; std::setw(2) &lt;&lt; std::hex &lt;&lt; +val;</div>
<div class="line"><span class="lineno">   80</span>      }</div>
<div class="line"><span class="lineno">   81</span>      <span class="keyword">auto</span> res = serial.str().substr(0U, 6 * 2);</div>
<div class="line"><span class="lineno">   82</span>      std::copy(res.cbegin(), res.cend(), result.begin());</div>
<div class="line"><span class="lineno">   83</span>      result[result.size() - 1] = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><span class="lineno">   84</span>    }</div>
<div class="line"><span class="lineno">   85</span>    <span class="keywordflow">return</span> {result.data()};</div>
<div class="line"><span class="lineno">   86</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_m_q_t_ttypes_8cpp_source.xhtml#l00037">fabomatic::ServerMQTT::AliveQuery::payload()</a>, <a class="el" href="main_8cpp_source.xhtml#l00213">fabomatic::taskFactoryReset()</a>, and <a class="el" href="test__tasks_8cpp_source.xhtml#l00132">fabomatic::tests::test_esp32()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_1_1esp32_ac8d867c42c073a3e44e6292db72e1f94_icgraph.svg" width="494" height="167"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a07750a641e5cfe3207bbdf72813af628" name="a07750a641e5cfe3207bbdf72813af628"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07750a641e5cfe3207bbdf72813af628">&#9670;&#160;</a></span>getFreeHeap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::esp32::getFreeHeap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt;  uint32_t</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_espressif_8cpp_source.xhtml#l00088">88</a> of file <a class="el" href="_espressif_8cpp_source.xhtml">Espressif.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   89</span>  {</div>
<div class="line"><span class="lineno">   90</span>    <span class="keywordflow">return</span> esp_get_free_heap_size();</div>
<div class="line"><span class="lineno">   91</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_m_q_t_ttypes_8cpp_source.xhtml#l00037">fabomatic::ServerMQTT::AliveQuery::payload()</a>, and <a class="el" href="test__tasks_8cpp_source.xhtml#l00132">fabomatic::tests::test_esp32()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_1_1esp32_a07750a641e5cfe3207bbdf72813af628_icgraph.svg" width="520" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ae78a1408710128cb446f2cde991017dd" name="ae78a1408710128cb446f2cde991017dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae78a1408710128cb446f2cde991017dd">&#9670;&#160;</a></span>removeWatchdog()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::esp32::removeWatchdog </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt;  void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_espressif_8cpp_source.xhtml#l00061">61</a> of file <a class="el" href="_espressif_8cpp_source.xhtml">Espressif.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   62</span>  {</div>
<div class="line"><span class="lineno">   63</span>    esp_task_wdt_deinit();</div>
<div class="line"><span class="lineno">   64</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_espressif_8cpp_source.xhtml#l00032">setupWatchdog()</a>, <a class="el" href="main_8cpp_source.xhtml#l00213">fabomatic::taskFactoryReset()</a>, <a class="el" href="test__tasks_8cpp_source.xhtml#l00132">fabomatic::tests::test_esp32()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00327">fabomatic::tests::test_normal_use()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_1_1esp32_ae78a1408710128cb446f2cde991017dd_icgraph.svg" width="100%" height="537"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a6afa9ef478bc8a9ca73049f33b8fb8af" name="a6afa9ef478bc8a9ca73049f33b8fb8af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6afa9ef478bc8a9ca73049f33b8fb8af">&#9670;&#160;</a></span>restart()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::esp32::restart </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt;  void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_espressif_8cpp_source.xhtml#l00093">93</a> of file <a class="el" href="_espressif_8cpp_source.xhtml">Espressif.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   94</span>  {</div>
<div class="line"><span class="lineno">   95</span>    esp_restart();</div>
<div class="line"><span class="lineno">   96</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00100">fabomatic::taskPoweroffWarning()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_1_1esp32_a6afa9ef478bc8a9ca73049f33b8fb8af_icgraph.svg" width="428" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a8bec49abfae47da0cadccb6e486f69bb" name="a8bec49abfae47da0cadccb6e486f69bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8bec49abfae47da0cadccb6e486f69bb">&#9670;&#160;</a></span>setupWatchdog()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::esp32::setupWatchdog </td>
          <td>(</td>
          <td class="paramtype">std::chrono::milliseconds&#160;</td>
          <td class="paramname"><em>msecs</em></td><td>)</td>
          <td> -&gt;  bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_espressif_8cpp_source.xhtml#l00032">32</a> of file <a class="el" href="_espressif_8cpp_source.xhtml">Espressif.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   33</span>  {</div>
<div class="line"><span class="lineno">   34</span>    <a class="code hl_function" href="namespacefabomatic_1_1esp32.xhtml#ae78a1408710128cb446f2cde991017dd">removeWatchdog</a>();</div>
<div class="line"><span class="lineno">   35</span> </div>
<div class="line"><span class="lineno">   36</span><span class="preprocessor">#if ESP_IDF_VERSION_MAJOR &lt; 5</span></div>
<div class="line"><span class="lineno">   37</span>    <span class="keyword">auto</span> secs = <span class="keyword">static_cast&lt;</span>uint32_t<span class="keyword">&gt;</span>(std::chrono::duration_cast&lt;std::chrono::seconds&gt;(msecs).count());</div>
<div class="line"><span class="lineno">   38</span>    <span class="keyword">auto</span> retVal = esp_task_wdt_init(secs, <span class="keyword">true</span>);</div>
<div class="line"><span class="lineno">   39</span>    ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;taskEspWatchdog - initialized %u seconds&quot;</span>, secs);</div>
<div class="line"><span class="lineno">   40</span><span class="preprocessor">#else</span></div>
<div class="line"><span class="lineno">   41</span>    <span class="keyword">auto</span> ui_msecs = <span class="keyword">static_cast&lt;</span>uint32_t<span class="keyword">&gt;</span>(msecs.count());</div>
<div class="line"><span class="lineno">   42</span>    esp_task_wdt_config_t conf{.timeout_ms = ui_msecs, .idle_core_mask = 1, .trigger_panic = <span class="keyword">true</span>};</div>
<div class="line"><span class="lineno">   43</span>    <span class="keyword">auto</span> retVal = esp_task_wdt_init(&amp;conf);</div>
<div class="line"><span class="lineno">   44</span>    ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;taskEspWatchdog - initialized %lu milliseconds&quot;</span>, ui_msecs);</div>
<div class="line"><span class="lineno">   45</span><span class="preprocessor">#endif</span></div>
<div class="line"><span class="lineno">   46</span> </div>
<div class="line"><span class="lineno">   47</span>    <span class="keywordflow">if</span> (retVal != ESP_OK)</div>
<div class="line"><span class="lineno">   48</span>    {</div>
<div class="line"><span class="lineno">   49</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">   50</span>    }</div>
<div class="line"><span class="lineno">   51</span> </div>
<div class="line"><span class="lineno">   52</span>    retVal = esp_task_wdt_add(NULL); <span class="comment">// add current thread to WDT watch</span></div>
<div class="line"><span class="lineno">   53</span>    <span class="keywordflow">return</span> (retVal == ESP_OK);</div>
<div class="line"><span class="lineno">   54</span>  }</div>
<div class="ttc" id="a_logging_8hpp_xhtml_a4ef5b5f197804a60836ab1e8907d8301"><div class="ttname"><a href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a></div><div class="ttdeci">static const char *const TAG</div><div class="ttdef"><b>Definition</b> <a href="_logging_8hpp_source.xhtml#l00006">Logging.hpp:6</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1esp32_xhtml_ae78a1408710128cb446f2cde991017dd"><div class="ttname"><a href="namespacefabomatic_1_1esp32.xhtml#ae78a1408710128cb446f2cde991017dd">fabomatic::esp32::removeWatchdog</a></div><div class="ttdeci">auto removeWatchdog() -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_espressif_8cpp_source.xhtml#l00061">Espressif.cpp:61</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_espressif_8cpp_source.xhtml#l00061">removeWatchdog()</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00409">setup()</a>, <a class="el" href="main_8cpp_source.xhtml#l00135">fabomatic::taskEspWatchdog()</a>, <a class="el" href="test__tasks_8cpp_source.xhtml#l00132">fabomatic::tests::test_esp32()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00274">fabomatic::tests::test_taskEspWatchdog()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_1_1esp32_a8bec49abfae47da0cadccb6e486f69bb_cgraph.svg" width="443" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_1_1esp32_a8bec49abfae47da0cadccb6e486f69bb_icgraph.svg" width="566" height="216"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a5f5bb4a72418870dbcddd266b5bb0fcd" name="a5f5bb4a72418870dbcddd266b5bb0fcd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f5bb4a72418870dbcddd266b5bb0fcd">&#9670;&#160;</a></span>showHeapStats()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::esp32::showHeapStats </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_espressif_8cpp_source.xhtml#l00015">15</a> of file <a class="el" href="_espressif_8cpp_source.xhtml">Espressif.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   16</span>  {</div>
<div class="line"><span class="lineno">   17</span>    heap_caps_print_heap_info(MALLOC_CAP_8BIT);</div>
<div class="line"><span class="lineno">   18</span> </div>
<div class="line"><span class="lineno">   19</span>    <span class="comment">// Get heap summary</span></div>
<div class="line"><span class="lineno">   20</span>    multi_heap_info_t heap_info;</div>
<div class="line"><span class="lineno">   21</span>    heap_caps_get_info(&amp;heap_info, MALLOC_CAP_8BIT);</div>
<div class="line"><span class="lineno">   22</span> </div>
<div class="line"><span class="lineno">   23</span>    <span class="comment">// Log heap statistics</span></div>
<div class="line"><span class="lineno">   24</span>    ESP_LOGI(<span class="stringliteral">&quot;Heap Stats&quot;</span>, <span class="stringliteral">&quot;Total Free Heap Size: %zu bytes&quot;</span>, heap_info.total_free_bytes);</div>
<div class="line"><span class="lineno">   25</span>    ESP_LOGI(<span class="stringliteral">&quot;Heap Stats&quot;</span>, <span class="stringliteral">&quot;Total Allocated Size: %zu bytes&quot;</span>, heap_info.total_allocated_bytes);</div>
<div class="line"><span class="lineno">   26</span>    ESP_LOGI(<span class="stringliteral">&quot;Heap Stats&quot;</span>, <span class="stringliteral">&quot;Largest Free Block: %zu bytes&quot;</span>, heap_info.largest_free_block);</div>
<div class="line"><span class="lineno">   27</span>    ESP_LOGI(<span class="stringliteral">&quot;Heap Stats&quot;</span>, <span class="stringliteral">&quot;Min Free Heap Size Ever: %zu bytes&quot;</span>, heap_info.minimum_free_bytes);</div>
<div class="line"><span class="lineno">   28</span>    ESP_LOGI(<span class="stringliteral">&quot;Heap Stats&quot;</span>, <span class="stringliteral">&quot;Free Blocks: %zu&quot;</span>, heap_info.free_blocks);</div>
<div class="line"><span class="lineno">   29</span>    ESP_LOGI(<span class="stringliteral">&quot;Heap Stats&quot;</span>, <span class="stringliteral">&quot;Allocated Blocks: %zu&quot;</span>, heap_info.allocated_blocks);</div>
<div class="line"><span class="lineno">   30</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00184">fabomatic::taskIsAlive()</a>, and <a class="el" href="test__tasks_8cpp_source.xhtml#l00132">fabomatic::tests::test_esp32()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_1_1esp32_a5f5bb4a72418870dbcddd266b5bb0fcd_icgraph.svg" width="498" height="102"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ac7eca0f98345aa2c296103d6dc9fff01" name="ac7eca0f98345aa2c296103d6dc9fff01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7eca0f98345aa2c296103d6dc9fff01">&#9670;&#160;</a></span>signalWatchdog()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::esp32::signalWatchdog </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt;  bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_espressif_8cpp_source.xhtml#l00056">56</a> of file <a class="el" href="_espressif_8cpp_source.xhtml">Espressif.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   57</span>  {</div>
<div class="line"><span class="lineno">   58</span>    <span class="keywordflow">return</span> esp_task_wdt_reset() == ESP_OK;</div>
<div class="line"><span class="lineno">   59</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00135">fabomatic::taskEspWatchdog()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00274">fabomatic::tests::test_taskEspWatchdog()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_1_1esp32_ac7eca0f98345aa2c296103d6dc9fff01_icgraph.svg" width="408" height="102"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jun 30 2024 19:56:55 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
