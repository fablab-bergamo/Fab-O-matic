<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: MockMrfc522.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(0); });
/* @license-end */
</script>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_467c377f93108d0a0c83a3bb4de019c4.xhtml">mock</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">MockMrfc522.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="_mock_mrfc522_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#ifndef MOCK_MOCKMRFC522_HPP_</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#define MOCK_MOCKMRFC522_HPP_</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &quot;Arduino.h&quot;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;array&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;optional&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span> </div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &quot;<a class="code" href="_fab_user_8hpp.xhtml">FabUser.hpp</a>&quot;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="preprocessor">#include &quot;MFRC522DriverPinSimple.h&quot;</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="preprocessor">#include &quot;MFRC522DriverSPI.h&quot;</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="preprocessor">#include &quot;MFRC522v2.h&quot;</span></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span> </div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefabomatic.xhtml">fabomatic</a></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>{</div>
<div class="foldopen" id="foldopen00017" data-start="{" data-end="};">
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_mrfc522.xhtml">   17</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_mock_mrfc522.xhtml">MockMrfc522</a></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  {</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  <span class="keyword">private</span>:</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_mrfc522.xhtml#a919ba03da1573ff5cebabd976a55aea1">   20</a></span>    std::optional&lt;card::uid_t&gt; <a class="code hl_variable" href="classfabomatic_1_1_mock_mrfc522.xhtml#a919ba03da1573ff5cebabd976a55aea1">uid</a>{std::nullopt};</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_mrfc522.xhtml#ab3ec1d48b6b3465183bcbd4565ebe712">   21</a></span>    std::optional&lt;std::chrono::time_point&lt;std::chrono::system_clock&gt;&gt; <a class="code hl_variable" href="classfabomatic_1_1_mock_mrfc522.xhtml#ab3ec1d48b6b3465183bcbd4565ebe712">stop_uid_simulate_time</a>{std::nullopt};</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>    std::optional&lt;card::uid_t&gt; <a class="code hl_function" href="classfabomatic_1_1_mock_mrfc522.xhtml#a920d2c5f7680ea063bbb2f103696259a">getSimulatedUid</a>() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  <span class="keyword">public</span>:</div>
<div class="foldopen" id="foldopen00025" data-start="{" data-end="};">
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno"><a class="line" href="structfabomatic_1_1_mock_mrfc522_1_1_uid_driver.xhtml">   25</a></span>    <span class="keyword">struct </span><a class="code hl_struct" href="structfabomatic_1_1_mock_mrfc522_1_1_uid_driver.xhtml">UidDriver</a></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>    {</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno"><a class="line" href="structfabomatic_1_1_mock_mrfc522_1_1_uid_driver.xhtml#a674f7508a59959bb771f166cfefd1f9f">   27</a></span>      <span class="keywordtype">byte</span> <a class="code hl_variable" href="structfabomatic_1_1_mock_mrfc522_1_1_uid_driver.xhtml#a674f7508a59959bb771f166cfefd1f9f">size</a>{0}; <span class="comment">// Number of bytes in the UID. 4, 7 or 10.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno"><a class="line" href="structfabomatic_1_1_mock_mrfc522_1_1_uid_driver.xhtml#a5f21ae373a5539ff319bada70feb694a">   28</a></span>      std::array&lt;byte, 10&gt; <a class="code hl_variable" href="structfabomatic_1_1_mock_mrfc522_1_1_uid_driver.xhtml#a5f21ae373a5539ff319bada70feb694a">uidByte</a>{0};</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno"><a class="line" href="structfabomatic_1_1_mock_mrfc522_1_1_uid_driver.xhtml#a30f7db95d85824a411f6a9275e815f7b">   29</a></span>      <span class="keywordtype">byte</span> <a class="code hl_variable" href="structfabomatic_1_1_mock_mrfc522_1_1_uid_driver.xhtml#a30f7db95d85824a411f6a9275e815f7b">sak</a>{0}; <span class="comment">// The SAK (Select acknowledge) byte returned from the PICC after successful selection.</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>    };</div>
</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_mrfc522.xhtml#a18613a2d39ea0cc9fc3b9ce74b24cb5a">   32</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_mock_mrfc522.xhtml#a18613a2d39ea0cc9fc3b9ce74b24cb5a">MockMrfc522</a>(){};</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_mock_mrfc522.xhtml#ac2928fd9f4f0bd4d9f0b715d59122308">PICC_IsNewCardPresent</a>() -&gt; bool;</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_mock_mrfc522.xhtml#a788900abe7e2b23aaf1471fc36ea2b5c">PICC_ReadCardSerial</a>() -&gt; bool;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>    <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_mock_mrfc522.xhtml#a475646b621a7ac3dfaa21e0b3cee456a">reset</a>() -&gt; void;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>    <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_mock_mrfc522.xhtml#ac619cfce167b1c4eedf6761770c6b6fd">PCD_Init</a>() -&gt; bool;</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>    <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_mock_mrfc522.xhtml#a3984f22a62b0e5b294eadc7649ce587e">PICC_WakeupA</a>(<span class="keywordtype">byte</span> *bufferATQA, <span class="keywordtype">byte</span> &amp;bufferSize) -&gt; bool;</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>    <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_mock_mrfc522.xhtml#ae311fea38ecaabac33b39acfb85b6bb5">PCD_PerformSelfTest</a>() -&gt; bool;</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>    <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_mock_mrfc522.xhtml#a4b795aa73514e7810386f308c08f1411">getDriverUid</a>() const -&gt; <a class="code hl_class" href="classfabomatic_1_1_mock_mrfc522.xhtml">MockMrfc522</a>::UidDriver;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>    auto <a class="code hl_function" href="classfabomatic_1_1_mock_mrfc522.xhtml#ad97cb55d9358954fd872f818d54c126c">PCD_SetAntennaGain</a>(MFRC522Constants::PCD_RxGain gain) -&gt; <span class="keywordtype">void</span>;</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    auto <a class="code hl_function" href="classfabomatic_1_1_mock_mrfc522.xhtml#ae01dcbbe40b54dcdd530d9a754ee9a5c">PCD_DumpVersionToSerial</a>() -&gt; <span class="keywordtype">void</span>;</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    auto <a class="code hl_function" href="classfabomatic_1_1_mock_mrfc522.xhtml#aa5243105821375118132fe7a3e5d7ea3">setUid</a>(const std::optional&lt;card::uid_t&gt; &amp;<a class="code hl_variable" href="classfabomatic_1_1_mock_mrfc522.xhtml#a919ba03da1573ff5cebabd976a55aea1">uid</a>,</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>                const std::optional&lt;std::chrono::<a class="code hl_typedef" href="namespacefabomatic.xhtml#ae782aea667d4a7a1a9f42217a5b172ed">milliseconds</a>&gt; &amp;max_delay) -&gt; <span class="keywordtype">void</span>;</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>    auto <a class="code hl_function" href="classfabomatic_1_1_mock_mrfc522.xhtml#a4c9904c7fe8ef1d9ab3a0b32a60c0c17">resetUid</a>() -&gt; <span class="keywordtype">void</span>;</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_mock_mrfc522.xhtml#ab63703def0afb2b54e76a3e337c38c0c">   48</a></span>    static constexpr auto <a class="code hl_variable" href="classfabomatic_1_1_mock_mrfc522.xhtml#ab63703def0afb2b54e76a3e337c38c0c">RxGainMax</a> = MFRC522::PCD_RxGain::RxGain_max;</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  };</div>
</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>} <span class="comment">// namespace fabomatic</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="preprocessor">#endif </span><span class="comment">// MOCK_MOCKMRFC522_HPP_</span></div>
<div class="ttc" id="a_fab_user_8hpp_xhtml"><div class="ttname"><a href="_fab_user_8hpp.xhtml">FabUser.hpp</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_mrfc522_xhtml"><div class="ttname"><a href="classfabomatic_1_1_mock_mrfc522.xhtml">fabomatic::MockMrfc522</a></div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8hpp_source.xhtml#l00017">MockMrfc522.hpp:18</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_mrfc522_xhtml_a18613a2d39ea0cc9fc3b9ce74b24cb5a"><div class="ttname"><a href="classfabomatic_1_1_mock_mrfc522.xhtml#a18613a2d39ea0cc9fc3b9ce74b24cb5a">fabomatic::MockMrfc522::MockMrfc522</a></div><div class="ttdeci">constexpr MockMrfc522()</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8hpp_source.xhtml#l00032">MockMrfc522.hpp:32</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_mrfc522_xhtml_a3984f22a62b0e5b294eadc7649ce587e"><div class="ttname"><a href="classfabomatic_1_1_mock_mrfc522.xhtml#a3984f22a62b0e5b294eadc7649ce587e">fabomatic::MockMrfc522::PICC_WakeupA</a></div><div class="ttdeci">auto PICC_WakeupA(byte *bufferATQA, byte &amp;bufferSize) -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8cpp_source.xhtml#l00028">MockMrfc522.cpp:28</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_mrfc522_xhtml_a475646b621a7ac3dfaa21e0b3cee456a"><div class="ttname"><a href="classfabomatic_1_1_mock_mrfc522.xhtml#a475646b621a7ac3dfaa21e0b3cee456a">fabomatic::MockMrfc522::reset</a></div><div class="ttdeci">auto reset() -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8cpp_source.xhtml#l00024">MockMrfc522.cpp:24</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_mrfc522_xhtml_a4b795aa73514e7810386f308c08f1411"><div class="ttname"><a href="classfabomatic_1_1_mock_mrfc522.xhtml#a4b795aa73514e7810386f308c08f1411">fabomatic::MockMrfc522::getDriverUid</a></div><div class="ttdeci">auto getDriverUid() const -&gt; MockMrfc522::UidDriver</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8cpp_source.xhtml#l00007">MockMrfc522.cpp:7</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_mrfc522_xhtml_a4c9904c7fe8ef1d9ab3a0b32a60c0c17"><div class="ttname"><a href="classfabomatic_1_1_mock_mrfc522.xhtml#a4c9904c7fe8ef1d9ab3a0b32a60c0c17">fabomatic::MockMrfc522::resetUid</a></div><div class="ttdeci">auto resetUid() -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8cpp_source.xhtml#l00056">MockMrfc522.cpp:56</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_mrfc522_xhtml_a788900abe7e2b23aaf1471fc36ea2b5c"><div class="ttname"><a href="classfabomatic_1_1_mock_mrfc522.xhtml#a788900abe7e2b23aaf1471fc36ea2b5c">fabomatic::MockMrfc522::PICC_ReadCardSerial</a></div><div class="ttdeci">auto PICC_ReadCardSerial() -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8cpp_source.xhtml#l00022">MockMrfc522.cpp:22</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_mrfc522_xhtml_a919ba03da1573ff5cebabd976a55aea1"><div class="ttname"><a href="classfabomatic_1_1_mock_mrfc522.xhtml#a919ba03da1573ff5cebabd976a55aea1">fabomatic::MockMrfc522::uid</a></div><div class="ttdeci">std::optional&lt; card::uid_t &gt; uid</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8hpp_source.xhtml#l00020">MockMrfc522.hpp:20</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_mrfc522_xhtml_a920d2c5f7680ea063bbb2f103696259a"><div class="ttname"><a href="classfabomatic_1_1_mock_mrfc522.xhtml#a920d2c5f7680ea063bbb2f103696259a">fabomatic::MockMrfc522::getSimulatedUid</a></div><div class="ttdeci">std::optional&lt; card::uid_t &gt; getSimulatedUid() const</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8cpp_source.xhtml#l00062">MockMrfc522.cpp:62</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_mrfc522_xhtml_aa5243105821375118132fe7a3e5d7ea3"><div class="ttname"><a href="classfabomatic_1_1_mock_mrfc522.xhtml#aa5243105821375118132fe7a3e5d7ea3">fabomatic::MockMrfc522::setUid</a></div><div class="ttdeci">auto setUid(const std::optional&lt; card::uid_t &gt; &amp;uid, const std::optional&lt; std::chrono::milliseconds &gt; &amp;max_delay) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8cpp_source.xhtml#l00043">MockMrfc522.cpp:43</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_mrfc522_xhtml_ab3ec1d48b6b3465183bcbd4565ebe712"><div class="ttname"><a href="classfabomatic_1_1_mock_mrfc522.xhtml#ab3ec1d48b6b3465183bcbd4565ebe712">fabomatic::MockMrfc522::stop_uid_simulate_time</a></div><div class="ttdeci">std::optional&lt; std::chrono::time_point&lt; std::chrono::system_clock &gt; &gt; stop_uid_simulate_time</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8hpp_source.xhtml#l00021">MockMrfc522.hpp:21</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_mrfc522_xhtml_ab63703def0afb2b54e76a3e337c38c0c"><div class="ttname"><a href="classfabomatic_1_1_mock_mrfc522.xhtml#ab63703def0afb2b54e76a3e337c38c0c">fabomatic::MockMrfc522::RxGainMax</a></div><div class="ttdeci">static constexpr auto RxGainMax</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8hpp_source.xhtml#l00048">MockMrfc522.hpp:48</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_mrfc522_xhtml_ac2928fd9f4f0bd4d9f0b715d59122308"><div class="ttname"><a href="classfabomatic_1_1_mock_mrfc522.xhtml#ac2928fd9f4f0bd4d9f0b715d59122308">fabomatic::MockMrfc522::PICC_IsNewCardPresent</a></div><div class="ttdeci">auto PICC_IsNewCardPresent() -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8cpp_source.xhtml#l00020">MockMrfc522.cpp:20</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_mrfc522_xhtml_ac619cfce167b1c4eedf6761770c6b6fd"><div class="ttname"><a href="classfabomatic_1_1_mock_mrfc522.xhtml#ac619cfce167b1c4eedf6761770c6b6fd">fabomatic::MockMrfc522::PCD_Init</a></div><div class="ttdeci">auto PCD_Init() -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8cpp_source.xhtml#l00026">MockMrfc522.cpp:26</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_mrfc522_xhtml_ad97cb55d9358954fd872f818d54c126c"><div class="ttname"><a href="classfabomatic_1_1_mock_mrfc522.xhtml#ad97cb55d9358954fd872f818d54c126c">fabomatic::MockMrfc522::PCD_SetAntennaGain</a></div><div class="ttdeci">auto PCD_SetAntennaGain(MFRC522Constants::PCD_RxGain gain) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8cpp_source.xhtml#l00039">MockMrfc522.cpp:39</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_mrfc522_xhtml_ae01dcbbe40b54dcdd530d9a754ee9a5c"><div class="ttname"><a href="classfabomatic_1_1_mock_mrfc522.xhtml#ae01dcbbe40b54dcdd530d9a754ee9a5c">fabomatic::MockMrfc522::PCD_DumpVersionToSerial</a></div><div class="ttdeci">auto PCD_DumpVersionToSerial() -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8cpp_source.xhtml#l00041">MockMrfc522.cpp:41</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_mock_mrfc522_xhtml_ae311fea38ecaabac33b39acfb85b6bb5"><div class="ttname"><a href="classfabomatic_1_1_mock_mrfc522.xhtml#ae311fea38ecaabac33b39acfb85b6bb5">fabomatic::MockMrfc522::PCD_PerformSelfTest</a></div><div class="ttdeci">auto PCD_PerformSelfTest() -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8cpp_source.xhtml#l00037">MockMrfc522.cpp:37</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml"><div class="ttname"><a href="namespacefabomatic.xhtml">fabomatic</a></div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8cpp_source.xhtml#l00010">AuthProvider.cpp:11</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_ae782aea667d4a7a1a9f42217a5b172ed"><div class="ttname"><a href="namespacefabomatic.xhtml#ae782aea667d4a7a1a9f42217a5b172ed">fabomatic::milliseconds</a></div><div class="ttdeci">std::chrono::milliseconds milliseconds</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00027">BoardLogic.cpp:27</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_mock_mrfc522_1_1_uid_driver_xhtml"><div class="ttname"><a href="structfabomatic_1_1_mock_mrfc522_1_1_uid_driver.xhtml">fabomatic::MockMrfc522::UidDriver</a></div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8hpp_source.xhtml#l00025">MockMrfc522.hpp:26</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_mock_mrfc522_1_1_uid_driver_xhtml_a30f7db95d85824a411f6a9275e815f7b"><div class="ttname"><a href="structfabomatic_1_1_mock_mrfc522_1_1_uid_driver.xhtml#a30f7db95d85824a411f6a9275e815f7b">fabomatic::MockMrfc522::UidDriver::sak</a></div><div class="ttdeci">byte sak</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8hpp_source.xhtml#l00029">MockMrfc522.hpp:29</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_mock_mrfc522_1_1_uid_driver_xhtml_a5f21ae373a5539ff319bada70feb694a"><div class="ttname"><a href="structfabomatic_1_1_mock_mrfc522_1_1_uid_driver.xhtml#a5f21ae373a5539ff319bada70feb694a">fabomatic::MockMrfc522::UidDriver::uidByte</a></div><div class="ttdeci">std::array&lt; byte, 10 &gt; uidByte</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8hpp_source.xhtml#l00028">MockMrfc522.hpp:28</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_mock_mrfc522_1_1_uid_driver_xhtml_a674f7508a59959bb771f166cfefd1f9f"><div class="ttname"><a href="structfabomatic_1_1_mock_mrfc522_1_1_uid_driver.xhtml#a674f7508a59959bb771f166cfefd1f9f">fabomatic::MockMrfc522::UidDriver::size</a></div><div class="ttdeci">byte size</div><div class="ttdef"><b>Definition</b> <a href="_mock_mrfc522_8hpp_source.xhtml#l00027">MockMrfc522.hpp:27</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jun 30 2024 20:15:48 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
