<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: fabomatic::Tasks::Task Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacefabomatic.xhtml">fabomatic</a></li><li class="navelem"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml">Tasks</a></li><li class="navelem"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Task</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classfabomatic_1_1_tasks_1_1_task-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">fabomatic::Tasks::Task Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>A task class which represents a function to be called at requested intervals.  
 <a href="classfabomatic_1_1_tasks_1_1_task.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_tasks_8hpp_source.xhtml">Tasks.hpp</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for fabomatic::Tasks::Task:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_tasks_1_1_task__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1963aeb170d8cbdd22e8ac5d1f906c91" id="r_a1963aeb170d8cbdd22e8ac5d1f906c91"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a1963aeb170d8cbdd22e8ac5d1f906c91">Task</a> ()=delete</td></tr>
<tr class="separator:a1963aeb170d8cbdd22e8ac5d1f906c91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affca69a8fdcc7eb5cc656b4e4fd80375" id="r_affca69a8fdcc7eb5cc656b4e4fd80375"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#affca69a8fdcc7eb5cc656b4e4fd80375">Task</a> (const std::string &amp;<a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a819de0c8e46486621657e107b9101ef8">id</a>, <a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a> <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">period</a>, std::function&lt; void()&gt; <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#aca74ea0431e61fc3cf414f0425332ec0">callback</a>, <a class="el" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml">Scheduler</a> &amp;scheduler, bool <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a195917ecd47b52f9e924a220cbd812e5">active</a>=true, <a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a> <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afcd445681f5c92b55b601aff90f41f05">delay</a>=0ms)</td></tr>
<tr class="memdesc:affca69a8fdcc7eb5cc656b4e4fd80375"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new task.  <br /></td></tr>
<tr class="separator:affca69a8fdcc7eb5cc656b4e4fd80375"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad37928f894e6f10f14b9dce36bd4145a" id="r_ad37928f894e6f10f14b9dce36bd4145a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#ad37928f894e6f10f14b9dce36bd4145a">~Task</a> ()=default</td></tr>
<tr class="separator:ad37928f894e6f10f14b9dce36bd4145a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af268dce87198d94b82023aae72786f99" id="r_af268dce87198d94b82023aae72786f99"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#af268dce87198d94b82023aae72786f99">Task</a> (const <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Task</a> &amp;other)=default</td></tr>
<tr class="separator:af268dce87198d94b82023aae72786f99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8217b3c287bfc402517cd7f99bed55cc" id="r_a8217b3c287bfc402517cd7f99bed55cc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8217b3c287bfc402517cd7f99bed55cc">Task</a> (<a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Task</a> &amp;&amp;other)=default</td></tr>
<tr class="separator:a8217b3c287bfc402517cd7f99bed55cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed300383e4022094fca1d3455b027d0e" id="r_aed300383e4022094fca1d3455b027d0e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Task</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#aed300383e4022094fca1d3455b027d0e">operator=</a> (const <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Task</a> &amp;other)=default</td></tr>
<tr class="separator:aed300383e4022094fca1d3455b027d0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f4c334ae2ff6b06317adcf465b33371" id="r_a3f4c334ae2ff6b06317adcf465b33371"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Task</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a3f4c334ae2ff6b06317adcf465b33371">operator=</a> (<a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Task</a> &amp;&amp;other)=default</td></tr>
<tr class="separator:a3f4c334ae2ff6b06317adcf465b33371"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac63191a702c898cda8af1ce8316bfb94" id="r_ac63191a702c898cda8af1ce8316bfb94"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#ac63191a702c898cda8af1ce8316bfb94">run</a> () -&gt; void</td></tr>
<tr class="memdesc:ac63191a702c898cda8af1ce8316bfb94"><td class="mdescLeft">&#160;</td><td class="mdescRight">Execute the task if active.  <br /></td></tr>
<tr class="separator:ac63191a702c898cda8af1ce8316bfb94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10175ec4fc2f54f444850b01426c95f7" id="r_a10175ec4fc2f54f444850b01426c95f7"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a10175ec4fc2f54f444850b01426c95f7">disable</a> () -&gt; void</td></tr>
<tr class="memdesc:a10175ec4fc2f54f444850b01426c95f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent the task from running again.  <br /></td></tr>
<tr class="separator:a10175ec4fc2f54f444850b01426c95f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3f970eab63a4ba06e92e49b23eaab45" id="r_aa3f970eab63a4ba06e92e49b23eaab45"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#aa3f970eab63a4ba06e92e49b23eaab45">enable</a> () -&gt; void</td></tr>
<tr class="memdesc:aa3f970eab63a4ba06e92e49b23eaab45"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows the task to run again.  <br /></td></tr>
<tr class="separator:aa3f970eab63a4ba06e92e49b23eaab45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1488d6b3730de3f77a52ce6bee56fdd8" id="r_a1488d6b3730de3f77a52ce6bee56fdd8"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a1488d6b3730de3f77a52ce6bee56fdd8">updateSchedule</a> () -&gt; void</td></tr>
<tr class="memdesc:a1488d6b3730de3f77a52ce6bee56fdd8"><td class="mdescLeft">&#160;</td><td class="mdescRight">recompute the next run time (now + delay) and allows the task to run again  <br /></td></tr>
<tr class="separator:a1488d6b3730de3f77a52ce6bee56fdd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a548c0b4cdf3458bd64031fbbd1637927" id="r_a548c0b4cdf3458bd64031fbbd1637927"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a548c0b4cdf3458bd64031fbbd1637927">setPeriod</a> (<a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a> new_period) -&gt; void</td></tr>
<tr class="memdesc:a548c0b4cdf3458bd64031fbbd1637927"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the task period.  <br /></td></tr>
<tr class="separator:a548c0b4cdf3458bd64031fbbd1637927"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5521c3886fbc2cc540fb3809f03945a2" id="r_a5521c3886fbc2cc540fb3809f03945a2"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a5521c3886fbc2cc540fb3809f03945a2">setDelay</a> (<a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a> new_delay) -&gt; void</td></tr>
<tr class="memdesc:a5521c3886fbc2cc540fb3809f03945a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the task initial delay.  <br /></td></tr>
<tr class="separator:a5521c3886fbc2cc540fb3809f03945a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef6894044873a74c1bda3308531f1b95" id="r_aef6894044873a74c1bda3308531f1b95"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#aef6894044873a74c1bda3308531f1b95">setCallback</a> (std::function&lt; void()&gt; new_callback) -&gt; void</td></tr>
<tr class="memdesc:aef6894044873a74c1bda3308531f1b95"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the callback function.  <br /></td></tr>
<tr class="separator:aef6894044873a74c1bda3308531f1b95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f2df2426609b7be592ab3485d9d26ed" id="r_a8f2df2426609b7be592ab3485d9d26ed"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8f2df2426609b7be592ab3485d9d26ed">isActive</a> () const -&gt; bool</td></tr>
<tr class="memdesc:a8f2df2426609b7be592ab3485d9d26ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Status of the task.  <br /></td></tr>
<tr class="separator:a8f2df2426609b7be592ab3485d9d26ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad535eb5b2caf1ef2569b17ccc6bd96f2" id="r_ad535eb5b2caf1ef2569b17ccc6bd96f2"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#ad535eb5b2caf1ef2569b17ccc6bd96f2">getPeriod</a> () const -&gt; const <a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a></td></tr>
<tr class="memdesc:ad535eb5b2caf1ef2569b17ccc6bd96f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Current period of the task.  <br /></td></tr>
<tr class="separator:ad535eb5b2caf1ef2569b17ccc6bd96f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad00607f545e8f3440926c7dd833a9b27" id="r_ad00607f545e8f3440926c7dd833a9b27"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#ad00607f545e8f3440926c7dd833a9b27">getCallback</a> () const -&gt; std::function&lt; void()&gt;</td></tr>
<tr class="memdesc:ad00607f545e8f3440926c7dd833a9b27"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to be called when task is run.  <br /></td></tr>
<tr class="separator:ad00607f545e8f3440926c7dd833a9b27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99da0e6d8fe7677e0faaab98995353ba" id="r_a99da0e6d8fe7677e0faaab98995353ba"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a99da0e6d8fe7677e0faaab98995353ba">getId</a> () const -&gt; const std::string</td></tr>
<tr class="memdesc:a99da0e6d8fe7677e0faaab98995353ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml" title="A task class which represents a function to be called at requested intervals.">Task</a> Identifier.  <br /></td></tr>
<tr class="separator:a99da0e6d8fe7677e0faaab98995353ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80954c03ce29f1c2a3c938593c43c632" id="r_a80954c03ce29f1c2a3c938593c43c632"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a80954c03ce29f1c2a3c938593c43c632">getDelay</a> () const -&gt; const <a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a></td></tr>
<tr class="memdesc:a80954c03ce29f1c2a3c938593c43c632"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the initial delay before the task is run at given period.  <br /></td></tr>
<tr class="separator:a80954c03ce29f1c2a3c938593c43c632"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9c1491f7c542d6c096e5e32b096202b" id="r_af9c1491f7c542d6c096e5e32b096202b"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#af9c1491f7c542d6c096e5e32b096202b">getAvgTardiness</a> () const -&gt; const <a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a></td></tr>
<tr class="memdesc:af9c1491f7c542d6c096e5e32b096202b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the average tardiness, i.e. the average period between scheduled start and actual start of execution.  <br /></td></tr>
<tr class="separator:af9c1491f7c542d6c096e5e32b096202b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b247d96f354eb1cfaa02c9cad06add2" id="r_a2b247d96f354eb1cfaa02c9cad06add2"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a2b247d96f354eb1cfaa02c9cad06add2">getRunCounter</a> () const -&gt; unsigned long</td></tr>
<tr class="memdesc:a2b247d96f354eb1cfaa02c9cad06add2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of times the task has been run.  <br /></td></tr>
<tr class="separator:a2b247d96f354eb1cfaa02c9cad06add2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a926ed81ebde9e7b9405fde1843c0c343" id="r_a926ed81ebde9e7b9405fde1843c0c343"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a926ed81ebde9e7b9405fde1843c0c343">getTotalRuntime</a> () const -&gt; const <a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a></td></tr>
<tr class="memdesc:a926ed81ebde9e7b9405fde1843c0c343"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the total execution time of the task. Useful to spot slowest tasks.  <br /></td></tr>
<tr class="separator:a926ed81ebde9e7b9405fde1843c0c343"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95403f949e31acae62e0c5d693b41a16" id="r_a95403f949e31acae62e0c5d693b41a16"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a95403f949e31acae62e0c5d693b41a16">getNextRun</a> () const -&gt; const <a class="el" href="namespacefabomatic_1_1_tasks.xhtml#a1d9dcfdb65c00f111ebd0466763955b1">Tasks::time_point</a> &amp;</td></tr>
<tr class="memdesc:a95403f949e31acae62e0c5d693b41a16"><td class="mdescLeft">&#160;</td><td class="mdescRight">When shall the task be run again.  <br /></td></tr>
<tr class="separator:a95403f949e31acae62e0c5d693b41a16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a1a85dc5747fdc56c3f7470eeaebff0" id="r_a9a1a85dc5747fdc56c3f7470eeaebff0"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a9a1a85dc5747fdc56c3f7470eeaebff0">toString</a> () const -&gt; const std::string</td></tr>
<tr class="separator:a9a1a85dc5747fdc56c3f7470eeaebff0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a195917ecd47b52f9e924a220cbd812e5" id="r_a195917ecd47b52f9e924a220cbd812e5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a195917ecd47b52f9e924a220cbd812e5">active</a></td></tr>
<tr class="separator:a195917ecd47b52f9e924a220cbd812e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a819de0c8e46486621657e107b9101ef8" id="r_a819de0c8e46486621657e107b9101ef8"><td class="memItemLeft" align="right" valign="top">const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a819de0c8e46486621657e107b9101ef8">id</a></td></tr>
<tr class="separator:a819de0c8e46486621657e107b9101ef8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ed7793f31565370d833323b37f43903" id="r_a8ed7793f31565370d833323b37f43903"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">period</a></td></tr>
<tr class="separator:a8ed7793f31565370d833323b37f43903"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcd445681f5c92b55b601aff90f41f05" id="r_afcd445681f5c92b55b601aff90f41f05"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afcd445681f5c92b55b601aff90f41f05">delay</a></td></tr>
<tr class="separator:afcd445681f5c92b55b601aff90f41f05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc523cdad801563f9a510bf2613bcbed" id="r_afc523cdad801563f9a510bf2613bcbed"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#a1d9dcfdb65c00f111ebd0466763955b1">Tasks::time_point</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afc523cdad801563f9a510bf2613bcbed">last_run</a></td></tr>
<tr class="separator:afc523cdad801563f9a510bf2613bcbed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77f48e53f0a41b2381e9c513578be6f1" id="r_a77f48e53f0a41b2381e9c513578be6f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#a1d9dcfdb65c00f111ebd0466763955b1">Tasks::time_point</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a77f48e53f0a41b2381e9c513578be6f1">next_run</a></td></tr>
<tr class="separator:a77f48e53f0a41b2381e9c513578be6f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46a71ed2fe769cbf21bd093c3452a5a8" id="r_a46a71ed2fe769cbf21bd093c3452a5a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a46a71ed2fe769cbf21bd093c3452a5a8">average_tardiness</a></td></tr>
<tr class="separator:a46a71ed2fe769cbf21bd093c3452a5a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a033906c8fc5c8d929c4336d4ed988207" id="r_a033906c8fc5c8d929c4336d4ed988207"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a033906c8fc5c8d929c4336d4ed988207">total_runtime</a></td></tr>
<tr class="separator:a033906c8fc5c8d929c4336d4ed988207"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca74ea0431e61fc3cf414f0425332ec0" id="r_aca74ea0431e61fc3cf414f0425332ec0"><td class="memItemLeft" align="right" valign="top">std::function&lt; void()&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#aca74ea0431e61fc3cf414f0425332ec0">callback</a></td></tr>
<tr class="separator:aca74ea0431e61fc3cf414f0425332ec0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc90a9a7701e126e74796646be5f21bf" id="r_adc90a9a7701e126e74796646be5f21bf"><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml#adc90a9a7701e126e74796646be5f21bf">run_counter</a></td></tr>
<tr class="separator:adc90a9a7701e126e74796646be5f21bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A task class which represents a function to be called at requested intervals. </p>

<p class="definition">Definition at line <a class="el" href="_tasks_8hpp_source.xhtml#l00025">25</a> of file <a class="el" href="_tasks_8hpp_source.xhtml">Tasks.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a1963aeb170d8cbdd22e8ac5d1f906c91" name="a1963aeb170d8cbdd22e8ac5d1f906c91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1963aeb170d8cbdd22e8ac5d1f906c91">&#9670;&#160;</a></span>Task() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">fabomatic::Tasks::Task::Task </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="affca69a8fdcc7eb5cc656b4e4fd80375" name="affca69a8fdcc7eb5cc656b4e4fd80375"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affca69a8fdcc7eb5cc656b4e4fd80375">&#9670;&#160;</a></span>Task() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">fabomatic::Tasks::Task::Task </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a>&#160;</td>
          <td class="paramname"><em>period</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::function&lt; void()&gt;&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml">Scheduler</a> &amp;&#160;</td>
          <td class="paramname"><em>scheduler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>active</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a>&#160;</td>
          <td class="paramname"><em>delay</em> = <code>0ms</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a new task. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>task id, used for logging </td></tr>
    <tr><td class="paramname">period</td><td>period of the calls </td></tr>
    <tr><td class="paramname">callback</td><td>function to callback </td></tr>
    <tr><td class="paramname">scheduler</td><td>scheduler object to be added into </td></tr>
    <tr><td class="paramname">active</td><td>if false, scheduler will ignore the task until start()/restart() are called on the task </td></tr>
    <tr><td class="paramname">delay</td><td>initial delay before considering the task for execution</td></tr>
    <tr><td class="paramname">id</td><td>task id </td></tr>
    <tr><td class="paramname">period</td><td>task period (if 0, will be run only once) </td></tr>
    <tr><td class="paramname">callback</td><td>callback function to execute </td></tr>
    <tr><td class="paramname">scheduler</td><td>reference to the scheduler </td></tr>
    <tr><td class="paramname">active</td><td>if true, the task will be executed </td></tr>
    <tr><td class="paramname">delay</td><td>initial delay before starting the task </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00122">122</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  124</span>                                                                    : <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a195917ecd47b52f9e924a220cbd812e5">active</a>{<a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a195917ecd47b52f9e924a220cbd812e5">active</a>}, <span class="keywordtype">id</span>{<span class="keywordtype">id</span>},</div>
<div class="line"><span class="lineno">  125</span>                                                                      <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">period</a>{<a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">period</a>}, <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afcd445681f5c92b55b601aff90f41f05">delay</a>{<a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afcd445681f5c92b55b601aff90f41f05">delay</a>},</div>
<div class="line"><span class="lineno">  126</span>                                                                      <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a77f48e53f0a41b2381e9c513578be6f1">next_run</a>{<a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afc523cdad801563f9a510bf2613bcbed">last_run</a>},</div>
<div class="line"><span class="lineno">  127</span>                                                                      <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a46a71ed2fe769cbf21bd093c3452a5a8">average_tardiness</a>{0ms}, <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a033906c8fc5c8d929c4336d4ed988207">total_runtime</a>{0ms},</div>
<div class="line"><span class="lineno">  128</span>                                                                      <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#aca74ea0431e61fc3cf414f0425332ec0">callback</a>{<a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#aca74ea0431e61fc3cf414f0425332ec0">callback</a>}, <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#adc90a9a7701e126e74796646be5f21bf">run_counter</a>{0}</div>
<div class="line"><span class="lineno">  129</span>  {</div>
<div class="line"><span class="lineno">  130</span>    <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afc523cdad801563f9a510bf2613bcbed">last_run</a> = <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#adc67d1313c6695d813feb935eafdaf60">arduinoNow</a>() + <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">period</a>;</div>
<div class="line"><span class="lineno">  131</span>    <a class="code hl_variable" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">scheduler</a>.<a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a8d19a5ae935d924c4c145ed07721e5db">addTask</a>(<span class="keyword">this</span>);</div>
<div class="line"><span class="lineno">  132</span>    <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1debug.xhtml#a8308799abba9b76406a8653548369967">conf::debug::ENABLE_TASK_LOGS</a>)</div>
<div class="line"><span class="lineno">  133</span>    {</div>
<div class="line"><span class="lineno">  134</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Constructor(%s)\r\n&quot;</span>, <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a9a1a85dc5747fdc56c3f7470eeaebff0">toString</a>().c_str());</div>
<div class="line"><span class="lineno">  135</span>    }</div>
<div class="line"><span class="lineno">  136</span>  }</div>
<div class="ttc" id="a_logging_8hpp_xhtml_a4ef5b5f197804a60836ab1e8907d8301"><div class="ttname"><a href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a></div><div class="ttdeci">static const char *const TAG</div><div class="ttdef"><b>Definition</b> <a href="_logging_8hpp_source.xhtml#l00009">Logging.hpp:9</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_scheduler_xhtml_a8d19a5ae935d924c4c145ed07721e5db"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#a8d19a5ae935d924c4c145ed07721e5db">fabomatic::Tasks::Scheduler::addTask</a></div><div class="ttdeci">auto addTask(Task *task) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00018">Tasks.cpp:18</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a033906c8fc5c8d929c4336d4ed988207"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a033906c8fc5c8d929c4336d4ed988207">fabomatic::Tasks::Task::total_runtime</a></div><div class="ttdeci">milliseconds total_runtime</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00110">Tasks.hpp:110</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a195917ecd47b52f9e924a220cbd812e5"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a195917ecd47b52f9e924a220cbd812e5">fabomatic::Tasks::Task::active</a></div><div class="ttdeci">bool active</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00103">Tasks.hpp:103</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a46a71ed2fe769cbf21bd093c3452a5a8"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a46a71ed2fe769cbf21bd093c3452a5a8">fabomatic::Tasks::Task::average_tardiness</a></div><div class="ttdeci">milliseconds average_tardiness</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00109">Tasks.hpp:109</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a77f48e53f0a41b2381e9c513578be6f1"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a77f48e53f0a41b2381e9c513578be6f1">fabomatic::Tasks::Task::next_run</a></div><div class="ttdeci">Tasks::time_point next_run</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00108">Tasks.hpp:108</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a8ed7793f31565370d833323b37f43903"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">fabomatic::Tasks::Task::period</a></div><div class="ttdeci">milliseconds period</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00105">Tasks.hpp:105</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a9a1a85dc5747fdc56c3f7470eeaebff0"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a9a1a85dc5747fdc56c3f7470eeaebff0">fabomatic::Tasks::Task::toString</a></div><div class="ttdeci">auto toString() const -&gt; const std::string</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00138">Tasks.cpp:138</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_aca74ea0431e61fc3cf414f0425332ec0"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#aca74ea0431e61fc3cf414f0425332ec0">fabomatic::Tasks::Task::callback</a></div><div class="ttdeci">std::function&lt; void()&gt; callback</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00111">Tasks.hpp:111</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_adc90a9a7701e126e74796646be5f21bf"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#adc90a9a7701e126e74796646be5f21bf">fabomatic::Tasks::Task::run_counter</a></div><div class="ttdeci">unsigned long run_counter</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00112">Tasks.hpp:112</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_afc523cdad801563f9a510bf2613bcbed"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#afc523cdad801563f9a510bf2613bcbed">fabomatic::Tasks::Task::last_run</a></div><div class="ttdeci">Tasks::time_point last_run</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00107">Tasks.hpp:107</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_afcd445681f5c92b55b601aff90f41f05"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#afcd445681f5c92b55b601aff90f41f05">fabomatic::Tasks::Task::delay</a></div><div class="ttdeci">milliseconds delay</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00106">Tasks.hpp:106</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_board_xhtml_af9268221ea7bfdcc46c3862fa7996d3d"><div class="ttname"><a href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">fabomatic::Board::scheduler</a></div><div class="ttdeci">Scheduler scheduler</div><div class="ttdef"><b>Definition</b> <a href="globals_8hpp_source.xhtml#l00038">globals.hpp:38</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_tasks_xhtml_adc67d1313c6695d813feb935eafdaf60"><div class="ttname"><a href="namespacefabomatic_1_1_tasks.xhtml#adc67d1313c6695d813feb935eafdaf60">fabomatic::Tasks::arduinoNow</a></div><div class="ttdeci">auto arduinoNow() -&gt; const time_point</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00017">Tasks.hpp:17</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1debug_xhtml_a8308799abba9b76406a8653548369967"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1debug.xhtml#a8308799abba9b76406a8653548369967">fabomatic::conf::debug::ENABLE_TASK_LOGS</a></div><div class="ttdeci">static constexpr bool ENABLE_TASK_LOGS</div><div class="ttdoc">True to add many logs regarding tasks scheduling and statistics.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00085">conf.hpp:85</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8cpp_source.xhtml#l00018">fabomatic::Tasks::Scheduler::addTask()</a>, <a class="el" href="_tasks_8hpp_source.xhtml#l00017">fabomatic::Tasks::arduinoNow()</a>, <a class="el" href="conf_8hpp_source.xhtml#l00085">fabomatic::conf::debug::ENABLE_TASK_LOGS</a>, <a class="el" href="_tasks_8hpp_source.xhtml#l00107">last_run</a>, <a class="el" href="_tasks_8hpp_source.xhtml#l00105">period</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00009">TAG</a>, and <a class="el" href="_tasks_8cpp_source.xhtml#l00138">toString()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_tasks_1_1_task_affca69a8fdcc7eb5cc656b4e4fd80375_cgraph.svg" width="614" height="167"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ad37928f894e6f10f14b9dce36bd4145a" name="ad37928f894e6f10f14b9dce36bd4145a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad37928f894e6f10f14b9dce36bd4145a">&#9670;&#160;</a></span>~Task()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">fabomatic::Tasks::Task::~Task </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af268dce87198d94b82023aae72786f99" name="af268dce87198d94b82023aae72786f99"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af268dce87198d94b82023aae72786f99">&#9670;&#160;</a></span>Task() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">fabomatic::Tasks::Task::Task </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Task</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8217b3c287bfc402517cd7f99bed55cc" name="a8217b3c287bfc402517cd7f99bed55cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8217b3c287bfc402517cd7f99bed55cc">&#9670;&#160;</a></span>Task() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">fabomatic::Tasks::Task::Task </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Task</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a10175ec4fc2f54f444850b01426c95f7" name="a10175ec4fc2f54f444850b01426c95f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10175ec4fc2f54f444850b01426c95f7">&#9670;&#160;</a></span>disable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Tasks::Task::disable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prevent the task from running again. </p>

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00181">181</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  182</span>  {</div>
<div class="line"><span class="lineno">  183</span>    <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a195917ecd47b52f9e924a220cbd812e5">active</a> = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  184</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="aa3f970eab63a4ba06e92e49b23eaab45" name="aa3f970eab63a4ba06e92e49b23eaab45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3f970eab63a4ba06e92e49b23eaab45">&#9670;&#160;</a></span>enable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Tasks::Task::enable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allows the task to run again. </p>

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00186">186</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  187</span>  {</div>
<div class="line"><span class="lineno">  188</span>    <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a195917ecd47b52f9e924a220cbd812e5">active</a> = <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  189</span>    <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a1488d6b3730de3f77a52ce6bee56fdd8">updateSchedule</a>();</div>
<div class="line"><span class="lineno">  190</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a1488d6b3730de3f77a52ce6bee56fdd8"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a1488d6b3730de3f77a52ce6bee56fdd8">fabomatic::Tasks::Task::updateSchedule</a></div><div class="ttdeci">auto updateSchedule() -&gt; void</div><div class="ttdoc">recompute the next run time (now + delay) and allows the task to run again</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00193">Tasks.cpp:193</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00433">setup()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_tasks_1_1_task_aa3f970eab63a4ba06e92e49b23eaab45_icgraph.svg" width="268" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="af9c1491f7c542d6c096e5e32b096202b" name="af9c1491f7c542d6c096e5e32b096202b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9c1491f7c542d6c096e5e32b096202b">&#9670;&#160;</a></span>getAvgTardiness()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Tasks::Task::getAvgTardiness </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; const <a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the average tardiness, i.e. the average period between scheduled start and actual start of execution. </p>

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00229">229</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  230</span>  {</div>
<div class="line"><span class="lineno">  231</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a46a71ed2fe769cbf21bd093c3452a5a8">average_tardiness</a> &gt; <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">period</a>)</div>
<div class="line"><span class="lineno">  232</span>    {</div>
<div class="line"><span class="lineno">  233</span>      <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a46a71ed2fe769cbf21bd093c3452a5a8">average_tardiness</a> - <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">period</a>;</div>
<div class="line"><span class="lineno">  234</span>    }</div>
<div class="line"><span class="lineno">  235</span>    <span class="keywordflow">return</span> 0ms;</div>
<div class="line"><span class="lineno">  236</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8hpp_source.xhtml#l00109">average_tardiness</a>, and <a class="el" href="_tasks_8hpp_source.xhtml#l00105">period</a>.</p>

</div>
</div>
<a id="ad00607f545e8f3440926c7dd833a9b27" name="ad00607f545e8f3440926c7dd833a9b27"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad00607f545e8f3440926c7dd833a9b27">&#9670;&#160;</a></span>getCallback()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Tasks::Task::getCallback </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; std::function&lt;void()&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function to be called when task is run. </p>
<dl class="section return"><dt>Returns</dt><dd>Callback function </dd></dl>

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00219">219</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  220</span>  {</div>
<div class="line"><span class="lineno">  221</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#aca74ea0431e61fc3cf414f0425332ec0">callback</a>;</div>
<div class="line"><span class="lineno">  222</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8hpp_source.xhtml#l00111">callback</a>.</p>

</div>
</div>
<a id="a80954c03ce29f1c2a3c938593c43c632" name="a80954c03ce29f1c2a3c938593c43c632"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80954c03ce29f1c2a3c938593c43c632">&#9670;&#160;</a></span>getDelay()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Tasks::Task::getDelay </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; const <a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the initial delay before the task is run at given period. </p>
<dl class="section return"><dt>Returns</dt><dd>Delay in milliseconds </dd></dl>

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00243">243</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  244</span>  {</div>
<div class="line"><span class="lineno">  245</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afcd445681f5c92b55b601aff90f41f05">delay</a>;</div>
<div class="line"><span class="lineno">  246</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8hpp_source.xhtml#l00106">delay</a>.</p>

</div>
</div>
<a id="a99da0e6d8fe7677e0faaab98995353ba" name="a99da0e6d8fe7677e0faaab98995353ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99da0e6d8fe7677e0faaab98995353ba">&#9670;&#160;</a></span>getId()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Tasks::Task::getId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; const std::string</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml" title="A task class which represents a function to be called at requested intervals.">Task</a> Identifier. </p>

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00224">224</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  225</span>  {</div>
<div class="line"><span class="lineno">  226</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a819de0c8e46486621657e107b9101ef8">id</a>;</div>
<div class="line"><span class="lineno">  227</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a819de0c8e46486621657e107b9101ef8"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a819de0c8e46486621657e107b9101ef8">fabomatic::Tasks::Task::id</a></div><div class="ttdeci">const std::string id</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00104">Tasks.hpp:104</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8hpp_source.xhtml#l00104">id</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tasks_8cpp_source.xhtml#l00138">toString()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_tasks_1_1_task_a99da0e6d8fe7677e0faaab98995353ba_icgraph.svg" width="574" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a95403f949e31acae62e0c5d693b41a16" name="a95403f949e31acae62e0c5d693b41a16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95403f949e31acae62e0c5d693b41a16">&#9670;&#160;</a></span>getNextRun()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Tasks::Task::getNextRun </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; const <a class="el" href="namespacefabomatic_1_1_tasks.xhtml#a1d9dcfdb65c00f111ebd0466763955b1">Tasks::time_point</a> &amp;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>When shall the task be run again. </p>
<dl class="section return"><dt>Returns</dt><dd>time_point of the next run or time_point::max() if the task will not run. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00258">258</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  259</span>  {</div>
<div class="line"><span class="lineno">  260</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a77f48e53f0a41b2381e9c513578be6f1">next_run</a>;</div>
<div class="line"><span class="lineno">  261</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8hpp_source.xhtml#l00108">next_run</a>.</p>

</div>
</div>
<a id="ad535eb5b2caf1ef2569b17ccc6bd96f2" name="ad535eb5b2caf1ef2569b17ccc6bd96f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad535eb5b2caf1ef2569b17ccc6bd96f2">&#9670;&#160;</a></span>getPeriod()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Tasks::Task::getPeriod </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; const <a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Current period of the task. </p>

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00214">214</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  215</span>  {</div>
<div class="line"><span class="lineno">  216</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">period</a>;</div>
<div class="line"><span class="lineno">  217</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8hpp_source.xhtml#l00105">period</a>.</p>

</div>
</div>
<a id="a2b247d96f354eb1cfaa02c9cad06add2" name="a2b247d96f354eb1cfaa02c9cad06add2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b247d96f354eb1cfaa02c9cad06add2">&#9670;&#160;</a></span>getRunCounter()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Tasks::Task::getRunCounter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; unsigned long</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the number of times the task has been run. </p>

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00238">238</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  239</span>  {</div>
<div class="line"><span class="lineno">  240</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#adc90a9a7701e126e74796646be5f21bf">run_counter</a>;</div>
<div class="line"><span class="lineno">  241</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8hpp_source.xhtml#l00112">run_counter</a>.</p>

</div>
</div>
<a id="a926ed81ebde9e7b9405fde1843c0c343" name="a926ed81ebde9e7b9405fde1843c0c343"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a926ed81ebde9e7b9405fde1843c0c343">&#9670;&#160;</a></span>getTotalRuntime()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Tasks::Task::getTotalRuntime </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; const <a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the total execution time of the task. Useful to spot slowest tasks. </p>

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00253">253</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  254</span>  {</div>
<div class="line"><span class="lineno">  255</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a033906c8fc5c8d929c4336d4ed988207">total_runtime</a>;</div>
<div class="line"><span class="lineno">  256</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8hpp_source.xhtml#l00110">total_runtime</a>.</p>

</div>
</div>
<a id="a8f2df2426609b7be592ab3485d9d26ed" name="a8f2df2426609b7be592ab3485d9d26ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f2df2426609b7be592ab3485d9d26ed">&#9670;&#160;</a></span>isActive()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Tasks::Task::isActive </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; bool</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Status of the task. </p>
<dl class="section return"><dt>Returns</dt><dd>True if <a class="el" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml" title="The schedule is in charge of running tasks in the right order based on their requested intervals.">Scheduler</a> can launch it </dd></dl>

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00209">209</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  210</span>  {</div>
<div class="line"><span class="lineno">  211</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a195917ecd47b52f9e924a220cbd812e5">active</a>;</div>
<div class="line"><span class="lineno">  212</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8hpp_source.xhtml#l00103">active</a>.</p>

</div>
</div>
<a id="aed300383e4022094fca1d3455b027d0e" name="aed300383e4022094fca1d3455b027d0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed300383e4022094fca1d3455b027d0e">&#9670;&#160;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Task</a> &amp; fabomatic::Tasks::Task::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Task</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3f4c334ae2ff6b06317adcf465b33371" name="a3f4c334ae2ff6b06317adcf465b33371"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f4c334ae2ff6b06317adcf465b33371">&#9670;&#160;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Task</a> &amp; fabomatic::Tasks::Task::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Task</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac63191a702c898cda8af1ce8316bfb94" name="ac63191a702c898cda8af1ce8316bfb94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac63191a702c898cda8af1ce8316bfb94">&#9670;&#160;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Tasks::Task::run </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Execute the task if active. </p>

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00151">151</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  152</span>  {</div>
<div class="line"><span class="lineno">  153</span>    <span class="keyword">auto</span> time_to_run = (<a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#adc67d1313c6695d813feb935eafdaf60">arduinoNow</a>() - <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a77f48e53f0a41b2381e9c513578be6f1">next_run</a>).count() &gt; 0;</div>
<div class="line"><span class="lineno">  154</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8f2df2426609b7be592ab3485d9d26ed">isActive</a>() &amp;&amp; time_to_run)</div>
<div class="line"><span class="lineno">  155</span>    {</div>
<div class="line"><span class="lineno">  156</span>      <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#adc90a9a7701e126e74796646be5f21bf">run_counter</a>++;</div>
<div class="line"><span class="lineno">  157</span>      <span class="keyword">auto</span> last_duration = std::chrono::duration_cast&lt;milliseconds&gt;(<a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#adc67d1313c6695d813feb935eafdaf60">arduinoNow</a>() - <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afc523cdad801563f9a510bf2613bcbed">last_run</a>);</div>
<div class="line"><span class="lineno">  158</span>      <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a46a71ed2fe769cbf21bd093c3452a5a8">average_tardiness</a> = (<a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a46a71ed2fe769cbf21bd093c3452a5a8">average_tardiness</a> * (<a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#adc90a9a7701e126e74796646be5f21bf">run_counter</a> - 1) + last_duration) / <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#adc90a9a7701e126e74796646be5f21bf">run_counter</a>;</div>
<div class="line"><span class="lineno">  159</span>      <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afc523cdad801563f9a510bf2613bcbed">last_run</a> = <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#adc67d1313c6695d813feb935eafdaf60">arduinoNow</a>();</div>
<div class="line"><span class="lineno">  160</span> </div>
<div class="line"><span class="lineno">  161</span>      <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#aca74ea0431e61fc3cf414f0425332ec0">callback</a>();</div>
<div class="line"><span class="lineno">  162</span> </div>
<div class="line"><span class="lineno">  163</span>      <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a033906c8fc5c8d929c4336d4ed988207">total_runtime</a> += std::chrono::duration_cast&lt;milliseconds&gt;(<a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#adc67d1313c6695d813feb935eafdaf60">arduinoNow</a>() - <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afc523cdad801563f9a510bf2613bcbed">last_run</a>);</div>
<div class="line"><span class="lineno">  164</span> </div>
<div class="line"><span class="lineno">  165</span>      <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">period</a> &gt; 0ms)</div>
<div class="line"><span class="lineno">  166</span>      {</div>
<div class="line"><span class="lineno">  167</span>        <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a77f48e53f0a41b2381e9c513578be6f1">next_run</a> = <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afc523cdad801563f9a510bf2613bcbed">last_run</a> + <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">period</a>; <span class="comment">// Schedule next run</span></div>
<div class="line"><span class="lineno">  168</span>      }</div>
<div class="line"><span class="lineno">  169</span>      <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  170</span>      {</div>
<div class="line"><span class="lineno">  171</span>        <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a77f48e53f0a41b2381e9c513578be6f1">next_run</a> = <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a77f48e53f0a41b2381e9c513578be6f1">next_run</a>.max(); <span class="comment">// Disable the task</span></div>
<div class="line"><span class="lineno">  172</span>      }</div>
<div class="line"><span class="lineno">  173</span> </div>
<div class="line"><span class="lineno">  174</span>      <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1debug.xhtml#a8308799abba9b76406a8653548369967">conf::debug::ENABLE_TASK_LOGS</a>)</div>
<div class="line"><span class="lineno">  175</span>      {</div>
<div class="line"><span class="lineno">  176</span>        ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Completed(%s)\r\n&quot;</span>, <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a9a1a85dc5747fdc56c3f7470eeaebff0">toString</a>().c_str());</div>
<div class="line"><span class="lineno">  177</span>      }</div>
<div class="line"><span class="lineno">  178</span>    }</div>
<div class="line"><span class="lineno">  179</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a8f2df2426609b7be592ab3485d9d26ed"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8f2df2426609b7be592ab3485d9d26ed">fabomatic::Tasks::Task::isActive</a></div><div class="ttdeci">auto isActive() const -&gt; bool</div><div class="ttdoc">Status of the task.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00209">Tasks.cpp:209</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8hpp_source.xhtml#l00017">fabomatic::Tasks::arduinoNow()</a>, <a class="el" href="conf_8hpp_source.xhtml#l00085">fabomatic::conf::debug::ENABLE_TASK_LOGS</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00009">TAG</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_tasks_1_1_task_ac63191a702c898cda8af1ce8316bfb94_cgraph.svg" width="434" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aef6894044873a74c1bda3308531f1b95" name="aef6894044873a74c1bda3308531f1b95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef6894044873a74c1bda3308531f1b95">&#9670;&#160;</a></span>setCallback()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Tasks::Task::setCallback </td>
          <td>(</td>
          <td class="paramtype">std::function&lt; void()&gt;&#160;</td>
          <td class="paramname"><em>new_callback</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Change the callback function. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">new_callback</td><td>function to be called back </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00204">204</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  205</span>  {</div>
<div class="line"><span class="lineno">  206</span>    <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#aca74ea0431e61fc3cf414f0425332ec0">callback</a> = new_callback;</div>
<div class="line"><span class="lineno">  207</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a5521c3886fbc2cc540fb3809f03945a2" name="a5521c3886fbc2cc540fb3809f03945a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5521c3886fbc2cc540fb3809f03945a2">&#9670;&#160;</a></span>setDelay()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Tasks::Task::setDelay </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a>&#160;</td>
          <td class="paramname"><em>new_delay</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Change the task initial delay. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">new_delay</td><td>Initial delay. Use 0s to avoid any initial delay. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00248">248</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  249</span>  {</div>
<div class="line"><span class="lineno">  250</span>    <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afcd445681f5c92b55b601aff90f41f05">delay</a> = new_delay;</div>
<div class="line"><span class="lineno">  251</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8cpp_source.xhtml#l00265">fabomatic::Tasks::delay()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_tasks_1_1_task_a5521c3886fbc2cc540fb3809f03945a2_cgraph.svg" width="614" height="68"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a548c0b4cdf3458bd64031fbbd1637927" name="a548c0b4cdf3458bd64031fbbd1637927"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a548c0b4cdf3458bd64031fbbd1637927">&#9670;&#160;</a></span>setPeriod()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Tasks::Task::setPeriod </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a>&#160;</td>
          <td class="paramname"><em>new_period</em></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Change the task period. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">new_period</td><td>new period. Use 0ms for single shot. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00199">199</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  200</span>  {</div>
<div class="line"><span class="lineno">  201</span>    <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">period</a> = new_period;</div>
<div class="line"><span class="lineno">  202</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a9a1a85dc5747fdc56c3f7470eeaebff0" name="a9a1a85dc5747fdc56c3f7470eeaebff0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a1a85dc5747fdc56c3f7470eeaebff0">&#9670;&#160;</a></span>toString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Tasks::Task::toString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const -&gt; const std::string</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00138">138</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  139</span>  {</div>
<div class="line"><span class="lineno">  140</span>    std::stringstream ss{};</div>
<div class="line"><span class="lineno">  141</span>    ss &lt;&lt; <span class="stringliteral">&quot;Task &quot;</span> &lt;&lt; <a class="code hl_function" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a99da0e6d8fe7677e0faaab98995353ba">getId</a>() &lt;&lt; <span class="stringliteral">&quot;, active=&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a195917ecd47b52f9e924a220cbd812e5">active</a></div>
<div class="line"><span class="lineno">  142</span>       &lt;&lt; <span class="stringliteral">&quot;,Period(ms)=&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a8ed7793f31565370d833323b37f43903">period</a> &lt;&lt; <span class="stringliteral">&quot;, Delay(ms)=&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afcd445681f5c92b55b601aff90f41f05">delay</a></div>
<div class="line"><span class="lineno">  143</span>       &lt;&lt; <span class="stringliteral">&quot;,Last run=&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afc523cdad801563f9a510bf2613bcbed">last_run</a>.time_since_epoch()</div>
<div class="line"><span class="lineno">  144</span>       &lt;&lt; <span class="stringliteral">&quot;,Next_run=&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a77f48e53f0a41b2381e9c513578be6f1">next_run</a>.time_since_epoch()</div>
<div class="line"><span class="lineno">  145</span>       &lt;&lt; <span class="stringliteral">&quot;,Avg tardiness (ms)=&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a46a71ed2fe769cbf21bd093c3452a5a8">average_tardiness</a></div>
<div class="line"><span class="lineno">  146</span>       &lt;&lt; <span class="stringliteral">&quot;,total_runtime (ms)= &quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a033906c8fc5c8d929c4336d4ed988207">total_runtime</a></div>
<div class="line"><span class="lineno">  147</span>       &lt;&lt; <span class="stringliteral">&quot;,run_counter=&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#adc90a9a7701e126e74796646be5f21bf">run_counter</a>;</div>
<div class="line"><span class="lineno">  148</span>    <span class="keywordflow">return</span> ss.str();</div>
<div class="line"><span class="lineno">  149</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_tasks_1_1_task_xhtml_a99da0e6d8fe7677e0faaab98995353ba"><div class="ttname"><a href="classfabomatic_1_1_tasks_1_1_task.xhtml#a99da0e6d8fe7677e0faaab98995353ba">fabomatic::Tasks::Task::getId</a></div><div class="ttdeci">auto getId() const -&gt; const std::string</div><div class="ttdoc">Get the Task Identifier.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00224">Tasks.cpp:224</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8hpp_source.xhtml#l00103">active</a>, <a class="el" href="_tasks_8hpp_source.xhtml#l00109">average_tardiness</a>, <a class="el" href="_tasks_8hpp_source.xhtml#l00106">delay</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00224">getId()</a>, <a class="el" href="_tasks_8hpp_source.xhtml#l00107">last_run</a>, <a class="el" href="_tasks_8hpp_source.xhtml#l00108">next_run</a>, <a class="el" href="_tasks_8hpp_source.xhtml#l00105">period</a>, <a class="el" href="_tasks_8hpp_source.xhtml#l00112">run_counter</a>, and <a class="el" href="_tasks_8hpp_source.xhtml#l00110">total_runtime</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tasks_8cpp_source.xhtml#l00122">Task()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_tasks_1_1_task_a9a1a85dc5747fdc56c3f7470eeaebff0_cgraph.svg" width="370" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_tasks_1_1_task_a9a1a85dc5747fdc56c3f7470eeaebff0_icgraph.svg" width="370" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a1488d6b3730de3f77a52ce6bee56fdd8" name="a1488d6b3730de3f77a52ce6bee56fdd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1488d6b3730de3f77a52ce6bee56fdd8">&#9670;&#160;</a></span>updateSchedule()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Tasks::Task::updateSchedule </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>recompute the next run time (now + delay) and allows the task to run again </p>
<p>recompute the next run time (now + delay) </p>

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00193">193</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  194</span>  {</div>
<div class="line"><span class="lineno">  195</span>    <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afc523cdad801563f9a510bf2613bcbed">last_run</a> = <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#adc67d1313c6695d813feb935eafdaf60">arduinoNow</a>() + <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afcd445681f5c92b55b601aff90f41f05">delay</a>;</div>
<div class="line"><span class="lineno">  196</span>    <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#a77f48e53f0a41b2381e9c513578be6f1">next_run</a> = <a class="code hl_variable" href="classfabomatic_1_1_tasks_1_1_task.xhtml#afc523cdad801563f9a510bf2613bcbed">last_run</a>;</div>
<div class="line"><span class="lineno">  197</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8hpp_source.xhtml#l00017">fabomatic::Tasks::arduinoNow()</a>, and <a class="el" href="_tasks_8cpp_source.xhtml#l00265">fabomatic::Tasks::delay()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tasks_8cpp_source.xhtml#l00032">fabomatic::Tasks::Scheduler::updateSchedules()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_tasks_1_1_task_a1488d6b3730de3f77a52ce6bee56fdd8_cgraph.svg" width="614" height="82"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfabomatic_1_1_tasks_1_1_task_a1488d6b3730de3f77a52ce6bee56fdd8_icgraph.svg" width="100%" height="425"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a195917ecd47b52f9e924a220cbd812e5" name="a195917ecd47b52f9e924a220cbd812e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a195917ecd47b52f9e924a220cbd812e5">&#9670;&#160;</a></span>active</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool fabomatic::Tasks::Task::active</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tasks_8hpp_source.xhtml#l00103">103</a> of file <a class="el" href="_tasks_8hpp_source.xhtml">Tasks.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tasks_8cpp_source.xhtml#l00209">isActive()</a>, and <a class="el" href="_tasks_8cpp_source.xhtml#l00138">toString()</a>.</p>

</div>
</div>
<a id="a46a71ed2fe769cbf21bd093c3452a5a8" name="a46a71ed2fe769cbf21bd093c3452a5a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46a71ed2fe769cbf21bd093c3452a5a8">&#9670;&#160;</a></span>average_tardiness</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a> fabomatic::Tasks::Task::average_tardiness</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tasks_8hpp_source.xhtml#l00109">109</a> of file <a class="el" href="_tasks_8hpp_source.xhtml">Tasks.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tasks_8cpp_source.xhtml#l00229">getAvgTardiness()</a>, and <a class="el" href="_tasks_8cpp_source.xhtml#l00138">toString()</a>.</p>

</div>
</div>
<a id="aca74ea0431e61fc3cf414f0425332ec0" name="aca74ea0431e61fc3cf414f0425332ec0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca74ea0431e61fc3cf414f0425332ec0">&#9670;&#160;</a></span>callback</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;void()&gt; fabomatic::Tasks::Task::callback</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tasks_8hpp_source.xhtml#l00111">111</a> of file <a class="el" href="_tasks_8hpp_source.xhtml">Tasks.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tasks_8cpp_source.xhtml#l00219">getCallback()</a>.</p>

</div>
</div>
<a id="afcd445681f5c92b55b601aff90f41f05" name="afcd445681f5c92b55b601aff90f41f05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afcd445681f5c92b55b601aff90f41f05">&#9670;&#160;</a></span>delay</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a> fabomatic::Tasks::Task::delay</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tasks_8hpp_source.xhtml#l00106">106</a> of file <a class="el" href="_tasks_8hpp_source.xhtml">Tasks.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tasks_8cpp_source.xhtml#l00243">getDelay()</a>, and <a class="el" href="_tasks_8cpp_source.xhtml#l00138">toString()</a>.</p>

</div>
</div>
<a id="a819de0c8e46486621657e107b9101ef8" name="a819de0c8e46486621657e107b9101ef8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a819de0c8e46486621657e107b9101ef8">&#9670;&#160;</a></span>id</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::string fabomatic::Tasks::Task::id</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tasks_8hpp_source.xhtml#l00104">104</a> of file <a class="el" href="_tasks_8hpp_source.xhtml">Tasks.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tasks_8cpp_source.xhtml#l00224">getId()</a>.</p>

</div>
</div>
<a id="afc523cdad801563f9a510bf2613bcbed" name="afc523cdad801563f9a510bf2613bcbed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afc523cdad801563f9a510bf2613bcbed">&#9670;&#160;</a></span>last_run</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#a1d9dcfdb65c00f111ebd0466763955b1">Tasks::time_point</a> fabomatic::Tasks::Task::last_run</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tasks_8hpp_source.xhtml#l00107">107</a> of file <a class="el" href="_tasks_8hpp_source.xhtml">Tasks.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tasks_8cpp_source.xhtml#l00122">Task()</a>, and <a class="el" href="_tasks_8cpp_source.xhtml#l00138">toString()</a>.</p>

</div>
</div>
<a id="a77f48e53f0a41b2381e9c513578be6f1" name="a77f48e53f0a41b2381e9c513578be6f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77f48e53f0a41b2381e9c513578be6f1">&#9670;&#160;</a></span>next_run</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#a1d9dcfdb65c00f111ebd0466763955b1">Tasks::time_point</a> fabomatic::Tasks::Task::next_run</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tasks_8hpp_source.xhtml#l00108">108</a> of file <a class="el" href="_tasks_8hpp_source.xhtml">Tasks.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tasks_8cpp_source.xhtml#l00258">getNextRun()</a>, and <a class="el" href="_tasks_8cpp_source.xhtml#l00138">toString()</a>.</p>

</div>
</div>
<a id="a8ed7793f31565370d833323b37f43903" name="a8ed7793f31565370d833323b37f43903"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ed7793f31565370d833323b37f43903">&#9670;&#160;</a></span>period</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a> fabomatic::Tasks::Task::period</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tasks_8hpp_source.xhtml#l00105">105</a> of file <a class="el" href="_tasks_8hpp_source.xhtml">Tasks.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tasks_8cpp_source.xhtml#l00229">getAvgTardiness()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00214">getPeriod()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00122">Task()</a>, and <a class="el" href="_tasks_8cpp_source.xhtml#l00138">toString()</a>.</p>

</div>
</div>
<a id="adc90a9a7701e126e74796646be5f21bf" name="adc90a9a7701e126e74796646be5f21bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc90a9a7701e126e74796646be5f21bf">&#9670;&#160;</a></span>run_counter</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long fabomatic::Tasks::Task::run_counter</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tasks_8hpp_source.xhtml#l00112">112</a> of file <a class="el" href="_tasks_8hpp_source.xhtml">Tasks.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tasks_8cpp_source.xhtml#l00238">getRunCounter()</a>, and <a class="el" href="_tasks_8cpp_source.xhtml#l00138">toString()</a>.</p>

</div>
</div>
<a id="a033906c8fc5c8d929c4336d4ed988207" name="a033906c8fc5c8d929c4336d4ed988207"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a033906c8fc5c8d929c4336d4ed988207">&#9670;&#160;</a></span>total_runtime</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a> fabomatic::Tasks::Task::total_runtime</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tasks_8hpp_source.xhtml#l00110">110</a> of file <a class="el" href="_tasks_8hpp_source.xhtml">Tasks.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tasks_8cpp_source.xhtml#l00253">getTotalRuntime()</a>, and <a class="el" href="_tasks_8cpp_source.xhtml#l00138">toString()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="_tasks_8hpp_source.xhtml">Tasks.hpp</a></li>
<li><a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Nov 30 2024 15:35:28 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
