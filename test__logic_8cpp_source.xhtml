<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: test_logic.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(0); });
/* @license-end */
</script>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_13e138d54eb8818da29c3992edef070a.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_b810b1e6ec0cbea7c4b9d596e7cd60d2.xhtml">test_logic</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">test_logic.cpp</div></div>
</div><!--header-->
<div class="contents">
<a href="test__logic_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#include &lt;atomic&gt;</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#include &lt;chrono&gt;</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;functional&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;pthread.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &quot;<a class="code" href="_board_logic_8hpp.xhtml">BoardLogic.hpp</a>&quot;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &quot;<a class="code" href="_fab_backend_8hpp.xhtml">FabBackend.hpp</a>&quot;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &quot;<a class="code" href="_l_c_d_wrapper_8hpp.xhtml">LCDWrapper.hpp</a>&quot;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="preprocessor">#include &quot;<a class="code" href="_r_f_i_d_wrapper_8hpp.xhtml">RFIDWrapper.hpp</a>&quot;</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="preprocessor">#include &quot;<a class="code" href="_saved_config_8hpp.xhtml">SavedConfig.hpp</a>&quot;</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="preprocessor">#include &quot;<a class="code" href="conf_8hpp.xhtml">conf.hpp</a>&quot;</span></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span> </div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="preprocessor">#include &quot;<a class="code" href="_mock_m_q_t_t_broker_8hpp.xhtml">mock/MockMQTTBroker.hpp</a>&quot;</span></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="preprocessor">#include &quot;<a class="code" href="_mock_mrfc522_8hpp.xhtml">mock/MockMrfc522.hpp</a>&quot;</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="preprocessor">#include &quot;<a class="code" href="test__common_8h.xhtml">test_common.h</a>&quot;</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span> </div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="preprocessor">#include &lt;Arduino.h&gt;</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="preprocessor">#include &lt;unity.h&gt;</span></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="preprocessor">#include &quot;LiquidCrystal.h&quot;</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span> </div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="keyword">using namespace </span>std::chrono_literals;</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno"><a class="line" href="test__logic_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">   25</a></span>[[maybe_unused]] <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code hl_variable" href="test__logic_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">TAG3</a> = <span class="stringliteral">&quot;test_logic&quot;</span>;</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno"><a class="line" href="test__logic_8cpp.xhtml#af6931c3ecf1cb64d3ff6cb0eab2e590c">   27</a></span><a class="code hl_class" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper&lt;fabomatic::MockMrfc522&gt;</a> <a class="code hl_variable" href="test__logic_8cpp.xhtml#af6931c3ecf1cb64d3ff6cb0eab2e590c">rfid</a>;</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno"><a class="line" href="test__logic_8cpp.xhtml#afaf1857dab1bf829c9be096238cf2de5">   28</a></span><a class="code hl_class" href="classfabomatic_1_1_l_c_d_wrapper.xhtml">fabomatic::LCDWrapper</a> <a class="code hl_variable" href="test__logic_8cpp.xhtml#afaf1857dab1bf829c9be096238cf2de5">lcd</a>{<a class="code hl_variable" href="namespacefabomatic.xhtml#a90e4180ab5a1ffd3393b4f0d6b01f2b3">fabomatic::pins</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#abd0d35daf6efede38501593182b6d574">lcd</a>};</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno"><a class="line" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">   29</a></span><a class="code hl_class" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a> <a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>;</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="test__logic_8cpp.xhtml#a8c191141c9c67dce2e8334e3c7651604">   31</a></span><span class="keyword">using </span><a class="code hl_class" href="classfabomatic_1_1_board_logic.xhtml">BoardLogic</a> = <a class="code hl_class" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a>;</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefabomatic_1_1tests.xhtml">fabomatic::tests</a></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>{</div>
<div class="foldopen" id="foldopen00035" data-start="{" data-end="}">
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a574e0054ef8ba573fc2efd53600b0ec4">   35</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a574e0054ef8ba573fc2efd53600b0ec4">test_machine_defaults</a>()</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>  {</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>    <span class="keyword">auto</span> &amp;machine = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>();</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>    TEST_ASSERT_TRUE_MESSAGE(machine.isConfigured(), <span class="stringliteral">&quot;Machine not configured&quot;</span>);</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>    <span class="keyword">auto</span> config_req = machine.getConfig();</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    TEST_ASSERT_TRUE_MESSAGE(config_req.has_value(), <span class="stringliteral">&quot;Machine config not available&quot;</span>);</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    <span class="keyword">auto</span> config = config_req.value();</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>    <span class="keyword">auto</span> result = machine.getMachineId().id == <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1default__config.xhtml#a6c7775af29f012f0623c8898f1998ea1">fabomatic::conf::default_config::machine_id</a>.<a class="code hl_variable" href="struct_machine_i_d.xhtml#a4be27146270f5fccce68f1c8b951b1d8">id</a>;</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>    TEST_ASSERT_TRUE_MESSAGE(result, <span class="stringliteral">&quot;Machine ID not per default configuration&quot;</span>);</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>    result = machine.getMachineName() == <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1default__config.xhtml#a2a77484183bbfbb6330615405509a615">fabomatic::conf::default_config::machine_name</a>;</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>    TEST_ASSERT_TRUE_MESSAGE(result, <span class="stringliteral">&quot;Machine Name not per default configuration&quot;</span>);</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>    result = machine.getAutologoffDelay() == <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1machine.xhtml#ad6ef16188656c4ca243871b47ae55f33">fabomatic::conf::machine::DEFAULT_AUTO_LOGOFF_DELAY</a>;</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>    TEST_ASSERT_TRUE_MESSAGE(result, <span class="stringliteral">&quot;Machine autologoff delay not per default configuration&quot;</span>);</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>    result = machine.toString().length() &gt; 0;</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>    TEST_ASSERT_TRUE_MESSAGE(result, <span class="stringliteral">&quot;Machine toString() failed&quot;</span>);</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>    TEST_ASSERT_TRUE_MESSAGE(config.hasRelay() || <a class="code hl_variable" href="namespacefabomatic.xhtml#a90e4180ab5a1ffd3393b4f0d6b01f2b3">fabomatic::pins</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#a310be8cfdd1f9617522c2eb0dd02f252">relay</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1relay__config.xhtml#a3cfbcbcee8f3bb2aa8a2c6fc1246f27e">ch1_pin</a> == <a class="code hl_variable" href="namespacefabomatic.xhtml#a01a9e2e5f9e92f6f3fa9204ba3d946b9">fabomatic::NO_PIN</a>, <span class="stringliteral">&quot;Machine relay not configured&quot;</span>);</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>    TEST_ASSERT_TRUE_MESSAGE(config.hasMqttSwitch() || <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a27d3131c4e18f30225c9499cadb75ff4">fabomatic::conf::mqtt::mqtt_switch_topic</a>.empty(), <span class="stringliteral">&quot;Machine MQTT switch not configured&quot;</span>);</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>    TEST_ASSERT_TRUE_MESSAGE(config.machine_id.id == <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1default__config.xhtml#a6c7775af29f012f0623c8898f1998ea1">fabomatic::conf::default_config::machine_id</a>.<a class="code hl_variable" href="struct_machine_i_d.xhtml#a4be27146270f5fccce68f1c8b951b1d8">id</a>, <span class="stringliteral">&quot;Machine ID not configured&quot;</span>);</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  }</div>
</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="foldopen" id="foldopen00064" data-start="{" data-end="}">
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#aec03a7ee459718d314b930fdd75d3cee">   64</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#aec03a7ee459718d314b930fdd75d3cee">test_simple_methods</a>()</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  {</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>    {</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>      <span class="keyword">auto</span> cpt = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a1724172254d9262c6b1a61cf5de5cee0">getBuzzerForTesting</a>()-&gt;getBeepCount();</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>      <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac198a07d00fda36a527cd9db2d97efc1">beepFail</a>();</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>      <span class="keyword">auto</span> beeps = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a1724172254d9262c6b1a61cf5de5cee0">getBuzzerForTesting</a>()-&gt;getBeepCount() - cpt;</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>      TEST_ASSERT_EQUAL_UINT16_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1buzzer.xhtml#a666a5622c77b3d0662013cce03bab07a">conf::buzzer::NB_BEEPS</a>, beeps, <span class="stringliteral">&quot;Buzzer FAIL has been beeped&quot;</span>);</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    }</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>    {</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>      <span class="keyword">auto</span> cpt = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a1724172254d9262c6b1a61cf5de5cee0">getBuzzerForTesting</a>()-&gt;getBeepCount();</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>      <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a8e0c35d138333907cc217c9e141091cd">beepOk</a>();</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>      <span class="keyword">auto</span> beeps = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a1724172254d9262c6b1a61cf5de5cee0">getBuzzerForTesting</a>()-&gt;getBeepCount() - cpt;</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>      TEST_ASSERT_EQUAL_UINT16_MESSAGE(1, beeps, <span class="stringliteral">&quot;Buzzer OK has been beeped&quot;</span>);</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>    }</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ad05b4db308773e56d866fe87d34022d9">blinkLed</a>();</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span> </div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>    std::vector statuses{<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a902b0d55fddef6f8d651fe1035b7d4bd">BoardLogic::Status::Error</a>, <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a1e50b02a42cd210ea7dc0ed55e79f9d6">BoardLogic::Status::ErrorHardware</a>, <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a2ec0d16e4ca169baedb9b2d50ec5c6d7">BoardLogic::Status::Connected</a>,</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>                         <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae321c53b354930ba96f0243e652df458">BoardLogic::Status::Connecting</a>, <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0adc30bc0c7914db5918da4263fce93ad2">BoardLogic::Status::Clear</a>, <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a276dffa823d39fc437cea5e3fd7706ea">BoardLogic::Status::MachineFree</a>,</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>                         <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0afebcd1edf6010db4858e623d1dd2f3bc">BoardLogic::Status::LoggedIn</a>, <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a317613b2a5acaaa53519c44526a11859">BoardLogic::Status::LoginDenied</a>, <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ad8a942ef2b04672adfafef0ad817a407">BoardLogic::Status::Busy</a>,</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>                         <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae27816978dfe5f0f3acd72cee314955f">BoardLogic::Status::LoggedOut</a>, <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a6d3cb253e5f0cfa98184c8509beafcf0">BoardLogic::Status::AlreadyInUse</a>, <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a0bbe2b46fd8bc4ccf79f21530983518d">BoardLogic::Status::MachineInUse</a>,</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>                         <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a8d9da4bc0e49a50e09ac9f7e56789d39">BoardLogic::Status::Offline</a>, <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0afa89fcc81e9dcfd52671c968fe4e6ddf">BoardLogic::Status::NotAllowed</a>, <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a5c02116895314194cd3ba79c0eb2cec4">BoardLogic::Status::Verifying</a>,</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>                         <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0aac426b0c913ec5ba40bda964477b4896">BoardLogic::Status::MaintenanceNeeded</a>, <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0adbb4b0a2d8a60cbf820c75233ab84e18">BoardLogic::Status::MaintenanceQuery</a>,</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>                         <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a92992e3855328c237975f2806f5b2194">BoardLogic::Status::MaintenanceDone</a>, <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a0df4bdde6ecbaa556250a62412817982">BoardLogic::Status::PortalStarting</a>, <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0aa358d35f0818b076115b29a0490253d7">BoardLogic::Status::PortalFailed</a>,</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>                         <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a40d7d2e7b91cecc73800e47accd25ca8">BoardLogic::Status::PortalSuccess</a>, <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ad31181c15b9b2bfe52e84052376b0c04">BoardLogic::Status::Booting</a>, <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a075d9c9ae8c8f1c79c1a1965cd8c5a42">BoardLogic::Status::ShuttingDown</a>,</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>                         <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a195c01d301a592904e026b829f658f4b">BoardLogic::Status::OTAStarting</a>, <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae8d0fe00091000284822d7216b46b6cf">BoardLogic::Status::FactoryDefaults</a>};</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> status : statuses)</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>    {</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>      <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(status);</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>      TEST_ASSERT_EQUAL_UINT8_MESSAGE(status, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">getStatus</a>(), <span class="stringliteral">&quot;Status mismatch&quot;</span>);</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>    }</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>    <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a8332053c1e3343652632bde1a81a9ff4">getMachineForTesting</a>().setMaintenanceInfo(<span class="stringliteral">&quot;Lente laser&quot;</span>);</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>    <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a8332053c1e3343652632bde1a81a9ff4">getMachineForTesting</a>().setMaintenanceNeeded(<span class="keyword">true</span>);</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a276dffa823d39fc437cea5e3fd7706ea">BoardLogic::Status::MachineFree</a>);</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>    sleep(2);</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span> </div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; 3; ++i)</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>    {</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>      <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac05af486941c620c9494ba545dd83c3d">checkPowerOff</a>();</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>      <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ad05b4db308773e56d866fe87d34022d9">blinkLed</a>();</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>      <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a47b4d515c0d3488eceb49769036bce8b">updateLCD</a>();</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>      <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ad4d15925f4f48caa25335db63aeab734">reconfigure</a>();</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>    }</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  }</div>
</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="foldopen" id="foldopen00111" data-start="{" data-end="}">
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#aab0f4e1439b281ffef8be51db9a81f9d">  111</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#aab0f4e1439b281ffef8be51db9a81f9d">test_whitelist_no_network</a>()</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  {</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a6a7645a865dc822746f972ea6f43224d">machine_init</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>);</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>    <span class="comment">// Check whitelist is recognized</span></div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;wle : <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#af9a30e2db3fbfa479b6512cfd428aab1">test_whitelist</a>)</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>    {</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>      <span class="keyword">const</span> <span class="keyword">auto</span> [card_uid, level, name] = wle;</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>      TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a51390e6bf10c4de427abd7f175a2e6a8">authorize</a>(card_uid), <span class="stringliteral">&quot;Card not authorized&quot;</span>);</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>      TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">getStatus</a>() == <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0afebcd1edf6010db4858e623d1dd2f3bc">BoardLogic::Status::LoggedIn</a>, <span class="stringliteral">&quot;Status not LoggedIn&quot;</span>);</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>      TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().getActiveUser().card_uid == card_uid, <span class="stringliteral">&quot;User UID not equal&quot;</span>);</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>      <span class="comment">// Name may not be equal because of cache RFID feature which does not save strings</span></div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>      <span class="comment">// TEST_ASSERT_TRUE_MESSAGE(logic.getMachine().getActiveUser().holder_name == name, &quot;User name not equal&quot;);</span></div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>      TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().getActiveUser().user_level == level, <span class="stringliteral">&quot;User level not equal&quot;</span>);</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>      <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a98a15cc323f97adc394c29e897afc12d">logout</a>();</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>      TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">getStatus</a>() == <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae27816978dfe5f0f3acd72cee314955f">BoardLogic::Status::LoggedOut</a>, <span class="stringliteral">&quot;Status not LoggedOut&quot;</span>);</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>    }</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>    <span class="comment">// Check that machine is free</span></div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>    <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a25bdc3a49d850aa49f92faf951b68efb">checkRfid</a>();</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">getStatus</a>() == <a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a276dffa823d39fc437cea5e3fd7706ea">BoardLogic::Status::MachineFree</a>, <span class="stringliteral">&quot;Status not MachineFree&quot;</span>);</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().isFree(), <span class="stringliteral">&quot;Machine not free&quot;</span>);</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span> </div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>    <span class="comment">// Logon simulating RFID tag</span></div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>    <span class="keyword">const</span> <span class="keyword">auto</span> card_uid = <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a3cc28b06ae6cfaf6bcf329ec858bcb41">get_test_uid</a>(1);</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span> </div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, card_uid, std::nullopt);</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span> </div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>    <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1machine.xhtml#a631ccc042adb96b1102806b117093a32">fabomatic::conf::machine::DELAY_BETWEEN_SWEEPS</a>);</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>.isNewCardPresent(), <span class="stringliteral">&quot;New card not present&quot;</span>);</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>.readCardSerial().has_value(), <span class="stringliteral">&quot;Card serial not read&quot;</span>);</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>.readCardSerial().value() == card_uid, <span class="stringliteral">&quot;Card serial not equal&quot;</span>);</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>    TEST_ASSERT_EQUAL_UINT16_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0afebcd1edf6010db4858e623d1dd2f3bc">BoardLogic::Status::LoggedIn</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">getStatus</a>(), <span class="stringliteral">&quot;Status not LoggedIn&quot;</span>);</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span> </div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>    <span class="comment">// Card away, machine shall be busy</span></div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>    <span class="keyword">auto</span> new_state = <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, std::nullopt);</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>    TEST_ASSERT_EQUAL_UINT16_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a0bbe2b46fd8bc4ccf79f21530983518d">BoardLogic::Status::MachineInUse</a>, new_state, <span class="stringliteral">&quot;Status not MachineInUse&quot;</span>);</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>    TEST_ASSERT_FALSE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().isFree(), <span class="stringliteral">&quot;Machine is free&quot;</span>);</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span> </div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>    <span class="comment">// Same card back, shall logout user</span></div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>    new_state = <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, card_uid);</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>    TEST_ASSERT_EQUAL_UINT16_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae27816978dfe5f0f3acd72cee314955f">BoardLogic::Status::LoggedOut</a>, new_state, <span class="stringliteral">&quot;Status not LoggedOut&quot;</span>);</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().isFree(), <span class="stringliteral">&quot;Machine is not free&quot;</span>);</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span> </div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>    <span class="keyword">auto</span> save_result = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac2feade03b2a74a1998dcec282a8eacb">getServer</a>().saveBuffer();</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>    TEST_ASSERT_TRUE_MESSAGE(save_result, <span class="stringliteral">&quot;Saving buffered messages works&quot;</span>);</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>  }</div>
</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span> </div>
<div class="foldopen" id="foldopen00159" data-start="{" data-end="}">
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a6f3dff17fd964aba76c35c514957a0a5">  159</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a6f3dff17fd964aba76c35c514957a0a5">test_one_user_at_a_time</a>()</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  {</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a6a7645a865dc822746f972ea6f43224d">machine_init</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>);</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>    <span class="keyword">const</span> <span class="keyword">auto</span> card_uid = <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a3cc28b06ae6cfaf6bcf329ec858bcb41">get_test_uid</a>(0);</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>    <span class="keyword">auto</span> new_state = <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, card_uid);</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span> </div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>    TEST_ASSERT_EQUAL_UINT16_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0afebcd1edf6010db4858e623d1dd2f3bc">BoardLogic::Status::LoggedIn</a>, new_state, <span class="stringliteral">&quot;Status not LoggedIn&quot;</span>);</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>    TEST_ASSERT_TRUE_MESSAGE(!<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().isFree(), <span class="stringliteral">&quot;Machine is free&quot;</span>);</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span> </div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>    <span class="comment">// Card away, machine shall be busy</span></div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>    new_state = <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, std::nullopt);</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>    TEST_ASSERT_TRUE_MESSAGE(!<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().isFree(), <span class="stringliteral">&quot;Machine is free&quot;</span>);</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span> </div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>    <span class="comment">// New card, shall be denied</span></div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>    <span class="keyword">const</span> <span class="keyword">auto</span> card_uid2 = <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a3cc28b06ae6cfaf6bcf329ec858bcb41">get_test_uid</a>(1);</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, card_uid2, 100ms);</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().getActiveUser().card_uid == card_uid, <span class="stringliteral">&quot;User UID has changed&quot;</span>);</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span> </div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>    <span class="comment">// New card away, first user shall still be here</span></div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, std::nullopt);</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().getActiveUser().card_uid == card_uid, <span class="stringliteral">&quot;User UID has changed&quot;</span>);</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>    TEST_ASSERT_EQUAL_UINT16_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a0bbe2b46fd8bc4ccf79f21530983518d">BoardLogic::Status::MachineInUse</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">getStatus</a>(), <span class="stringliteral">&quot;Status not MachineInUse&quot;</span>);</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span> </div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>    <span class="comment">// Original card, shall log out</span></div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, card_uid);</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().isFree(), <span class="stringliteral">&quot;Machine is not free&quot;</span>);</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>    <span class="comment">// Original card away</span></div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, std::nullopt);</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().isFree(), <span class="stringliteral">&quot;Machine is not free&quot;</span>);</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span> </div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>    <span class="comment">// Now new card must succeed</span></div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, card_uid2);</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>    TEST_ASSERT_EQUAL_UINT16_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0afebcd1edf6010db4858e623d1dd2f3bc">BoardLogic::Status::LoggedIn</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">getStatus</a>(), <span class="stringliteral">&quot;Status not LoggedIn&quot;</span>);</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span> </div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>    <span class="comment">// Card away</span></div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, std::nullopt);</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>    TEST_ASSERT_EQUAL_UINT16_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a0bbe2b46fd8bc4ccf79f21530983518d">BoardLogic::Status::MachineInUse</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">getStatus</a>(), <span class="stringliteral">&quot;Status not MachineInUse&quot;</span>);</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span> </div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().getActiveUser().card_uid == card_uid2, <span class="stringliteral">&quot;User UID is not expected&quot;</span>);</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>    TEST_ASSERT_TRUE_MESSAGE(!<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().isFree(), <span class="stringliteral">&quot;Machine is free&quot;</span>);</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span> </div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>    <span class="keyword">auto</span> save_result = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac2feade03b2a74a1998dcec282a8eacb">getServer</a>().saveBuffer();</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>    TEST_ASSERT_TRUE_MESSAGE(save_result, <span class="stringliteral">&quot;Saving buffered messages works&quot;</span>);</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>  }</div>
</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span> </div>
<div class="foldopen" id="foldopen00205" data-start="{" data-end="}">
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#afa92fef9250d918ee02c79dbf2de2546">  205</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#afa92fef9250d918ee02c79dbf2de2546">test_user_autologoff</a>()</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>  {</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a6a7645a865dc822746f972ea6f43224d">machine_init</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>);</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>    <span class="keyword">auto</span> &amp;machine = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a8332053c1e3343652632bde1a81a9ff4">getMachineForTesting</a>();</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>    machine.setGracePeriod(5s);</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span> </div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().getAutologoffDelay() == <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1machine.xhtml#ad6ef16188656c4ca243871b47ae55f33">conf::machine::DEFAULT_AUTO_LOGOFF_DELAY</a>, <span class="stringliteral">&quot;Autologoff delay not default&quot;</span>);</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span> </div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>    <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a49df0c7440292476d25f1e76973cadb4">setAutologoffDelay</a>(10s);</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().getAutologoffDelay() == 10s, <span class="stringliteral">&quot;Autologoff delay not 10s&quot;</span>);</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span> </div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a3cc28b06ae6cfaf6bcf329ec858bcb41">get_test_uid</a>(0));</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>    TEST_ASSERT_EQUAL_UINT16_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0afebcd1edf6010db4858e623d1dd2f3bc">BoardLogic::Status::LoggedIn</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">getStatus</a>(), <span class="stringliteral">&quot;Status not LoggedIn&quot;</span>);</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>    TEST_ASSERT_TRUE_MESSAGE(machine.getPowerState() == <a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a5fb98f2976a3f8c8980354a730398a87">Machine::PowerState::PoweredOn</a>, <span class="stringliteral">&quot;Machine is powered on&quot;</span>);</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>    <span class="comment">// Card away</span></div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, std::nullopt);</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span> </div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>    TEST_ASSERT_FALSE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().isFree(), <span class="stringliteral">&quot;Machine is free&quot;</span>);</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>    TEST_ASSERT_FALSE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().isAutologoffExpired(), <span class="stringliteral">&quot;Autologoff not expired&quot;</span>);</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>    TEST_ASSERT_EQUAL_UINT16_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a0bbe2b46fd8bc4ccf79f21530983518d">BoardLogic::Status::MachineInUse</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">getStatus</a>(), <span class="stringliteral">&quot;Status not MachineInUse&quot;</span>);</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span> </div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>    <span class="comment">// Now shall expire afer 10s</span></div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, std::nullopt, 10s);</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().isAutologoffExpired(), <span class="stringliteral">&quot;Autologoff expired&quot;</span>);</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span> </div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>    <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a98a15cc323f97adc394c29e897afc12d">logout</a>();</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, std::nullopt, 5s);</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().isFree(), <span class="stringliteral">&quot;Machine is free&quot;</span>);</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>    TEST_ASSERT_EQUAL_UINT16_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a276dffa823d39fc437cea5e3fd7706ea">BoardLogic::Status::MachineFree</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">getStatus</a>(), <span class="stringliteral">&quot;Status not MachineFree&quot;</span>);</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>    TEST_ASSERT_TRUE_MESSAGE(machine.canPowerOff(), <span class="stringliteral">&quot;Machine should be powered off&quot;</span>);</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>    machine.power(<span class="keyword">false</span>);</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>    TEST_ASSERT_EQUAL_UINT8_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838ab161cc0f80e1c236e1f0816a42c4a00c">Machine::PowerState::PoweredOff</a>, machine.getPowerState(), <span class="stringliteral">&quot;(2) Machine is powered off&quot;</span>);</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span> </div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>    <span class="comment">// Check Grace period</span></div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a3cc28b06ae6cfaf6bcf329ec858bcb41">get_test_uid</a>(0), 1s); <span class="comment">// Login</span></div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>    TEST_ASSERT_EQUAL_UINT8_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a5fb98f2976a3f8c8980354a730398a87">Machine::PowerState::PoweredOn</a>, machine.getPowerState(), <span class="stringliteral">&quot;(2) Machine is ON&quot;</span>);</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a3cc28b06ae6cfaf6bcf329ec858bcb41">get_test_uid</a>(0), 1s); <span class="comment">// Logout</span></div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>    TEST_ASSERT_EQUAL_UINT8_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a878a40722160ead08a1f3cdef3e70a14">Machine::PowerState::WaitingPowerOff</a>, machine.getPowerState(), <span class="stringliteral">&quot;(2) Machine is waiting for power off&quot;</span>);</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>    TEST_ASSERT_TRUE_MESSAGE(machine.isShutdownImminent(), <span class="stringliteral">&quot;Machine in grace period&quot;</span>);</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>    TEST_ASSERT_FALSE_MESSAGE(machine.canPowerOff(), <span class="stringliteral">&quot;Machine cannot be powered off yet&quot;</span>);</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, std::nullopt, 5s); <span class="comment">// Let grace period expire</span></div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>    TEST_ASSERT_FALSE_MESSAGE(machine.isShutdownImminent(), <span class="stringliteral">&quot;Machine is still in grace period&quot;</span>);</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>    TEST_ASSERT_TRUE_MESSAGE(machine.canPowerOff(), <span class="stringliteral">&quot;Machine can now be powered off&quot;</span>);</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>    machine.power(<span class="keyword">false</span>);</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span> </div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>    TEST_ASSERT_EQUAL_UINT8_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838ab161cc0f80e1c236e1f0816a42c4a00c">Machine::PowerState::PoweredOff</a>, machine.getPowerState(), <span class="stringliteral">&quot;Machine is powered off&quot;</span>);</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span> </div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>    <span class="keyword">auto</span> save_result = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac2feade03b2a74a1998dcec282a8eacb">getServer</a>().saveBuffer();</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>    TEST_ASSERT_TRUE_MESSAGE(save_result, <span class="stringliteral">&quot;Saving buffered messages works&quot;</span>);</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>  }</div>
</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span> </div>
<div class="foldopen" id="foldopen00256" data-start="{" data-end="}">
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a9a34631c2dc01cbdbbce146895c94e12">  256</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a9a34631c2dc01cbdbbce146895c94e12">test_machine_maintenance</a>()</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>  {</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a6a7645a865dc822746f972ea6f43224d">machine_init</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>);</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span> </div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>    <span class="keyword">auto</span> &amp;machine = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a8332053c1e3343652632bde1a81a9ff4">getMachineForTesting</a>();</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>    <span class="keyword">const</span> <span class="keyword">auto</span> card_fabuser = <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a3cc28b06ae6cfaf6bcf329ec858bcb41">get_test_uid</a>(2);</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>    <span class="keyword">const</span> <span class="keyword">auto</span> card_admin = <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a3cc28b06ae6cfaf6bcf329ec858bcb41">get_test_uid</a>(0);</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span> </div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>    machine.setAllowed(<span class="keyword">true</span>);</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>    machine.setMaintenanceNeeded(<span class="keyword">true</span>);</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, card_fabuser);</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>    TEST_ASSERT_EQUAL_UINT16_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0aac426b0c913ec5ba40bda964477b4896">BoardLogic::Status::MaintenanceNeeded</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">getStatus</a>(), <span class="stringliteral">&quot;Status not MaintenanceNeeded&quot;</span>);</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span> </div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, std::nullopt);</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, card_admin, <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1machine.xhtml#a02738ffd3c6433a682f080b0e6741627">conf::machine::LONG_TAP_DURATION</a> + 3s); <span class="comment">// Log in + Conferma manutenzione perché non ritorna prima della conclusione</span></div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, std::nullopt);                                      <span class="comment">// Card away</span></div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>    TEST_ASSERT_EQUAL_UINT16_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a0bbe2b46fd8bc4ccf79f21530983518d">BoardLogic::Status::MachineInUse</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">getStatus</a>(), <span class="stringliteral">&quot;Status not MachineInUse by admin&quot;</span>);</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>    TEST_ASSERT_FALSE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().isMaintenanceNeeded(), <span class="stringliteral">&quot;Maintenance not cleared by admin&quot;</span>);</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span> </div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>    <span class="comment">// Logoff admin</span></div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, card_admin);</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>().isFree(), <span class="stringliteral">&quot;Machine is not free&quot;</span>);</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, std::nullopt);</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span> </div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>    <span class="comment">// Now try to logon with fabuser (should succeed because maintenance is cleared)</span></div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, card_fabuser);</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, std::nullopt);</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>    TEST_ASSERT_EQUAL_UINT16_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a0bbe2b46fd8bc4ccf79f21530983518d">BoardLogic::Status::MachineInUse</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">getStatus</a>(), <span class="stringliteral">&quot;Status not MachineInUse by normal user&quot;</span>);</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>  }</div>
</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span> </div>
<div class="foldopen" id="foldopen00286" data-start="{" data-end="}">
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a558e2287db01a4622581246a19dac397">  286</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a558e2287db01a4622581246a19dac397">test_machine_allowed</a>()</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>  {</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a6a7645a865dc822746f972ea6f43224d">machine_init</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>);</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span> </div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>    <span class="keyword">auto</span> &amp;machine = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a8332053c1e3343652632bde1a81a9ff4">getMachineForTesting</a>();</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>    <span class="keyword">auto</span> card_fabuser = <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a3cc28b06ae6cfaf6bcf329ec858bcb41">get_test_uid</a>(3);</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>    <span class="keyword">auto</span> card_admin = <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a3cc28b06ae6cfaf6bcf329ec858bcb41">get_test_uid</a>(0);</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span> </div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>    machine.setAllowed(<span class="keyword">false</span>);</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>    machine.setMaintenanceNeeded(<span class="keyword">false</span>);</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span> </div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>    <span class="comment">// check if blocked for normal users</span></div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, card_fabuser);</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>    TEST_ASSERT_EQUAL_UINT16_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0afa89fcc81e9dcfd52671c968fe4e6ddf">BoardLogic::Status::NotAllowed</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">getStatus</a>(), <span class="stringliteral">&quot;Status not NotAllowed&quot;</span>);</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, std::nullopt);</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span> </div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>    <span class="comment">// still blocked for admins</span></div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, card_admin);</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>    TEST_ASSERT_EQUAL_UINT16_MESSAGE(<a class="code hl_enumvalue" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0afa89fcc81e9dcfd52671c968fe4e6ddf">BoardLogic::Status::NotAllowed</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">getStatus</a>(), <span class="stringliteral">&quot;Status not NotAllowed for admins&quot;</span>);</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, std::nullopt);</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>  }</div>
</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span> </div>
<div class="foldopen" id="foldopen00308" data-start="{" data-end="}">
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#af8fa7ace86309b5f699540d8898660c7">  308</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#af8fa7ace86309b5f699540d8898660c7">test_messages_buffered</a>()</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>  {</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>    <span class="keyword">auto</span> card_admin = <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a3cc28b06ae6cfaf6bcf329ec858bcb41">get_test_uid</a>(0);</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>    <span class="keyword">auto</span> &amp;backend = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac2feade03b2a74a1998dcec282a8eacb">getServer</a>();</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span> </div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, card_admin, 500ms); <span class="comment">// Start use</span></div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>    delay(1);                                           <span class="comment">// 1s usage</span></div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>    <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">simulate_rfid_card</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">logic</a>, card_admin, 500ms); <span class="comment">// End use</span></div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span> </div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span>    TEST_ASSERT_TRUE_MESSAGE(backend.hasBufferedMsg(), <span class="stringliteral">&quot;Messages have been buffered&quot;</span>);</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span> </div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>    <span class="keyword">auto</span> result = backend.transmitBuffer();</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>    TEST_ASSERT_FALSE_MESSAGE(result, <span class="stringliteral">&quot;Retransmission fails&quot;</span>);</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span> </div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>    <span class="keyword">auto</span> save_result = backend.saveBuffer();</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>    TEST_ASSERT_TRUE_MESSAGE(save_result, <span class="stringliteral">&quot;Saving buffered messages works&quot;</span>);</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span> </div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span>    <span class="keyword">auto</span> sc = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">SavedConfig::LoadFromEEPROM</a>();</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>    TEST_ASSERT_TRUE_MESSAGE(sc.has_value(), <span class="stringliteral">&quot;SavedConfig has valid contents&quot;</span>);</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span> </div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>    backend.configure(sc.value());</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>    TEST_ASSERT_TRUE_MESSAGE(backend.hasBufferedMsg(), <span class="stringliteral">&quot;Reloading buffered messages works&quot;</span>);</div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span>  }</div>
</div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span>} <span class="comment">// namespace fabomatic::tests</span></div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span> </div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno"><a class="line" href="test__logic_8cpp.xhtml#a9909011e5fea0c018842eec4d93d0662">  333</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="test__logic_8cpp.xhtml#a9909011e5fea0c018842eec4d93d0662">tearDown</a>(<span class="keywordtype">void</span>) {};</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span> </div>
<div class="foldopen" id="foldopen00335" data-start="{" data-end="}">
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno"><a class="line" href="test__logic_8cpp.xhtml#a95c834d6178047ce9e1bce7cbfea2836">  335</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="test__logic_8cpp.xhtml#a95c834d6178047ce9e1bce7cbfea2836">setUp</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>{</div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span>  TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">fabomatic::SavedConfig::DefaultConfig</a>().SaveToEEPROM(), <span class="stringliteral">&quot;Default config save failed&quot;</span>);</div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span>  TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#adc1f2896666e6e9cfa789c22baa6a603">configure</a>(<a class="code hl_variable" href="test__logic_8cpp.xhtml#af6931c3ecf1cb64d3ff6cb0eab2e590c">rfid</a>, <a class="code hl_variable" href="test__logic_8cpp.xhtml#afaf1857dab1bf829c9be096238cf2de5">lcd</a>), <span class="stringliteral">&quot;BoardLogic configure failed&quot;</span>);</div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span>  TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3e9fedd51e4895834a9ebea17cba4331">initBoard</a>(), <span class="stringliteral">&quot;BoardLogic init failed&quot;</span>);</div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span>  <a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a9a548ef4e0beba3b67d85d7d80dbaf18">setWhitelist</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#af9a30e2db3fbfa479b6512cfd428aab1">fabomatic::tests::test_whitelist</a>);</div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span>  <span class="comment">// Disable MQTT for tests</span></div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span>  <span class="keywordflow">if</span> (<span class="keyword">auto</span> server_config = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">fabomatic::SavedConfig::LoadFromEEPROM</a>(); server_config.has_value())</div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span>  {</div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>    <span class="keyword">auto</span> conf = server_config.value();</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span>    conf.mqtt_server.assign(<span class="stringliteral">&quot;INVALID_SERVER&quot;</span>);</div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span>    <a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac2feade03b2a74a1998dcec282a8eacb">getServer</a>().configure(conf);</div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span>  }</div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span>};</div>
</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span> </div>
<div class="foldopen" id="foldopen00350" data-start="{" data-end="}">
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno"><a class="line" href="test__logic_8cpp.xhtml#a4fc01d736fe50cf5b977f755b675f11d">  350</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="test__logic_8cpp.xhtml#a4fc01d736fe50cf5b977f755b675f11d">setup</a>()</div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span>{</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span>  delay(1000);</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span>  esp_log_level_set(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <a class="code hl_define" href="_logging_8hpp.xhtml#a5155a7b7465dd9b5e6167122827d0158">LOG_LOCAL_LEVEL</a>);</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span> </div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span>  <span class="keyword">auto</span> config = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">fabomatic::SavedConfig::LoadFromEEPROM</a>();</div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span>  UNITY_BEGIN();</div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a574e0054ef8ba573fc2efd53600b0ec4">fabomatic::tests::test_machine_defaults</a>);</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#aec03a7ee459718d314b930fdd75d3cee">fabomatic::tests::test_simple_methods</a>);</div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a558e2287db01a4622581246a19dac397">fabomatic::tests::test_machine_allowed</a>);</div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a9a34631c2dc01cbdbbce146895c94e12">fabomatic::tests::test_machine_maintenance</a>);</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#aab0f4e1439b281ffef8be51db9a81f9d">fabomatic::tests::test_whitelist_no_network</a>);</div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a6f3dff17fd964aba76c35c514957a0a5">fabomatic::tests::test_one_user_at_a_time</a>);</div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#afa92fef9250d918ee02c79dbf2de2546">fabomatic::tests::test_user_autologoff</a>);</div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#af8fa7ace86309b5f699540d8898660c7">fabomatic::tests::test_messages_buffered</a>);</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span>  UNITY_END(); <span class="comment">// stop unit testing</span></div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span>  <span class="keywordflow">if</span> (config.has_value())</div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno">  367</span>  {</div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>    config.value().SaveToEEPROM();</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span>  }</div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span>};</div>
</div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span> </div>
<div class="foldopen" id="foldopen00372" data-start="{" data-end="}">
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno"><a class="line" href="test__logic_8cpp.xhtml#afe461d27b9c48d5921c00d521181f12f">  372</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="test__logic_8cpp.xhtml#afe461d27b9c48d5921c00d521181f12f">loop</a>()</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span>{</div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span>}</div>
</div>
<div class="ttc" id="a_board_logic_8hpp_xhtml"><div class="ttname"><a href="_board_logic_8hpp.xhtml">BoardLogic.hpp</a></div></div>
<div class="ttc" id="a_fab_backend_8hpp_xhtml"><div class="ttname"><a href="_fab_backend_8hpp.xhtml">FabBackend.hpp</a></div></div>
<div class="ttc" id="a_l_c_d_wrapper_8hpp_xhtml"><div class="ttname"><a href="_l_c_d_wrapper_8hpp.xhtml">LCDWrapper.hpp</a></div></div>
<div class="ttc" id="a_logging_8hpp_xhtml_a4ef5b5f197804a60836ab1e8907d8301"><div class="ttname"><a href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a></div><div class="ttdeci">static const char *const TAG</div><div class="ttdef"><b>Definition</b> <a href="_logging_8hpp_source.xhtml#l00009">Logging.hpp:9</a></div></div>
<div class="ttc" id="a_logging_8hpp_xhtml_a5155a7b7465dd9b5e6167122827d0158"><div class="ttname"><a href="_logging_8hpp.xhtml#a5155a7b7465dd9b5e6167122827d0158">LOG_LOCAL_LEVEL</a></div><div class="ttdeci">#define LOG_LOCAL_LEVEL</div><div class="ttdef"><b>Definition</b> <a href="_logging_8hpp_source.xhtml#l00005">Logging.hpp:5</a></div></div>
<div class="ttc" id="a_mock_m_q_t_t_broker_8hpp_xhtml"><div class="ttname"><a href="_mock_m_q_t_t_broker_8hpp.xhtml">MockMQTTBroker.hpp</a></div></div>
<div class="ttc" id="a_mock_mrfc522_8hpp_xhtml"><div class="ttname"><a href="_mock_mrfc522_8hpp.xhtml">MockMrfc522.hpp</a></div></div>
<div class="ttc" id="a_r_f_i_d_wrapper_8hpp_xhtml"><div class="ttname"><a href="_r_f_i_d_wrapper_8hpp.xhtml">RFIDWrapper.hpp</a></div></div>
<div class="ttc" id="a_saved_config_8hpp_xhtml"><div class="ttname"><a href="_saved_config_8hpp.xhtml">SavedConfig.hpp</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></div><div class="ttdoc">Main class implementing the state changes.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8hpp_source.xhtml#l00019">BoardLogic.hpp:20</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a164e40105242d0b7c56c6b4f21155101"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">fabomatic::BoardLogic::getMachine</a></div><div class="ttdeci">auto getMachine() const -&gt; const Machine &amp;</div><div class="ttdoc">Gets the current machine.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00589">BoardLogic.cpp:589</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a1724172254d9262c6b1a61cf5de5cee0"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a1724172254d9262c6b1a61cf5de5cee0">fabomatic::BoardLogic::getBuzzerForTesting</a></div><div class="ttdeci">auto getBuzzerForTesting() -&gt; Buzzer *</div><div class="ttdoc">returns a modificable machine for testing only</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00582">BoardLogic.cpp:582</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a17520059a761d7b76513724f8f56dc9c"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">fabomatic::BoardLogic::getStatus</a></div><div class="ttdeci">auto getStatus() const -&gt; Status</div><div class="ttdoc">Gets the current board status.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00428">BoardLogic.cpp:428</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a25bdc3a49d850aa49f92faf951b68efb"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a25bdc3a49d850aa49f92faf951b68efb">fabomatic::BoardLogic::checkRfid</a></div><div class="ttdeci">auto checkRfid() -&gt; void</div><div class="ttdoc">Checks if a new card is present.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00537">BoardLogic.cpp:537</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a075d9c9ae8c8f1c79c1a1965cd8c5a42"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a075d9c9ae8c8f1c79c1a1965cd8c5a42">fabomatic::BoardLogic::Status::ShuttingDown</a></div><div class="ttdeci">@ ShuttingDown</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a0bbe2b46fd8bc4ccf79f21530983518d"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a0bbe2b46fd8bc4ccf79f21530983518d">fabomatic::BoardLogic::Status::MachineInUse</a></div><div class="ttdeci">@ MachineInUse</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a0df4bdde6ecbaa556250a62412817982"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a0df4bdde6ecbaa556250a62412817982">fabomatic::BoardLogic::Status::PortalStarting</a></div><div class="ttdeci">@ PortalStarting</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a195c01d301a592904e026b829f658f4b"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a195c01d301a592904e026b829f658f4b">fabomatic::BoardLogic::Status::OTAStarting</a></div><div class="ttdeci">@ OTAStarting</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a1e50b02a42cd210ea7dc0ed55e79f9d6"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a1e50b02a42cd210ea7dc0ed55e79f9d6">fabomatic::BoardLogic::Status::ErrorHardware</a></div><div class="ttdeci">@ ErrorHardware</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a276dffa823d39fc437cea5e3fd7706ea"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a276dffa823d39fc437cea5e3fd7706ea">fabomatic::BoardLogic::Status::MachineFree</a></div><div class="ttdeci">@ MachineFree</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a2ec0d16e4ca169baedb9b2d50ec5c6d7"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a2ec0d16e4ca169baedb9b2d50ec5c6d7">fabomatic::BoardLogic::Status::Connected</a></div><div class="ttdeci">@ Connected</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a317613b2a5acaaa53519c44526a11859"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a317613b2a5acaaa53519c44526a11859">fabomatic::BoardLogic::Status::LoginDenied</a></div><div class="ttdeci">@ LoginDenied</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a40d7d2e7b91cecc73800e47accd25ca8"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a40d7d2e7b91cecc73800e47accd25ca8">fabomatic::BoardLogic::Status::PortalSuccess</a></div><div class="ttdeci">@ PortalSuccess</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a5c02116895314194cd3ba79c0eb2cec4"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a5c02116895314194cd3ba79c0eb2cec4">fabomatic::BoardLogic::Status::Verifying</a></div><div class="ttdeci">@ Verifying</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a6d3cb253e5f0cfa98184c8509beafcf0"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a6d3cb253e5f0cfa98184c8509beafcf0">fabomatic::BoardLogic::Status::AlreadyInUse</a></div><div class="ttdeci">@ AlreadyInUse</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a8d9da4bc0e49a50e09ac9f7e56789d39"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a8d9da4bc0e49a50e09ac9f7e56789d39">fabomatic::BoardLogic::Status::Offline</a></div><div class="ttdeci">@ Offline</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a902b0d55fddef6f8d651fe1035b7d4bd"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a902b0d55fddef6f8d651fe1035b7d4bd">fabomatic::BoardLogic::Status::Error</a></div><div class="ttdeci">@ Error</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0a92992e3855328c237975f2806f5b2194"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0a92992e3855328c237975f2806f5b2194">fabomatic::BoardLogic::Status::MaintenanceDone</a></div><div class="ttdeci">@ MaintenanceDone</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0aa358d35f0818b076115b29a0490253d7"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0aa358d35f0818b076115b29a0490253d7">fabomatic::BoardLogic::Status::PortalFailed</a></div><div class="ttdeci">@ PortalFailed</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0aac426b0c913ec5ba40bda964477b4896"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0aac426b0c913ec5ba40bda964477b4896">fabomatic::BoardLogic::Status::MaintenanceNeeded</a></div><div class="ttdeci">@ MaintenanceNeeded</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0ad31181c15b9b2bfe52e84052376b0c04"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ad31181c15b9b2bfe52e84052376b0c04">fabomatic::BoardLogic::Status::Booting</a></div><div class="ttdeci">@ Booting</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0ad8a942ef2b04672adfafef0ad817a407"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ad8a942ef2b04672adfafef0ad817a407">fabomatic::BoardLogic::Status::Busy</a></div><div class="ttdeci">@ Busy</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0adbb4b0a2d8a60cbf820c75233ab84e18"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0adbb4b0a2d8a60cbf820c75233ab84e18">fabomatic::BoardLogic::Status::MaintenanceQuery</a></div><div class="ttdeci">@ MaintenanceQuery</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0adc30bc0c7914db5918da4263fce93ad2"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0adc30bc0c7914db5918da4263fce93ad2">fabomatic::BoardLogic::Status::Clear</a></div><div class="ttdeci">@ Clear</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0ae27816978dfe5f0f3acd72cee314955f"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae27816978dfe5f0f3acd72cee314955f">fabomatic::BoardLogic::Status::LoggedOut</a></div><div class="ttdeci">@ LoggedOut</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0ae321c53b354930ba96f0243e652df458"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae321c53b354930ba96f0243e652df458">fabomatic::BoardLogic::Status::Connecting</a></div><div class="ttdeci">@ Connecting</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0ae8d0fe00091000284822d7216b46b6cf"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0ae8d0fe00091000284822d7216b46b6cf">fabomatic::BoardLogic::Status::FactoryDefaults</a></div><div class="ttdeci">@ FactoryDefaults</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0afa89fcc81e9dcfd52671c968fe4e6ddf"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0afa89fcc81e9dcfd52671c968fe4e6ddf">fabomatic::BoardLogic::Status::NotAllowed</a></div><div class="ttdeci">@ NotAllowed</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0afebcd1edf6010db4858e623d1dd2f3bc"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0afebcd1edf6010db4858e623d1dd2f3bc">fabomatic::BoardLogic::Status::LoggedIn</a></div><div class="ttdeci">@ LoggedIn</div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3c38d7a3ed7952c6d6297efdf50ea4dd"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">fabomatic::BoardLogic::changeStatus</a></div><div class="ttdeci">auto changeStatus(Status newStatus) -&gt; void</div><div class="ttdoc">Sets the board in the state given.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00266">BoardLogic.cpp:266</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3e9fedd51e4895834a9ebea17cba4331"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3e9fedd51e4895834a9ebea17cba4331">fabomatic::BoardLogic::initBoard</a></div><div class="ttdeci">auto initBoard() -&gt; bool</div><div class="ttdoc">Initializes LCD and RFID classes.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00245">BoardLogic.cpp:245</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a47b4d515c0d3488eceb49769036bce8b"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a47b4d515c0d3488eceb49769036bce8b">fabomatic::BoardLogic::updateLCD</a></div><div class="ttdeci">auto updateLCD() const -&gt; void</div><div class="ttdoc">Updates the LCD screen as per the current status.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00278">BoardLogic.cpp:278</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a49df0c7440292476d25f1e76973cadb4"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a49df0c7440292476d25f1e76973cadb4">fabomatic::BoardLogic::setAutologoffDelay</a></div><div class="ttdeci">auto setAutologoffDelay(std::chrono::seconds delay) -&gt; void</div><div class="ttdoc">Sets the autologoff delay.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00612">BoardLogic.cpp:612</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a51390e6bf10c4de427abd7f175a2e6a8"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a51390e6bf10c4de427abd7f175a2e6a8">fabomatic::BoardLogic::authorize</a></div><div class="ttdeci">auto authorize(const card::uid_t uid) -&gt; bool</div><div class="ttdoc">Checks if the card UID is valid, and tries to check the user in to the machine.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00157">BoardLogic.cpp:157</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a8332053c1e3343652632bde1a81a9ff4"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a8332053c1e3343652632bde1a81a9ff4">fabomatic::BoardLogic::getMachineForTesting</a></div><div class="ttdeci">auto getMachineForTesting() -&gt; Machine &amp;</div><div class="ttdoc">returns a modificable machine for testing only</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00575">BoardLogic.cpp:575</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a8e0c35d138333907cc217c9e141091cd"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a8e0c35d138333907cc217c9e141091cd">fabomatic::BoardLogic::beepOk</a></div><div class="ttdeci">auto beepOk() const -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00433">BoardLogic.cpp:433</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a98a15cc323f97adc394c29e897afc12d"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a98a15cc323f97adc394c29e897afc12d">fabomatic::BoardLogic::logout</a></div><div class="ttdeci">auto logout() -&gt; void</div><div class="ttdoc">Removes the current machine user and changes the status to LoggedOut.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00105">BoardLogic.cpp:105</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a9a548ef4e0beba3b67d85d7d80dbaf18"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a9a548ef4e0beba3b67d85d7d80dbaf18">fabomatic::BoardLogic::setWhitelist</a></div><div class="ttdeci">auto setWhitelist(WhiteList whitelist) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00617">BoardLogic.cpp:617</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_ac05af486941c620c9494ba545dd83c3d"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#ac05af486941c620c9494ba545dd83c3d">fabomatic::BoardLogic::checkPowerOff</a></div><div class="ttdeci">auto checkPowerOff() -&gt; void</div><div class="ttdoc">Checks if the machine must be powered off.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00565">BoardLogic.cpp:565</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_ac198a07d00fda36a527cd9db2d97efc1"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#ac198a07d00fda36a527cd9db2d97efc1">fabomatic::BoardLogic::beepFail</a></div><div class="ttdeci">auto beepFail() const -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00438">BoardLogic.cpp:438</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_ac2feade03b2a74a1998dcec282a8eacb"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#ac2feade03b2a74a1998dcec282a8eacb">fabomatic::BoardLogic::getServer</a></div><div class="ttdeci">auto getServer() -&gt; FabBackend &amp;</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00622">BoardLogic.cpp:622</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_ad05b4db308773e56d866fe87d34022d9"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#ad05b4db308773e56d866fe87d34022d9">fabomatic::BoardLogic::blinkLed</a></div><div class="ttdeci">auto blinkLed(uint8_t r=0, uint8_t g=0, uint8_t b=0) -&gt; void</div><div class="ttdoc">Blinks the LED.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00487">BoardLogic.cpp:487</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_ad4d15925f4f48caa25335db63aeab734"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#ad4d15925f4f48caa25335db63aeab734">fabomatic::BoardLogic::reconfigure</a></div><div class="ttdeci">auto reconfigure() -&gt; bool</div><div class="ttdoc">Configures the board with the given references.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00452">BoardLogic.cpp:452</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_adc1f2896666e6e9cfa789c22baa6a603"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#adc1f2896666e6e9cfa789c22baa6a603">fabomatic::BoardLogic::configure</a></div><div class="ttdeci">auto configure(BaseRFIDWrapper &amp;rfid, LCDWrapper &amp;lcd) -&gt; bool</div><div class="ttdoc">Configures the board with the given references.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00444">BoardLogic.cpp:444</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_l_c_d_wrapper_xhtml"><div class="ttname"><a href="classfabomatic_1_1_l_c_d_wrapper.xhtml">fabomatic::LCDWrapper</a></div><div class="ttdoc">LCD display wrapper.</div><div class="ttdef"><b>Definition</b> <a href="_l_c_d_wrapper_8hpp_source.xhtml#l00014">LCDWrapper.hpp:15</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a409acc0089d7cfe849b2e775840e5838a5fb98f2976a3f8c8980354a730398a87"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a5fb98f2976a3f8c8980354a730398a87">fabomatic::Machine::PowerState::PoweredOn</a></div><div class="ttdeci">@ PoweredOn</div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a409acc0089d7cfe849b2e775840e5838a878a40722160ead08a1f3cdef3e70a14"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a878a40722160ead08a1f3cdef3e70a14">fabomatic::Machine::PowerState::WaitingPowerOff</a></div><div class="ttdeci">@ WaitingPowerOff</div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a409acc0089d7cfe849b2e775840e5838ab161cc0f80e1c236e1f0816a42c4a00c"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838ab161cc0f80e1c236e1f0816a42c4a00c">fabomatic::Machine::PowerState::PoweredOff</a></div><div class="ttdeci">@ PoweredOff</div></div>
<div class="ttc" id="aclassfabomatic_1_1_r_f_i_d_wrapper_xhtml"><div class="ttname"><a href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a></div><div class="ttdoc">Driver class for the RFID reader chip.</div><div class="ttdef"><b>Definition</b> <a href="_r_f_i_d_wrapper_8hpp_source.xhtml#l00018">RFIDWrapper.hpp:19</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a3a6f62510c34ed7a4491022e4e43b9c2"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">fabomatic::SavedConfig::DefaultConfig</a></div><div class="ttdeci">static auto DefaultConfig() -&gt; SavedConfig</div><div class="ttdoc">Returns the default configuration built from conf.hpp and secrets.hpp.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00028">SavedConfig.cpp:28</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_aca3fe97dfa74c005d47ffef700392d99"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">fabomatic::SavedConfig::LoadFromEEPROM</a></div><div class="ttdeci">static auto LoadFromEEPROM() -&gt; std::optional&lt; SavedConfig &gt;</div><div class="ttdoc">Loads the configuration from EEPROM if available and matching revision number.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00052">SavedConfig.cpp:52</a></div></div>
<div class="ttc" id="aconf_8hpp_xhtml"><div class="ttname"><a href="conf_8hpp.xhtml">conf.hpp</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_tasks_xhtml_a5c20f560f5934822d39ba116a16f3ab6"><div class="ttname"><a href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">fabomatic::Tasks::delay</a></div><div class="ttdeci">auto delay(const milliseconds duration) -&gt; void</div><div class="ttdoc">Wait for a delay, allowing OTA updates.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00266">Tasks.cpp:266</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1buzzer_xhtml_a666a5622c77b3d0662013cce03bab07a"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1buzzer.xhtml#a666a5622c77b3d0662013cce03bab07a">fabomatic::conf::buzzer::NB_BEEPS</a></div><div class="ttdeci">constexpr auto NB_BEEPS</div><div class="ttdoc">Number of beeps every time the function is called.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00108">conf.hpp:108</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1default__config_xhtml_a2a77484183bbfbb6330615405509a615"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1default__config.xhtml#a2a77484183bbfbb6330615405509a615">fabomatic::conf::default_config::machine_name</a></div><div class="ttdeci">constexpr std::string_view machine_name</div><div class="ttdoc">Default machine name for LCD. Will be overriden with Backend config data.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00021">conf.hpp:21</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1default__config_xhtml_a6c7775af29f012f0623c8898f1998ea1"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1default__config.xhtml#a6c7775af29f012f0623c8898f1998ea1">fabomatic::conf::default_config::machine_id</a></div><div class="ttdeci">constexpr MachineID machine_id</div><div class="ttdoc">Default MachineID for backend. Can be overriden through WiFi Portal config.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00018">conf.hpp:18</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1machine_xhtml_a02738ffd3c6433a682f080b0e6741627"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1machine.xhtml#a02738ffd3c6433a682f080b0e6741627">fabomatic::conf::machine::LONG_TAP_DURATION</a></div><div class="ttdeci">constexpr auto LONG_TAP_DURATION</div><div class="ttdoc">Minimum time to confirm by long tap maintenance.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00071">conf.hpp:71</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1machine_xhtml_a631ccc042adb96b1102806b117093a32"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1machine.xhtml#a631ccc042adb96b1102806b117093a32">fabomatic::conf::machine::DELAY_BETWEEN_SWEEPS</a></div><div class="ttdeci">constexpr auto DELAY_BETWEEN_SWEEPS</div><div class="ttdoc">Disabled RFID reading after a successfull read for X seconds.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00074">conf.hpp:74</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1machine_xhtml_ad6ef16188656c4ca243871b47ae55f33"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1machine.xhtml#ad6ef16188656c4ca243871b47ae55f33">fabomatic::conf::machine::DEFAULT_AUTO_LOGOFF_DELAY</a></div><div class="ttdeci">constexpr auto DEFAULT_AUTO_LOGOFF_DELAY</div><div class="ttdoc">User will be log out after this delay. If 0h, no auto-logout. This may be overriden by backend data.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00059">conf.hpp:59</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1mqtt_xhtml_a27d3131c4e18f30225c9499cadb75ff4"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a27d3131c4e18f30225c9499cadb75ff4">fabomatic::conf::mqtt::mqtt_switch_topic</a></div><div class="ttdeci">constexpr std::string_view mqtt_switch_topic</div><div class="ttdoc">In case Shelly is used, name of the topic on MQTT Broker.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00166">conf.hpp:166</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml">fabomatic::tests</a></div><div class="ttdef"><b>Definition</b> <a href="test__chrono_8cpp_source.xhtml#l00018">test_chrono.cpp:19</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a2600320f41c9fa343c66058ecb12b5ee"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a2600320f41c9fa343c66058ecb12b5ee">fabomatic::tests::simulate_rfid_card</a></div><div class="ttdeci">BoardLogic::Status simulate_rfid_card(RFIDWrapper&lt; MockMrfc522 &gt; &amp;rfid, BoardLogic &amp;logic, std::optional&lt; card::uid_t &gt; uid, std::optional&lt; std::chrono::milliseconds &gt; duration_tap)</div><div class="ttdoc">Simulates RFID card tap.</div><div class="ttdef"><b>Definition</b> <a href="test__common_8cpp_source.xhtml#l00020">test_common.cpp:20</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a3cc28b06ae6cfaf6bcf329ec858bcb41"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a3cc28b06ae6cfaf6bcf329ec858bcb41">fabomatic::tests::get_test_uid</a></div><div class="ttdeci">constexpr fabomatic::card::uid_t get_test_uid(size_t idx)</div><div class="ttdef"><b>Definition</b> <a href="test__common_8h_source.xhtml#l00038">test_common.h:38</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a558e2287db01a4622581246a19dac397"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a558e2287db01a4622581246a19dac397">fabomatic::tests::test_machine_allowed</a></div><div class="ttdeci">void test_machine_allowed()</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00286">test_logic.cpp:286</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a574e0054ef8ba573fc2efd53600b0ec4"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a574e0054ef8ba573fc2efd53600b0ec4">fabomatic::tests::test_machine_defaults</a></div><div class="ttdeci">void test_machine_defaults()</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00035">test_logic.cpp:35</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a6a7645a865dc822746f972ea6f43224d"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a6a7645a865dc822746f972ea6f43224d">fabomatic::tests::machine_init</a></div><div class="ttdeci">void machine_init(BoardLogic &amp;logic, RFIDWrapper&lt; MockMrfc522 &gt; &amp;rfid)</div><div class="ttdoc">Resets machine to initial state, clearing flags.</div><div class="ttdef"><b>Definition</b> <a href="test__common_8cpp_source.xhtml#l00056">test_common.cpp:56</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a6f3dff17fd964aba76c35c514957a0a5"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a6f3dff17fd964aba76c35c514957a0a5">fabomatic::tests::test_one_user_at_a_time</a></div><div class="ttdeci">void test_one_user_at_a_time()</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00159">test_logic.cpp:159</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a9a34631c2dc01cbdbbce146895c94e12"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a9a34631c2dc01cbdbbce146895c94e12">fabomatic::tests::test_machine_maintenance</a></div><div class="ttdeci">void test_machine_maintenance()</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00256">test_logic.cpp:256</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_aab0f4e1439b281ffef8be51db9a81f9d"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#aab0f4e1439b281ffef8be51db9a81f9d">fabomatic::tests::test_whitelist_no_network</a></div><div class="ttdeci">void test_whitelist_no_network()</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00111">test_logic.cpp:111</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_ab11df5855a7b6969c5b44b095bce756f"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">fabomatic::tests::rfid</a></div><div class="ttdeci">fabomatic::RFIDWrapper&lt; fabomatic::MockMrfc522 &gt; rfid</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00032">test_mqtt.cpp:32</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_ae67aa957d270478a0793908703b77446"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">fabomatic::tests::logic</a></div><div class="ttdeci">fabomatic::BoardLogic logic</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00034">test_mqtt.cpp:34</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_aec03a7ee459718d314b930fdd75d3cee"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#aec03a7ee459718d314b930fdd75d3cee">fabomatic::tests::test_simple_methods</a></div><div class="ttdeci">void test_simple_methods()</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00064">test_logic.cpp:64</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_af8fa7ace86309b5f699540d8898660c7"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#af8fa7ace86309b5f699540d8898660c7">fabomatic::tests::test_messages_buffered</a></div><div class="ttdeci">void test_messages_buffered()</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00308">test_logic.cpp:308</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_af9a30e2db3fbfa479b6512cfd428aab1"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#af9a30e2db3fbfa479b6512cfd428aab1">fabomatic::tests::test_whitelist</a></div><div class="ttdeci">static constexpr WhiteList test_whitelist</div><div class="ttdef"><b>Definition</b> <a href="test__common_8h_source.xhtml#l00014">test_common.h:15</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_afa92fef9250d918ee02c79dbf2de2546"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#afa92fef9250d918ee02c79dbf2de2546">fabomatic::tests::test_user_autologoff</a></div><div class="ttdeci">void test_user_autologoff()</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00205">test_logic.cpp:205</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_a01a9e2e5f9e92f6f3fa9204ba3d946b9"><div class="ttname"><a href="namespacefabomatic.xhtml#a01a9e2e5f9e92f6f3fa9204ba3d946b9">fabomatic::NO_PIN</a></div><div class="ttdeci">constexpr uint8_t NO_PIN</div><div class="ttdoc">Constant used to indicate the pin is not used.</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00010">PinsConfig.hpp:10</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_a90e4180ab5a1ffd3393b4f0d6b01f2b3"><div class="ttname"><a href="namespacefabomatic.xhtml#a90e4180ab5a1ffd3393b4f0d6b01f2b3">fabomatic::pins</a></div><div class="ttdeci">constexpr pins_config pins</div><div class="ttdef"><b>Definition</b> <a href="pins_8hpp_source.xhtml#l00246">pins.hpp:246</a></div></div>
<div class="ttc" id="astruct_machine_i_d_xhtml_a4be27146270f5fccce68f1c8b951b1d8"><div class="ttname"><a href="struct_machine_i_d.xhtml#a4be27146270f5fccce68f1c8b951b1d8">MachineID::id</a></div><div class="ttdeci">uint16_t id</div><div class="ttdef"><b>Definition</b> <a href="_machine_i_d_8hpp_source.xhtml#l00021">MachineID.hpp:21</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1relay__config_xhtml_a3cfbcbcee8f3bb2aa8a2c6fc1246f27e"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1relay__config.xhtml#a3cfbcbcee8f3bb2aa8a2c6fc1246f27e">fabomatic::pins_config::relay_config::ch1_pin</a></div><div class="ttdeci">uint8_t ch1_pin</div><div class="ttdoc">Control pin for Machine 1.</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00044">PinsConfig.hpp:44</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_xhtml_a310be8cfdd1f9617522c2eb0dd02f252"><div class="ttname"><a href="structfabomatic_1_1pins__config.xhtml#a310be8cfdd1f9617522c2eb0dd02f252">fabomatic::pins_config::relay</a></div><div class="ttdeci">relay_config relay</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00070">PinsConfig.hpp:70</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_xhtml_abd0d35daf6efede38501593182b6d574"><div class="ttname"><a href="structfabomatic_1_1pins__config.xhtml#abd0d35daf6efede38501593182b6d574">fabomatic::pins_config::lcd</a></div><div class="ttdeci">lcd_config lcd</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00069">PinsConfig.hpp:69</a></div></div>
<div class="ttc" id="atest__common_8h_xhtml"><div class="ttname"><a href="test__common_8h.xhtml">test_common.h</a></div></div>
<div class="ttc" id="atest__logic_8cpp_xhtml_a07dd6eb8e9dc2dc50bf69ef6032c5055"><div class="ttname"><a href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a></div><div class="ttdeci">fabomatic::BoardLogic logic</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00029">test_logic.cpp:29</a></div></div>
<div class="ttc" id="atest__logic_8cpp_xhtml_a4fc01d736fe50cf5b977f755b675f11d"><div class="ttname"><a href="test__logic_8cpp.xhtml#a4fc01d736fe50cf5b977f755b675f11d">setup</a></div><div class="ttdeci">void setup()</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00350">test_logic.cpp:350</a></div></div>
<div class="ttc" id="atest__logic_8cpp_xhtml_a61fc6209a48e9414bc6f6dff41c34f09"><div class="ttname"><a href="test__logic_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">TAG3</a></div><div class="ttdeci">static const char * TAG3</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00025">test_logic.cpp:25</a></div></div>
<div class="ttc" id="atest__logic_8cpp_xhtml_a95c834d6178047ce9e1bce7cbfea2836"><div class="ttname"><a href="test__logic_8cpp.xhtml#a95c834d6178047ce9e1bce7cbfea2836">setUp</a></div><div class="ttdeci">void setUp(void)</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00335">test_logic.cpp:335</a></div></div>
<div class="ttc" id="atest__logic_8cpp_xhtml_a9909011e5fea0c018842eec4d93d0662"><div class="ttname"><a href="test__logic_8cpp.xhtml#a9909011e5fea0c018842eec4d93d0662">tearDown</a></div><div class="ttdeci">void tearDown(void)</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00333">test_logic.cpp:333</a></div></div>
<div class="ttc" id="atest__logic_8cpp_xhtml_af6931c3ecf1cb64d3ff6cb0eab2e590c"><div class="ttname"><a href="test__logic_8cpp.xhtml#af6931c3ecf1cb64d3ff6cb0eab2e590c">rfid</a></div><div class="ttdeci">fabomatic::RFIDWrapper&lt; fabomatic::MockMrfc522 &gt; rfid</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00027">test_logic.cpp:27</a></div></div>
<div class="ttc" id="atest__logic_8cpp_xhtml_afaf1857dab1bf829c9be096238cf2de5"><div class="ttname"><a href="test__logic_8cpp.xhtml#afaf1857dab1bf829c9be096238cf2de5">lcd</a></div><div class="ttdeci">fabomatic::LCDWrapper lcd</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00028">test_logic.cpp:28</a></div></div>
<div class="ttc" id="atest__logic_8cpp_xhtml_afe461d27b9c48d5921c00d521181f12f"><div class="ttname"><a href="test__logic_8cpp.xhtml#afe461d27b9c48d5921c00d521181f12f">loop</a></div><div class="ttdeci">void loop()</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00372">test_logic.cpp:372</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Feb 27 2025 22:22:28 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
