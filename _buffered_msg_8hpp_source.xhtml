<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: BufferedMsg.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(0); });
/* @license-end */
</script>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">BufferedMsg.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="_buffered_msg_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#ifndef BUFFEREDMSG_HPP</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#define BUFFEREDMSG_HPP</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;optional&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;queue&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &quot;ArduinoJson.h&quot;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &quot;<a class="code" href="_machine_i_d_8hpp.xhtml">MachineID.hpp</a>&quot;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="preprocessor">#include &quot;<a class="code" href="_m_q_t_ttypes_8hpp.xhtml">MQTTtypes.hpp</a>&quot;</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span> </div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefabomatic.xhtml">fabomatic</a></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>{</div>
<div class="foldopen" id="foldopen00018" data-start="{" data-end="};">
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno"><a class="line" href="structfabomatic_1_1_buffered_msg.xhtml">   18</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  {</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno"><a class="line" href="structfabomatic_1_1_buffered_msg.xhtml#aba3d5f037ab046e241225bcc3afc2cc3">   20</a></span>    std::string <a class="code hl_variable" href="structfabomatic_1_1_buffered_msg.xhtml#aba3d5f037ab046e241225bcc3afc2cc3">mqtt_message</a>;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno"><a class="line" href="structfabomatic_1_1_buffered_msg.xhtml#a4c94f377965a681a402765777ffdc853">   21</a></span>    std::string <a class="code hl_variable" href="structfabomatic_1_1_buffered_msg.xhtml#a4c94f377965a681a402765777ffdc853">mqtt_topic</a>;</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno"><a class="line" href="structfabomatic_1_1_buffered_msg.xhtml#ad9343b7c70e7df301fbb4855bad6c15f">   22</a></span>    <span class="keywordtype">bool</span> <a class="code hl_variable" href="structfabomatic_1_1_buffered_msg.xhtml#ad9343b7c70e7df301fbb4855bad6c15f">wait_for_answer</a>;</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno"><a class="line" href="structfabomatic_1_1_buffered_msg.xhtml#a741f677e91251f5f6deb9fef90912630">   23</a></span>    <a class="code hl_function" href="structfabomatic_1_1_buffered_msg.xhtml#a741f677e91251f5f6deb9fef90912630">BufferedMsg</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno"><a class="line" href="structfabomatic_1_1_buffered_msg.xhtml#a5ce2043e556d1a7fe722607d768566fb">   24</a></span>    <a class="code hl_function" href="structfabomatic_1_1_buffered_msg.xhtml#a5ce2043e556d1a7fe722607d768566fb">BufferedMsg</a>(<span class="keyword">const</span> std::string &amp;message, <span class="keyword">const</span> std::string &amp;topic, <span class="keywordtype">bool</span> wait) : <a class="code hl_variable" href="structfabomatic_1_1_buffered_msg.xhtml#aba3d5f037ab046e241225bcc3afc2cc3">mqtt_message</a>(message), <a class="code hl_variable" href="structfabomatic_1_1_buffered_msg.xhtml#a4c94f377965a681a402765777ffdc853">mqtt_topic</a>(topic), <a class="code hl_variable" href="structfabomatic_1_1_buffered_msg.xhtml#ad9343b7c70e7df301fbb4855bad6c15f">wait_for_answer</a>{wait} {};</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno"><a class="line" href="structfabomatic_1_1_buffered_msg.xhtml#ad0d79c6a22bb20b83251300200d5c21b">   25</a></span>    <a class="code hl_function" href="structfabomatic_1_1_buffered_msg.xhtml#ad0d79c6a22bb20b83251300200d5c21b">BufferedMsg</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a> &amp;source) = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno"><a class="line" href="structfabomatic_1_1_buffered_msg.xhtml#a7a4f5ef998aab2fd89299e2ff1d5eb71">   26</a></span>    <a class="code hl_function" href="structfabomatic_1_1_buffered_msg.xhtml#a7a4f5ef998aab2fd89299e2ff1d5eb71">BufferedMsg</a>(<a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a> &amp;source) = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  };</div>
</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="foldopen" id="foldopen00032" data-start="{" data-end="};">
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffer.xhtml">   32</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_buffer.xhtml">Buffer</a></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  {</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>  <span class="keyword">private</span>:</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffer.xhtml#a24764f4964eca4b9c68b6e98e1d38349">   35</a></span>    std::deque&lt;BufferedMsg&gt; <a class="code hl_variable" href="classfabomatic_1_1_buffer.xhtml#a24764f4964eca4b9c68b6e98e1d38349">msg_queue</a>;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffer.xhtml#a087b3f0759ac226c188e8cba5a89492d">   36</a></span>    <span class="keywordtype">bool</span> <a class="code hl_variable" href="classfabomatic_1_1_buffer.xhtml#a087b3f0759ac226c188e8cba5a89492d">has_changed</a>{<span class="keyword">true</span>};</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffer.xhtml#a6d7297be20523ed7b81c7af5ece8c999">   37</a></span>    <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_variable" href="classfabomatic_1_1_buffer.xhtml#a6d7297be20523ed7b81c7af5ece8c999">MAGIC_NUMBER</a> = 1;</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>    <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#aad578ef8cbecdafb8c5ade345df415a3">push_back</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a> &amp;message) -&gt; void;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>    <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a06b997e6e4f83f208250b739f9e2a2db">push_front</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a> &amp;message) -&gt; void;</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a6301e1ea47622d36474ee031a17b9bb4">getMessage</a>() -&gt; <span class="keyword">const</span> <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a>;</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>    <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">count</a>() const -&gt; <span class="keywordtype">size_t</span>;</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    auto <a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a72f029c82552ccea45eaf611f345c079">toJson</a>(JsonDocument &amp;doc, const std::<span class="keywordtype">string</span> &amp;element_name) const -&gt; <span class="keywordtype">void</span>;</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffer.xhtml#ae55d0197a2b50d55d1d762569b9c56da">   45</a></span>    auto <a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#ae55d0197a2b50d55d1d762569b9c56da">hasChanged</a>() const -&gt; <span class="keywordtype">bool</span> { <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_buffer.xhtml#a087b3f0759ac226c188e8cba5a89492d">has_changed</a>; };</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffer.xhtml#a0925c3a370f243ae3455108189e1afc6">   46</a></span>    <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a0925c3a370f243ae3455108189e1afc6">setChanged</a>(<span class="keywordtype">bool</span> new_value) -&gt; <span class="keywordtype">void</span> { <a class="code hl_variable" href="classfabomatic_1_1_buffer.xhtml#a087b3f0759ac226c188e8cba5a89492d">has_changed</a> = new_value; };</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>    <span class="keyword">static</span> <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#ad6d946c6ad24dd1a0ab695bb8874b554">fromJsonElement</a>(<span class="keyword">const</span> JsonObject &amp;json_obj) -&gt; std::optional&lt;Buffer&gt;;</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffer.xhtml#a8cf1432737201bf30ae3008af6e44228">   49</a></span>    <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_variable" href="classfabomatic_1_1_buffer.xhtml#a8cf1432737201bf30ae3008af6e44228">MAX_MESSAGES</a> = 40;</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  };</div>
</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="foldopen" id="foldopen00055" data-start="{" data-end="};">
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffered_query.xhtml">   55</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_buffered_query.xhtml">BufferedQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml">ServerMQTT::Query</a></div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  {</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  <span class="keyword">private</span>:</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffered_query.xhtml#aba7437ac8cd821313cb13bb1e9bf90dd">   58</a></span>    std::string_view <a class="code hl_variable" href="classfabomatic_1_1_buffered_query.xhtml#aba7437ac8cd821313cb13bb1e9bf90dd">mqtt_value</a>;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffered_query.xhtml#ab97558c0fc507f0c0c4da32252a0a063">   59</a></span>    std::string_view <a class="code hl_variable" href="classfabomatic_1_1_buffered_query.xhtml#ab97558c0fc507f0c0c4da32252a0a063">mqtt_topic</a>;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffered_query.xhtml#ae6009edad63f4ffa5790dce3c4cf5f27">   60</a></span>    <span class="keywordtype">bool</span> <a class="code hl_variable" href="classfabomatic_1_1_buffered_query.xhtml#ae6009edad63f4ffa5790dce3c4cf5f27">wait_for_answer</a>;</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffered_query.xhtml#ab79dc2dc1491da2424cae1d226cfc084">   63</a></span>    <a class="code hl_function" href="classfabomatic_1_1_buffered_query.xhtml#ab79dc2dc1491da2424cae1d226cfc084">BufferedQuery</a>() = <span class="keyword">delete</span>;</div>
<div class="foldopen" id="foldopen00064" data-start="{" data-end="}">
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffered_query.xhtml#af4e294d6bc262774de9310379b88c475">   64</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_buffered_query.xhtml#af4e294d6bc262774de9310379b88c475">BufferedQuery</a>(<span class="keyword">const</span> std::string_view &amp;value,</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>                            <span class="keyword">const</span> std::string_view &amp;<a class="code hl_function" href="classfabomatic_1_1_buffered_query.xhtml#a85f1a2490c3e92ff70deb6226634d6c5">topic</a>,</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>                            <span class="keywordtype">bool</span> wait) : <a class="code hl_variable" href="classfabomatic_1_1_buffered_query.xhtml#aba7437ac8cd821313cb13bb1e9bf90dd">mqtt_value</a>(value),</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>                                         <a class="code hl_variable" href="classfabomatic_1_1_buffered_query.xhtml#ab97558c0fc507f0c0c4da32252a0a063">mqtt_topic</a>(<a class="code hl_function" href="classfabomatic_1_1_buffered_query.xhtml#a85f1a2490c3e92ff70deb6226634d6c5">topic</a>),</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>                                         <a class="code hl_variable" href="classfabomatic_1_1_buffered_query.xhtml#ae6009edad63f4ffa5790dce3c4cf5f27">wait_for_answer</a>{wait} {};</div>
</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="foldopen" id="foldopen00070" data-start="{" data-end="}">
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffered_query.xhtml#a8c0d8f34db11c0bd16d3fcb2433b47e2">   70</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_buffered_query.xhtml#a8c0d8f34db11c0bd16d3fcb2433b47e2">payload</a>() const -&gt; const std::<span class="keywordtype">string</span><span class="keyword"> override</span></div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>      <span class="keyword">auto</span> value = std::string{<a class="code hl_variable" href="classfabomatic_1_1_buffered_query.xhtml#aba7437ac8cd821313cb13bb1e9bf90dd">mqtt_value</a>};</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>      <span class="keywordflow">if</span> (value.find(<span class="stringliteral">&quot;}&quot;</span>) == value.size() - 1 &amp;&amp;</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>          value.find(<span class="stringliteral">&quot;replay&quot;</span>) == value.npos)</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>      {</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>        value.erase(value.end() - 1);</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>        value += <span class="stringliteral">&quot;, \&quot;replay\&quot;:true}&quot;</span>;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>      }</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>      <span class="keywordflow">return</span> value;</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    };</div>
</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="foldopen" id="foldopen00082" data-start="{" data-end="}">
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffered_query.xhtml#a1bafc8debf65717dcf377491b2f5cb04">   82</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_buffered_query.xhtml#a1bafc8debf65717dcf377491b2f5cb04">waitForReply</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override</span></div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>      <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_buffered_query.xhtml#ae6009edad63f4ffa5790dce3c4cf5f27">wait_for_answer</a>;</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>    };</div>
</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span> </div>
<div class="foldopen" id="foldopen00087" data-start="{" data-end="}">
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffered_query.xhtml#a59b82415355badf80a7044773139ebe5">   87</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_buffered_query.xhtml#a59b82415355badf80a7044773139ebe5">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override</span></div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    };</div>
</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="foldopen" id="foldopen00092" data-start="{" data-end="}">
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_buffered_query.xhtml#a85f1a2490c3e92ff70deb6226634d6c5">   92</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_buffered_query.xhtml#a85f1a2490c3e92ff70deb6226634d6c5">topic</a>() const -&gt; std::<span class="keywordtype">string</span></div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>    {</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>      <span class="keywordflow">return</span> std::string(<a class="code hl_variable" href="classfabomatic_1_1_buffered_query.xhtml#ab97558c0fc507f0c0c4da32252a0a063">mqtt_topic</a>);</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>    };</div>
</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  };</div>
</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>} <span class="comment">// namespace fabomatic</span></div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span> </div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span><span class="preprocessor">#endif </span><span class="comment">// BUFFEREDMSG_HPP</span></div>
<div class="ttc" id="a_m_q_t_ttypes_8hpp_xhtml"><div class="ttname"><a href="_m_q_t_ttypes_8hpp.xhtml">MQTTtypes.hpp</a></div></div>
<div class="ttc" id="a_machine_i_d_8hpp_xhtml"><div class="ttname"><a href="_machine_i_d_8hpp.xhtml">MachineID.hpp</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml">fabomatic::Buffer</a></div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00032">BufferedMsg.hpp:33</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a06b997e6e4f83f208250b739f9e2a2db"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a06b997e6e4f83f208250b739f9e2a2db">fabomatic::Buffer::push_front</a></div><div class="ttdeci">auto push_front(const BufferedMsg &amp;message) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00028">BufferedMsg.cpp:28</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a087b3f0759ac226c188e8cba5a89492d"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a087b3f0759ac226c188e8cba5a89492d">fabomatic::Buffer::has_changed</a></div><div class="ttdeci">bool has_changed</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00036">BufferedMsg.hpp:36</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a0925c3a370f243ae3455108189e1afc6"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a0925c3a370f243ae3455108189e1afc6">fabomatic::Buffer::setChanged</a></div><div class="ttdeci">auto setChanged(bool new_value) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00046">BufferedMsg.hpp:46</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a24764f4964eca4b9c68b6e98e1d38349"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a24764f4964eca4b9c68b6e98e1d38349">fabomatic::Buffer::msg_queue</a></div><div class="ttdeci">std::deque&lt; BufferedMsg &gt; msg_queue</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00035">BufferedMsg.hpp:35</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a6301e1ea47622d36474ee031a17b9bb4"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a6301e1ea47622d36474ee031a17b9bb4">fabomatic::Buffer::getMessage</a></div><div class="ttdeci">auto getMessage() -&gt; const BufferedMsg</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00047">BufferedMsg.cpp:47</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a6d7297be20523ed7b81c7af5ece8c999"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a6d7297be20523ed7b81c7af5ece8c999">fabomatic::Buffer::MAGIC_NUMBER</a></div><div class="ttdeci">static constexpr auto MAGIC_NUMBER</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00037">BufferedMsg.hpp:37</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a72f029c82552ccea45eaf611f345c079"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a72f029c82552ccea45eaf611f345c079">fabomatic::Buffer::toJson</a></div><div class="ttdeci">auto toJson(JsonDocument &amp;doc, const std::string &amp;element_name) const -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00067">BufferedMsg.cpp:67</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a8cf1432737201bf30ae3008af6e44228"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a8cf1432737201bf30ae3008af6e44228">fabomatic::Buffer::MAX_MESSAGES</a></div><div class="ttdeci">static constexpr auto MAX_MESSAGES</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00049">BufferedMsg.hpp:49</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a9ff239a0ddbaed54bcf0a72f2517d7a0"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">fabomatic::Buffer::count</a></div><div class="ttdeci">auto count() const -&gt; size_t</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00062">BufferedMsg.cpp:62</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_aad578ef8cbecdafb8c5ade345df415a3"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#aad578ef8cbecdafb8c5ade345df415a3">fabomatic::Buffer::push_back</a></div><div class="ttdeci">auto push_back(const BufferedMsg &amp;message) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00009">BufferedMsg.cpp:9</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_ad6d946c6ad24dd1a0ab695bb8874b554"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#ad6d946c6ad24dd1a0ab695bb8874b554">fabomatic::Buffer::fromJsonElement</a></div><div class="ttdeci">static auto fromJsonElement(const JsonObject &amp;json_obj) -&gt; std::optional&lt; Buffer &gt;</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00082">BufferedMsg.cpp:82</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_ae55d0197a2b50d55d1d762569b9c56da"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#ae55d0197a2b50d55d1d762569b9c56da">fabomatic::Buffer::hasChanged</a></div><div class="ttdeci">auto hasChanged() const -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00045">BufferedMsg.hpp:45</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffered_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_buffered_query.xhtml">fabomatic::BufferedQuery</a></div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00055">BufferedMsg.hpp:56</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffered_query_xhtml_a1bafc8debf65717dcf377491b2f5cb04"><div class="ttname"><a href="classfabomatic_1_1_buffered_query.xhtml#a1bafc8debf65717dcf377491b2f5cb04">fabomatic::BufferedQuery::waitForReply</a></div><div class="ttdeci">auto waitForReply() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00082">BufferedMsg.hpp:82</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffered_query_xhtml_a59b82415355badf80a7044773139ebe5"><div class="ttname"><a href="classfabomatic_1_1_buffered_query.xhtml#a59b82415355badf80a7044773139ebe5">fabomatic::BufferedQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00087">BufferedMsg.hpp:87</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffered_query_xhtml_a85f1a2490c3e92ff70deb6226634d6c5"><div class="ttname"><a href="classfabomatic_1_1_buffered_query.xhtml#a85f1a2490c3e92ff70deb6226634d6c5">fabomatic::BufferedQuery::topic</a></div><div class="ttdeci">auto topic() const -&gt; std::string</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00092">BufferedMsg.hpp:92</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffered_query_xhtml_a8c0d8f34db11c0bd16d3fcb2433b47e2"><div class="ttname"><a href="classfabomatic_1_1_buffered_query.xhtml#a8c0d8f34db11c0bd16d3fcb2433b47e2">fabomatic::BufferedQuery::payload</a></div><div class="ttdeci">auto payload() const -&gt; const std::string override</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00070">BufferedMsg.hpp:70</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffered_query_xhtml_ab79dc2dc1491da2424cae1d226cfc084"><div class="ttname"><a href="classfabomatic_1_1_buffered_query.xhtml#ab79dc2dc1491da2424cae1d226cfc084">fabomatic::BufferedQuery::BufferedQuery</a></div><div class="ttdeci">BufferedQuery()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffered_query_xhtml_ab97558c0fc507f0c0c4da32252a0a063"><div class="ttname"><a href="classfabomatic_1_1_buffered_query.xhtml#ab97558c0fc507f0c0c4da32252a0a063">fabomatic::BufferedQuery::mqtt_topic</a></div><div class="ttdeci">std::string_view mqtt_topic</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00059">BufferedMsg.hpp:59</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffered_query_xhtml_aba7437ac8cd821313cb13bb1e9bf90dd"><div class="ttname"><a href="classfabomatic_1_1_buffered_query.xhtml#aba7437ac8cd821313cb13bb1e9bf90dd">fabomatic::BufferedQuery::mqtt_value</a></div><div class="ttdeci">std::string_view mqtt_value</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00058">BufferedMsg.hpp:58</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffered_query_xhtml_ae6009edad63f4ffa5790dce3c4cf5f27"><div class="ttname"><a href="classfabomatic_1_1_buffered_query.xhtml#ae6009edad63f4ffa5790dce3c4cf5f27">fabomatic::BufferedQuery::wait_for_answer</a></div><div class="ttdeci">bool wait_for_answer</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00060">BufferedMsg.hpp:60</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffered_query_xhtml_af4e294d6bc262774de9310379b88c475"><div class="ttname"><a href="classfabomatic_1_1_buffered_query.xhtml#af4e294d6bc262774de9310379b88c475">fabomatic::BufferedQuery::BufferedQuery</a></div><div class="ttdeci">constexpr BufferedQuery(const std::string_view &amp;value, const std::string_view &amp;topic, bool wait)</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00064">BufferedMsg.hpp:64</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml">fabomatic::ServerMQTT::Query</a></div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00014">MQTTtypes.hpp:15</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml"><div class="ttname"><a href="namespacefabomatic.xhtml">fabomatic</a></div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8cpp_source.xhtml#l00010">AuthProvider.cpp:11</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_buffered_msg_xhtml"><div class="ttname"><a href="structfabomatic_1_1_buffered_msg.xhtml">fabomatic::BufferedMsg</a></div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00018">BufferedMsg.hpp:19</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_buffered_msg_xhtml_a4c94f377965a681a402765777ffdc853"><div class="ttname"><a href="structfabomatic_1_1_buffered_msg.xhtml#a4c94f377965a681a402765777ffdc853">fabomatic::BufferedMsg::mqtt_topic</a></div><div class="ttdeci">std::string mqtt_topic</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00021">BufferedMsg.hpp:21</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_buffered_msg_xhtml_a5ce2043e556d1a7fe722607d768566fb"><div class="ttname"><a href="structfabomatic_1_1_buffered_msg.xhtml#a5ce2043e556d1a7fe722607d768566fb">fabomatic::BufferedMsg::BufferedMsg</a></div><div class="ttdeci">BufferedMsg(const std::string &amp;message, const std::string &amp;topic, bool wait)</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00024">BufferedMsg.hpp:24</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_buffered_msg_xhtml_a741f677e91251f5f6deb9fef90912630"><div class="ttname"><a href="structfabomatic_1_1_buffered_msg.xhtml#a741f677e91251f5f6deb9fef90912630">fabomatic::BufferedMsg::BufferedMsg</a></div><div class="ttdeci">BufferedMsg()=default</div></div>
<div class="ttc" id="astructfabomatic_1_1_buffered_msg_xhtml_a7a4f5ef998aab2fd89299e2ff1d5eb71"><div class="ttname"><a href="structfabomatic_1_1_buffered_msg.xhtml#a7a4f5ef998aab2fd89299e2ff1d5eb71">fabomatic::BufferedMsg::BufferedMsg</a></div><div class="ttdeci">BufferedMsg(BufferedMsg &amp;source)=default</div></div>
<div class="ttc" id="astructfabomatic_1_1_buffered_msg_xhtml_aba3d5f037ab046e241225bcc3afc2cc3"><div class="ttname"><a href="structfabomatic_1_1_buffered_msg.xhtml#aba3d5f037ab046e241225bcc3afc2cc3">fabomatic::BufferedMsg::mqtt_message</a></div><div class="ttdeci">std::string mqtt_message</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00020">BufferedMsg.hpp:20</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_buffered_msg_xhtml_ad0d79c6a22bb20b83251300200d5c21b"><div class="ttname"><a href="structfabomatic_1_1_buffered_msg.xhtml#ad0d79c6a22bb20b83251300200d5c21b">fabomatic::BufferedMsg::BufferedMsg</a></div><div class="ttdeci">BufferedMsg(const BufferedMsg &amp;source)=default</div></div>
<div class="ttc" id="astructfabomatic_1_1_buffered_msg_xhtml_ad9343b7c70e7df301fbb4855bad6c15f"><div class="ttname"><a href="structfabomatic_1_1_buffered_msg.xhtml#ad9343b7c70e7df301fbb4855bad6c15f">fabomatic::BufferedMsg::wait_for_answer</a></div><div class="ttdeci">bool wait_for_answer</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00022">BufferedMsg.hpp:22</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Jul 1 2024 20:53:05 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
