<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: test_mqtt.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_13e138d54eb8818da29c3992edef070a.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_5086f03806332e1622e6f6a3f9988048.xhtml">test_mqtt</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle"><div class="title">test_mqtt.cpp File Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;atomic&gt;</code><br />
<code>#include &lt;chrono&gt;</code><br />
<code>#include &lt;functional&gt;</code><br />
<code>#include &lt;pthread.h&gt;</code><br />
<code>#include &lt;string&gt;</code><br />
<code>#include &lt;vector&gt;</code><br />
<code>#include &quot;<a class="el" href="_board_logic_8hpp_source.xhtml">BoardLogic.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_espressif_8hpp_source.xhtml">Espressif.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_l_c_d_wrapper_8hpp_source.xhtml">LCDWrapper.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_r_f_i_d_wrapper_8hpp_source.xhtml">RFIDWrapper.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_tasks_8hpp_source.xhtml">Tasks.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="conf_8hpp_source.xhtml">conf.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_mock_m_q_t_t_broker_8hpp_source.xhtml">mock/MockMQTTBroker.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_mock_mrfc522_8hpp_source.xhtml">mock/MockMrfc522.hpp</a>&quot;</code><br />
<code>#include &lt;Arduino.h&gt;</code><br />
<code>#include &lt;unity.h&gt;</code><br />
<code>#include &quot;LiquidCrystal.h&quot;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for test_mqtt.cpp:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="test__mqtt_8cpp__incl.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</div>
<p><a href="test__mqtt_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacefabomatic" id="r_namespacefabomatic"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml">fabomatic</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacefabomatic_1_1tests" id="r_namespacefabomatic_1_1tests"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml">fabomatic::tests</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:af046ac0a4d53b62e8f3bf0cec2d07440" id="r_af046ac0a4d53b62e8f3bf0cec2d07440"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#af046ac0a4d53b62e8f3bf0cec2d07440">fabomatic::tests::threadMQTTServer</a> (void *arg)</td></tr>
<tr class="separator:af046ac0a4d53b62e8f3bf0cec2d07440"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a675dfc88957b4e6871f32187a0da29b2" id="r_a675dfc88957b4e6871f32187a0da29b2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#a675dfc88957b4e6871f32187a0da29b2">fabomatic::tests::test_create_buffered_messages</a> ()</td></tr>
<tr class="separator:a675dfc88957b4e6871f32187a0da29b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95c3d2a5cfa25e610ac054894d766f73" id="r_a95c3d2a5cfa25e610ac054894d766f73"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#a95c3d2a5cfa25e610ac054894d766f73">fabomatic::tests::test_check_transmission</a> ()</td></tr>
<tr class="separator:a95c3d2a5cfa25e610ac054894d766f73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba7f55ee91c2d2a647fca6c8cc106c97" id="r_aba7f55ee91c2d2a647fca6c8cc106c97"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#aba7f55ee91c2d2a647fca6c8cc106c97">fabomatic::tests::test_start_broker</a> ()</td></tr>
<tr class="separator:aba7f55ee91c2d2a647fca6c8cc106c97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af71fb65d41b9fc211910208ea71a4c91" id="r_af71fb65d41b9fc211910208ea71a4c91"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#af71fb65d41b9fc211910208ea71a4c91">fabomatic::tests::test_stop_broker</a> ()</td></tr>
<tr class="separator:af71fb65d41b9fc211910208ea71a4c91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a438b9060c27d36e89506199205b342cb" id="r_a438b9060c27d36e89506199205b342cb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#a438b9060c27d36e89506199205b342cb">fabomatic::tests::test_fabserver_calls</a> ()</td></tr>
<tr class="separator:a438b9060c27d36e89506199205b342cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88a4242d48bfa4a0337df522d303c367" id="r_a88a4242d48bfa4a0337df522d303c367"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#a88a4242d48bfa4a0337df522d303c367">fabomatic::tests::test_taskConnect</a> ()</td></tr>
<tr class="memdesc:a88a4242d48bfa4a0337df522d303c367"><td class="mdescLeft">&#160;</td><td class="mdescRight">Opens WiFi and server connection and updates board state accordingly.  <br /></td></tr>
<tr class="separator:a88a4242d48bfa4a0337df522d303c367"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a294b4767ecf1e1d11cc31dafb2541d23" id="r_a294b4767ecf1e1d11cc31dafb2541d23"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#a294b4767ecf1e1d11cc31dafb2541d23">fabomatic::tests::test_taskCheckRfid</a> ()</td></tr>
<tr class="memdesc:a294b4767ecf1e1d11cc31dafb2541d23"><td class="mdescLeft">&#160;</td><td class="mdescRight">periodic check for new RFID card  <br /></td></tr>
<tr class="separator:a294b4767ecf1e1d11cc31dafb2541d23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cd22311b16fc7c256a30ba4c2f6f387" id="r_a7cd22311b16fc7c256a30ba4c2f6f387"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#a7cd22311b16fc7c256a30ba4c2f6f387">fabomatic::tests::test_taskVarious</a> ()</td></tr>
<tr class="memdesc:a7cd22311b16fc7c256a30ba4c2f6f387"><td class="mdescLeft">&#160;</td><td class="mdescRight">blink led  <br /></td></tr>
<tr class="separator:a7cd22311b16fc7c256a30ba4c2f6f387"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a046c348aaf1a15bf80358065553e748b" id="r_a046c348aaf1a15bf80358065553e748b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#a046c348aaf1a15bf80358065553e748b">fabomatic::tests::test_taskEspWatchdog</a> ()</td></tr>
<tr class="memdesc:a046c348aaf1a15bf80358065553e748b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Keep the ESP32 HW watchdog alive. If code gets stuck this will cause an automatic reset.  <br /></td></tr>
<tr class="separator:a046c348aaf1a15bf80358065553e748b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af592b66b287714a90a895709829622b3" id="r_af592b66b287714a90a895709829622b3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#af592b66b287714a90a895709829622b3">fabomatic::tests::test_taskRfidWatchdog</a> ()</td></tr>
<tr class="memdesc:af592b66b287714a90a895709829622b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">checks the RFID chip status and re-init it if necessary.  <br /></td></tr>
<tr class="separator:af592b66b287714a90a895709829622b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0c2cd74b089905fbdebeca807403606" id="r_ae0c2cd74b089905fbdebeca807403606"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#ae0c2cd74b089905fbdebeca807403606">fabomatic::tests::test_taskMQTTAlive</a> ()</td></tr>
<tr class="memdesc:ae0c2cd74b089905fbdebeca807403606"><td class="mdescLeft">&#160;</td><td class="mdescRight">sends the MQTT alive message  <br /></td></tr>
<tr class="separator:ae0c2cd74b089905fbdebeca807403606"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf323d841fd7207901e373cdc073d4af" id="r_adf323d841fd7207901e373cdc073d4af"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#adf323d841fd7207901e373cdc073d4af">fabomatic::tests::test_normal_use</a> ()</td></tr>
<tr class="separator:adf323d841fd7207901e373cdc073d4af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9909011e5fea0c018842eec4d93d0662" id="r_a9909011e5fea0c018842eec4d93d0662"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="test__mqtt_8cpp.xhtml#a9909011e5fea0c018842eec4d93d0662">tearDown</a> (void)</td></tr>
<tr class="separator:a9909011e5fea0c018842eec4d93d0662"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95c834d6178047ce9e1bce7cbfea2836" id="r_a95c834d6178047ce9e1bce7cbfea2836"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="test__mqtt_8cpp.xhtml#a95c834d6178047ce9e1bce7cbfea2836">setUp</a> (void)</td></tr>
<tr class="separator:a95c834d6178047ce9e1bce7cbfea2836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fc01d736fe50cf5b977f755b675f11d" id="r_a4fc01d736fe50cf5b977f755b675f11d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="test__mqtt_8cpp.xhtml#a4fc01d736fe50cf5b977f755b675f11d">setup</a> ()</td></tr>
<tr class="separator:a4fc01d736fe50cf5b977f755b675f11d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe461d27b9c48d5921c00d521181f12f" id="r_afe461d27b9c48d5921c00d521181f12f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="test__mqtt_8cpp.xhtml#afe461d27b9c48d5921c00d521181f12f">loop</a> ()</td></tr>
<tr class="separator:afe461d27b9c48d5921c00d521181f12f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ad8f69fc4a7778b405081abbf9fe6aa82" id="r_ad8f69fc4a7778b405081abbf9fe6aa82"><td class="memItemLeft" align="right" valign="top">pthread_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="test__mqtt_8cpp.xhtml#ad8f69fc4a7778b405081abbf9fe6aa82">thread_mqtt_broker</a></td></tr>
<tr class="separator:ad8f69fc4a7778b405081abbf9fe6aa82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6c877ec448b1e99c6f9207301e622f6" id="r_ae6c877ec448b1e99c6f9207301e622f6"><td class="memItemLeft" align="right" valign="top">pthread_attr_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="test__mqtt_8cpp.xhtml#ae6c877ec448b1e99c6f9207301e622f6">attr_mqtt_broker</a></td></tr>
<tr class="separator:ae6c877ec448b1e99c6f9207301e622f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61fc6209a48e9414bc6f6dff41c34f09" id="r_a61fc6209a48e9414bc6f6dff41c34f09"><td class="memItemLeft" align="right" valign="top">static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="test__mqtt_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">TAG3</a> = &quot;test_mqtt&quot;</td></tr>
<tr class="separator:a61fc6209a48e9414bc6f6dff41c34f09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab11df5855a7b6969c5b44b095bce756f" id="r_ab11df5855a7b6969c5b44b095bce756f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a>&lt; <a class="el" href="classfabomatic_1_1_mock_mrfc522.xhtml">fabomatic::MockMrfc522</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">fabomatic::tests::rfid</a></td></tr>
<tr class="separator:ab11df5855a7b6969c5b44b095bce756f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a004186e64b28f6f0c546006e2de242a9" id="r_a004186e64b28f6f0c546006e2de242a9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_l_c_d_wrapper.xhtml">fabomatic::LCDWrapper</a>&lt; LiquidCrystal &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#a004186e64b28f6f0c546006e2de242a9">fabomatic::tests::lcd</a> {fabomatic::pins.lcd}</td></tr>
<tr class="separator:a004186e64b28f6f0c546006e2de242a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae67aa957d270478a0793908703b77446" id="r_ae67aa957d270478a0793908703b77446"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">fabomatic::tests::logic</a></td></tr>
<tr class="separator:ae67aa957d270478a0793908703b77446"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0feac8d80c54d5fe02cfac6bfcb43a7e" id="r_a0feac8d80c54d5fe02cfac6bfcb43a7e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml">fabomatic::MockMQTTBroker</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#a0feac8d80c54d5fe02cfac6bfcb43a7e">fabomatic::tests::broker</a></td></tr>
<tr class="separator:a0feac8d80c54d5fe02cfac6bfcb43a7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6404b5d30ab37f8b12de788296e2b92c" id="r_a6404b5d30ab37f8b12de788296e2b92c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml">fabomatic::Tasks::Scheduler</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">fabomatic::tests::test_scheduler</a></td></tr>
<tr class="separator:a6404b5d30ab37f8b12de788296e2b92c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acaf37fbb67ed375298e6a277500632ae" id="r_acaf37fbb67ed375298e6a277500632ae"><td class="memItemLeft" align="right" valign="top">std::atomic&lt; bool &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#acaf37fbb67ed375298e6a277500632ae">fabomatic::tests::exit_request</a> {false}</td></tr>
<tr class="separator:acaf37fbb67ed375298e6a277500632ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a009fc290d438fc7821dddc336aae2f3b" id="r_a009fc290d438fc7821dddc336aae2f3b"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#a009fc290d438fc7821dddc336aae2f3b">fabomatic::tests::t1</a> = <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Tasks::Task</a>(&quot;taskConnect&quot;, 15s, &amp;<a class="el" href="namespacefabomatic_1_1tests.xhtml#a88a4242d48bfa4a0337df522d303c367">test_taskConnect</a>, <a class="el" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">test_scheduler</a>)</td></tr>
<tr class="separator:a009fc290d438fc7821dddc336aae2f3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a739cb1ea71dc21bde3450d76b4eb2749" id="r_a739cb1ea71dc21bde3450d76b4eb2749"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#a739cb1ea71dc21bde3450d76b4eb2749">fabomatic::tests::t2</a> = <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Tasks::Task</a>(&quot;taskCheckRfid&quot;, 50ms, &amp;<a class="el" href="namespacefabomatic_1_1tests.xhtml#a294b4767ecf1e1d11cc31dafb2541d23">test_taskCheckRfid</a>, <a class="el" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">test_scheduler</a>)</td></tr>
<tr class="separator:a739cb1ea71dc21bde3450d76b4eb2749"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa8f9a92ebaa17b28d4c53e1f9608daf" id="r_aaa8f9a92ebaa17b28d4c53e1f9608daf"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#aaa8f9a92ebaa17b28d4c53e1f9608daf">fabomatic::tests::t3</a> = <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Tasks::Task</a>(&quot;taskVarious&quot;, 1s, &amp;<a class="el" href="namespacefabomatic_1_1tests.xhtml#a7cd22311b16fc7c256a30ba4c2f6f387">test_taskVarious</a>, <a class="el" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">test_scheduler</a>)</td></tr>
<tr class="separator:aaa8f9a92ebaa17b28d4c53e1f9608daf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8a8ce64acab16055eb3a994dfbe6d33" id="r_af8a8ce64acab16055eb3a994dfbe6d33"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#af8a8ce64acab16055eb3a994dfbe6d33">fabomatic::tests::t4</a> = <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Tasks::Task</a>(&quot;taskEspWatchdog&quot;, 5s, &amp;<a class="el" href="namespacefabomatic_1_1tests.xhtml#a046c348aaf1a15bf80358065553e748b">test_taskEspWatchdog</a>, <a class="el" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">test_scheduler</a>)</td></tr>
<tr class="separator:af8a8ce64acab16055eb3a994dfbe6d33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a7b41334e2a6684e389f6204da0305a" id="r_a2a7b41334e2a6684e389f6204da0305a"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#a2a7b41334e2a6684e389f6204da0305a">fabomatic::tests::t5</a> = <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Tasks::Task</a>(&quot;taskRfidWatchdog&quot;, 30s, &amp;<a class="el" href="namespacefabomatic_1_1tests.xhtml#af592b66b287714a90a895709829622b3">test_taskRfidWatchdog</a>, <a class="el" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">test_scheduler</a>)</td></tr>
<tr class="separator:a2a7b41334e2a6684e389f6204da0305a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a8176cc8103382324e4d067a4d0613d" id="r_a9a8176cc8103382324e4d067a4d0613d"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#a9a8176cc8103382324e4d067a4d0613d">fabomatic::tests::t6</a> = <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Tasks::Task</a>(&quot;taskMQTTAlive&quot;, 30s, &amp;<a class="el" href="namespacefabomatic_1_1tests.xhtml#ae0c2cd74b089905fbdebeca807403606">test_taskMQTTAlive</a>, <a class="el" href="namespacefabomatic_1_1tests.xhtml#a6404b5d30ab37f8b12de788296e2b92c">test_scheduler</a>)</td></tr>
<tr class="separator:a9a8176cc8103382324e4d067a4d0613d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="afe461d27b9c48d5921c00d521181f12f" name="afe461d27b9c48d5921c00d521181f12f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe461d27b9c48d5921c00d521181f12f">&#9670;&#160;</a></span>loop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void loop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="test__mqtt_8cpp_source.xhtml#l00380">380</a> of file <a class="el" href="test__mqtt_8cpp_source.xhtml">test_mqtt.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  381</span>{</div>
<div class="line"><span class="lineno">  382</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a4fc01d736fe50cf5b977f755b675f11d" name="a4fc01d736fe50cf5b977f755b675f11d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fc01d736fe50cf5b977f755b675f11d">&#9670;&#160;</a></span>setup()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void setup </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="test__mqtt_8cpp_source.xhtml#l00357">357</a> of file <a class="el" href="test__mqtt_8cpp_source.xhtml">test_mqtt.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  358</span>{</div>
<div class="line"><span class="lineno">  359</span>  <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">delay</a>(1000);</div>
<div class="line"><span class="lineno">  360</span>  <span class="comment">// Save original config</span></div>
<div class="line"><span class="lineno">  361</span>  <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a159f700a4f413190a0fd5eaa878b2cdd">original</a> = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">fabomatic::SavedConfig::LoadFromEEPROM</a>();</div>
<div class="line"><span class="lineno">  362</span> </div>
<div class="line"><span class="lineno">  363</span>  UNITY_BEGIN();</div>
<div class="line"><span class="lineno">  364</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a675dfc88957b4e6871f32187a0da29b2">fabomatic::tests::test_create_buffered_messages</a>);</div>
<div class="line"><span class="lineno">  365</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#aba7f55ee91c2d2a647fca6c8cc106c97">fabomatic::tests::test_start_broker</a>);</div>
<div class="line"><span class="lineno">  366</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a95c3d2a5cfa25e610ac054894d766f73">fabomatic::tests::test_check_transmission</a>);</div>
<div class="line"><span class="lineno">  367</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a438b9060c27d36e89506199205b342cb">fabomatic::tests::test_fabserver_calls</a>);</div>
<div class="line"><span class="lineno">  368</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#adf323d841fd7207901e373cdc073d4af">fabomatic::tests::test_normal_use</a>);</div>
<div class="line"><span class="lineno">  369</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#af71fb65d41b9fc211910208ea71a4c91">fabomatic::tests::test_stop_broker</a>);</div>
<div class="line"><span class="lineno">  370</span> </div>
<div class="line"><span class="lineno">  371</span>  UNITY_END(); <span class="comment">// stop unit testing</span></div>
<div class="line"><span class="lineno">  372</span> </div>
<div class="line"><span class="lineno">  373</span>  <span class="comment">// Restore original config</span></div>
<div class="line"><span class="lineno">  374</span>  <span class="keywordflow">if</span> (<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a159f700a4f413190a0fd5eaa878b2cdd">original</a>.has_value())</div>
<div class="line"><span class="lineno">  375</span>  {</div>
<div class="line"><span class="lineno">  376</span>    <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a159f700a4f413190a0fd5eaa878b2cdd">original</a>.value().<a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a312c74363068192ae80df24140f82874">SaveToEEPROM</a>();</div>
<div class="line"><span class="lineno">  377</span>  }</div>
<div class="line"><span class="lineno">  378</span>};</div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a312c74363068192ae80df24140f82874"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a312c74363068192ae80df24140f82874">fabomatic::SavedConfig::SaveToEEPROM</a></div><div class="ttdeci">auto SaveToEEPROM() const -&gt; bool</div><div class="ttdoc">Saves the configuration to EEPROM.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00172">SavedConfig.cpp:172</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_aca3fe97dfa74c005d47ffef700392d99"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">fabomatic::SavedConfig::LoadFromEEPROM</a></div><div class="ttdeci">static auto LoadFromEEPROM() -&gt; std::optional&lt; SavedConfig &gt;</div><div class="ttdoc">Loads the configuration from EEPROM if available and matching revision number.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00052">SavedConfig.cpp:52</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_tasks_xhtml_a5c20f560f5934822d39ba116a16f3ab6"><div class="ttname"><a href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">fabomatic::Tasks::delay</a></div><div class="ttdeci">auto delay(const milliseconds duration) -&gt; void</div><div class="ttdoc">Wait for a delay, allowing OTA updates.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00250">Tasks.cpp:250</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a159f700a4f413190a0fd5eaa878b2cdd"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a159f700a4f413190a0fd5eaa878b2cdd">fabomatic::tests::original</a></div><div class="ttdeci">SavedConfig original</div><div class="ttdef"><b>Definition</b> <a href="test__savedconfig_8cpp_source.xhtml#l00020">test_savedconfig.cpp:20</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a438b9060c27d36e89506199205b342cb"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a438b9060c27d36e89506199205b342cb">fabomatic::tests::test_fabserver_calls</a></div><div class="ttdeci">void test_fabserver_calls()</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00133">test_mqtt.cpp:133</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a675dfc88957b4e6871f32187a0da29b2"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a675dfc88957b4e6871f32187a0da29b2">fabomatic::tests::test_create_buffered_messages</a></div><div class="ttdeci">void test_create_buffered_messages()</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00050">test_mqtt.cpp:50</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a95c3d2a5cfa25e610ac054894d766f73"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a95c3d2a5cfa25e610ac054894d766f73">fabomatic::tests::test_check_transmission</a></div><div class="ttdeci">void test_check_transmission()</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00079">test_mqtt.cpp:79</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_aba7f55ee91c2d2a647fca6c8cc106c97"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#aba7f55ee91c2d2a647fca6c8cc106c97">fabomatic::tests::test_start_broker</a></div><div class="ttdeci">void test_start_broker()</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00097">test_mqtt.cpp:97</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_adf323d841fd7207901e373cdc073d4af"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#adf323d841fd7207901e373cdc073d4af">fabomatic::tests::test_normal_use</a></div><div class="ttdeci">void test_normal_use()</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00327">test_mqtt.cpp:327</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_af71fb65d41b9fc211910208ea71a4c91"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#af71fb65d41b9fc211910208ea71a4c91">fabomatic::tests::test_stop_broker</a></div><div class="ttdeci">void test_stop_broker()</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00127">test_mqtt.cpp:127</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_saved_config_8cpp_source.xhtml#l00052">fabomatic::SavedConfig::LoadFromEEPROM()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00172">fabomatic::SavedConfig::SaveToEEPROM()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00079">fabomatic::tests::test_check_transmission()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00050">fabomatic::tests::test_create_buffered_messages()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00133">fabomatic::tests::test_fabserver_calls()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00327">fabomatic::tests::test_normal_use()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00097">fabomatic::tests::test_start_broker()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00127">fabomatic::tests::test_stop_broker()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="test__mqtt_8cpp_a4fc01d736fe50cf5b977f755b675f11d_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a95c834d6178047ce9e1bce7cbfea2836" name="a95c834d6178047ce9e1bce7cbfea2836"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95c834d6178047ce9e1bce7cbfea2836">&#9670;&#160;</a></span>setUp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void setUp </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="test__mqtt_8cpp_source.xhtml#l00351">351</a> of file <a class="el" href="test__mqtt_8cpp_source.xhtml">test_mqtt.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  352</span>{</div>
<div class="line"><span class="lineno">  353</span>  TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">fabomatic::tests::logic</a>.configure(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">fabomatic::tests::rfid</a>, <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a004186e64b28f6f0c546006e2de242a9">fabomatic::tests::lcd</a>), <span class="stringliteral">&quot;BoardLogic configure failed&quot;</span>);</div>
<div class="line"><span class="lineno">  354</span>  TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">fabomatic::tests::logic</a>.initBoard(), <span class="stringliteral">&quot;BoardLogic init failed&quot;</span>);</div>
<div class="line"><span class="lineno">  355</span>};</div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a004186e64b28f6f0c546006e2de242a9"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a004186e64b28f6f0c546006e2de242a9">fabomatic::tests::lcd</a></div><div class="ttdeci">fabomatic::LCDWrapper&lt; LiquidCrystal &gt; lcd</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00032">test_mqtt.cpp:32</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_ab11df5855a7b6969c5b44b095bce756f"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#ab11df5855a7b6969c5b44b095bce756f">fabomatic::tests::rfid</a></div><div class="ttdeci">fabomatic::RFIDWrapper&lt; fabomatic::MockMrfc522 &gt; rfid</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00031">test_mqtt.cpp:31</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_ae67aa957d270478a0793908703b77446"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#ae67aa957d270478a0793908703b77446">fabomatic::tests::logic</a></div><div class="ttdeci">fabomatic::BoardLogic logic</div><div class="ttdef"><b>Definition</b> <a href="test__mqtt_8cpp_source.xhtml#l00033">test_mqtt.cpp:33</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="test__mqtt_8cpp_source.xhtml#l00032">fabomatic::tests::lcd</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00033">fabomatic::tests::logic</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00031">fabomatic::tests::rfid</a>.</p>

</div>
</div>
<a id="a9909011e5fea0c018842eec4d93d0662" name="a9909011e5fea0c018842eec4d93d0662"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9909011e5fea0c018842eec4d93d0662">&#9670;&#160;</a></span>tearDown()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void tearDown </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="test__mqtt_8cpp_source.xhtml#l00349">349</a> of file <a class="el" href="test__mqtt_8cpp_source.xhtml">test_mqtt.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  349</span>{};</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="ae6c877ec448b1e99c6f9207301e622f6" name="ae6c877ec448b1e99c6f9207301e622f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6c877ec448b1e99c6f9207301e622f6">&#9670;&#160;</a></span>attr_mqtt_broker</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pthread_attr_t attr_mqtt_broker</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="test__mqtt_8cpp_source.xhtml#l00025">25</a> of file <a class="el" href="test__mqtt_8cpp_source.xhtml">test_mqtt.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="test__mqtt_8cpp_source.xhtml#l00097">fabomatic::tests::test_start_broker()</a>.</p>

</div>
</div>
<a id="a61fc6209a48e9414bc6f6dff41c34f09" name="a61fc6209a48e9414bc6f6dff41c34f09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61fc6209a48e9414bc6f6dff41c34f09">&#9670;&#160;</a></span>TAG3</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char* TAG3 = &quot;test_mqtt&quot;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="test__mqtt_8cpp_source.xhtml#l00027">27</a> of file <a class="el" href="test__mqtt_8cpp_source.xhtml">test_mqtt.cpp</a>.</p>

</div>
</div>
<a id="ad8f69fc4a7778b405081abbf9fe6aa82" name="ad8f69fc4a7778b405081abbf9fe6aa82"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8f69fc4a7778b405081abbf9fe6aa82">&#9670;&#160;</a></span>thread_mqtt_broker</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pthread_t thread_mqtt_broker</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="test__mqtt_8cpp_source.xhtml#l00024">24</a> of file <a class="el" href="test__mqtt_8cpp_source.xhtml">test_mqtt.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="test__mqtt_8cpp_source.xhtml#l00097">fabomatic::tests::test_start_broker()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00127">fabomatic::tests::test_stop_broker()</a>.</p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jun 30 2024 20:13:24 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
