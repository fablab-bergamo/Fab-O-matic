<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: fabomatic::Tasks Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacefabomatic.xhtml">fabomatic</a></li><li class="navelem"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml">Tasks</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">fabomatic::Tasks Namespace Reference</div></div>
</div><!--header-->
<div class="contents">

<p>This namespace contains the classes that implement a cooperative task scheduler.  
<a href="namespacefabomatic_1_1_tasks.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml">Scheduler</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The schedule is in charge of running tasks in the right order based on their requested intervals.  <a href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Task</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A task class which represents a function to be called at requested intervals.  <a href="classfabomatic_1_1_tasks_1_1_task.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:adce365a8c09b42bfd5381ecf6eef8cad" id="r_adce365a8c09b42bfd5381ecf6eef8cad"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a> = std::chrono::milliseconds</td></tr>
<tr class="separator:adce365a8c09b42bfd5381ecf6eef8cad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d9dcfdb65c00f111ebd0466763955b1" id="r_a1d9dcfdb65c00f111ebd0466763955b1"><td class="memItemLeft" align="right" valign="top">typedef std::chrono::steady_clock::time_point&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#a1d9dcfdb65c00f111ebd0466763955b1">time_point</a></td></tr>
<tr class="separator:a1d9dcfdb65c00f111ebd0466763955b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a5c20f560f5934822d39ba116a16f3ab6" id="r_a5c20f560f5934822d39ba116a16f3ab6"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">delay</a> (const <a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a> duration) -&gt; void</td></tr>
<tr class="memdesc:a5c20f560f5934822d39ba116a16f3ab6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wait for a delay, allowing OTA updates.  <br /></td></tr>
<tr class="separator:a5c20f560f5934822d39ba116a16f3ab6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc67d1313c6695d813feb935eafdaf60" id="r_adc67d1313c6695d813feb935eafdaf60"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adc67d1313c6695d813feb935eafdaf60">arduinoNow</a> () -&gt; const <a class="el" href="namespacefabomatic_1_1_tasks.xhtml#a1d9dcfdb65c00f111ebd0466763955b1">time_point</a></td></tr>
<tr class="separator:adc67d1313c6695d813feb935eafdaf60"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This namespace contains the classes that implement a cooperative task scheduler. </p>
</div><h2 class="groupheader">Typedef Documentation</h2>
<a id="adce365a8c09b42bfd5381ecf6eef8cad" name="adce365a8c09b42bfd5381ecf6eef8cad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adce365a8c09b42bfd5381ecf6eef8cad">&#9670;&#160;</a></span>milliseconds</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::chrono::milliseconds <a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">fabomatic::Tasks::milliseconds</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00014">14</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>

</div>
</div>
<a id="a1d9dcfdb65c00f111ebd0466763955b1" name="a1d9dcfdb65c00f111ebd0466763955b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d9dcfdb65c00f111ebd0466763955b1">&#9670;&#160;</a></span>time_point</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::chrono::steady_clock::time_point <a class="el" href="namespacefabomatic_1_1_tasks.xhtml#a1d9dcfdb65c00f111ebd0466763955b1">fabomatic::Tasks::time_point</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tasks_8hpp_source.xhtml#l00015">15</a> of file <a class="el" href="_tasks_8hpp_source.xhtml">Tasks.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="adc67d1313c6695d813feb935eafdaf60" name="adc67d1313c6695d813feb935eafdaf60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc67d1313c6695d813feb935eafdaf60">&#9670;&#160;</a></span>arduinoNow()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::Tasks::arduinoNow </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; const <a class="el" href="namespacefabomatic_1_1_tasks.xhtml#a1d9dcfdb65c00f111ebd0466763955b1">time_point</a>
  </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tasks_8hpp_source.xhtml#l00017">17</a> of file <a class="el" href="_tasks_8hpp_source.xhtml">Tasks.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   18</span>  {</div>
<div class="line"><span class="lineno">   19</span>    <span class="keywordflow">return</span> std::chrono::steady_clock::now();</div>
<div class="line"><span class="lineno">   20</span>  }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_machine_8cpp_source.xhtml#l00111">fabomatic::Machine::canPowerOff()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00543">fabomatic::BoardLogic::checkRfid()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00265">delay()</a>, <a class="el" href="_mock_mrfc522_8cpp_source.xhtml#l00063">fabomatic::MockMrfc522::getSimulatedUid()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00227">fabomatic::Machine::getUsageDuration()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00124">fabomatic::Machine::isShutdownImminent()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00065">fabomatic::Machine::login()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00087">fabomatic::Machine::logout()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00121">fabomatic::BoardLogic::longTap()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00151">fabomatic::Tasks::Task::run()</a>, <a class="el" href="test__tasks_8cpp_source.xhtml#l00070">fabomatic::tests::run_for_duration()</a>, <a class="el" href="_mock_mrfc522_8cpp_source.xhtml#l00044">fabomatic::MockMrfc522::setUid()</a>, <a class="el" href="test__common_8cpp_source.xhtml#l00020">fabomatic::tests::simulate_rfid_card()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00122">fabomatic::Tasks::Task::Task()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00324">fabomatic::tests::test_normal_use()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00097">fabomatic::tests::test_start_broker()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00193">fabomatic::Tasks::Task::updateSchedule()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00204">fabomatic::FabBackend::waitForAnswer()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_1_1_tasks_adc67d1313c6695d813feb935eafdaf60_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a5c20f560f5934822d39ba116a16f3ab6" name="a5c20f560f5934822d39ba116a16f3ab6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c20f560f5934822d39ba116a16f3ab6">&#9670;&#160;</a></span>delay()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::Tasks::delay </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacefabomatic_1_1_tasks.xhtml#adce365a8c09b42bfd5381ecf6eef8cad">milliseconds</a>&#160;</td>
          <td class="paramname"><em>duration</em></td><td>)</td>
          <td> -&gt;  void</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Wait for a delay, allowing OTA updates. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">duration</td><td>period to wait </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_tasks_8cpp_source.xhtml#l00265">265</a> of file <a class="el" href="_tasks_8cpp_source.xhtml">Tasks.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  266</span>  {</div>
<div class="line"><span class="lineno">  267</span>    ArduinoOTA.handle();</div>
<div class="line"><span class="lineno">  268</span> </div>
<div class="line"><span class="lineno">  269</span>    <span class="keywordflow">if</span> (duration &lt; 50ms)</div>
<div class="line"><span class="lineno">  270</span>    {</div>
<div class="line"><span class="lineno">  271</span>      ::delay(duration.count());</div>
<div class="line"><span class="lineno">  272</span>      <span class="keywordflow">return</span>;</div>
<div class="line"><span class="lineno">  273</span>    }</div>
<div class="line"><span class="lineno">  274</span> </div>
<div class="line"><span class="lineno">  275</span>    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;start = arduinoNow();</div>
<div class="line"><span class="lineno">  276</span>    <span class="keywordflow">do</span></div>
<div class="line"><span class="lineno">  277</span>    {</div>
<div class="line"><span class="lineno">  278</span>      ::delay(50);</div>
<div class="line"><span class="lineno">  279</span>      ArduinoOTA.handle();</div>
<div class="line"><span class="lineno">  280</span>    } <span class="keywordflow">while</span> (arduinoNow() - start &lt; duration);</div>
<div class="line"><span class="lineno">  281</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tasks_8hpp_source.xhtml#l00017">arduinoNow()</a>, and <a class="el" href="_tasks_8cpp_source.xhtml#l00265">delay()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_board_logic_8cpp_source.xhtml#l00158">fabomatic::BoardLogic::authorize()</a>, <a class="el" href="_buzzer_8cpp_source.xhtml#l00027">fabomatic::Buzzer::beepFail()</a>, <a class="el" href="_buzzer_8cpp_source.xhtml#l00016">fabomatic::Buzzer::beepOk()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">fabomatic::FabBackend::connect()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00259">fabomatic::FabBackend::connectWiFi()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00265">delay()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00386">fabomatic::FabBackend::disconnect()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00083">fabomatic::Tasks::Scheduler::execute()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00600">fabomatic::BoardLogic::getLcd()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00029">fabomatic::BoardLogic::getRfid()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00106">fabomatic::BoardLogic::logout()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00121">fabomatic::BoardLogic::longTap()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00074">fabomatic::BoardLogic::onNewCard()</a>, <a class="el" href="_machine_8cpp_source.xhtml#l00166">fabomatic::Machine::power_mqtt()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00402">fabomatic::FabBackend::processQuery()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00061">fabomatic::FabBackend::publishWithReply()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00248">fabomatic::Tasks::Task::setDelay()</a>, <a class="el" href="main_8cpp_source.xhtml#l00416">setup()</a>, <a class="el" href="main_8cpp_source.xhtml#l00046">fabomatic::taskConnect()</a>, <a class="el" href="main_8cpp_source.xhtml#l00160">fabomatic::taskRfidWatchdog()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00117">fabomatic::tests::test_whitelist_no_network()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00193">fabomatic::Tasks::Task::updateSchedule()</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00204">fabomatic::FabBackend::waitForAnswer()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_1_1_tasks_a5c20f560f5934822d39ba116a16f3ab6_cgraph.svg" width="411" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_1_1_tasks_a5c20f560f5934822d39ba116a16f3ab6_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Aug 12 2024 08:05:20 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
