<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacefabomatic.xhtml">fabomatic</a></li><li class="navelem"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">BoardLogic</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">fabomatic::BoardLogic Member List</div></div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#aa0463643253d16620af0c40e0970b343">auth</a></td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a51390e6bf10c4de427abd7f175a2e6a8">authorize</a>(const card::uid_t uid) -&gt; bool</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#ac198a07d00fda36a527cd9db2d97efc1">beepFail</a>() const -&gt; void</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a8e0c35d138333907cc217c9e141091cd">beepOk</a>() const -&gt; void</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#ad05b4db308773e56d866fe87d34022d9">blinkLed</a>(uint8_t r=0, uint8_t g=0, uint8_t b=0) -&gt; void</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#afeeeeda3f3ab56b61e6deae48d6d4e67">BoardLogic</a>()=default</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#ad79cfe1a23cad36f57461f541738a8ac">BoardLogic</a>(const BoardLogic &amp;)=delete</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#aab48b609734fe64dca562e217aad8246">BoardLogic</a>(BoardLogic &amp;&amp;)=default</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a4f4bd1de660b9868243e427e9fd9a32c">buzzer</a></td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3c38d7a3ed7952c6d6297efdf50ea4dd">changeStatus</a>(Status newStatus) -&gt; void</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#ac05af486941c620c9494ba545dd83c3d">checkPowerOff</a>() -&gt; void</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a25bdc3a49d850aa49f92faf951b68efb">checkRfid</a>() -&gt; void</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#adc1f2896666e6e9cfa789c22baa6a603">configure</a>(BaseRFIDWrapper &amp;rfid, LCDWrapper &amp;lcd) -&gt; bool</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a1724172254d9262c6b1a61cf5de5cee0">getBuzzerForTesting</a>() -&gt; Buzzer *</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#ab5d244e806e8b17bb9171055001476f7">getHostname</a>() const -&gt; const std::string</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a462b4b6149ca7bf33b699eb3181c969f">getLcd</a>() const</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a164e40105242d0b7c56c6b4f21155101">getMachine</a>() const -&gt; const Machine &amp;</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a8332053c1e3343652632bde1a81a9ff4">getMachineForTesting</a>() -&gt; Machine &amp;</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a46fd65258102b559ca9599bd4d3c1fc1">getRebootRequest</a>() const -&gt; bool</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a7b151fca2de8263b021b8b6f26e5d0ab">getRfid</a>() const</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#ac2feade03b2a74a1998dcec282a8eacb">getServer</a>() -&gt; FabBackend &amp;</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a17520059a761d7b76513724f8f56dc9c">getStatus</a>() const -&gt; Status</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3e9fedd51e4895834a9ebea17cba4331">initBoard</a>() -&gt; bool</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a8875de8e4bd5dce01b78477d980e0c42">lcd</a></td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3c1219f3f6b27492b679ccb46c001513">led</a></td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a0bbd244d2c4ef4627ba78f4691be64ba">led_status</a></td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a98a15cc323f97adc394c29e897afc12d">logout</a>() -&gt; void</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a420a0d05a91a02c27ad3b63a030738a0">longTap</a>(const card::uid_t card, const std::string &amp;short_prompt) const -&gt; bool</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#aca61a2fd110df34c29db94fc02e99174">machine</a></td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a983c8de8b9c8881fc0a4e60dddc7f0c6">onNewCard</a>(card::uid_t uid) -&gt; void</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a2c60d10e5e82f986b7b047d26f577e4c">operator=</a>(const BoardLogic &amp;board)=delete</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#ab7b70f563e50df2759cd5055c32b1d8a">operator=</a>(BoardLogic &amp;&amp;)=default</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a942b82f86ec363c7777f9fc2918e0f64">ready_for_a_new_card</a></td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a8e08e14e6bc026b3a695b19fe0941e14">rebootRequest</a></td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#ad4d15925f4f48caa25335db63aeab734">reconfigure</a>() -&gt; bool</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#aa0d3d3aa742eba1ffd00b97868ce7edc">refreshFromServer</a>() -&gt; void</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a610fd3a8610427084ee039424fbe2f24">rfid</a></td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a7bf98b454f093c4a9da2109301532905">saveRfidCache</a>() -&gt; bool</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#abdb945dbd83a84d36f8127a3cf91f1f0">server</a></td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a49df0c7440292476d25f1e76973cadb4">setAutologoffDelay</a>(std::chrono::seconds delay) -&gt; void</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a8e96c827d26aa04175d58d34d3f74e71">setRebootRequest</a>(bool request) -&gt; void</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a9a548ef4e0beba3b67d85d7d80dbaf18">setWhitelist</a>(WhiteList whitelist) -&gt; void</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a64706a55ef40b2ba1578d6a78a37361e">status</a></td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0">Status</a> enum name</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml#a47b4d515c0d3488eceb49769036bce8b">updateLCD</a>() const -&gt; void</td><td class="entry"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td><td class="entry"></td></tr>
</table></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Jul 2 2024 19:19:45 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
