<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: test_logic.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_13e138d54eb8818da29c3992edef070a.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_b810b1e6ec0cbea7c4b9d596e7cd60d2.xhtml">test_logic</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle"><div class="title">test_logic.cpp File Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;atomic&gt;</code><br />
<code>#include &lt;chrono&gt;</code><br />
<code>#include &lt;functional&gt;</code><br />
<code>#include &lt;pthread.h&gt;</code><br />
<code>#include &lt;string&gt;</code><br />
<code>#include &lt;vector&gt;</code><br />
<code>#include &quot;<a class="el" href="_board_logic_8hpp_source.xhtml">BoardLogic.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_fab_backend_8hpp_source.xhtml">FabBackend.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_l_c_d_wrapper_8hpp_source.xhtml">LCDWrapper.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_r_f_i_d_wrapper_8hpp_source.xhtml">RFIDWrapper.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_saved_config_8hpp_source.xhtml">SavedConfig.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="conf_8hpp_source.xhtml">conf.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_mock_m_q_t_t_broker_8hpp_source.xhtml">mock/MockMQTTBroker.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_mock_mrfc522_8hpp_source.xhtml">mock/MockMrfc522.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="test__common_8h_source.xhtml">test_common.h</a>&quot;</code><br />
<code>#include &lt;Arduino.h&gt;</code><br />
<code>#include &lt;unity.h&gt;</code><br />
<code>#include &quot;LiquidCrystal.h&quot;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for test_logic.cpp:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="test__logic_8cpp__incl.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</div>
<p><a href="test__logic_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacefabomatic" id="r_namespacefabomatic"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml">fabomatic</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacefabomatic_1_1tests" id="r_namespacefabomatic_1_1tests"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml">fabomatic::tests</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a8c191141c9c67dce2e8334e3c7651604" id="r_a8c191141c9c67dce2e8334e3c7651604"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="test__logic_8cpp.xhtml#a8c191141c9c67dce2e8334e3c7651604">BoardLogic</a> = <a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td></tr>
<tr class="separator:a8c191141c9c67dce2e8334e3c7651604"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aef0e78ba3db8c253be4c46687c3c800c" id="r_aef0e78ba3db8c253be4c46687c3c800c"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">fabomatic::card::uid_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="test__logic_8cpp.xhtml#aef0e78ba3db8c253be4c46687c3c800c">get_test_uid</a> (size_t idx)</td></tr>
<tr class="separator:aef0e78ba3db8c253be4c46687c3c800c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a574e0054ef8ba573fc2efd53600b0ec4" id="r_a574e0054ef8ba573fc2efd53600b0ec4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#a574e0054ef8ba573fc2efd53600b0ec4">fabomatic::tests::test_machine_defaults</a> ()</td></tr>
<tr class="separator:a574e0054ef8ba573fc2efd53600b0ec4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec03a7ee459718d314b930fdd75d3cee" id="r_aec03a7ee459718d314b930fdd75d3cee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#aec03a7ee459718d314b930fdd75d3cee">fabomatic::tests::test_simple_methods</a> ()</td></tr>
<tr class="separator:aec03a7ee459718d314b930fdd75d3cee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab0f4e1439b281ffef8be51db9a81f9d" id="r_aab0f4e1439b281ffef8be51db9a81f9d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#aab0f4e1439b281ffef8be51db9a81f9d">fabomatic::tests::test_whitelist_no_network</a> ()</td></tr>
<tr class="separator:aab0f4e1439b281ffef8be51db9a81f9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f3dff17fd964aba76c35c514957a0a5" id="r_a6f3dff17fd964aba76c35c514957a0a5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#a6f3dff17fd964aba76c35c514957a0a5">fabomatic::tests::test_one_user_at_a_time</a> ()</td></tr>
<tr class="separator:a6f3dff17fd964aba76c35c514957a0a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa92fef9250d918ee02c79dbf2de2546" id="r_afa92fef9250d918ee02c79dbf2de2546"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#afa92fef9250d918ee02c79dbf2de2546">fabomatic::tests::test_user_autologoff</a> ()</td></tr>
<tr class="separator:afa92fef9250d918ee02c79dbf2de2546"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a34631c2dc01cbdbbce146895c94e12" id="r_a9a34631c2dc01cbdbbce146895c94e12"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#a9a34631c2dc01cbdbbce146895c94e12">fabomatic::tests::test_machine_maintenance</a> ()</td></tr>
<tr class="separator:a9a34631c2dc01cbdbbce146895c94e12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a558e2287db01a4622581246a19dac397" id="r_a558e2287db01a4622581246a19dac397"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#a558e2287db01a4622581246a19dac397">fabomatic::tests::test_machine_allowed</a> ()</td></tr>
<tr class="separator:a558e2287db01a4622581246a19dac397"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8fa7ace86309b5f699540d8898660c7" id="r_af8fa7ace86309b5f699540d8898660c7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml#af8fa7ace86309b5f699540d8898660c7">fabomatic::tests::test_messages_buffered</a> ()</td></tr>
<tr class="separator:af8fa7ace86309b5f699540d8898660c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9909011e5fea0c018842eec4d93d0662" id="r_a9909011e5fea0c018842eec4d93d0662"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="test__logic_8cpp.xhtml#a9909011e5fea0c018842eec4d93d0662">tearDown</a> (void)</td></tr>
<tr class="separator:a9909011e5fea0c018842eec4d93d0662"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95c834d6178047ce9e1bce7cbfea2836" id="r_a95c834d6178047ce9e1bce7cbfea2836"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="test__logic_8cpp.xhtml#a95c834d6178047ce9e1bce7cbfea2836">setUp</a> (void)</td></tr>
<tr class="separator:a95c834d6178047ce9e1bce7cbfea2836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fc01d736fe50cf5b977f755b675f11d" id="r_a4fc01d736fe50cf5b977f755b675f11d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="test__logic_8cpp.xhtml#a4fc01d736fe50cf5b977f755b675f11d">setup</a> ()</td></tr>
<tr class="separator:a4fc01d736fe50cf5b977f755b675f11d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe461d27b9c48d5921c00d521181f12f" id="r_afe461d27b9c48d5921c00d521181f12f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="test__logic_8cpp.xhtml#afe461d27b9c48d5921c00d521181f12f">loop</a> ()</td></tr>
<tr class="separator:afe461d27b9c48d5921c00d521181f12f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a61fc6209a48e9414bc6f6dff41c34f09" id="r_a61fc6209a48e9414bc6f6dff41c34f09"><td class="memItemLeft" align="right" valign="top">static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="test__logic_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">TAG3</a> = &quot;test_logic&quot;</td></tr>
<tr class="separator:a61fc6209a48e9414bc6f6dff41c34f09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6931c3ecf1cb64d3ff6cb0eab2e590c" id="r_af6931c3ecf1cb64d3ff6cb0eab2e590c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a>&lt; <a class="el" href="classfabomatic_1_1_mock_mrfc522.xhtml">fabomatic::MockMrfc522</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="test__logic_8cpp.xhtml#af6931c3ecf1cb64d3ff6cb0eab2e590c">rfid</a></td></tr>
<tr class="separator:af6931c3ecf1cb64d3ff6cb0eab2e590c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afaf1857dab1bf829c9be096238cf2de5" id="r_afaf1857dab1bf829c9be096238cf2de5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_l_c_d_wrapper.xhtml">fabomatic::LCDWrapper</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="test__logic_8cpp.xhtml#afaf1857dab1bf829c9be096238cf2de5">lcd</a> {fabomatic::pins.lcd}</td></tr>
<tr class="separator:afaf1857dab1bf829c9be096238cf2de5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07dd6eb8e9dc2dc50bf69ef6032c5055" id="r_a07dd6eb8e9dc2dc50bf69ef6032c5055"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a></td></tr>
<tr class="separator:a07dd6eb8e9dc2dc50bf69ef6032c5055"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="a8c191141c9c67dce2e8334e3c7651604" name="a8c191141c9c67dce2e8334e3c7651604"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c191141c9c67dce2e8334e3c7651604">&#9670;&#160;</a></span>BoardLogic</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="test__logic_8cpp.xhtml#a8c191141c9c67dce2e8334e3c7651604">BoardLogic</a> =  <a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="test__logic_8cpp_source.xhtml#l00031">31</a> of file <a class="el" href="test__logic_8cpp_source.xhtml">test_logic.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="aef0e78ba3db8c253be4c46687c3c800c" name="aef0e78ba3db8c253be4c46687c3c800c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef0e78ba3db8c253be4c46687c3c800c">&#9670;&#160;</a></span>get_test_uid()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">fabomatic::card::uid_t</a> get_test_uid </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="test__logic_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="test__logic_8cpp_source.xhtml">test_logic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   34</span>{</div>
<div class="line"><span class="lineno">   35</span>  <span class="keyword">auto</span> [card_uid, level, name] = <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#af9a30e2db3fbfa479b6512cfd428aab1">fabomatic::tests::test_whitelist</a>[idx];</div>
<div class="line"><span class="lineno">   36</span>  <span class="keywordflow">return</span> card_uid;</div>
<div class="line"><span class="lineno">   37</span>}</div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_af9a30e2db3fbfa479b6512cfd428aab1"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#af9a30e2db3fbfa479b6512cfd428aab1">fabomatic::tests::test_whitelist</a></div><div class="ttdeci">static constexpr WhiteList test_whitelist</div><div class="ttdef"><b>Definition</b> <a href="test__common_8h_source.xhtml#l00014">test_common.h:15</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="test__common_8h_source.xhtml#l00015">fabomatic::tests::test_whitelist</a>.</p>

<p class="reference">Referenced by <a class="el" href="test__logic_8cpp_source.xhtml#l00285">fabomatic::tests::test_machine_allowed()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00255">fabomatic::tests::test_machine_maintenance()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00307">fabomatic::tests::test_messages_buffered()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00158">fabomatic::tests::test_one_user_at_a_time()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00204">fabomatic::tests::test_user_autologoff()</a>, and <a class="el" href="test__logic_8cpp_source.xhtml#l00112">fabomatic::tests::test_whitelist_no_network()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="test__logic_8cpp_aef0e78ba3db8c253be4c46687c3c800c_icgraph.svg" width="411" height="379"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="afe461d27b9c48d5921c00d521181f12f" name="afe461d27b9c48d5921c00d521181f12f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe461d27b9c48d5921c00d521181f12f">&#9670;&#160;</a></span>loop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void loop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="test__logic_8cpp_source.xhtml#l00369">369</a> of file <a class="el" href="test__logic_8cpp_source.xhtml">test_logic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  370</span>{</div>
<div class="line"><span class="lineno">  371</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a4fc01d736fe50cf5b977f755b675f11d" name="a4fc01d736fe50cf5b977f755b675f11d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fc01d736fe50cf5b977f755b675f11d">&#9670;&#160;</a></span>setup()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void setup </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="test__logic_8cpp_source.xhtml#l00349">349</a> of file <a class="el" href="test__logic_8cpp_source.xhtml">test_logic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  350</span>{</div>
<div class="line"><span class="lineno">  351</span>  <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">delay</a>(1000);</div>
<div class="line"><span class="lineno">  352</span>  <span class="keyword">auto</span> config = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">fabomatic::SavedConfig::LoadFromEEPROM</a>();</div>
<div class="line"><span class="lineno">  353</span>  UNITY_BEGIN();</div>
<div class="line"><span class="lineno">  354</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a574e0054ef8ba573fc2efd53600b0ec4">fabomatic::tests::test_machine_defaults</a>);</div>
<div class="line"><span class="lineno">  355</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#aec03a7ee459718d314b930fdd75d3cee">fabomatic::tests::test_simple_methods</a>);</div>
<div class="line"><span class="lineno">  356</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a558e2287db01a4622581246a19dac397">fabomatic::tests::test_machine_allowed</a>);</div>
<div class="line"><span class="lineno">  357</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a9a34631c2dc01cbdbbce146895c94e12">fabomatic::tests::test_machine_maintenance</a>);</div>
<div class="line"><span class="lineno">  358</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#aab0f4e1439b281ffef8be51db9a81f9d">fabomatic::tests::test_whitelist_no_network</a>);</div>
<div class="line"><span class="lineno">  359</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a6f3dff17fd964aba76c35c514957a0a5">fabomatic::tests::test_one_user_at_a_time</a>);</div>
<div class="line"><span class="lineno">  360</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#afa92fef9250d918ee02c79dbf2de2546">fabomatic::tests::test_user_autologoff</a>);</div>
<div class="line"><span class="lineno">  361</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#af8fa7ace86309b5f699540d8898660c7">fabomatic::tests::test_messages_buffered</a>);</div>
<div class="line"><span class="lineno">  362</span>  UNITY_END(); <span class="comment">// stop unit testing</span></div>
<div class="line"><span class="lineno">  363</span>  <span class="keywordflow">if</span> (config.has_value())</div>
<div class="line"><span class="lineno">  364</span>  {</div>
<div class="line"><span class="lineno">  365</span>    config.value().SaveToEEPROM();</div>
<div class="line"><span class="lineno">  366</span>  }</div>
<div class="line"><span class="lineno">  367</span>};</div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_aca3fe97dfa74c005d47ffef700392d99"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">fabomatic::SavedConfig::LoadFromEEPROM</a></div><div class="ttdeci">static auto LoadFromEEPROM() -&gt; std::optional&lt; SavedConfig &gt;</div><div class="ttdoc">Loads the configuration from EEPROM if available and matching revision number.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00052">SavedConfig.cpp:52</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_tasks_xhtml_a5c20f560f5934822d39ba116a16f3ab6"><div class="ttname"><a href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">fabomatic::Tasks::delay</a></div><div class="ttdeci">auto delay(const milliseconds duration) -&gt; void</div><div class="ttdoc">Wait for a delay, allowing OTA updates.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00250">Tasks.cpp:250</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a558e2287db01a4622581246a19dac397"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a558e2287db01a4622581246a19dac397">fabomatic::tests::test_machine_allowed</a></div><div class="ttdeci">void test_machine_allowed()</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00285">test_logic.cpp:285</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a574e0054ef8ba573fc2efd53600b0ec4"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a574e0054ef8ba573fc2efd53600b0ec4">fabomatic::tests::test_machine_defaults</a></div><div class="ttdeci">void test_machine_defaults()</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00041">test_logic.cpp:41</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a6f3dff17fd964aba76c35c514957a0a5"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a6f3dff17fd964aba76c35c514957a0a5">fabomatic::tests::test_one_user_at_a_time</a></div><div class="ttdeci">void test_one_user_at_a_time()</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00158">test_logic.cpp:158</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a9a34631c2dc01cbdbbce146895c94e12"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a9a34631c2dc01cbdbbce146895c94e12">fabomatic::tests::test_machine_maintenance</a></div><div class="ttdeci">void test_machine_maintenance()</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00255">test_logic.cpp:255</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_aab0f4e1439b281ffef8be51db9a81f9d"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#aab0f4e1439b281ffef8be51db9a81f9d">fabomatic::tests::test_whitelist_no_network</a></div><div class="ttdeci">void test_whitelist_no_network()</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00112">test_logic.cpp:112</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_aec03a7ee459718d314b930fdd75d3cee"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#aec03a7ee459718d314b930fdd75d3cee">fabomatic::tests::test_simple_methods</a></div><div class="ttdeci">void test_simple_methods()</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00070">test_logic.cpp:70</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_af8fa7ace86309b5f699540d8898660c7"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#af8fa7ace86309b5f699540d8898660c7">fabomatic::tests::test_messages_buffered</a></div><div class="ttdeci">void test_messages_buffered()</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00307">test_logic.cpp:307</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_afa92fef9250d918ee02c79dbf2de2546"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#afa92fef9250d918ee02c79dbf2de2546">fabomatic::tests::test_user_autologoff</a></div><div class="ttdeci">void test_user_autologoff()</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00204">test_logic.cpp:204</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_saved_config_8cpp_source.xhtml#l00052">fabomatic::SavedConfig::LoadFromEEPROM()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00285">fabomatic::tests::test_machine_allowed()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00041">fabomatic::tests::test_machine_defaults()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00255">fabomatic::tests::test_machine_maintenance()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00307">fabomatic::tests::test_messages_buffered()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00158">fabomatic::tests::test_one_user_at_a_time()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00070">fabomatic::tests::test_simple_methods()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00204">fabomatic::tests::test_user_autologoff()</a>, and <a class="el" href="test__logic_8cpp_source.xhtml#l00112">fabomatic::tests::test_whitelist_no_network()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="test__logic_8cpp_a4fc01d736fe50cf5b977f755b675f11d_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a95c834d6178047ce9e1bce7cbfea2836" name="a95c834d6178047ce9e1bce7cbfea2836"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95c834d6178047ce9e1bce7cbfea2836">&#9670;&#160;</a></span>setUp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void setUp </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="test__logic_8cpp_source.xhtml#l00334">334</a> of file <a class="el" href="test__logic_8cpp_source.xhtml">test_logic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  335</span>{</div>
<div class="line"><span class="lineno">  336</span>  TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">fabomatic::SavedConfig::DefaultConfig</a>().SaveToEEPROM(), <span class="stringliteral">&quot;Default config save failed&quot;</span>);</div>
<div class="line"><span class="lineno">  337</span>  TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#adc1f2896666e6e9cfa789c22baa6a603">configure</a>(<a class="code hl_variable" href="test__logic_8cpp.xhtml#af6931c3ecf1cb64d3ff6cb0eab2e590c">rfid</a>, <a class="code hl_variable" href="test__logic_8cpp.xhtml#afaf1857dab1bf829c9be096238cf2de5">lcd</a>), <span class="stringliteral">&quot;BoardLogic configure failed&quot;</span>);</div>
<div class="line"><span class="lineno">  338</span>  TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a3e9fedd51e4895834a9ebea17cba4331">initBoard</a>(), <span class="stringliteral">&quot;BoardLogic init failed&quot;</span>);</div>
<div class="line"><span class="lineno">  339</span>  <a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#a9a548ef4e0beba3b67d85d7d80dbaf18">setWhitelist</a>(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#af9a30e2db3fbfa479b6512cfd428aab1">fabomatic::tests::test_whitelist</a>);</div>
<div class="line"><span class="lineno">  340</span>  <span class="comment">// Disable MQTT for tests</span></div>
<div class="line"><span class="lineno">  341</span>  <span class="keywordflow">if</span> (<span class="keyword">auto</span> server_config = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">fabomatic::SavedConfig::LoadFromEEPROM</a>(); server_config.has_value())</div>
<div class="line"><span class="lineno">  342</span>  {</div>
<div class="line"><span class="lineno">  343</span>    <span class="keyword">auto</span> conf = server_config.value();</div>
<div class="line"><span class="lineno">  344</span>    conf.mqtt_server.assign(<span class="stringliteral">&quot;INVALID_SERVER&quot;</span>);</div>
<div class="line"><span class="lineno">  345</span>    <a class="code hl_variable" href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a>.<a class="code hl_function" href="classfabomatic_1_1_board_logic.xhtml#ac2feade03b2a74a1998dcec282a8eacb">getServer</a>().configure(conf);</div>
<div class="line"><span class="lineno">  346</span>  }</div>
<div class="line"><span class="lineno">  347</span>};</div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3e9fedd51e4895834a9ebea17cba4331"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3e9fedd51e4895834a9ebea17cba4331">fabomatic::BoardLogic::initBoard</a></div><div class="ttdeci">auto initBoard() -&gt; bool</div><div class="ttdoc">Initializes LCD and RFID classes.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00251">BoardLogic.cpp:251</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a9a548ef4e0beba3b67d85d7d80dbaf18"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a9a548ef4e0beba3b67d85d7d80dbaf18">fabomatic::BoardLogic::setWhitelist</a></div><div class="ttdeci">auto setWhitelist(WhiteList whitelist) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00628">BoardLogic.cpp:628</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_ac2feade03b2a74a1998dcec282a8eacb"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#ac2feade03b2a74a1998dcec282a8eacb">fabomatic::BoardLogic::getServer</a></div><div class="ttdeci">auto getServer() -&gt; FabBackend &amp;</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00633">BoardLogic.cpp:633</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_adc1f2896666e6e9cfa789c22baa6a603"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#adc1f2896666e6e9cfa789c22baa6a603">fabomatic::BoardLogic::configure</a></div><div class="ttdeci">auto configure(BaseRFIDWrapper &amp;rfid, LCDWrapper &amp;lcd) -&gt; bool</div><div class="ttdoc">Configures the board with the given references.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00455">BoardLogic.cpp:455</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a3a6f62510c34ed7a4491022e4e43b9c2"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">fabomatic::SavedConfig::DefaultConfig</a></div><div class="ttdeci">static auto DefaultConfig() -&gt; SavedConfig</div><div class="ttdoc">Returns the default configuration built from conf.hpp and secrets.hpp.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00028">SavedConfig.cpp:28</a></div></div>
<div class="ttc" id="atest__logic_8cpp_xhtml_a07dd6eb8e9dc2dc50bf69ef6032c5055"><div class="ttname"><a href="test__logic_8cpp.xhtml#a07dd6eb8e9dc2dc50bf69ef6032c5055">logic</a></div><div class="ttdeci">fabomatic::BoardLogic logic</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00029">test_logic.cpp:29</a></div></div>
<div class="ttc" id="atest__logic_8cpp_xhtml_af6931c3ecf1cb64d3ff6cb0eab2e590c"><div class="ttname"><a href="test__logic_8cpp.xhtml#af6931c3ecf1cb64d3ff6cb0eab2e590c">rfid</a></div><div class="ttdeci">fabomatic::RFIDWrapper&lt; fabomatic::MockMrfc522 &gt; rfid</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00027">test_logic.cpp:27</a></div></div>
<div class="ttc" id="atest__logic_8cpp_xhtml_afaf1857dab1bf829c9be096238cf2de5"><div class="ttname"><a href="test__logic_8cpp.xhtml#afaf1857dab1bf829c9be096238cf2de5">lcd</a></div><div class="ttdeci">fabomatic::LCDWrapper lcd</div><div class="ttdef"><b>Definition</b> <a href="test__logic_8cpp_source.xhtml#l00028">test_logic.cpp:28</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8cpp_source.xhtml#l00455">fabomatic::BoardLogic::configure()</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00028">fabomatic::SavedConfig::DefaultConfig()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00633">fabomatic::BoardLogic::getServer()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00251">fabomatic::BoardLogic::initBoard()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00028">lcd</a>, <a class="el" href="_saved_config_8cpp_source.xhtml#l00052">fabomatic::SavedConfig::LoadFromEEPROM()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00029">logic</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00027">rfid</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00628">fabomatic::BoardLogic::setWhitelist()</a>, and <a class="el" href="test__common_8h_source.xhtml#l00015">fabomatic::tests::test_whitelist</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="test__logic_8cpp_a95c834d6178047ce9e1bce7cbfea2836_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a9909011e5fea0c018842eec4d93d0662" name="a9909011e5fea0c018842eec4d93d0662"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9909011e5fea0c018842eec4d93d0662">&#9670;&#160;</a></span>tearDown()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void tearDown </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="test__logic_8cpp_source.xhtml#l00332">332</a> of file <a class="el" href="test__logic_8cpp_source.xhtml">test_logic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  332</span>{};</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="afaf1857dab1bf829c9be096238cf2de5" name="afaf1857dab1bf829c9be096238cf2de5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afaf1857dab1bf829c9be096238cf2de5">&#9670;&#160;</a></span>lcd</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_l_c_d_wrapper.xhtml">fabomatic::LCDWrapper</a> lcd {fabomatic::pins.lcd}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="test__logic_8cpp_source.xhtml#l00028">28</a> of file <a class="el" href="test__logic_8cpp_source.xhtml">test_logic.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   28</span>{<a class="code hl_variable" href="namespacefabomatic.xhtml#a90e4180ab5a1ffd3393b4f0d6b01f2b3">fabomatic::pins</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#abd0d35daf6efede38501593182b6d574">lcd</a>};</div>
<div class="ttc" id="anamespacefabomatic_xhtml_a90e4180ab5a1ffd3393b4f0d6b01f2b3"><div class="ttname"><a href="namespacefabomatic.xhtml#a90e4180ab5a1ffd3393b4f0d6b01f2b3">fabomatic::pins</a></div><div class="ttdeci">static constexpr pins_config pins</div><div class="ttdef"><b>Definition</b> <a href="pins_8hpp_source.xhtml#l00246">pins.hpp:246</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_xhtml_abd0d35daf6efede38501593182b6d574"><div class="ttname"><a href="structfabomatic_1_1pins__config.xhtml#abd0d35daf6efede38501593182b6d574">fabomatic::pins_config::lcd</a></div><div class="ttdeci">lcd_config lcd</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00069">PinsConfig.hpp:69</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_l_c_d_wrapper_8cpp_source.xhtml#l00035">fabomatic::LCDWrapper::begin()</a>, <a class="el" href="main_8cpp_source.xhtml#l00411">setup()</a>, <a class="el" href="test__logic_8cpp_source.xhtml#l00334">setUp()</a>, and <a class="el" href="_l_c_d_wrapper_8cpp_source.xhtml#l00066">fabomatic::LCDWrapper::update()</a>.</p>

</div>
</div>
<a id="a07dd6eb8e9dc2dc50bf69ef6032c5055" name="a07dd6eb8e9dc2dc50bf69ef6032c5055"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07dd6eb8e9dc2dc50bf69ef6032c5055">&#9670;&#160;</a></span>logic</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">fabomatic::BoardLogic</a> logic</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="test__logic_8cpp_source.xhtml#l00029">29</a> of file <a class="el" href="test__logic_8cpp_source.xhtml">test_logic.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00411">setup()</a>, and <a class="el" href="test__logic_8cpp_source.xhtml#l00334">setUp()</a>.</p>

</div>
</div>
<a id="af6931c3ecf1cb64d3ff6cb0eab2e590c" name="af6931c3ecf1cb64d3ff6cb0eab2e590c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6931c3ecf1cb64d3ff6cb0eab2e590c">&#9670;&#160;</a></span>rfid</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">fabomatic::RFIDWrapper</a>&lt;<a class="el" href="classfabomatic_1_1_mock_mrfc522.xhtml">fabomatic::MockMrfc522</a>&gt; rfid</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="test__logic_8cpp_source.xhtml#l00027">27</a> of file <a class="el" href="test__logic_8cpp_source.xhtml">test_logic.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00411">setup()</a>, and <a class="el" href="test__logic_8cpp_source.xhtml#l00334">setUp()</a>.</p>

</div>
</div>
<a id="a61fc6209a48e9414bc6f6dff41c34f09" name="a61fc6209a48e9414bc6f6dff41c34f09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61fc6209a48e9414bc6f6dff41c34f09">&#9670;&#160;</a></span>TAG3</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char* TAG3 = &quot;test_logic&quot;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="test__logic_8cpp_source.xhtml#l00025">25</a> of file <a class="el" href="test__logic_8cpp_source.xhtml">test_logic.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="test__mqtt_8cpp_source.xhtml#l00133">fabomatic::tests::test_fabserver_calls()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00327">fabomatic::tests::test_normal_use()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00222">fabomatic::tests::test_taskConnect()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00296">fabomatic::tests::test_taskRfidWatchdog()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00251">fabomatic::tests::test_taskVarious()</a>, and <a class="el" href="test__mqtt_8cpp_source.xhtml#l00039">fabomatic::tests::threadMQTTServer()</a>.</p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Jul 2 2024 19:39:03 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
