<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: fabomatic::secrets::cards Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacefabomatic.xhtml">fabomatic</a></li><li class="navelem"><a class="el" href="namespacefabomatic_1_1secrets.xhtml">secrets</a></li><li class="navelem"><a class="el" href="namespacefabomatic_1_1secrets_1_1cards.xhtml">cards</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle"><div class="title">fabomatic::secrets::cards Namespace Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Whitelisted RFID cards.  
<a href="namespacefabomatic_1_1secrets_1_1cards.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ad5e972d08e7512c50d40ccc9970c7917" id="r_ad5e972d08e7512c50d40ccc9970c7917"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#ad5e972d08e7512c50d40ccc9970c7917">WhiteListEntry</a> = std::tuple&lt; <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a>, <a class="el" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0">FabUser::UserLevel</a>, std::string_view &gt;</td></tr>
<tr class="separator:ad5e972d08e7512c50d40ccc9970c7917"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16230c4bb4ce0fd74a7be64a36d1d3da" id="r_a16230c4bb4ce0fd74a7be64a36d1d3da"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#a16230c4bb4ce0fd74a7be64a36d1d3da">WhiteList</a> = std::array&lt; <a class="el" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#ad5e972d08e7512c50d40ccc9970c7917">WhiteListEntry</a>, <a class="el" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#a811745e47e501e23e108d2b4497bf878">LEN</a> &gt;</td></tr>
<tr class="separator:a16230c4bb4ce0fd74a7be64a36d1d3da"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a811745e47e501e23e108d2b4497bf878" id="r_a811745e47e501e23e108d2b4497bf878"><td class="memItemLeft" align="right" valign="top">static constexpr uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#a811745e47e501e23e108d2b4497bf878">LEN</a> = 10U</td></tr>
<tr class="memdesc:a811745e47e501e23e108d2b4497bf878"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of whitelisted card in the array below.  <br /></td></tr>
<tr class="separator:a811745e47e501e23e108d2b4497bf878"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83b3f579950d846c48fb7654ccef9e17" id="r_a83b3f579950d846c48fb7654ccef9e17"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#a16230c4bb4ce0fd74a7be64a36d1d3da">WhiteList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#a83b3f579950d846c48fb7654ccef9e17">whitelist</a></td></tr>
<tr class="memdesc:a83b3f579950d846c48fb7654ccef9e17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static list of whitelisted RFID cards.  <br /></td></tr>
<tr class="separator:a83b3f579950d846c48fb7654ccef9e17"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Whitelisted RFID cards. </p>
</div><h2 class="groupheader">Typedef Documentation</h2>
<a id="a16230c4bb4ce0fd74a7be64a36d1d3da" name="a16230c4bb4ce0fd74a7be64a36d1d3da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16230c4bb4ce0fd74a7be64a36d1d3da">&#9670;&#160;</a></span>WhiteList</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#a16230c4bb4ce0fd74a7be64a36d1d3da">fabomatic::secrets::cards::WhiteList</a> = typedef std::array&lt;<a class="el" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#ad5e972d08e7512c50d40ccc9970c7917">WhiteListEntry</a>, <a class="el" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#a811745e47e501e23e108d2b4497bf878">LEN</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="secrets_8hpp_source.xhtml#l00019">19</a> of file <a class="el" href="secrets_8hpp_source.xhtml">secrets.hpp</a>.</p>

</div>
</div>
<a id="ad5e972d08e7512c50d40ccc9970c7917" name="ad5e972d08e7512c50d40ccc9970c7917"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5e972d08e7512c50d40ccc9970c7917">&#9670;&#160;</a></span>WhiteListEntry</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#ad5e972d08e7512c50d40ccc9970c7917">fabomatic::secrets::cards::WhiteListEntry</a> = typedef std::tuple&lt;<a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a>, <a class="el" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0">FabUser::UserLevel</a>, std::string_view&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="secrets_8hpp_source.xhtml#l00018">18</a> of file <a class="el" href="secrets_8hpp_source.xhtml">secrets.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a811745e47e501e23e108d2b4497bf878" name="a811745e47e501e23e108d2b4497bf878"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a811745e47e501e23e108d2b4497bf878">&#9670;&#160;</a></span>LEN</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr uint8_t fabomatic::secrets::cards::LEN = 10U</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Number of whitelisted card in the array below. </p>

<p class="definition">Definition at line <a class="el" href="secrets_8hpp_source.xhtml#l00016">16</a> of file <a class="el" href="secrets_8hpp_source.xhtml">secrets.hpp</a>.</p>

</div>
</div>
<a id="a83b3f579950d846c48fb7654ccef9e17" name="a83b3f579950d846c48fb7654ccef9e17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83b3f579950d846c48fb7654ccef9e17">&#9670;&#160;</a></span>whitelist</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="namespacefabomatic_1_1secrets_1_1cards.xhtml#a16230c4bb4ce0fd74a7be64a36d1d3da">WhiteList</a> fabomatic::secrets::cards::whitelist</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">      std::make_tuple(0xAABBCCD1, FabUser::UserLevel::FabAdmin, <span class="stringliteral">&quot;ABCDEFG&quot;</span>),</div>
<div class="line">      std::make_tuple(0xAABBCCD2, FabUser::UserLevel::FabAdmin, <span class="stringliteral">&quot;PIPPO&quot;</span>),</div>
<div class="line">      std::make_tuple(0xAABBCCD3, FabUser::UserLevel::NormalUser, <span class="stringliteral">&quot;USER1&quot;</span>),</div>
<div class="line">      std::make_tuple(0xAABBCCD4, FabUser::UserLevel::NormalUser, <span class="stringliteral">&quot;USER2&quot;</span>),</div>
<div class="line">      std::make_tuple(0xAABBCCD5, FabUser::UserLevel::NormalUser, <span class="stringliteral">&quot;USER3&quot;</span>),</div>
<div class="line">      std::make_tuple(0xAABBCCD6, FabUser::UserLevel::NormalUser, <span class="stringliteral">&quot;USER4&quot;</span>),</div>
<div class="line">      std::make_tuple(0xAABBCCD7, FabUser::UserLevel::NormalUser, <span class="stringliteral">&quot;USER5&quot;</span>),</div>
<div class="line">      std::make_tuple(0xAABBCCD8, FabUser::UserLevel::NormalUser, <span class="stringliteral">&quot;USER6&quot;</span>),</div>
<div class="line">      std::make_tuple(0xAABBCCD9, FabUser::UserLevel::FabStaff, <span class="stringliteral">&quot;USER7&quot;</span>),</div>
<div class="line">      std::make_tuple(0xAABBCCDA, FabUser::UserLevel::FabStaff, <span class="stringliteral">&quot;USER8&quot;</span>)}</div>
</div><!-- fragment -->
<p>Static list of whitelisted RFID cards. </p>
<dl class="section note"><dt>Note</dt><dd>If the network is down, these cards will be authorized. If network is up, backend prevails. </dd></dl>

<p class="definition">Definition at line <a class="el" href="secrets_8hpp_source.xhtml#l00023">23</a> of file <a class="el" href="secrets_8hpp_source.xhtml">secrets.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   23</span>                                      {</div>
<div class="line"><span class="lineno">   24</span>      std::make_tuple(0xAABBCCD1, FabUser::UserLevel::FabAdmin, <span class="stringliteral">&quot;ABCDEFG&quot;</span>),</div>
<div class="line"><span class="lineno">   25</span>      std::make_tuple(0xAABBCCD2, FabUser::UserLevel::FabAdmin, <span class="stringliteral">&quot;PIPPO&quot;</span>),</div>
<div class="line"><span class="lineno">   26</span>      std::make_tuple(0xAABBCCD3, FabUser::UserLevel::NormalUser, <span class="stringliteral">&quot;USER1&quot;</span>),</div>
<div class="line"><span class="lineno">   27</span>      std::make_tuple(0xAABBCCD4, FabUser::UserLevel::NormalUser, <span class="stringliteral">&quot;USER2&quot;</span>),</div>
<div class="line"><span class="lineno">   28</span>      std::make_tuple(0xAABBCCD5, FabUser::UserLevel::NormalUser, <span class="stringliteral">&quot;USER3&quot;</span>),</div>
<div class="line"><span class="lineno">   29</span>      std::make_tuple(0xAABBCCD6, FabUser::UserLevel::NormalUser, <span class="stringliteral">&quot;USER4&quot;</span>),</div>
<div class="line"><span class="lineno">   30</span>      std::make_tuple(0xAABBCCD7, FabUser::UserLevel::NormalUser, <span class="stringliteral">&quot;USER5&quot;</span>),</div>
<div class="line"><span class="lineno">   31</span>      std::make_tuple(0xAABBCCD8, FabUser::UserLevel::NormalUser, <span class="stringliteral">&quot;USER6&quot;</span>),</div>
<div class="line"><span class="lineno">   32</span>      std::make_tuple(0xAABBCCD9, FabUser::UserLevel::FabStaff, <span class="stringliteral">&quot;USER7&quot;</span>),</div>
<div class="line"><span class="lineno">   33</span>      std::make_tuple(0xAABBCCDA, FabUser::UserLevel::FabStaff, <span class="stringliteral">&quot;USER8&quot;</span>)};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="test__mqtt_8cpp_source.xhtml#l00050">fabomatic::tests::test_create_buffered_messages()</a>, <a class="el" href="test__mqtt_8cpp_source.xhtml#l00133">fabomatic::tests::test_fabserver_calls()</a>, and <a class="el" href="test__savedconfig_8cpp_source.xhtml#l00094">fabomatic::tests::test_rfid_cache()</a>.</p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Aug 12 2024 08:05:20 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
