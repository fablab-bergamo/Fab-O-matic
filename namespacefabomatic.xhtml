<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: fabomatic Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle"><div class="title">fabomatic Namespace Reference</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacefabomatic_1_1_board" id="r_namespacefabomatic_1_1_board"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1_board.xhtml">Board</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacefabomatic_1_1card" id="r_namespacefabomatic_1_1card"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1card.xhtml">card</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacefabomatic_1_1conf" id="r_namespacefabomatic_1_1conf"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1conf.xhtml">conf</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacefabomatic_1_1esp32" id="r_namespacefabomatic_1_1esp32"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1esp32.xhtml">esp32</a></td></tr>
<tr class="memdesc:namespacefabomatic_1_1esp32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Contains all espressif32 features not masked by Arduino IDE. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacefabomatic_1_1_m_q_t_t" id="r_namespacefabomatic_1_1_m_q_t_t"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1_m_q_t_t.xhtml">MQTT</a></td></tr>
<tr class="memdesc:namespacefabomatic_1_1_m_q_t_t"><td class="mdescLeft">&#160;</td><td class="mdescRight">Contains all the types for <a class="el" href="namespacefabomatic_1_1_m_q_t_t.xhtml" title="Contains all the types for MQTT messages between board and backend.">MQTT</a> messages between board and backend. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacefabomatic_1_1secrets" id="r_namespacefabomatic_1_1secrets"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1secrets.xhtml">secrets</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacefabomatic_1_1strings" id="r_namespacefabomatic_1_1strings"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1strings.xhtml">strings</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacefabomatic_1_1_tasks" id="r_namespacefabomatic_1_1_tasks"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1_tasks.xhtml">Tasks</a></td></tr>
<tr class="memdesc:namespacefabomatic_1_1_tasks"><td class="mdescLeft">&#160;</td><td class="mdescRight">This namespace contains the classes that implement a cooperative task scheduler. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacefabomatic_1_1tests" id="r_namespacefabomatic_1_1tests"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic_1_1tests.xhtml">tests</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_auth_provider.xhtml">AuthProvider</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class manages authentication of a RFID tag through cache, whitelist or network request.  <a href="classfabomatic_1_1_auth_provider.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_base_r_f_i_d_wrapper.xhtml">BaseRFIDWrapper</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for the real and mock implementation of RFID tag reader chip.  <a href="classfabomatic_1_1_base_r_f_i_d_wrapper.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfabomatic_1_1_board_info.xhtml">BoardInfo</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper struct representing the display state.  <a href="structfabomatic_1_1_board_info.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_board_logic.xhtml">BoardLogic</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Main class implementing the state changes.  <a href="classfabomatic_1_1_board_logic.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_buffer.xhtml">Buffer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class containing the buffered messages for future replay.  <a href="classfabomatic_1_1_buffer.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Message that can be saved in Flash for future replay.  <a href="structfabomatic_1_1_buffered_msg.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_buffered_query.xhtml">BufferedQuery</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Query to be replayed.  <a href="classfabomatic_1_1_buffered_query.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_buzzer.xhtml">Buzzer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Represents the buzzer for <a class="el" href="classfabomatic_1_1_board_logic.xhtml" title="Main class implementing the state changes.">BoardLogic</a>.  <a href="classfabomatic_1_1_buzzer.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfabomatic_1_1_cached_card.xhtml">CachedCard</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A Cached card contains only RFID tag ID + access level. Name is intentionally not saved.  <a href="structfabomatic_1_1_cached_card.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfabomatic_1_1_cached_cards.xhtml">CachedCards</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">This struct contains CACHE_LEN RFID tags with their authentication by the backend.  <a href="structfabomatic_1_1_cached_cards.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class is used to exchange messages with the <a class="el" href="namespacefabomatic_1_1_m_q_t_t.xhtml" title="Contains all the types for MQTT messages between board and backend.">MQTT</a> broker and the backend.  <a href="classfabomatic_1_1_fab_backend.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfabomatic_1_1_fab_user.xhtml">FabUser</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Represents a user with access level, name, RFID tag, and auth result.  <a href="structfabomatic_1_1_fab_user.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_l_c_d_wrapper.xhtml">LCDWrapper</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">LCD display wrapper.  <a href="classfabomatic_1_1_l_c_d_wrapper.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_led.xhtml">Led</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">RGB/LED/NeoPixel class.  <a href="classfabomatic_1_1_led.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_machine.xhtml">Machine</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Represents the FabLab machine connected to the board.  <a href="classfabomatic_1_1_machine.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfabomatic_1_1_machine_config.xhtml">MachineConfig</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Represents the configuration settings for the machine.  <a href="structfabomatic_1_1_machine_config.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml">MockMQTTBroker</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class implements an <a class="el" href="namespacefabomatic_1_1_m_q_t_t.xhtml" title="Contains all the types for MQTT messages between board and backend.">MQTT</a> broker with predefined responses to <a class="el" href="classfabomatic_1_1_fab_backend.xhtml" title="This class is used to exchange messages with the MQTT broker and the backend.">FabBackend</a> requests.  <a href="classfabomatic_1_1_mock_m_q_t_t_broker.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_mock_mrfc522.xhtml">MockMrfc522</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class implements a Mrfc522 with settable tag ID in order to allow simulation.  <a href="classfabomatic_1_1_mock_mrfc522.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_mrfc522_driver.xhtml">Mrfc522Driver</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The real <a class="el" href="classfabomatic_1_1_mrfc522_driver.xhtml" title="The real Mrfc522Driver around the Arduino library.">Mrfc522Driver</a> around the Arduino library.  <a href="classfabomatic_1_1_mrfc522_driver.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml">RFIDWrapper</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Driver class for the RFID reader chip.  <a href="classfabomatic_1_1_r_f_i_d_wrapper.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfabomatic_1_1_saved_config.xhtml">SavedConfig</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Facility to load or save data from Flash.  <a href="classfabomatic_1_1_saved_config.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ae782aea667d4a7a1a9f42217a5b172ed" id="r_ae782aea667d4a7a1a9f42217a5b172ed"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#ae782aea667d4a7a1a9f42217a5b172ed">milliseconds</a> = std::chrono::milliseconds</td></tr>
<tr class="separator:ae782aea667d4a7a1a9f42217a5b172ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18d0b3e1fea1fd3c19356465c52a3836" id="r_a18d0b3e1fea1fd3c19356465c52a3836"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a18d0b3e1fea1fd3c19356465c52a3836">Scheduler</a> = <a class="el" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml">Tasks::Scheduler</a></td></tr>
<tr class="separator:a18d0b3e1fea1fd3c19356465c52a3836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a911c79b3e3873c07d41263ff8b803833" id="r_a911c79b3e3873c07d41263ff8b803833"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a> = <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Tasks::Task</a></td></tr>
<tr class="separator:a911c79b3e3873c07d41263ff8b803833"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a314e8b965d8bef1c1ce19757a9ad2117" id="r_a314e8b965d8bef1c1ce19757a9ad2117"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a314e8b965d8bef1c1ce19757a9ad2117">Status</a> = <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0">BoardLogic::Status</a></td></tr>
<tr class="separator:a314e8b965d8bef1c1ce19757a9ad2117"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23bf7a1d8cf94adbb1df8f8edd882501" id="r_a23bf7a1d8cf94adbb1df8f8edd882501"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a23bf7a1d8cf94adbb1df8f8edd882501">WhiteListEntry</a> = std::tuple&lt; <a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a>, <a class="el" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0">FabUser::UserLevel</a>, std::string_view &gt;</td></tr>
<tr class="separator:a23bf7a1d8cf94adbb1df8f8edd882501"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a626fe6fe3dcf9b459c45e9f769f7b8e7" id="r_a626fe6fe3dcf9b459c45e9f769f7b8e7"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a626fe6fe3dcf9b459c45e9f769f7b8e7">WhiteList</a> = std::array&lt; <a class="el" href="namespacefabomatic.xhtml#a23bf7a1d8cf94adbb1df8f8edd882501">WhiteListEntry</a>, <a class="el" href="namespacefabomatic_1_1conf_1_1cards.xhtml#a5401dcd8f6389e447f42a7658fb1d485">conf::cards::LEN</a> &gt;</td></tr>
<tr class="separator:a626fe6fe3dcf9b459c45e9f769f7b8e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ae7de89faffd3bb8805727b8a1092a198" id="r_ae7de89faffd3bb8805727b8a1092a198"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#ae7de89faffd3bb8805727b8a1092a198">taskConnect</a> ()</td></tr>
<tr class="memdesc:ae7de89faffd3bb8805727b8a1092a198"><td class="mdescLeft">&#160;</td><td class="mdescRight">Opens WiFi and server connection and updates board state accordingly.  <br /></td></tr>
<tr class="separator:ae7de89faffd3bb8805727b8a1092a198"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e5c190499522bddad3f3cc69274f16c" id="r_a3e5c190499522bddad3f3cc69274f16c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a3e5c190499522bddad3f3cc69274f16c">taskCheckRfid</a> ()</td></tr>
<tr class="memdesc:a3e5c190499522bddad3f3cc69274f16c"><td class="mdescLeft">&#160;</td><td class="mdescRight">periodic check for new RFID card  <br /></td></tr>
<tr class="separator:a3e5c190499522bddad3f3cc69274f16c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bb86caf0357ce1dd9ffe2945dcfc6e4" id="r_a9bb86caf0357ce1dd9ffe2945dcfc6e4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a9bb86caf0357ce1dd9ffe2945dcfc6e4">taskBlink</a> ()</td></tr>
<tr class="memdesc:a9bb86caf0357ce1dd9ffe2945dcfc6e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">blink led  <br /></td></tr>
<tr class="separator:a9bb86caf0357ce1dd9ffe2945dcfc6e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa56f9324b5710d12bea42757af0289f2" id="r_aa56f9324b5710d12bea42757af0289f2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#aa56f9324b5710d12bea42757af0289f2">taskPoweroffCheck</a> ()</td></tr>
<tr class="memdesc:aa56f9324b5710d12bea42757af0289f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">periodic check if the machine must be powered off  <br /></td></tr>
<tr class="separator:aa56f9324b5710d12bea42757af0289f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86a02975f3cc660ebccdde8f217aa035" id="r_a86a02975f3cc660ebccdde8f217aa035"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a86a02975f3cc660ebccdde8f217aa035">taskPoweroffWarning</a> ()</td></tr>
<tr class="memdesc:a86a02975f3cc660ebccdde8f217aa035"><td class="mdescLeft">&#160;</td><td class="mdescRight">periodic check if the machine must be powered off  <br /></td></tr>
<tr class="separator:a86a02975f3cc660ebccdde8f217aa035"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8ee1c3cd4edf1a1ba27899da63b611a" id="r_af8ee1c3cd4edf1a1ba27899da63b611a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#af8ee1c3cd4edf1a1ba27899da63b611a">taskLogoffCheck</a> ()</td></tr>
<tr class="memdesc:af8ee1c3cd4edf1a1ba27899da63b611a"><td class="mdescLeft">&#160;</td><td class="mdescRight">periodic check if the user shall be logged off  <br /></td></tr>
<tr class="separator:af8ee1c3cd4edf1a1ba27899da63b611a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1348a9b7dbfe8fb026357347795ee7a1" id="r_a1348a9b7dbfe8fb026357347795ee7a1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a1348a9b7dbfe8fb026357347795ee7a1">taskEspWatchdog</a> ()</td></tr>
<tr class="memdesc:a1348a9b7dbfe8fb026357347795ee7a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Keep the ESP32 HW watchdog alive. If code gets stuck this will cause an automatic reset.  <br /></td></tr>
<tr class="separator:a1348a9b7dbfe8fb026357347795ee7a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a525d1f233a2f797801a9a659c5044cb7" id="r_a525d1f233a2f797801a9a659c5044cb7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a525d1f233a2f797801a9a659c5044cb7">taskRfidWatchdog</a> ()</td></tr>
<tr class="memdesc:a525d1f233a2f797801a9a659c5044cb7"><td class="mdescLeft">&#160;</td><td class="mdescRight">checks the RFID chip status and re-init it if necessary.  <br /></td></tr>
<tr class="separator:a525d1f233a2f797801a9a659c5044cb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a710739974eb0b1c5b53ffd75580ab54d" id="r_a710739974eb0b1c5b53ffd75580ab54d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a710739974eb0b1c5b53ffd75580ab54d">taskMQTTClientLoop</a> ()</td></tr>
<tr class="memdesc:a710739974eb0b1c5b53ffd75580ab54d"><td class="mdescLeft">&#160;</td><td class="mdescRight">sends the <a class="el" href="namespacefabomatic_1_1_m_q_t_t.xhtml" title="Contains all the types for MQTT messages between board and backend.">MQTT</a> alive message  <br /></td></tr>
<tr class="separator:a710739974eb0b1c5b53ffd75580ab54d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77b0a5de55b2f507f610f1d0c5196bc2" id="r_a77b0a5de55b2f507f610f1d0c5196bc2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a77b0a5de55b2f507f610f1d0c5196bc2">taskIsAlive</a> ()</td></tr>
<tr class="separator:a77b0a5de55b2f507f610f1d0c5196bc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c7ad2690e92eb8ab98b6fadaa4df2bd" id="r_a2c7ad2690e92eb8ab98b6fadaa4df2bd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a2c7ad2690e92eb8ab98b6fadaa4df2bd">taskFactoryReset</a> ()</td></tr>
<tr class="separator:a2c7ad2690e92eb8ab98b6fadaa4df2bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba5f28d2cdf80fb0270592238bfee443" id="r_aba5f28d2cdf80fb0270592238bfee443"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#aba5f28d2cdf80fb0270592238bfee443">printCompileSettings</a> ()</td></tr>
<tr class="separator:aba5f28d2cdf80fb0270592238bfee443"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fdef03704e4c9526605a43b8dd6549e" id="r_a4fdef03704e4c9526605a43b8dd6549e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a4fdef03704e4c9526605a43b8dd6549e">saveConfigCallback</a> ()</td></tr>
<tr class="separator:a4fdef03704e4c9526605a43b8dd6549e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa30fd4002cc95e50c035f2d3dcdb44d" id="r_aaa30fd4002cc95e50c035f2d3dcdb44d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#aaa30fd4002cc95e50c035f2d3dcdb44d">configModeCallback</a> (WiFiManager *myWiFiManager)</td></tr>
<tr class="separator:aaa30fd4002cc95e50c035f2d3dcdb44d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a412fca06536dbae1da1e3018a4fd03c6" id="r_a412fca06536dbae1da1e3018a4fd03c6"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a412fca06536dbae1da1e3018a4fd03c6">getConfig</a> (bool force_reset) -&gt; <a class="el" href="classfabomatic_1_1_saved_config.xhtml">SavedConfig</a></td></tr>
<tr class="separator:a412fca06536dbae1da1e3018a4fd03c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8374c0d1cef777c26dc13b4abc9c52b6" id="r_a8374c0d1cef777c26dc13b4abc9c52b6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a8374c0d1cef777c26dc13b4abc9c52b6">openConfigPortal</a> (bool force_reset, bool disable_portal) -&gt; void</td></tr>
<tr class="memdesc:a8374c0d1cef777c26dc13b4abc9c52b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Open the ArduinoOTA configuration portal.  <br /></td></tr>
<tr class="separator:a8374c0d1cef777c26dc13b4abc9c52b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77e12974f277568ed32e1f793c89326c" id="r_a77e12974f277568ed32e1f793c89326c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a77e12974f277568ed32e1f793c89326c">OTAComplete</a> ()</td></tr>
<tr class="separator:a77e12974f277568ed32e1f793c89326c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53440db527e478f13eaa71bbd46120c3" id="r_a53440db527e478f13eaa71bbd46120c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a53440db527e478f13eaa71bbd46120c3">setupOTA</a> () -&gt; void</td></tr>
<tr class="memdesc:a53440db527e478f13eaa71bbd46120c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization of the Arduino OTA library with settings for fabomatic.  <br /></td></tr>
<tr class="separator:a53440db527e478f13eaa71bbd46120c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a890159b27c3040fabeac2369b845d505" id="r_a890159b27c3040fabeac2369b845d505"><td class="memItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a890159b27c3040fabeac2369b845d505">configure_pins_esp32</a> () -&gt; const <a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a></td></tr>
<tr class="memdesc:a890159b27c3040fabeac2369b845d505"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns configuration for an ESP32 dev board used in HW revision 0.1.  <br /></td></tr>
<tr class="separator:a890159b27c3040fabeac2369b845d505"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ce79bfd6a28b712f586a19efb8d7a4b" id="r_a3ce79bfd6a28b712f586a19efb8d7a4b"><td class="memItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a3ce79bfd6a28b712f586a19efb8d7a4b">configure_pins_wokwi</a> () -&gt; const <a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a></td></tr>
<tr class="memdesc:a3ce79bfd6a28b712f586a19efb8d7a4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns configuration for Wokwi ESP32S2 environment.  <br /></td></tr>
<tr class="separator:a3ce79bfd6a28b712f586a19efb8d7a4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1614beb33b0f32f1d51ca358e28f5d10" id="r_a1614beb33b0f32f1d51ca358e28f5d10"><td class="memItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a1614beb33b0f32f1d51ca358e28f5d10">configure_pins_esp32s3</a> () -&gt; const <a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a></td></tr>
<tr class="memdesc:a1614beb33b0f32f1d51ca358e28f5d10"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns configuration for esp32s3 dev kit board.  <br /></td></tr>
<tr class="separator:a1614beb33b0f32f1d51ca358e28f5d10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cbf64f1530e4e025ba17eb3fcc384a5" id="r_a8cbf64f1530e4e025ba17eb3fcc384a5"><td class="memItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a8cbf64f1530e4e025ba17eb3fcc384a5">configure_pins_hwrev0</a> () -&gt; const <a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a></td></tr>
<tr class="memdesc:a8cbf64f1530e4e025ba17eb3fcc384a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns configuration for PCB hardware in this repository.  <br /></td></tr>
<tr class="separator:a8cbf64f1530e4e025ba17eb3fcc384a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d7ec4f6b18ed51fccb19da9b813970f" id="r_a7d7ec4f6b18ed51fccb19da9b813970f"><td class="memItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a7d7ec4f6b18ed51fccb19da9b813970f">configure_pins_wrover</a> () -&gt; const <a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a></td></tr>
<tr class="memdesc:a7d7ec4f6b18ed51fccb19da9b813970f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configuration for ESP32 Wrover Kit 4.1 (<a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32/hw-reference/esp32/get-started-wrover-kit.html">https://docs.espressif.com/projects/esp-idf/en/latest/esp32/hw-reference/esp32/get-started-wrover-kit.html</a>)  <br /></td></tr>
<tr class="separator:a7d7ec4f6b18ed51fccb19da9b813970f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cc836ff46f9b7fee6b8df16257344bb" id="r_a0cc836ff46f9b7fee6b8df16257344bb"><td class="memItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a0cc836ff46f9b7fee6b8df16257344bb">configure_pins</a> () -&gt; const <a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a></td></tr>
<tr class="memdesc:a0cc836ff46f9b7fee6b8df16257344bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the actual pins configuration to be used depending on preprocessor constants.  <br /></td></tr>
<tr class="separator:a0cc836ff46f9b7fee6b8df16257344bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68e38df690986ec6eff2bea6054fc8cb" id="r_a68e38df690986ec6eff2bea6054fc8cb"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a68e38df690986ec6eff2bea6054fc8cb">no_duplicates</a> (<a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a> <a class="el" href="namespacefabomatic.xhtml#a90e4180ab5a1ffd3393b4f0d6b01f2b3">pins</a>)</td></tr>
<tr class="memdesc:a68e38df690986ec6eff2bea6054fc8cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check at compile time that there are no duplicate pin definitions.  <br /></td></tr>
<tr class="separator:a68e38df690986ec6eff2bea6054fc8cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:af6df743788c6d2eb908bcee7dcdff7c9" id="r_af6df743788c6d2eb908bcee7dcdff7c9"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#af6df743788c6d2eb908bcee7dcdff7c9">t_rfid</a> (&quot;RFIDChip&quot;, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a71fac767ad71b5f26725d54869ed95d2">conf::tasks::RFID_CHECK_PERIOD</a>, &amp;<a class="el" href="namespacefabomatic.xhtml#a3e5c190499522bddad3f3cc69274f16c">taskCheckRfid</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true)</td></tr>
<tr class="separator:af6df743788c6d2eb908bcee7dcdff7c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62825a5ee62275ecf8035dbfe04c03b6" id="r_a62825a5ee62275ecf8035dbfe04c03b6"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a62825a5ee62275ecf8035dbfe04c03b6">t_network</a> (&quot;Wifi/MQTT&quot;, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#ad02ccc45b2e8b9ec6a675450b7cf0c9c">conf::tasks::MQTT_REFRESH_PERIOD</a>, &amp;<a class="el" href="namespacefabomatic.xhtml#ae7de89faffd3bb8805727b8a1092a198">taskConnect</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#ad02ccc45b2e8b9ec6a675450b7cf0c9c">conf::tasks::MQTT_REFRESH_PERIOD</a>)</td></tr>
<tr class="separator:a62825a5ee62275ecf8035dbfe04c03b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20cee87876cf5e777603e330941c5bb4" id="r_a20cee87876cf5e777603e330941c5bb4"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a20cee87876cf5e777603e330941c5bb4">t_powoff</a> (&quot;Poweroff&quot;, 1s, &amp;<a class="el" href="namespacefabomatic.xhtml#aa56f9324b5710d12bea42757af0289f2">taskPoweroffCheck</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true)</td></tr>
<tr class="separator:a20cee87876cf5e777603e330941c5bb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac30e3c9218c5d2581599acae8cafbd35" id="r_ac30e3c9218c5d2581599acae8cafbd35"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#ac30e3c9218c5d2581599acae8cafbd35">t_log</a> (&quot;Logoff&quot;, 1s, &amp;<a class="el" href="namespacefabomatic.xhtml#af8ee1c3cd4edf1a1ba27899da63b611a">taskLogoffCheck</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true)</td></tr>
<tr class="separator:ac30e3c9218c5d2581599acae8cafbd35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af362107d1aa514249d971e686c01abdd" id="r_af362107d1aa514249d971e686c01abdd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#af362107d1aa514249d971e686c01abdd">t_wdg</a> (&quot;Watchdog&quot;, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a227a2e840bdda9f2031217fbb91d045d">conf::tasks::WATCHDOG_PERIOD</a>, &amp;<a class="el" href="namespacefabomatic.xhtml#a1348a9b7dbfe8fb026357347795ee7a1">taskEspWatchdog</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, false)</td></tr>
<tr class="separator:af362107d1aa514249d971e686c01abdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12f86cb8f59298f8d7cc75d25786870c" id="r_a12f86cb8f59298f8d7cc75d25786870c"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a12f86cb8f59298f8d7cc75d25786870c">t_test</a> (&quot;Selftest&quot;, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a06a612b95a0c8e7e71993a5dd6384984">conf::tasks::RFID_SELFTEST_PERIOD</a>, &amp;<a class="el" href="namespacefabomatic.xhtml#a525d1f233a2f797801a9a659c5044cb7">taskRfidWatchdog</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true)</td></tr>
<tr class="separator:a12f86cb8f59298f8d7cc75d25786870c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5ad3332f56bc0f3e5e7a18650f7f9a4" id="r_ac5ad3332f56bc0f3e5e7a18650f7f9a4"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#ac5ad3332f56bc0f3e5e7a18650f7f9a4">t_warn</a> (&quot;PoweroffWarning&quot;, <a class="el" href="namespacefabomatic_1_1conf_1_1machine.xhtml#ac26edc4054f82d62fbd295e185c77a0d">conf::machine::DELAY_BETWEEN_BEEPS</a>, &amp;<a class="el" href="namespacefabomatic.xhtml#a86a02975f3cc660ebccdde8f217aa035">taskPoweroffWarning</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true)</td></tr>
<tr class="separator:ac5ad3332f56bc0f3e5e7a18650f7f9a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3afd4c8a229766158a4c701858f83bf3" id="r_a3afd4c8a229766158a4c701858f83bf3"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a3afd4c8a229766158a4c701858f83bf3">t_mqtt</a> (&quot;MQTT client loop&quot;, 1s, &amp;<a class="el" href="namespacefabomatic.xhtml#a710739974eb0b1c5b53ffd75580ab54d">taskMQTTClientLoop</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true)</td></tr>
<tr class="separator:a3afd4c8a229766158a4c701858f83bf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71064bb1692b34bdb1af73d9205f6826" id="r_a71064bb1692b34bdb1af73d9205f6826"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a71064bb1692b34bdb1af73d9205f6826">t_led</a> (&quot;LED&quot;, 1s, &amp;<a class="el" href="namespacefabomatic.xhtml#a9bb86caf0357ce1dd9ffe2945dcfc6e4">taskBlink</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true)</td></tr>
<tr class="separator:a71064bb1692b34bdb1af73d9205f6826"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae69308e67934372b46ed0cffa869c6b0" id="r_ae69308e67934372b46ed0cffa869c6b0"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#ae69308e67934372b46ed0cffa869c6b0">t_rst</a> (&quot;FactoryReset&quot;, 500ms, &amp;<a class="el" href="namespacefabomatic.xhtml#a2c7ad2690e92eb8ab98b6fadaa4df2bd">taskFactoryReset</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, pins.buttons.factory_defaults_pin !=<a class="el" href="namespacefabomatic.xhtml#a01a9e2e5f9e92f6f3fa9204ba3d946b9">NO_PIN</a>)</td></tr>
<tr class="separator:ae69308e67934372b46ed0cffa869c6b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a836ff5da9f16608b37915998ed449bf1" id="r_a836ff5da9f16608b37915998ed449bf1"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a836ff5da9f16608b37915998ed449bf1">t_alive</a> (&quot;IsAlive&quot;, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a426b86ab3d140378a98ed2f00d3fb3d2">conf::tasks::MQTT_ALIVE_PERIOD</a>, &amp;<a class="el" href="namespacefabomatic.xhtml#a77b0a5de55b2f507f610f1d0c5196bc2">taskIsAlive</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a426b86ab3d140378a98ed2f00d3fb3d2">conf::tasks::MQTT_ALIVE_PERIOD</a>)</td></tr>
<tr class="separator:a836ff5da9f16608b37915998ed449bf1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52ae622725c801d2f8d66840738bc5f8" id="r_a52ae622725c801d2f8d66840738bc5f8"><td class="memItemLeft" align="right" valign="top">std::atomic&lt; bool &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a52ae622725c801d2f8d66840738bc5f8">shouldSaveConfig</a> {false}</td></tr>
<tr class="separator:a52ae622725c801d2f8d66840738bc5f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90e4180ab5a1ffd3393b4f0d6b01f2b3" id="r_a90e4180ab5a1ffd3393b4f0d6b01f2b3"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a90e4180ab5a1ffd3393b4f0d6b01f2b3">pins</a> = <a class="el" href="namespacefabomatic.xhtml#a0cc836ff46f9b7fee6b8df16257344bb">configure_pins</a>()</td></tr>
<tr class="separator:a90e4180ab5a1ffd3393b4f0d6b01f2b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01a9e2e5f9e92f6f3fa9204ba3d946b9" id="r_a01a9e2e5f9e92f6f3fa9204ba3d946b9"><td class="memItemLeft" align="right" valign="top">static constexpr uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefabomatic.xhtml#a01a9e2e5f9e92f6f3fa9204ba3d946b9">NO_PIN</a> = -1</td></tr>
<tr class="memdesc:a01a9e2e5f9e92f6f3fa9204ba3d946b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constant used to indicate the pin is not used.  <br /></td></tr>
<tr class="separator:a01a9e2e5f9e92f6f3fa9204ba3d946b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ae782aea667d4a7a1a9f42217a5b172ed" name="ae782aea667d4a7a1a9f42217a5b172ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae782aea667d4a7a1a9f42217a5b172ed">&#9670;&#160;</a></span>milliseconds</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::chrono::milliseconds <a class="el" href="namespacefabomatic.xhtml#ae782aea667d4a7a1a9f42217a5b172ed">fabomatic::milliseconds</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_board_logic_8cpp_source.xhtml#l00026">26</a> of file <a class="el" href="_board_logic_8cpp_source.xhtml">BoardLogic.cpp</a>.</p>

</div>
</div>
<a id="a18d0b3e1fea1fd3c19356465c52a3836" name="a18d0b3e1fea1fd3c19356465c52a3836"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18d0b3e1fea1fd3c19356465c52a3836">&#9670;&#160;</a></span>Scheduler</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacefabomatic.xhtml#a18d0b3e1fea1fd3c19356465c52a3836">fabomatic::Scheduler</a> = typedef <a class="el" href="classfabomatic_1_1_tasks_1_1_scheduler.xhtml">Tasks::Scheduler</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="main_8cpp_source.xhtml#l00025">25</a> of file <a class="el" href="main_8cpp_source.xhtml">main.cpp</a>.</p>

</div>
</div>
<a id="a314e8b965d8bef1c1ce19757a9ad2117" name="a314e8b965d8bef1c1ce19757a9ad2117"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a314e8b965d8bef1c1ce19757a9ad2117">&#9670;&#160;</a></span>Status</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0">BoardLogic::Status</a> <a class="el" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0">fabomatic::Status</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="main_8cpp_source.xhtml#l00027">27</a> of file <a class="el" href="main_8cpp_source.xhtml">main.cpp</a>.</p>

</div>
</div>
<a id="a911c79b3e3873c07d41263ff8b803833" name="a911c79b3e3873c07d41263ff8b803833"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a911c79b3e3873c07d41263ff8b803833">&#9670;&#160;</a></span>Task</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">fabomatic::Task</a> = typedef <a class="el" href="classfabomatic_1_1_tasks_1_1_task.xhtml">Tasks::Task</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="main_8cpp_source.xhtml#l00026">26</a> of file <a class="el" href="main_8cpp_source.xhtml">main.cpp</a>.</p>

</div>
</div>
<a id="a626fe6fe3dcf9b459c45e9f769f7b8e7" name="a626fe6fe3dcf9b459c45e9f769f7b8e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a626fe6fe3dcf9b459c45e9f769f7b8e7">&#9670;&#160;</a></span>WhiteList</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacefabomatic.xhtml#a626fe6fe3dcf9b459c45e9f769f7b8e7">fabomatic::WhiteList</a> = typedef std::array&lt;<a class="el" href="namespacefabomatic.xhtml#a23bf7a1d8cf94adbb1df8f8edd882501">WhiteListEntry</a>, <a class="el" href="namespacefabomatic_1_1conf_1_1cards.xhtml#a5401dcd8f6389e447f42a7658fb1d485">conf::cards::LEN</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_white_list_8hpp_source.xhtml#l00020">20</a> of file <a class="el" href="_white_list_8hpp_source.xhtml">WhiteList.hpp</a>.</p>

</div>
</div>
<a id="a23bf7a1d8cf94adbb1df8f8edd882501" name="a23bf7a1d8cf94adbb1df8f8edd882501"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23bf7a1d8cf94adbb1df8f8edd882501">&#9670;&#160;</a></span>WhiteListEntry</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacefabomatic.xhtml#a23bf7a1d8cf94adbb1df8f8edd882501">fabomatic::WhiteListEntry</a> = typedef std::tuple&lt;<a class="el" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a>, <a class="el" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0">FabUser::UserLevel</a>, std::string_view&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_white_list_8hpp_source.xhtml#l00019">19</a> of file <a class="el" href="_white_list_8hpp_source.xhtml">WhiteList.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="aaa30fd4002cc95e50c035f2d3dcdb44d" name="aaa30fd4002cc95e50c035f2d3dcdb44d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa30fd4002cc95e50c035f2d3dcdb44d">&#9670;&#160;</a></span>configModeCallback()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::configModeCallback </td>
          <td>(</td>
          <td class="paramtype">WiFiManager *&#160;</td>
          <td class="paramname"><em>myWiFiManager</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_o_t_a_8cpp_source.xhtml#l00025">25</a> of file <a class="el" href="_o_t_a_8cpp_source.xhtml">OTA.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   26</span>  {</div>
<div class="line"><span class="lineno">   27</span>    ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Entering portal config mode&quot;</span>);</div>
<div class="line"><span class="lineno">   28</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;%s&quot;</span>, WiFi.softAPIP().toString().c_str());</div>
<div class="line"><span class="lineno">   29</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;%s&quot;</span>, myWiFiManager-&gt;getConfigPortalSSID().c_str());</div>
<div class="line"><span class="lineno">   30</span>    Board::logic.changeStatus(Status::PortalStarting);</div>
<div class="line"><span class="lineno">   31</span>  }</div>
<div class="ttc" id="a_logging_8hpp_xhtml_a4ef5b5f197804a60836ab1e8907d8301"><div class="ttname"><a href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a></div><div class="ttdeci">static const char *const TAG</div><div class="ttdef"><b>Definition</b> <a href="_logging_8hpp_source.xhtml#l00006">Logging.hpp:6</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8cpp_source.xhtml#l00272">fabomatic::BoardLogic::changeStatus()</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00015">fabomatic::Board::logic</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_o_t_a_8cpp_source.xhtml#l00047">openConfigPortal()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_aaa30fd4002cc95e50c035f2d3dcdb44d_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_aaa30fd4002cc95e50c035f2d3dcdb44d_icgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a0cc836ff46f9b7fee6b8df16257344bb" name="a0cc836ff46f9b7fee6b8df16257344bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0cc836ff46f9b7fee6b8df16257344bb">&#9670;&#160;</a></span>configure_pins()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fabomatic::configure_pins </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; const <a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a>
  </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the actual pins configuration to be used depending on preprocessor constants. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="pins_8hpp_source.xhtml#l00227">227</a> of file <a class="el" href="pins_8hpp_source.xhtml">pins.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  228</span>  {</div>
<div class="line"><span class="lineno">  229</span><span class="preprocessor">#ifdef PINS_ESP32</span></div>
<div class="line"><span class="lineno">  230</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="namespacefabomatic.xhtml#a890159b27c3040fabeac2369b845d505">configure_pins_esp32</a>();</div>
<div class="line"><span class="lineno">  231</span><span class="preprocessor">#endif</span></div>
<div class="line"><span class="lineno">  232</span><span class="preprocessor">#ifdef PINS_WOKWI</span></div>
<div class="line"><span class="lineno">  233</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="namespacefabomatic.xhtml#a3ce79bfd6a28b712f586a19efb8d7a4b">configure_pins_wokwi</a>();</div>
<div class="line"><span class="lineno">  234</span><span class="preprocessor">#endif</span></div>
<div class="line"><span class="lineno">  235</span><span class="preprocessor">#ifdef PINS_ESP32S3</span></div>
<div class="line"><span class="lineno">  236</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="namespacefabomatic.xhtml#a1614beb33b0f32f1d51ca358e28f5d10">configure_pins_esp32s3</a>();</div>
<div class="line"><span class="lineno">  237</span><span class="preprocessor">#endif</span></div>
<div class="line"><span class="lineno">  238</span><span class="preprocessor">#ifdef PINS_HARDWARE_REV0</span></div>
<div class="line"><span class="lineno">  239</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="namespacefabomatic.xhtml#a8cbf64f1530e4e025ba17eb3fcc384a5">configure_pins_hwrev0</a>();</div>
<div class="line"><span class="lineno">  240</span><span class="preprocessor">#endif</span></div>
<div class="line"><span class="lineno">  241</span><span class="preprocessor">#ifdef PINS_ESP32_WROVERKIT</span></div>
<div class="line"><span class="lineno">  242</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="namespacefabomatic.xhtml#a7d7ec4f6b18ed51fccb19da9b813970f">configure_pins_wrover</a>();</div>
<div class="line"><span class="lineno">  243</span><span class="preprocessor">#endif</span></div>
<div class="line"><span class="lineno">  244</span>  }</div>
<div class="ttc" id="anamespacefabomatic_xhtml_a1614beb33b0f32f1d51ca358e28f5d10"><div class="ttname"><a href="namespacefabomatic.xhtml#a1614beb33b0f32f1d51ca358e28f5d10">fabomatic::configure_pins_esp32s3</a></div><div class="ttdeci">constexpr auto configure_pins_esp32s3() -&gt; const pins_config</div><div class="ttdoc">Returns configuration for esp32s3 dev kit board.</div><div class="ttdef"><b>Definition</b> <a href="pins_8hpp_source.xhtml#l00098">pins.hpp:98</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_a3ce79bfd6a28b712f586a19efb8d7a4b"><div class="ttname"><a href="namespacefabomatic.xhtml#a3ce79bfd6a28b712f586a19efb8d7a4b">fabomatic::configure_pins_wokwi</a></div><div class="ttdeci">constexpr auto configure_pins_wokwi() -&gt; const pins_config</div><div class="ttdoc">Returns configuration for Wokwi ESP32S2 environment.</div><div class="ttdef"><b>Definition</b> <a href="pins_8hpp_source.xhtml#l00055">pins.hpp:55</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_a7d7ec4f6b18ed51fccb19da9b813970f"><div class="ttname"><a href="namespacefabomatic.xhtml#a7d7ec4f6b18ed51fccb19da9b813970f">fabomatic::configure_pins_wrover</a></div><div class="ttdeci">constexpr auto configure_pins_wrover() -&gt; const pins_config</div><div class="ttdoc">Configuration for ESP32 Wrover Kit 4.1 (https://docs.espressif.com/projects/esp-idf/en/latest/esp32/h...</div><div class="ttdef"><b>Definition</b> <a href="pins_8hpp_source.xhtml#l00184">pins.hpp:184</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_a890159b27c3040fabeac2369b845d505"><div class="ttname"><a href="namespacefabomatic.xhtml#a890159b27c3040fabeac2369b845d505">fabomatic::configure_pins_esp32</a></div><div class="ttdeci">constexpr auto configure_pins_esp32() -&gt; const pins_config</div><div class="ttdoc">Returns configuration for an ESP32 dev board used in HW revision 0.1.</div><div class="ttdef"><b>Definition</b> <a href="pins_8hpp_source.xhtml#l00012">pins.hpp:12</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_a8cbf64f1530e4e025ba17eb3fcc384a5"><div class="ttname"><a href="namespacefabomatic.xhtml#a8cbf64f1530e4e025ba17eb3fcc384a5">fabomatic::configure_pins_hwrev0</a></div><div class="ttdeci">constexpr auto configure_pins_hwrev0() -&gt; const pins_config</div><div class="ttdoc">Returns configuration for PCB hardware in this repository.</div><div class="ttdef"><b>Definition</b> <a href="pins_8hpp_source.xhtml#l00141">pins.hpp:141</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="pins_8hpp_source.xhtml#l00012">configure_pins_esp32()</a>, <a class="el" href="pins_8hpp_source.xhtml#l00098">configure_pins_esp32s3()</a>, <a class="el" href="pins_8hpp_source.xhtml#l00141">configure_pins_hwrev0()</a>, <a class="el" href="pins_8hpp_source.xhtml#l00055">configure_pins_wokwi()</a>, and <a class="el" href="pins_8hpp_source.xhtml#l00184">configure_pins_wrover()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a0cc836ff46f9b7fee6b8df16257344bb_cgraph.svg" width="363" height="314"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a890159b27c3040fabeac2369b845d505" name="a890159b27c3040fabeac2369b845d505"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a890159b27c3040fabeac2369b845d505">&#9670;&#160;</a></span>configure_pins_esp32()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fabomatic::configure_pins_esp32 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; const <a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a>
  </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns configuration for an ESP32 dev board used in HW revision 0.1. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="pins_8hpp_source.xhtml#l00012">12</a> of file <a class="el" href="pins_8hpp_source.xhtml">pins.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   13</span>  {</div>
<div class="line"><span class="lineno">   14</span>    <span class="keywordflow">return</span> <a class="code hl_struct" href="structfabomatic_1_1pins__config.xhtml">pins_config</a>{</div>
<div class="line"><span class="lineno">   15</span>        {</div>
<div class="line"><span class="lineno">   16</span>            .sda_pin = 27U,</div>
<div class="line"><span class="lineno">   17</span>            .mosi_pin = 33U,</div>
<div class="line"><span class="lineno">   18</span>            .miso_pin = 32U,</div>
<div class="line"><span class="lineno">   19</span>            .sck_pin = 26U,</div>
<div class="line"><span class="lineno">   20</span>            .reset_pin = 20U,</div>
<div class="line"><span class="lineno">   21</span>        }, <span class="comment">// RFID</span></div>
<div class="line"><span class="lineno">   22</span>        {</div>
<div class="line"><span class="lineno">   23</span>            .rs_pin = 15U,</div>
<div class="line"><span class="lineno">   24</span>            .en_pin = 2U,</div>
<div class="line"><span class="lineno">   25</span>            .d0_pin = 0U,</div>
<div class="line"><span class="lineno">   26</span>            .d1_pin = 4U,</div>
<div class="line"><span class="lineno">   27</span>            .d2_pin = 16U,</div>
<div class="line"><span class="lineno">   28</span>            .d3_pin = 17U,</div>
<div class="line"><span class="lineno">   29</span>            .bl_pin = 18U,</div>
<div class="line"><span class="lineno">   30</span>            .active_low = <span class="keyword">false</span>,</div>
<div class="line"><span class="lineno">   31</span>        }, <span class="comment">// LCD</span></div>
<div class="line"><span class="lineno">   32</span>        {</div>
<div class="line"><span class="lineno">   33</span>            .ch1_pin = 14U,</div>
<div class="line"><span class="lineno">   34</span>            .active_low = <span class="keyword">true</span>,</div>
<div class="line"><span class="lineno">   35</span>        }, <span class="comment">// relay</span></div>
<div class="line"><span class="lineno">   36</span>        {</div>
<div class="line"><span class="lineno">   37</span>            .pin = 12U,</div>
<div class="line"><span class="lineno">   38</span>        }, <span class="comment">// buzzer</span></div>
<div class="line"><span class="lineno">   39</span>        {</div>
<div class="line"><span class="lineno">   40</span>            .pin = 19U,</div>
<div class="line"><span class="lineno">   41</span>            .is_neopixel = <span class="keyword">true</span>,</div>
<div class="line"><span class="lineno">   42</span>            .neopixel_config = NEO_RGB + NEO_KHZ800,</div>
<div class="line"><span class="lineno">   43</span>            .is_rgb = <span class="keyword">false</span>,</div>
<div class="line"><span class="lineno">   44</span>            .green_pin = NO_PIN,</div>
<div class="line"><span class="lineno">   45</span>            .blue_pin = NO_PIN,</div>
<div class="line"><span class="lineno">   46</span>        }, <span class="comment">// LED config</span></div>
<div class="line"><span class="lineno">   47</span>        {</div>
<div class="line"><span class="lineno">   48</span>            .factory_defaults_pin = NO_PIN,</div>
<div class="line"><span class="lineno">   49</span>        } <span class="comment">// Factory defaults button</span></div>
<div class="line"><span class="lineno">   50</span>    };</div>
<div class="line"><span class="lineno">   51</span>  }</div>
<div class="ttc" id="astructfabomatic_1_1pins__config_xhtml"><div class="ttname"><a href="structfabomatic_1_1pins__config.xhtml">fabomatic::pins_config</a></div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00012">PinsConfig.hpp:13</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_pins_config_8hpp_source.xhtml#l00010">NO_PIN</a>.</p>

<p class="reference">Referenced by <a class="el" href="pins_8hpp_source.xhtml#l00227">configure_pins()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a890159b27c3040fabeac2369b845d505_icgraph.svg" width="363" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a1614beb33b0f32f1d51ca358e28f5d10" name="a1614beb33b0f32f1d51ca358e28f5d10"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1614beb33b0f32f1d51ca358e28f5d10">&#9670;&#160;</a></span>configure_pins_esp32s3()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fabomatic::configure_pins_esp32s3 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; const <a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a>
  </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns configuration for esp32s3 dev kit board. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="pins_8hpp_source.xhtml#l00098">98</a> of file <a class="el" href="pins_8hpp_source.xhtml">pins.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   99</span>  {</div>
<div class="line"><span class="lineno">  100</span>    <span class="keywordflow">return</span> <a class="code hl_struct" href="structfabomatic_1_1pins__config.xhtml">pins_config</a>{</div>
<div class="line"><span class="lineno">  101</span>        {</div>
<div class="line"><span class="lineno">  102</span>            .sda_pin = 17U,</div>
<div class="line"><span class="lineno">  103</span>            .mosi_pin = 8U,</div>
<div class="line"><span class="lineno">  104</span>            .miso_pin = 3U,</div>
<div class="line"><span class="lineno">  105</span>            .sck_pin = 18U,</div>
<div class="line"><span class="lineno">  106</span>            .reset_pin = 12U,</div>
<div class="line"><span class="lineno">  107</span>        }, <span class="comment">// RFID</span></div>
<div class="line"><span class="lineno">  108</span>        {</div>
<div class="line"><span class="lineno">  109</span>            .rs_pin = 5U,</div>
<div class="line"><span class="lineno">  110</span>            .en_pin = 4U,</div>
<div class="line"><span class="lineno">  111</span>            .d0_pin = 6U,</div>
<div class="line"><span class="lineno">  112</span>            .d1_pin = 7U,</div>
<div class="line"><span class="lineno">  113</span>            .d2_pin = 15U,</div>
<div class="line"><span class="lineno">  114</span>            .d3_pin = 2U,</div>
<div class="line"><span class="lineno">  115</span>            .bl_pin = 13U,</div>
<div class="line"><span class="lineno">  116</span>            .active_low = <span class="keyword">false</span>,</div>
<div class="line"><span class="lineno">  117</span>        }, <span class="comment">// LCD</span></div>
<div class="line"><span class="lineno">  118</span>        {</div>
<div class="line"><span class="lineno">  119</span>            .ch1_pin = 10U,</div>
<div class="line"><span class="lineno">  120</span>            .active_low = <span class="keyword">true</span>,</div>
<div class="line"><span class="lineno">  121</span>        }, <span class="comment">// relay</span></div>
<div class="line"><span class="lineno">  122</span>        {</div>
<div class="line"><span class="lineno">  123</span>            .pin = 9U,</div>
<div class="line"><span class="lineno">  124</span>        }, <span class="comment">// buzzer</span></div>
<div class="line"><span class="lineno">  125</span>        {</div>
<div class="line"><span class="lineno">  126</span>            .pin = 48U,</div>
<div class="line"><span class="lineno">  127</span>            .is_neopixel = <span class="keyword">true</span>,</div>
<div class="line"><span class="lineno">  128</span>            .neopixel_config = NEO_GRB + NEO_KHZ800,</div>
<div class="line"><span class="lineno">  129</span>            .is_rgb = <span class="keyword">false</span>,</div>
<div class="line"><span class="lineno">  130</span>            .green_pin = NO_PIN,</div>
<div class="line"><span class="lineno">  131</span>            .blue_pin = NO_PIN,</div>
<div class="line"><span class="lineno">  132</span>        }, <span class="comment">// LED config</span></div>
<div class="line"><span class="lineno">  133</span>        {</div>
<div class="line"><span class="lineno">  134</span>            .factory_defaults_pin = NO_PIN,</div>
<div class="line"><span class="lineno">  135</span>        } <span class="comment">// Factory defaults button</span></div>
<div class="line"><span class="lineno">  136</span>    };</div>
<div class="line"><span class="lineno">  137</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_pins_config_8hpp_source.xhtml#l00010">NO_PIN</a>.</p>

<p class="reference">Referenced by <a class="el" href="pins_8hpp_source.xhtml#l00227">configure_pins()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a1614beb33b0f32f1d51ca358e28f5d10_icgraph.svg" width="363" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a8cbf64f1530e4e025ba17eb3fcc384a5" name="a8cbf64f1530e4e025ba17eb3fcc384a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8cbf64f1530e4e025ba17eb3fcc384a5">&#9670;&#160;</a></span>configure_pins_hwrev0()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fabomatic::configure_pins_hwrev0 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; const <a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a>
  </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns configuration for PCB hardware in this repository. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="pins_8hpp_source.xhtml#l00141">141</a> of file <a class="el" href="pins_8hpp_source.xhtml">pins.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  142</span>  {</div>
<div class="line"><span class="lineno">  143</span>    <span class="keywordflow">return</span> <a class="code hl_struct" href="structfabomatic_1_1pins__config.xhtml">pins_config</a>{</div>
<div class="line"><span class="lineno">  144</span>        {</div>
<div class="line"><span class="lineno">  145</span>            .sda_pin = 39U,</div>
<div class="line"><span class="lineno">  146</span>            .mosi_pin = 37U,</div>
<div class="line"><span class="lineno">  147</span>            .miso_pin = 36U,</div>
<div class="line"><span class="lineno">  148</span>            .sck_pin = 38U,</div>
<div class="line"><span class="lineno">  149</span>            .reset_pin = 35U,</div>
<div class="line"><span class="lineno">  150</span>        }, <span class="comment">// RFID</span></div>
<div class="line"><span class="lineno">  151</span>        {</div>
<div class="line"><span class="lineno">  152</span>            .rs_pin = 13U,</div>
<div class="line"><span class="lineno">  153</span>            .en_pin = 14U,</div>
<div class="line"><span class="lineno">  154</span>            .d0_pin = 21U,</div>
<div class="line"><span class="lineno">  155</span>            .d1_pin = 47U,</div>
<div class="line"><span class="lineno">  156</span>            .d2_pin = 48U,</div>
<div class="line"><span class="lineno">  157</span>            .d3_pin = 40U,</div>
<div class="line"><span class="lineno">  158</span>            .bl_pin = NO_PIN,</div>
<div class="line"><span class="lineno">  159</span>            .active_low = <span class="keyword">false</span>,</div>
<div class="line"><span class="lineno">  160</span>        }, <span class="comment">// LCD</span></div>
<div class="line"><span class="lineno">  161</span>        {</div>
<div class="line"><span class="lineno">  162</span>            .ch1_pin = 10U,</div>
<div class="line"><span class="lineno">  163</span>            .active_low = <span class="keyword">true</span>,</div>
<div class="line"><span class="lineno">  164</span>        }, <span class="comment">// relay</span></div>
<div class="line"><span class="lineno">  165</span>        {</div>
<div class="line"><span class="lineno">  166</span>            .pin = 15U,</div>
<div class="line"><span class="lineno">  167</span>        }, <span class="comment">// buzzer</span></div>
<div class="line"><span class="lineno">  168</span>        {</div>
<div class="line"><span class="lineno">  169</span>            .pin = 18U,</div>
<div class="line"><span class="lineno">  170</span>            .is_neopixel = <span class="keyword">true</span>,</div>
<div class="line"><span class="lineno">  171</span>            .neopixel_config = NEO_GRB + NEO_KHZ800,</div>
<div class="line"><span class="lineno">  172</span>            .is_rgb = <span class="keyword">false</span>,</div>
<div class="line"><span class="lineno">  173</span>            .green_pin = NO_PIN,</div>
<div class="line"><span class="lineno">  174</span>            .blue_pin = NO_PIN,</div>
<div class="line"><span class="lineno">  175</span>        }, <span class="comment">// LED config</span></div>
<div class="line"><span class="lineno">  176</span>        {</div>
<div class="line"><span class="lineno">  177</span>            .factory_defaults_pin = 8U,</div>
<div class="line"><span class="lineno">  178</span>        } <span class="comment">// Factory defaults button</span></div>
<div class="line"><span class="lineno">  179</span>    };</div>
<div class="line"><span class="lineno">  180</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_pins_config_8hpp_source.xhtml#l00010">NO_PIN</a>.</p>

<p class="reference">Referenced by <a class="el" href="pins_8hpp_source.xhtml#l00227">configure_pins()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a8cbf64f1530e4e025ba17eb3fcc384a5_icgraph.svg" width="363" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a3ce79bfd6a28b712f586a19efb8d7a4b" name="a3ce79bfd6a28b712f586a19efb8d7a4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ce79bfd6a28b712f586a19efb8d7a4b">&#9670;&#160;</a></span>configure_pins_wokwi()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fabomatic::configure_pins_wokwi </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; const <a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a>
  </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns configuration for Wokwi ESP32S2 environment. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="pins_8hpp_source.xhtml#l00055">55</a> of file <a class="el" href="pins_8hpp_source.xhtml">pins.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   56</span>  {</div>
<div class="line"><span class="lineno">   57</span>    <span class="keywordflow">return</span> <a class="code hl_struct" href="structfabomatic_1_1pins__config.xhtml">pins_config</a>{</div>
<div class="line"><span class="lineno">   58</span>        {</div>
<div class="line"><span class="lineno">   59</span>            .sda_pin = 27U,</div>
<div class="line"><span class="lineno">   60</span>            .mosi_pin = 26U,</div>
<div class="line"><span class="lineno">   61</span>            .miso_pin = 33U,</div>
<div class="line"><span class="lineno">   62</span>            .sck_pin = 32U,</div>
<div class="line"><span class="lineno">   63</span>            .reset_pin = 16U,</div>
<div class="line"><span class="lineno">   64</span>        }, <span class="comment">// RFID</span></div>
<div class="line"><span class="lineno">   65</span>        {</div>
<div class="line"><span class="lineno">   66</span>            .rs_pin = 15U,</div>
<div class="line"><span class="lineno">   67</span>            .en_pin = 18U,</div>
<div class="line"><span class="lineno">   68</span>            .d0_pin = 2U,</div>
<div class="line"><span class="lineno">   69</span>            .d1_pin = 4U,</div>
<div class="line"><span class="lineno">   70</span>            .d2_pin = 5U,</div>
<div class="line"><span class="lineno">   71</span>            .d3_pin = 19U,</div>
<div class="line"><span class="lineno">   72</span>            .bl_pin = NO_PIN,</div>
<div class="line"><span class="lineno">   73</span>            .active_low = <span class="keyword">false</span>,</div>
<div class="line"><span class="lineno">   74</span>        }, <span class="comment">// LCD</span></div>
<div class="line"><span class="lineno">   75</span>        {</div>
<div class="line"><span class="lineno">   76</span>            .ch1_pin = 14U,</div>
<div class="line"><span class="lineno">   77</span>            .active_low = <span class="keyword">false</span>,</div>
<div class="line"><span class="lineno">   78</span>        }, <span class="comment">// relay</span></div>
<div class="line"><span class="lineno">   79</span>        {</div>
<div class="line"><span class="lineno">   80</span>            .pin = 12U,</div>
<div class="line"><span class="lineno">   81</span>        }, <span class="comment">// buzzer</span></div>
<div class="line"><span class="lineno">   82</span>        {</div>
<div class="line"><span class="lineno">   83</span>            .pin = 20U,</div>
<div class="line"><span class="lineno">   84</span>            .is_neopixel = <span class="keyword">true</span>,</div>
<div class="line"><span class="lineno">   85</span>            .neopixel_config = NEO_GRB + NEO_KHZ800,</div>
<div class="line"><span class="lineno">   86</span>            .is_rgb = <span class="keyword">false</span>,</div>
<div class="line"><span class="lineno">   87</span>            .green_pin = NO_PIN,</div>
<div class="line"><span class="lineno">   88</span>            .blue_pin = NO_PIN,</div>
<div class="line"><span class="lineno">   89</span>        }, <span class="comment">// LED config</span></div>
<div class="line"><span class="lineno">   90</span>        {</div>
<div class="line"><span class="lineno">   91</span>            .factory_defaults_pin = 21U,</div>
<div class="line"><span class="lineno">   92</span>        } <span class="comment">// Factory defaults button</span></div>
<div class="line"><span class="lineno">   93</span>    };</div>
<div class="line"><span class="lineno">   94</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_pins_config_8hpp_source.xhtml#l00010">NO_PIN</a>.</p>

<p class="reference">Referenced by <a class="el" href="pins_8hpp_source.xhtml#l00227">configure_pins()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a3ce79bfd6a28b712f586a19efb8d7a4b_icgraph.svg" width="363" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a7d7ec4f6b18ed51fccb19da9b813970f" name="a7d7ec4f6b18ed51fccb19da9b813970f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d7ec4f6b18ed51fccb19da9b813970f">&#9670;&#160;</a></span>configure_pins_wrover()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fabomatic::configure_pins_wrover </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt; const <a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a>
  </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Configuration for ESP32 Wrover Kit 4.1 (<a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32/hw-reference/esp32/get-started-wrover-kit.html">https://docs.espressif.com/projects/esp-idf/en/latest/esp32/hw-reference/esp32/get-started-wrover-kit.html</a>) </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="pins_8hpp_source.xhtml#l00184">184</a> of file <a class="el" href="pins_8hpp_source.xhtml">pins.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  185</span>  {</div>
<div class="line"><span class="lineno">  186</span>    <span class="keywordflow">return</span> <a class="code hl_struct" href="structfabomatic_1_1pins__config.xhtml">pins_config</a>{</div>
<div class="line"><span class="lineno">  187</span>        {</div>
<div class="line"><span class="lineno">  188</span>            .sda_pin = 15U,</div>
<div class="line"><span class="lineno">  189</span>            .mosi_pin = 19U,</div>
<div class="line"><span class="lineno">  190</span>            .miso_pin = 16U,</div>
<div class="line"><span class="lineno">  191</span>            .sck_pin = 20U,</div>
<div class="line"><span class="lineno">  192</span>            .reset_pin = 18U,</div>
<div class="line"><span class="lineno">  193</span>        }, <span class="comment">// RFID</span></div>
<div class="line"><span class="lineno">  194</span>        {</div>
<div class="line"><span class="lineno">  195</span>            .rs_pin = 12U,</div>
<div class="line"><span class="lineno">  196</span>            .en_pin = 14U,</div>
<div class="line"><span class="lineno">  197</span>            .d0_pin = 26U,</div>
<div class="line"><span class="lineno">  198</span>            .d1_pin = 21U,</div>
<div class="line"><span class="lineno">  199</span>            .d2_pin = 22U,</div>
<div class="line"><span class="lineno">  200</span>            .d3_pin = 23U,</div>
<div class="line"><span class="lineno">  201</span>            .bl_pin = NO_PIN,</div>
<div class="line"><span class="lineno">  202</span>            .active_low = <span class="keyword">false</span>,</div>
<div class="line"><span class="lineno">  203</span>        }, <span class="comment">// LCD</span></div>
<div class="line"><span class="lineno">  204</span>        {</div>
<div class="line"><span class="lineno">  205</span>            .ch1_pin = 5U,</div>
<div class="line"><span class="lineno">  206</span>            .active_low = <span class="keyword">false</span>,</div>
<div class="line"><span class="lineno">  207</span>        }, <span class="comment">// relay</span></div>
<div class="line"><span class="lineno">  208</span>        {</div>
<div class="line"><span class="lineno">  209</span>            .pin = 13U,</div>
<div class="line"><span class="lineno">  210</span>        }, <span class="comment">// buzzer</span></div>
<div class="line"><span class="lineno">  211</span>        {</div>
<div class="line"><span class="lineno">  212</span>            .pin = 0U,</div>
<div class="line"><span class="lineno">  213</span>            .is_neopixel = <span class="keyword">false</span>,</div>
<div class="line"><span class="lineno">  214</span>            .neopixel_config = 0,</div>
<div class="line"><span class="lineno">  215</span>            .is_rgb = <span class="keyword">true</span>,</div>
<div class="line"><span class="lineno">  216</span>            .green_pin = 2U,</div>
<div class="line"><span class="lineno">  217</span>            .blue_pin = 4U,</div>
<div class="line"><span class="lineno">  218</span>        }, <span class="comment">// LED configuration</span></div>
<div class="line"><span class="lineno">  219</span>        {</div>
<div class="line"><span class="lineno">  220</span>            .factory_defaults_pin = NO_PIN,</div>
<div class="line"><span class="lineno">  221</span>        } <span class="comment">// Factory defaults button</span></div>
<div class="line"><span class="lineno">  222</span>    };</div>
<div class="line"><span class="lineno">  223</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_pins_config_8hpp_source.xhtml#l00010">NO_PIN</a>.</p>

<p class="reference">Referenced by <a class="el" href="pins_8hpp_source.xhtml#l00227">configure_pins()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a7d7ec4f6b18ed51fccb19da9b813970f_icgraph.svg" width="363" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a412fca06536dbae1da1e3018a4fd03c6" name="a412fca06536dbae1da1e3018a4fd03c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a412fca06536dbae1da1e3018a4fd03c6">&#9670;&#160;</a></span>getConfig()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::getConfig </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>force_reset</em></td><td>)</td>
          <td> -&gt; <a class="el" href="classfabomatic_1_1_saved_config.xhtml">SavedConfig</a>
  </td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_o_t_a_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="_o_t_a_8cpp_source.xhtml">OTA.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   34</span>  {</div>
<div class="line"><span class="lineno">   35</span>    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;opt_settings = SavedConfig::LoadFromEEPROM();</div>
<div class="line"><span class="lineno">   36</span>    <span class="keywordflow">if</span> (force_reset || !opt_settings)</div>
<div class="line"><span class="lineno">   37</span>    {</div>
<div class="line"><span class="lineno">   38</span>      <span class="keywordflow">return</span> SavedConfig::DefaultConfig();</div>
<div class="line"><span class="lineno">   39</span>    }</div>
<div class="line"><span class="lineno">   40</span> </div>
<div class="line"><span class="lineno">   41</span>    <span class="keywordflow">return</span> opt_settings.value();</div>
<div class="line"><span class="lineno">   42</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_saved_config_8cpp_source.xhtml#l00028">fabomatic::SavedConfig::DefaultConfig()</a>, and <a class="el" href="_saved_config_8cpp_source.xhtml#l00052">fabomatic::SavedConfig::LoadFromEEPROM()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_o_t_a_8cpp_source.xhtml#l00047">openConfigPortal()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a412fca06536dbae1da1e3018a4fd03c6_cgraph.svg" width="560" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a412fca06536dbae1da1e3018a4fd03c6_icgraph.svg" width="614" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a68e38df690986ec6eff2bea6054fc8cb" name="a68e38df690986ec6eff2bea6054fc8cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68e38df690986ec6eff2bea6054fc8cb">&#9670;&#160;</a></span>no_duplicates()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool fabomatic::no_duplicates </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a>&#160;</td>
          <td class="paramname"><em>pins</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check at compile time that there are no duplicate pin definitions. </p>

<p class="definition">Definition at line <a class="el" href="_pins_config_8hpp_source.xhtml#l00077">77</a> of file <a class="el" href="_pins_config_8hpp_source.xhtml">PinsConfig.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   78</span>  {</div>
<div class="line"><span class="lineno">   79</span>    std::array pin_nums{</div>
<div class="line"><span class="lineno">   80</span>        pins.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#a56e9af80959f84e6c9483996009c5620">mfrc522</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1mfrc522__config.xhtml#a175be0691c7c28ed93120bf059fbeaa8">sda_pin</a>,</div>
<div class="line"><span class="lineno">   81</span>        pins.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#a56e9af80959f84e6c9483996009c5620">mfrc522</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1mfrc522__config.xhtml#a19ad1728d7526f56baeb3d1fe687c582">mosi_pin</a>,</div>
<div class="line"><span class="lineno">   82</span>        pins.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#a56e9af80959f84e6c9483996009c5620">mfrc522</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1mfrc522__config.xhtml#ae1ee8ccf4d0434da7900347ca5b929cc">miso_pin</a>,</div>
<div class="line"><span class="lineno">   83</span>        pins.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#a56e9af80959f84e6c9483996009c5620">mfrc522</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1mfrc522__config.xhtml#aff74af5a27c6eed2369365bf06c57495">sck_pin</a>,</div>
<div class="line"><span class="lineno">   84</span>        pins.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#a56e9af80959f84e6c9483996009c5620">mfrc522</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1mfrc522__config.xhtml#a62db3302c573adaafa4c031c5512c652">reset_pin</a>,</div>
<div class="line"><span class="lineno">   85</span>        pins.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#abd0d35daf6efede38501593182b6d574">lcd</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1lcd__config.xhtml#ab01700e546f2f4eeda250ca6bcb574d2">rs_pin</a>,</div>
<div class="line"><span class="lineno">   86</span>        pins.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#abd0d35daf6efede38501593182b6d574">lcd</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1lcd__config.xhtml#a1213d1161a9e3220271355440db4546a">en_pin</a>,</div>
<div class="line"><span class="lineno">   87</span>        pins.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#abd0d35daf6efede38501593182b6d574">lcd</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1lcd__config.xhtml#abf3ff78e86490e5c70c72849f65818d5">d0_pin</a>,</div>
<div class="line"><span class="lineno">   88</span>        pins.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#abd0d35daf6efede38501593182b6d574">lcd</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1lcd__config.xhtml#a1ab6a17e914d2267f9cedd085e126871">d1_pin</a>,</div>
<div class="line"><span class="lineno">   89</span>        pins.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#abd0d35daf6efede38501593182b6d574">lcd</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1lcd__config.xhtml#af533fe4d11b8c90e3c8a849e07f0a14e">d2_pin</a>,</div>
<div class="line"><span class="lineno">   90</span>        pins.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#abd0d35daf6efede38501593182b6d574">lcd</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1lcd__config.xhtml#ad9cd9645af26937062d2ad1c323b07e3">d3_pin</a>,</div>
<div class="line"><span class="lineno">   91</span>        pins.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#abd0d35daf6efede38501593182b6d574">lcd</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1lcd__config.xhtml#a350521ea33a6ab39885e4cab1ebf7ac2">bl_pin</a>,</div>
<div class="line"><span class="lineno">   92</span>        pins.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#a310be8cfdd1f9617522c2eb0dd02f252">relay</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1relay__config.xhtml#a3cfbcbcee8f3bb2aa8a2c6fc1246f27e">ch1_pin</a>,</div>
<div class="line"><span class="lineno">   93</span>        pins.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#a43cea4034bd725f649b61d3a78805eb2">buzzer</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1buzzer__config.xhtml#a733e4c811983bf63e73035ab885ffc65">pin</a>,</div>
<div class="line"><span class="lineno">   94</span>        pins.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#a5d85a2cde0f38b6fa413d40fb871c01f">led</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1led__config.xhtml#a77f7c0b888321527f09d6f5c9a73d613">pin</a>,</div>
<div class="line"><span class="lineno">   95</span>        pins.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#a5d85a2cde0f38b6fa413d40fb871c01f">led</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1led__config.xhtml#a75763c073c851328dd89841ef6a9c089">green_pin</a>,</div>
<div class="line"><span class="lineno">   96</span>        pins.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#a5d85a2cde0f38b6fa413d40fb871c01f">led</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1led__config.xhtml#a6f9e13764567a00b91ca452070ac5d8e">blue_pin</a>,</div>
<div class="line"><span class="lineno">   97</span>        pins.<a class="code hl_variable" href="structfabomatic_1_1pins__config.xhtml#ad95db725b088bb4db1c202d0d8a9660b">buttons</a>.<a class="code hl_variable" href="structfabomatic_1_1pins__config_1_1buttons__config.xhtml#a2b6b4bff992be0fb804412d51eed5484">factory_defaults_pin</a>};</div>
<div class="line"><span class="lineno">   98</span> </div>
<div class="line"><span class="lineno">   99</span>    <span class="comment">// No constexpr std::sort available</span></div>
<div class="line"><span class="lineno">  100</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; pin_nums.size(); ++i)</div>
<div class="line"><span class="lineno">  101</span>    {</div>
<div class="line"><span class="lineno">  102</span>      <span class="keywordflow">if</span> (pin_nums[i] == NO_PIN)</div>
<div class="line"><span class="lineno">  103</span>        <span class="keywordflow">continue</span>;</div>
<div class="line"><span class="lineno">  104</span> </div>
<div class="line"><span class="lineno">  105</span>      <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = i + 1; j &lt; pin_nums.size(); ++j)</div>
<div class="line"><span class="lineno">  106</span>      {</div>
<div class="line"><span class="lineno">  107</span>        <span class="keywordflow">if</span> (pin_nums[i] == pin_nums[j])</div>
<div class="line"><span class="lineno">  108</span>          <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  109</span>      }</div>
<div class="line"><span class="lineno">  110</span>      <span class="comment">// Check pins numbers are convertible to gpio_num_t</span></div>
<div class="line"><span class="lineno">  111</span>      <span class="keyword">static_cast&lt;</span>gpio_num_t<span class="keyword">&gt;</span>(pin_nums[i]);</div>
<div class="line"><span class="lineno">  112</span>    }</div>
<div class="line"><span class="lineno">  113</span>    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  114</span>  }</div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1buttons__config_xhtml_a2b6b4bff992be0fb804412d51eed5484"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1buttons__config.xhtml#a2b6b4bff992be0fb804412d51eed5484">fabomatic::pins_config::buttons_config::factory_defaults_pin</a></div><div class="ttdeci">uint8_t factory_defaults_pin</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00065">PinsConfig.hpp:65</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1buzzer__config_xhtml_a733e4c811983bf63e73035ab885ffc65"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1buzzer__config.xhtml#a733e4c811983bf63e73035ab885ffc65">fabomatic::pins_config::buzzer_config::pin</a></div><div class="ttdeci">uint8_t pin</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00050">PinsConfig.hpp:50</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1lcd__config_xhtml_a1213d1161a9e3220271355440db4546a"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1lcd__config.xhtml#a1213d1161a9e3220271355440db4546a">fabomatic::pins_config::lcd_config::en_pin</a></div><div class="ttdeci">uint8_t en_pin</div><div class="ttdoc">enable pin</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00030">PinsConfig.hpp:30</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1lcd__config_xhtml_a1ab6a17e914d2267f9cedd085e126871"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1lcd__config.xhtml#a1ab6a17e914d2267f9cedd085e126871">fabomatic::pins_config::lcd_config::d1_pin</a></div><div class="ttdeci">uint8_t d1_pin</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00032">PinsConfig.hpp:32</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1lcd__config_xhtml_a350521ea33a6ab39885e4cab1ebf7ac2"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1lcd__config.xhtml#a350521ea33a6ab39885e4cab1ebf7ac2">fabomatic::pins_config::lcd_config::bl_pin</a></div><div class="ttdeci">uint8_t bl_pin</div><div class="ttdoc">Backlight pin.</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00036">PinsConfig.hpp:36</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1lcd__config_xhtml_ab01700e546f2f4eeda250ca6bcb574d2"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1lcd__config.xhtml#ab01700e546f2f4eeda250ca6bcb574d2">fabomatic::pins_config::lcd_config::rs_pin</a></div><div class="ttdeci">uint8_t rs_pin</div><div class="ttdoc">reset pin</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00028">PinsConfig.hpp:28</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1lcd__config_xhtml_abf3ff78e86490e5c70c72849f65818d5"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1lcd__config.xhtml#abf3ff78e86490e5c70c72849f65818d5">fabomatic::pins_config::lcd_config::d0_pin</a></div><div class="ttdeci">uint8_t d0_pin</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00031">PinsConfig.hpp:31</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1lcd__config_xhtml_ad9cd9645af26937062d2ad1c323b07e3"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1lcd__config.xhtml#ad9cd9645af26937062d2ad1c323b07e3">fabomatic::pins_config::lcd_config::d3_pin</a></div><div class="ttdeci">uint8_t d3_pin</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00034">PinsConfig.hpp:34</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1lcd__config_xhtml_af533fe4d11b8c90e3c8a849e07f0a14e"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1lcd__config.xhtml#af533fe4d11b8c90e3c8a849e07f0a14e">fabomatic::pins_config::lcd_config::d2_pin</a></div><div class="ttdeci">uint8_t d2_pin</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00033">PinsConfig.hpp:33</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1led__config_xhtml_a6f9e13764567a00b91ca452070ac5d8e"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1led__config.xhtml#a6f9e13764567a00b91ca452070ac5d8e">fabomatic::pins_config::led_config::blue_pin</a></div><div class="ttdeci">uint8_t blue_pin</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00060">PinsConfig.hpp:60</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1led__config_xhtml_a75763c073c851328dd89841ef6a9c089"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1led__config.xhtml#a75763c073c851328dd89841ef6a9c089">fabomatic::pins_config::led_config::green_pin</a></div><div class="ttdeci">uint8_t green_pin</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00059">PinsConfig.hpp:59</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1led__config_xhtml_a77f7c0b888321527f09d6f5c9a73d613"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1led__config.xhtml#a77f7c0b888321527f09d6f5c9a73d613">fabomatic::pins_config::led_config::pin</a></div><div class="ttdeci">uint8_t pin</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00055">PinsConfig.hpp:55</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1mfrc522__config_xhtml_a175be0691c7c28ed93120bf059fbeaa8"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1mfrc522__config.xhtml#a175be0691c7c28ed93120bf059fbeaa8">fabomatic::pins_config::mfrc522_config::sda_pin</a></div><div class="ttdeci">uint8_t sda_pin</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00017">PinsConfig.hpp:17</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1mfrc522__config_xhtml_a19ad1728d7526f56baeb3d1fe687c582"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1mfrc522__config.xhtml#a19ad1728d7526f56baeb3d1fe687c582">fabomatic::pins_config::mfrc522_config::mosi_pin</a></div><div class="ttdeci">uint8_t mosi_pin</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00018">PinsConfig.hpp:18</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1mfrc522__config_xhtml_a62db3302c573adaafa4c031c5512c652"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1mfrc522__config.xhtml#a62db3302c573adaafa4c031c5512c652">fabomatic::pins_config::mfrc522_config::reset_pin</a></div><div class="ttdeci">uint8_t reset_pin</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00021">PinsConfig.hpp:21</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1mfrc522__config_xhtml_ae1ee8ccf4d0434da7900347ca5b929cc"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1mfrc522__config.xhtml#ae1ee8ccf4d0434da7900347ca5b929cc">fabomatic::pins_config::mfrc522_config::miso_pin</a></div><div class="ttdeci">uint8_t miso_pin</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00019">PinsConfig.hpp:19</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1mfrc522__config_xhtml_aff74af5a27c6eed2369365bf06c57495"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1mfrc522__config.xhtml#aff74af5a27c6eed2369365bf06c57495">fabomatic::pins_config::mfrc522_config::sck_pin</a></div><div class="ttdeci">uint8_t sck_pin</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00020">PinsConfig.hpp:20</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_1_1relay__config_xhtml_a3cfbcbcee8f3bb2aa8a2c6fc1246f27e"><div class="ttname"><a href="structfabomatic_1_1pins__config_1_1relay__config.xhtml#a3cfbcbcee8f3bb2aa8a2c6fc1246f27e">fabomatic::pins_config::relay_config::ch1_pin</a></div><div class="ttdeci">uint8_t ch1_pin</div><div class="ttdoc">Control pin for Machine 1.</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00044">PinsConfig.hpp:44</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_xhtml_a310be8cfdd1f9617522c2eb0dd02f252"><div class="ttname"><a href="structfabomatic_1_1pins__config.xhtml#a310be8cfdd1f9617522c2eb0dd02f252">fabomatic::pins_config::relay</a></div><div class="ttdeci">relay_config relay</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00070">PinsConfig.hpp:70</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_xhtml_a43cea4034bd725f649b61d3a78805eb2"><div class="ttname"><a href="structfabomatic_1_1pins__config.xhtml#a43cea4034bd725f649b61d3a78805eb2">fabomatic::pins_config::buzzer</a></div><div class="ttdeci">buzzer_config buzzer</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00071">PinsConfig.hpp:71</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_xhtml_a56e9af80959f84e6c9483996009c5620"><div class="ttname"><a href="structfabomatic_1_1pins__config.xhtml#a56e9af80959f84e6c9483996009c5620">fabomatic::pins_config::mfrc522</a></div><div class="ttdeci">mfrc522_config mfrc522</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00068">PinsConfig.hpp:68</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_xhtml_a5d85a2cde0f38b6fa413d40fb871c01f"><div class="ttname"><a href="structfabomatic_1_1pins__config.xhtml#a5d85a2cde0f38b6fa413d40fb871c01f">fabomatic::pins_config::led</a></div><div class="ttdeci">led_config led</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00072">PinsConfig.hpp:72</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_xhtml_abd0d35daf6efede38501593182b6d574"><div class="ttname"><a href="structfabomatic_1_1pins__config.xhtml#abd0d35daf6efede38501593182b6d574">fabomatic::pins_config::lcd</a></div><div class="ttdeci">lcd_config lcd</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00069">PinsConfig.hpp:69</a></div></div>
<div class="ttc" id="astructfabomatic_1_1pins__config_xhtml_ad95db725b088bb4db1c202d0d8a9660b"><div class="ttname"><a href="structfabomatic_1_1pins__config.xhtml#ad95db725b088bb4db1c202d0d8a9660b">fabomatic::pins_config::buttons</a></div><div class="ttdeci">buttons_config buttons</div><div class="ttdef"><b>Definition</b> <a href="_pins_config_8hpp_source.xhtml#l00073">PinsConfig.hpp:73</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_pins_config_8hpp_source.xhtml#l00036">fabomatic::pins_config::lcd_config::bl_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00060">fabomatic::pins_config::led_config::blue_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00073">fabomatic::pins_config::buttons</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00071">fabomatic::pins_config::buzzer</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00044">fabomatic::pins_config::relay_config::ch1_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00031">fabomatic::pins_config::lcd_config::d0_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00032">fabomatic::pins_config::lcd_config::d1_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00033">fabomatic::pins_config::lcd_config::d2_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00034">fabomatic::pins_config::lcd_config::d3_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00030">fabomatic::pins_config::lcd_config::en_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00065">fabomatic::pins_config::buttons_config::factory_defaults_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00059">fabomatic::pins_config::led_config::green_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00069">fabomatic::pins_config::lcd</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00072">fabomatic::pins_config::led</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00068">fabomatic::pins_config::mfrc522</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00019">fabomatic::pins_config::mfrc522_config::miso_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00018">fabomatic::pins_config::mfrc522_config::mosi_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00010">NO_PIN</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00050">fabomatic::pins_config::buzzer_config::pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00055">fabomatic::pins_config::led_config::pin</a>, <a class="el" href="pins_8hpp_source.xhtml#l00246">pins</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00070">fabomatic::pins_config::relay</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00021">fabomatic::pins_config::mfrc522_config::reset_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00028">fabomatic::pins_config::lcd_config::rs_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00020">fabomatic::pins_config::mfrc522_config::sck_pin</a>, and <a class="el" href="_pins_config_8hpp_source.xhtml#l00017">fabomatic::pins_config::mfrc522_config::sda_pin</a>.</p>

</div>
</div>
<a id="a8374c0d1cef777c26dc13b4abc9c52b6" name="a8374c0d1cef777c26dc13b4abc9c52b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8374c0d1cef777c26dc13b4abc9c52b6">&#9670;&#160;</a></span>openConfigPortal()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::openConfigPortal </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>force_reset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>disable_portal</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Open the ArduinoOTA configuration portal. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">force_reset</td><td>if true, the portal will be reset to factory defaults </td></tr>
    <tr><td class="paramname">disable_portal</td><td>if true, the portal will be disabled (useful at boot-time)</td></tr>
    <tr><td class="paramname">force_reset</td><td>true to discard saved settings and restore compile-time settings </td></tr>
    <tr><td class="paramname">disable_portal</td><td>true to skip portal opening (used at boot time) </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_o_t_a_8cpp_source.xhtml#l00047">47</a> of file <a class="el" href="_o_t_a_8cpp_source.xhtml">OTA.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   48</span>  {</div>
<div class="line"><span class="lineno">   49</span>    WiFiManager wifiManager;</div>
<div class="line"><span class="lineno">   50</span>    <span class="keyword">auto</span> config = <a class="code hl_function" href="namespacefabomatic.xhtml#a412fca06536dbae1da1e3018a4fd03c6">getConfig</a>(force_reset);</div>
<div class="line"><span class="lineno">   51</span> </div>
<div class="line"><span class="lineno">   52</span>    <span class="comment">// We are using config as a buffer for the WiFiManager parameters, make sure it can hold the content</span></div>
<div class="line"><span class="lineno">   53</span>    config.mqtt_server.resize(conf::common::STR_MAX_LENGTH);</div>
<div class="line"><span class="lineno">   54</span>    config.mqtt_switch_topic.resize(conf::common::STR_MAX_LENGTH);</div>
<div class="line"><span class="lineno">   55</span>    config.machine_id.resize(conf::common::INT_MAX_LENGTH);</div>
<div class="line"><span class="lineno">   56</span> </div>
<div class="line"><span class="lineno">   57</span>    WiFiManagerParameter custom_mqtt_server(<span class="stringliteral">&quot;Broker&quot;</span>, strings::PORTAL_MQTT_BROKER_PROMPT, config.mqtt_server.data(), conf::common::STR_MAX_LENGTH);</div>
<div class="line"><span class="lineno">   58</span>    WiFiManagerParameter custom_mqtt_topic(<span class="stringliteral">&quot;Topic&quot;</span>, strings::PORTAL_SHELLY_MQTT_PROMPT, config.mqtt_switch_topic.data(), conf::common::STR_MAX_LENGTH);</div>
<div class="line"><span class="lineno">   59</span>    WiFiManagerParameter custom_machine_id(<span class="stringliteral">&quot;MachineID&quot;</span>, strings::PORTAL_MACHINE_ID_PROMPT, config.machine_id.data(), conf::common::INT_MAX_LENGTH, <span class="stringliteral">&quot;type=&#39;number&#39; min=&#39;0&#39; max=&#39;65535&#39;&quot;</span>);</div>
<div class="line"><span class="lineno">   60</span> </div>
<div class="line"><span class="lineno">   61</span>    wifiManager.addParameter(&amp;custom_mqtt_server);</div>
<div class="line"><span class="lineno">   62</span>    wifiManager.addParameter(&amp;custom_mqtt_topic);</div>
<div class="line"><span class="lineno">   63</span>    wifiManager.addParameter(&amp;custom_machine_id);</div>
<div class="line"><span class="lineno">   64</span> </div>
<div class="line"><span class="lineno">   65</span>    wifiManager.setTimeout(std::chrono::duration_cast&lt;std::chrono::seconds&gt;(conf::tasks::PORTAL_CONFIG_TIMEOUT).count());</div>
<div class="line"><span class="lineno">   66</span>    wifiManager.setConnectRetries(3);  <span class="comment">// 3 retries</span></div>
<div class="line"><span class="lineno">   67</span>    wifiManager.setConnectTimeout(10); <span class="comment">// 10 seconds</span></div>
<div class="line"><span class="lineno">   68</span>    wifiManager.setCountry(<span class="stringliteral">&quot;IT&quot;</span>);</div>
<div class="line"><span class="lineno">   69</span>    wifiManager.setTitle(strings::PORTAL_TITLE);</div>
<div class="line"><span class="lineno">   70</span>    wifiManager.setCaptivePortalEnable(<span class="keyword">true</span>);</div>
<div class="line"><span class="lineno">   71</span>    wifiManager.setAPCallback(configModeCallback);</div>
<div class="line"><span class="lineno">   72</span>    wifiManager.setSaveConfigCallback(saveConfigCallback);</div>
<div class="line"><span class="lineno">   73</span> </div>
<div class="line"><span class="lineno">   74</span>    <span class="keywordflow">if</span> (force_reset)</div>
<div class="line"><span class="lineno">   75</span>    {</div>
<div class="line"><span class="lineno">   76</span>      wifiManager.resetSettings();</div>
<div class="line"><span class="lineno">   77</span>    }</div>
<div class="line"><span class="lineno">   78</span> </div>
<div class="line"><span class="lineno">   79</span><span class="preprocessor">#if (PINS_WOKWI)</span></div>
<div class="line"><span class="lineno">   80</span>    wifiManager.setDebugOutput(<span class="keyword">true</span>);</div>
<div class="line"><span class="lineno">   81</span>    wifiManager.resetSettings();</div>
<div class="line"><span class="lineno">   82</span>    wifiManager.setTimeout(10); <span class="comment">// fail fast for debugging</span></div>
<div class="line"><span class="lineno">   83</span><span class="preprocessor">#endif</span></div>
<div class="line"><span class="lineno">   84</span>    <span class="keyword">auto</span> must_skip = disable_portal || config.disablePortal;</div>
<div class="line"><span class="lineno">   85</span>    <span class="keywordflow">if</span> (must_skip)</div>
<div class="line"><span class="lineno">   86</span>    {</div>
<div class="line"><span class="lineno">   87</span>      wifiManager.setTimeout(1);</div>
<div class="line"><span class="lineno">   88</span>    }</div>
<div class="line"><span class="lineno">   89</span> </div>
<div class="line"><span class="lineno">   90</span>    <span class="keywordflow">if</span> (wifiManager.autoConnect())</div>
<div class="line"><span class="lineno">   91</span>    {</div>
<div class="line"><span class="lineno">   92</span>      Board::logic.changeStatus(Status::PortalSuccess);</div>
<div class="line"><span class="lineno">   93</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">delay</a>(1000);</div>
<div class="line"><span class="lineno">   94</span>    }</div>
<div class="line"><span class="lineno">   95</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">   96</span>    {</div>
<div class="line"><span class="lineno">   97</span>      <span class="keywordflow">if</span> (!must_skip)</div>
<div class="line"><span class="lineno">   98</span>      {</div>
<div class="line"><span class="lineno">   99</span>        Board::logic.changeStatus(Status::PortalFailed);</div>
<div class="line"><span class="lineno">  100</span>        <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">delay</a>(3000);</div>
<div class="line"><span class="lineno">  101</span>      }</div>
<div class="line"><span class="lineno">  102</span>    }</div>
<div class="line"><span class="lineno">  103</span> </div>
<div class="line"><span class="lineno">  104</span>    <span class="keywordflow">if</span> (shouldSaveConfig)</div>
<div class="line"><span class="lineno">  105</span>    {</div>
<div class="line"><span class="lineno">  106</span>      <span class="comment">// save SSID data from WiFiManager</span></div>
<div class="line"><span class="lineno">  107</span>      config.ssid.assign(WiFi.SSID().c_str());</div>
<div class="line"><span class="lineno">  108</span>      config.password.assign(WiFi.psk().c_str());</div>
<div class="line"><span class="lineno">  109</span> </div>
<div class="line"><span class="lineno">  110</span>      <span class="comment">// read updated parameters</span></div>
<div class="line"><span class="lineno">  111</span>      config.mqtt_server.assign(custom_mqtt_server.getValue());</div>
<div class="line"><span class="lineno">  112</span>      config.mqtt_switch_topic.assign(custom_mqtt_topic.getValue());</div>
<div class="line"><span class="lineno">  113</span>      config.machine_id.assign(custom_machine_id.getValue());</div>
<div class="line"><span class="lineno">  114</span> </div>
<div class="line"><span class="lineno">  115</span>      config.disablePortal = <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  116</span> </div>
<div class="line"><span class="lineno">  117</span>      <span class="comment">// save the custom parameters to EEPROM</span></div>
<div class="line"><span class="lineno">  118</span>      <span class="keywordflow">if</span> (config.SaveToEEPROM())</div>
<div class="line"><span class="lineno">  119</span>      {</div>
<div class="line"><span class="lineno">  120</span>        ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Config saved to EEPROM&quot;</span>);</div>
<div class="line"><span class="lineno">  121</span>      }</div>
<div class="line"><span class="lineno">  122</span>      <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  123</span>      {</div>
<div class="line"><span class="lineno">  124</span>        ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failed to save config to EEPROM&quot;</span>);</div>
<div class="line"><span class="lineno">  125</span>      }</div>
<div class="line"><span class="lineno">  126</span> </div>
<div class="line"><span class="lineno">  127</span>      <span class="comment">// WiFi settings change may require full reboot</span></div>
<div class="line"><span class="lineno">  128</span>      Board::logic.setRebootRequest(<span class="keyword">true</span>);</div>
<div class="line"><span class="lineno">  129</span>    }</div>
<div class="line"><span class="lineno">  130</span>  }</div>
<div class="ttc" id="anamespacefabomatic_1_1_tasks_xhtml_a5c20f560f5934822d39ba116a16f3ab6"><div class="ttname"><a href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">fabomatic::Tasks::delay</a></div><div class="ttdeci">auto delay(const milliseconds duration) -&gt; void</div><div class="ttdoc">Wait for a delay, allowing OTA updates.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00250">Tasks.cpp:250</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_a412fca06536dbae1da1e3018a4fd03c6"><div class="ttname"><a href="namespacefabomatic.xhtml#a412fca06536dbae1da1e3018a4fd03c6">fabomatic::getConfig</a></div><div class="ttdeci">auto getConfig(bool force_reset) -&gt; SavedConfig</div><div class="ttdef"><b>Definition</b> <a href="_o_t_a_8cpp_source.xhtml#l00033">OTA.cpp:33</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8cpp_source.xhtml#l00272">fabomatic::BoardLogic::changeStatus()</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00025">configModeCallback()</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00033">getConfig()</a>, <a class="el" href="conf_8hpp_source.xhtml#l00173">fabomatic::conf::common::INT_MAX_LENGTH</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00015">fabomatic::Board::logic</a>, <a class="el" href="conf_8hpp_source.xhtml#l00128">fabomatic::conf::tasks::PORTAL_CONFIG_TIMEOUT</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00019">saveConfigCallback()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00638">fabomatic::BoardLogic::setRebootRequest()</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00011">shouldSaveConfig</a>, <a class="el" href="conf_8hpp_source.xhtml#l00170">fabomatic::conf::common::STR_MAX_LENGTH</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00411">setup()</a>, and <a class="el" href="main_8cpp_source.xhtml#l00213">taskFactoryReset()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a8374c0d1cef777c26dc13b4abc9c52b6_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a8374c0d1cef777c26dc13b4abc9c52b6_icgraph.svg" width="428" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a77e12974f277568ed32e1f793c89326c" name="a77e12974f277568ed32e1f793c89326c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77e12974f277568ed32e1f793c89326c">&#9670;&#160;</a></span>OTAComplete()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::OTAComplete </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_o_t_a_8cpp_source.xhtml#l00132">132</a> of file <a class="el" href="_o_t_a_8cpp_source.xhtml">OTA.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  133</span>  {</div>
<div class="line"><span class="lineno">  134</span>    ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;OTA complete, reboot requested&quot;</span>);</div>
<div class="line"><span class="lineno">  135</span>    Board::logic.setRebootRequest(<span class="keyword">true</span>);</div>
<div class="line"><span class="lineno">  136</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_o_t_a_8cpp_source.xhtml#l00015">fabomatic::Board::logic</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00638">fabomatic::BoardLogic::setRebootRequest()</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_o_t_a_8cpp_source.xhtml#l00138">setupOTA()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a77e12974f277568ed32e1f793c89326c_cgraph.svg" width="376" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a77e12974f277568ed32e1f793c89326c_icgraph.svg" width="470" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aba5f28d2cdf80fb0270592238bfee443" name="aba5f28d2cdf80fb0270592238bfee443"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba5f28d2cdf80fb0270592238bfee443">&#9670;&#160;</a></span>printCompileSettings()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::printCompileSettings </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="main_8cpp_source.xhtml#l00320">320</a> of file <a class="el" href="main_8cpp_source.xhtml">main.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  321</span>  {</div>
<div class="line"><span class="lineno">  322</span>    <span class="keyword">using namespace </span>conf;</div>
<div class="line"><span class="lineno">  323</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;Compile-time settings (may be overriden)&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  324</span>    <span class="comment">// namespace conf::default_config</span></div>
<div class="line"><span class="lineno">  325</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;Machine defaults:&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  326</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tmachine_id: &quot;</span> &lt;&lt; default_config::machine_id.id &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  327</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tmachine_name: &quot;</span> &lt;&lt; default_config::machine_name &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  328</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tmachine_type: &quot;</span> &lt;&lt; <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(default_config::machine_type) &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  329</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\thostname: &quot;</span> &lt;&lt; default_config::hostname &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  330</span>    <span class="comment">// simulation constants</span></div>
<div class="line"><span class="lineno">  331</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;Compilation settings&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  332</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tMQTT_SIMULATION: &quot;</span> &lt;&lt; MQTT_SIMULATION &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  333</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tRFID_SIMULATION: &quot;</span> &lt;&lt; RFID_SIMULATION &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  334</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tCORE_DEBUG_LEVEL: &quot;</span> &lt;&lt; CORE_DEBUG_LEVEL &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  335</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tLANGUAGE: &quot;</span> &lt;&lt; fabomatic::strings::S_LANG_ID &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  336</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tBUILD: &quot;</span> &lt;&lt; FABOMATIC_BUILD &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  337</span> </div>
<div class="line"><span class="lineno">  338</span>    <span class="comment">// namespace conf::rfid_tags</span></div>
<div class="line"><span class="lineno">  339</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;RFID tags:&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  340</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tUID_BYTE_LEN: &quot;</span> &lt;&lt; +rfid_tags::UID_BYTE_LEN &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  341</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tCACHE_LEN: &quot;</span> &lt;&lt; +rfid_tags::CACHE_LEN &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  342</span>    <span class="comment">// namespace conf::lcd</span></div>
<div class="line"><span class="lineno">  343</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;LCD config&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  344</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tLCD ROWS: &quot;</span> &lt;&lt; +lcd::ROWS &lt;&lt; <span class="stringliteral">&quot;, COLS: &quot;</span> &lt;&lt; +lcd::COLS &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  345</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tSHORT_MESSAGE_DELAY: &quot;</span> &lt;&lt; std::chrono::milliseconds(lcd::SHORT_MESSAGE_DELAY).count() &lt;&lt; <span class="stringliteral">&quot;ms&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  346</span>    <span class="comment">// namespace conf::machine</span></div>
<div class="line"><span class="lineno">  347</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;General settings:&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  348</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tDEFAULT_AUTO_LOGOFF_DELAY: &quot;</span> &lt;&lt; std::chrono::hours(machine::DEFAULT_AUTO_LOGOFF_DELAY).count() &lt;&lt; <span class="stringliteral">&quot;h&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  349</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tDEFAULT_GRACE_PERIOD: &quot;</span> &lt;&lt; std::chrono::seconds(machine::DEFAULT_GRACE_PERIOD).count() &lt;&lt; <span class="stringliteral">&quot;s&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  350</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tDELAY_BETWEEN_BEEPS: &quot;</span> &lt;&lt; std::chrono::seconds(machine::DELAY_BETWEEN_BEEPS).count() &lt;&lt; <span class="stringliteral">&quot;s&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  351</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tMAINTENANCE_BLOCK: &quot;</span> &lt;&lt; machine::MAINTENANCE_BLOCK &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  352</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tLONG_TAP_DURATION: &quot;</span> &lt;&lt; std::chrono::seconds(machine::LONG_TAP_DURATION).count() &lt;&lt; <span class="stringliteral">&quot;s&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  353</span>    <span class="comment">// namespace conf::debug</span></div>
<div class="line"><span class="lineno">  354</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;Debug settings:&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  355</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tENABLE_LOGS: &quot;</span> &lt;&lt; debug::ENABLE_LOGS &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  356</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tENABLE_TASK_LOGS: &quot;</span> &lt;&lt; debug::ENABLE_TASK_LOGS &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  357</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tSERIAL_SPEED_BDS: &quot;</span> &lt;&lt; debug::SERIAL_SPEED_BDS &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  358</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tFORCE_PORTAL: &quot;</span> &lt;&lt; debug::FORCE_PORTAL &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  359</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tLOAD_EEPROM_DEFAULTS: &quot;</span> &lt;&lt; debug::LOAD_EEPROM_DEFAULTS &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  360</span>    <span class="comment">// namespace conf::buzzer</span></div>
<div class="line"><span class="lineno">  361</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;Buzzer settings:&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  362</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tSTANDARD_BEEP_DURATION: &quot;</span> &lt;&lt; std::chrono::milliseconds(buzzer::STANDARD_BEEP_DURATION).count() &lt;&lt; <span class="stringliteral">&quot;ms&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  363</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tNB_BEEPS: &quot;</span> &lt;&lt; buzzer::NB_BEEPS &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  364</span>    <span class="comment">// namespace conf::tasks</span></div>
<div class="line"><span class="lineno">  365</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;Tasks settings:&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  366</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tRFID_CHECK_PERIOD: &quot;</span> &lt;&lt; std::chrono::milliseconds(tasks::RFID_CHECK_PERIOD).count() &lt;&lt; <span class="stringliteral">&quot;ms&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  367</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tRFID_SELFTEST_PERIOD: &quot;</span> &lt;&lt; std::chrono::seconds(tasks::RFID_SELFTEST_PERIOD).count() &lt;&lt; <span class="stringliteral">&quot;s&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  368</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tMQTT_REFRESH_PERIOD: &quot;</span> &lt;&lt; std::chrono::seconds(tasks::MQTT_REFRESH_PERIOD).count() &lt;&lt; <span class="stringliteral">&quot;s&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  369</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tWATCHDOG_TIMEOUT: &quot;</span> &lt;&lt; std::chrono::seconds(tasks::WATCHDOG_TIMEOUT).count() &lt;&lt; <span class="stringliteral">&quot;s&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  370</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tWATCHDOG_PERIOD: &quot;</span> &lt;&lt; std::chrono::seconds(tasks::WATCHDOG_PERIOD).count() &lt;&lt; <span class="stringliteral">&quot;s&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  371</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tPORTAL_CONFIG_TIMEOUT: &quot;</span> &lt;&lt; std::chrono::seconds(tasks::PORTAL_CONFIG_TIMEOUT).count() &lt;&lt; <span class="stringliteral">&quot;s&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  372</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tMQTT_ALIVE_PERIOD: &quot;</span> &lt;&lt; std::chrono::seconds(tasks::MQTT_ALIVE_PERIOD).count() &lt;&lt; <span class="stringliteral">&quot;s&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  373</span>    <span class="comment">// namespace conf::mqtt</span></div>
<div class="line"><span class="lineno">  374</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;MQTT settings:&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  375</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tmqtt_server: &quot;</span> &lt;&lt; mqtt::mqtt_server &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  376</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tmqtt_switch_topic: &quot;</span> &lt;&lt; mqtt::mqtt_switch_topic &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  377</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tmqtt_switch_on_message: &quot;</span> &lt;&lt; mqtt::mqtt_switch_on_message &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  378</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tmqtt_switch_off_message: &quot;</span> &lt;&lt; mqtt::mqtt_switch_off_message &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  379</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\ttopic: &quot;</span> &lt;&lt; mqtt::topic &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  380</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tresponse_topic: &quot;</span> &lt;&lt; mqtt::response_topic &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  381</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tMAX_TRIES: &quot;</span> &lt;&lt; mqtt::MAX_TRIES &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  382</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tTIMEOUT_REPLY_SERVER: &quot;</span> &lt;&lt; std::chrono::milliseconds(mqtt::TIMEOUT_REPLY_SERVER).count() &lt;&lt; <span class="stringliteral">&quot;ms&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  383</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tPORT_NUMBER: &quot;</span> &lt;&lt; mqtt::PORT_NUMBER &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  384</span>    <span class="comment">// Now dump all pins.hpp settings</span></div>
<div class="line"><span class="lineno">  385</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;Hardware settings:&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  386</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tLED:&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  387</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\t\tPin:&quot;</span> &lt;&lt; +pins.led.pin &lt;&lt; <span class="stringliteral">&quot; (G:&quot;</span> &lt;&lt; +pins.led.green_pin &lt;&lt; <span class="stringliteral">&quot;, B:&quot;</span> &lt;&lt; +pins.led.blue_pin &lt;&lt; <span class="stringliteral">&quot;)&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  388</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\t\tType is neopixel:&quot;</span> &lt;&lt; pins.led.is_neopixel &lt;&lt; <span class="stringliteral">&quot;, is rgb:&quot;</span> &lt;&lt; pins.led.is_rgb &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  389</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\t\tNeopixel config flags:&quot;</span> &lt;&lt; pins.led.neopixel_config &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  390</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tMfrc522 chip:&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  391</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\t\tSPI settings: MISO: &quot;</span> &lt;&lt; +pins.mfrc522.miso_pin &lt;&lt; <span class="stringliteral">&quot;,&quot;</span></div>
<div class="line"><span class="lineno">  392</span>              &lt;&lt; <span class="stringliteral">&quot; MOSI: &quot;</span> &lt;&lt; +pins.mfrc522.mosi_pin &lt;&lt; <span class="stringliteral">&quot;,&quot;</span></div>
<div class="line"><span class="lineno">  393</span>              &lt;&lt; <span class="stringliteral">&quot; SCK: &quot;</span> &lt;&lt; +pins.mfrc522.sck_pin &lt;&lt; <span class="stringliteral">&quot;,&quot;</span></div>
<div class="line"><span class="lineno">  394</span>              &lt;&lt; <span class="stringliteral">&quot; SDA: &quot;</span> &lt;&lt; +pins.mfrc522.sda_pin &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  395</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\t\tRESET pin:&quot;</span> &lt;&lt; +pins.mfrc522.reset_pin &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  396</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tLCD module:&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  397</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\t\tParallel interface D0:&quot;</span> &lt;&lt; +pins.lcd.d0_pin &lt;&lt; <span class="stringliteral">&quot;, D1:&quot;</span> &lt;&lt; +pins.lcd.d1_pin &lt;&lt; <span class="stringliteral">&quot;, D2:&quot;</span> &lt;&lt; +pins.lcd.d2_pin &lt;&lt; <span class="stringliteral">&quot;, D3:&quot;</span> &lt;&lt; +pins.lcd.d3_pin &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  398</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\t\tReset pin:&quot;</span> &lt;&lt; +pins.lcd.rs_pin &lt;&lt; <span class="stringliteral">&quot;, Enable pin:&quot;</span> &lt;&lt; +pins.lcd.en_pin &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  399</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\t\tBacklight pin:&quot;</span> &lt;&lt; +pins.lcd.bl_pin &lt;&lt; <span class="stringliteral">&quot; (active low:&quot;</span> &lt;&lt; pins.lcd.active_low &lt;&lt; <span class="stringliteral">&quot;)&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  400</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tRelay:&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  401</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\t\tControl pin:&quot;</span> &lt;&lt; +pins.relay.ch1_pin &lt;&lt; <span class="stringliteral">&quot; (active low:&quot;</span> &lt;&lt; pins.relay.active_low &lt;&lt; <span class="stringliteral">&quot;)&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  402</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tBuzzer:&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  403</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\t\tPin:&quot;</span> &lt;&lt; +pins.buzzer.pin &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  404</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\tButtons:&quot;</span> &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  405</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;\t\tFactory defaults pin:&quot;</span> &lt;&lt; +pins.buttons.factory_defaults_pin &lt;&lt; <span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><span class="lineno">  406</span>    std::cout &lt;&lt; std::endl;</div>
<div class="line"><span class="lineno">  407</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_pins_config_8hpp_source.xhtml#l00038">fabomatic::pins_config::lcd_config::active_low</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00045">fabomatic::pins_config::relay_config::active_low</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00036">fabomatic::pins_config::lcd_config::bl_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00060">fabomatic::pins_config::led_config::blue_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00073">fabomatic::pins_config::buttons</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00071">fabomatic::pins_config::buzzer</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00044">fabomatic::pins_config::relay_config::ch1_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00031">fabomatic::pins_config::lcd_config::d0_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00032">fabomatic::pins_config::lcd_config::d1_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00033">fabomatic::pins_config::lcd_config::d2_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00034">fabomatic::pins_config::lcd_config::d3_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00030">fabomatic::pins_config::lcd_config::en_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00065">fabomatic::pins_config::buttons_config::factory_defaults_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00059">fabomatic::pins_config::led_config::green_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00056">fabomatic::pins_config::led_config::is_neopixel</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00058">fabomatic::pins_config::led_config::is_rgb</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00069">fabomatic::pins_config::lcd</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00072">fabomatic::pins_config::led</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00068">fabomatic::pins_config::mfrc522</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00019">fabomatic::pins_config::mfrc522_config::miso_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00018">fabomatic::pins_config::mfrc522_config::mosi_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00057">fabomatic::pins_config::led_config::neopixel_config</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00050">fabomatic::pins_config::buzzer_config::pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00055">fabomatic::pins_config::led_config::pin</a>, <a class="el" href="pins_8hpp_source.xhtml#l00246">pins</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00070">fabomatic::pins_config::relay</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00021">fabomatic::pins_config::mfrc522_config::reset_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00028">fabomatic::pins_config::lcd_config::rs_pin</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00020">fabomatic::pins_config::mfrc522_config::sck_pin</a>, and <a class="el" href="_pins_config_8hpp_source.xhtml#l00017">fabomatic::pins_config::mfrc522_config::sda_pin</a>.</p>

<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00411">setup()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_aba5f28d2cdf80fb0270592238bfee443_icgraph.svg" width="316" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a4fdef03704e4c9526605a43b8dd6549e" name="a4fdef03704e4c9526605a43b8dd6549e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fdef03704e4c9526605a43b8dd6549e">&#9670;&#160;</a></span>saveConfigCallback()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::saveConfigCallback </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_o_t_a_8cpp_source.xhtml#l00019">19</a> of file <a class="el" href="_o_t_a_8cpp_source.xhtml">OTA.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   20</span>  {</div>
<div class="line"><span class="lineno">   21</span>    <a class="code hl_variable" href="namespacefabomatic.xhtml#a52ae622725c801d2f8d66840738bc5f8">shouldSaveConfig</a>.store(<span class="keyword">true</span>);</div>
<div class="line"><span class="lineno">   22</span>  }</div>
<div class="ttc" id="anamespacefabomatic_xhtml_a52ae622725c801d2f8d66840738bc5f8"><div class="ttname"><a href="namespacefabomatic.xhtml#a52ae622725c801d2f8d66840738bc5f8">fabomatic::shouldSaveConfig</a></div><div class="ttdeci">std::atomic&lt; bool &gt; shouldSaveConfig</div><div class="ttdef"><b>Definition</b> <a href="_o_t_a_8cpp_source.xhtml#l00011">OTA.cpp:11</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_o_t_a_8cpp_source.xhtml#l00011">shouldSaveConfig</a>.</p>

<p class="reference">Referenced by <a class="el" href="_o_t_a_8cpp_source.xhtml#l00047">openConfigPortal()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a4fdef03704e4c9526605a43b8dd6549e_icgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a53440db527e478f13eaa71bbd46120c3" name="a53440db527e478f13eaa71bbd46120c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53440db527e478f13eaa71bbd46120c3">&#9670;&#160;</a></span>setupOTA()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fabomatic::setupOTA </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization of the Arduino OTA library with settings for fabomatic. </p>

<p class="definition">Definition at line <a class="el" href="_o_t_a_8cpp_source.xhtml#l00138">138</a> of file <a class="el" href="_o_t_a_8cpp_source.xhtml">OTA.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  139</span>  {</div>
<div class="line"><span class="lineno">  140</span>    ArduinoOTA.setHostname(Board::logic.getHostname().c_str());</div>
<div class="line"><span class="lineno">  141</span>    ArduinoOTA.onStart([]()</div>
<div class="line"><span class="lineno">  142</span>                       { Board::logic.changeStatus(Status::OTAStarting); });</div>
<div class="line"><span class="lineno">  143</span>    ArduinoOTA.onEnd(OTAComplete);</div>
<div class="line"><span class="lineno">  144</span>    ArduinoOTA.onError([](ota_error_t error)</div>
<div class="line"><span class="lineno">  145</span>                       { Board::logic.changeStatus(Status::OTAError); });</div>
<div class="line"><span class="lineno">  146</span>    ArduinoOTA.setMdnsEnabled(<span class="keyword">true</span>);</div>
<div class="line"><span class="lineno">  147</span>    ArduinoOTA.setRebootOnSuccess(<span class="keyword">false</span>);</div>
<div class="line"><span class="lineno">  148</span>    ArduinoOTA.setTimeout(45000);</div>
<div class="line"><span class="lineno">  149</span>    ArduinoOTA.begin();</div>
<div class="line"><span class="lineno">  150</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8cpp_source.xhtml#l00272">fabomatic::BoardLogic::changeStatus()</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00015">fabomatic::Board::logic</a>, and <a class="el" href="_o_t_a_8cpp_source.xhtml#l00132">OTAComplete()</a>.</p>

<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00411">setup()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a53440db527e478f13eaa71bbd46120c3_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a53440db527e478f13eaa71bbd46120c3_icgraph.svg" width="256" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a9bb86caf0357ce1dd9ffe2945dcfc6e4" name="a9bb86caf0357ce1dd9ffe2945dcfc6e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9bb86caf0357ce1dd9ffe2945dcfc6e4">&#9670;&#160;</a></span>taskBlink()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::taskBlink </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>blink led </p>

<p class="definition">Definition at line <a class="el" href="main_8cpp_source.xhtml#l00088">88</a> of file <a class="el" href="main_8cpp_source.xhtml">main.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   89</span>  {</div>
<div class="line"><span class="lineno">   90</span>    Board::logic.blinkLed();</div>
<div class="line"><span class="lineno">   91</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8cpp_source.xhtml#l00498">fabomatic::BoardLogic::blinkLed()</a>, and <a class="el" href="_o_t_a_8cpp_source.xhtml#l00015">fabomatic::Board::logic</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a9bb86caf0357ce1dd9ffe2945dcfc6e4_cgraph.svg" width="556" height="462"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a3e5c190499522bddad3f3cc69274f16c" name="a3e5c190499522bddad3f3cc69274f16c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e5c190499522bddad3f3cc69274f16c">&#9670;&#160;</a></span>taskCheckRfid()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::taskCheckRfid </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>periodic check for new RFID card </p>

<p class="definition">Definition at line <a class="el" href="main_8cpp_source.xhtml#l00082">82</a> of file <a class="el" href="main_8cpp_source.xhtml">main.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   83</span>  {</div>
<div class="line"><span class="lineno">   84</span>    Board::logic.checkRfid();</div>
<div class="line"><span class="lineno">   85</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8cpp_source.xhtml#l00548">fabomatic::BoardLogic::checkRfid()</a>, and <a class="el" href="_o_t_a_8cpp_source.xhtml#l00015">fabomatic::Board::logic</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a3e5c190499522bddad3f3cc69274f16c_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ae7de89faffd3bb8805727b8a1092a198" name="ae7de89faffd3bb8805727b8a1092a198"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7de89faffd3bb8805727b8a1092a198">&#9670;&#160;</a></span>taskConnect()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::taskConnect </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Opens WiFi and server connection and updates board state accordingly. </p>

<p class="definition">Definition at line <a class="el" href="main_8cpp_source.xhtml#l00042">42</a> of file <a class="el" href="main_8cpp_source.xhtml">main.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   43</span>  {</div>
<div class="line"><span class="lineno">   44</span>    <span class="keyword">auto</span> &amp;server = Board::logic.getServer();</div>
<div class="line"><span class="lineno">   45</span> </div>
<div class="line"><span class="lineno">   46</span>    <span class="keywordflow">if</span> (!server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>())</div>
<div class="line"><span class="lineno">   47</span>    {</div>
<div class="line"><span class="lineno">   48</span>      <span class="comment">// connection to wifi</span></div>
<div class="line"><span class="lineno">   49</span>      Board::logic.changeStatus(Status::Connecting);</div>
<div class="line"><span class="lineno">   50</span> </div>
<div class="line"><span class="lineno">   51</span>      <span class="comment">// Try to connect</span></div>
<div class="line"><span class="lineno">   52</span>      server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">connect</a>();</div>
<div class="line"><span class="lineno">   53</span>      <span class="comment">// Refresh after connection</span></div>
<div class="line"><span class="lineno">   54</span>      Board::logic.changeStatus(server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>() ? Status::Connected : <a class="code hl_enumeration" href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0">Status</a>::Offline);</div>
<div class="line"><span class="lineno">   55</span> </div>
<div class="line"><span class="lineno">   56</span>      <span class="keywordflow">if</span> (server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>())</div>
<div class="line"><span class="lineno">   57</span>      {</div>
<div class="line"><span class="lineno">   58</span>        <span class="comment">// Briefly show to the user</span></div>
<div class="line"><span class="lineno">   59</span>        Tasks::delay(conf::lcd::SHORT_MESSAGE_DELAY);</div>
<div class="line"><span class="lineno">   60</span>      }</div>
<div class="line"><span class="lineno">   61</span>    }</div>
<div class="line"><span class="lineno">   62</span> </div>
<div class="line"><span class="lineno">   63</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="namespacefabomatic_1_1_board.xhtml#a57517d1e4e586f81a847e56fc92678bc">server</a>.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>())</div>
<div class="line"><span class="lineno">   64</span>    {</div>
<div class="line"><span class="lineno">   65</span>      ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;taskConnect - online, calling refreshFromServer&quot;</span>);</div>
<div class="line"><span class="lineno">   66</span>      <span class="comment">// Get machine data from the server if it is online</span></div>
<div class="line"><span class="lineno">   67</span>      Board::logic.refreshFromServer();</div>
<div class="line"><span class="lineno">   68</span>      <span class="keywordflow">if</span> (<span class="keyword">auto</span> &amp;machine = Board::logic.getMachine(); !machine.isFree())</div>
<div class="line"><span class="lineno">   69</span>      {</div>
<div class="line"><span class="lineno">   70</span>        <span class="keyword">const</span> <span class="keyword">auto</span> response = Board::logic.getServer().inUse(</div>
<div class="line"><span class="lineno">   71</span>            machine.getActiveUser().card_uid,</div>
<div class="line"><span class="lineno">   72</span>            machine.getUsageDuration());</div>
<div class="line"><span class="lineno">   73</span>        <span class="keywordflow">if</span> (!response)</div>
<div class="line"><span class="lineno">   74</span>        {</div>
<div class="line"><span class="lineno">   75</span>          ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;taskConnect - inUse failed&quot;</span>);</div>
<div class="line"><span class="lineno">   76</span>        }</div>
<div class="line"><span class="lineno">   77</span>      }</div>
<div class="line"><span class="lineno">   78</span>    }</div>
<div class="line"><span class="lineno">   79</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_board_logic_xhtml_a3885e1cd078bb49bbf54e3ddfe245ef0"><div class="ttname"><a href="classfabomatic_1_1_board_logic.xhtml#a3885e1cd078bb49bbf54e3ddfe245ef0">fabomatic::BoardLogic::Status</a></div><div class="ttdeci">Status</div><div class="ttdoc">Main states of the board.</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8hpp_source.xhtml#l00023">BoardLogic.hpp:24</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a1a45f556aadcbc428d14b7c7577ed43d"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">fabomatic::FabBackend::connect</a></div><div class="ttdeci">auto connect() -&gt; bool</div><div class="ttdoc">Establishes a connection to the WiFi network and the MQTT server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00291">FabBackend.cpp:291</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_aef092e0e1db0c3539d5474fad2456255"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">fabomatic::FabBackend::isOnline</a></div><div class="ttdeci">auto isOnline() const -&gt; bool</div><div class="ttdoc">Checks if the client is online.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00235">FabBackend.cpp:235</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_board_xhtml_a57517d1e4e586f81a847e56fc92678bc"><div class="ttname"><a href="namespacefabomatic_1_1_board.xhtml#a57517d1e4e586f81a847e56fc92678bc">fabomatic::Board::server</a></div><div class="ttdeci">FabBackend server</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8cpp_source.xhtml#l00272">fabomatic::BoardLogic::changeStatus()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00291">fabomatic::FabBackend::connect()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00250">fabomatic::Tasks::delay()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00633">fabomatic::BoardLogic::getServer()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00235">fabomatic::FabBackend::isOnline()</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00015">fabomatic::Board::logic</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00041">fabomatic::BoardLogic::refreshFromServer()</a>, <a class="el" href="conf_8hpp_source.xhtml#l00051">fabomatic::conf::lcd::SHORT_MESSAGE_DELAY</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>

<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00411">setup()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_ae7de89faffd3bb8805727b8a1092a198_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_ae7de89faffd3bb8805727b8a1092a198_icgraph.svg" width="270" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a1348a9b7dbfe8fb026357347795ee7a1" name="a1348a9b7dbfe8fb026357347795ee7a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1348a9b7dbfe8fb026357347795ee7a1">&#9670;&#160;</a></span>taskEspWatchdog()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::taskEspWatchdog </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Keep the ESP32 HW watchdog alive. If code gets stuck this will cause an automatic reset. </p>

<p class="definition">Definition at line <a class="el" href="main_8cpp_source.xhtml#l00135">135</a> of file <a class="el" href="main_8cpp_source.xhtml">main.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  136</span>  {</div>
<div class="line"><span class="lineno">  137</span>    <span class="keyword">static</span> <span class="keyword">auto</span> initialized = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  138</span> </div>
<div class="line"><span class="lineno">  139</span>    <span class="keywordflow">if</span> (conf::tasks::WATCHDOG_TIMEOUT &gt; 0s)</div>
<div class="line"><span class="lineno">  140</span>    {</div>
<div class="line"><span class="lineno">  141</span>      <span class="keywordflow">if</span> (!initialized)</div>
<div class="line"><span class="lineno">  142</span>      {</div>
<div class="line"><span class="lineno">  143</span>        initialized = esp32::setupWatchdog(conf::tasks::WATCHDOG_TIMEOUT);</div>
<div class="line"><span class="lineno">  144</span>      }</div>
<div class="line"><span class="lineno">  145</span>      <span class="keywordflow">if</span> (initialized)</div>
<div class="line"><span class="lineno">  146</span>      {</div>
<div class="line"><span class="lineno">  147</span>        <span class="keywordflow">if</span> (!esp32::signalWatchdog())</div>
<div class="line"><span class="lineno">  148</span>        {</div>
<div class="line"><span class="lineno">  149</span>          ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failure to signal watchdog&quot;</span>);</div>
<div class="line"><span class="lineno">  150</span>        }</div>
<div class="line"><span class="lineno">  151</span>      }</div>
<div class="line"><span class="lineno">  152</span>    }</div>
<div class="line"><span class="lineno">  153</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_espressif_8cpp_source.xhtml#l00032">fabomatic::esp32::setupWatchdog()</a>, <a class="el" href="_espressif_8cpp_source.xhtml#l00056">fabomatic::esp32::signalWatchdog()</a>, <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>, and <a class="el" href="conf_8hpp_source.xhtml#l00122">fabomatic::conf::tasks::WATCHDOG_TIMEOUT</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a1348a9b7dbfe8fb026357347795ee7a1_cgraph.svg" width="100%" height="382"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a2c7ad2690e92eb8ab98b6fadaa4df2bd" name="a2c7ad2690e92eb8ab98b6fadaa4df2bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c7ad2690e92eb8ab98b6fadaa4df2bd">&#9670;&#160;</a></span>taskFactoryReset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::taskFactoryReset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="main_8cpp_source.xhtml#l00213">213</a> of file <a class="el" href="main_8cpp_source.xhtml">main.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  214</span>  {</div>
<div class="line"><span class="lineno">  215</span>    <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (pins.buttons.factory_defaults_pin == NO_PIN)</div>
<div class="line"><span class="lineno">  216</span>    {</div>
<div class="line"><span class="lineno">  217</span>      <span class="keywordflow">return</span>;</div>
<div class="line"><span class="lineno">  218</span>    }</div>
<div class="line"><span class="lineno">  219</span> </div>
<div class="line"><span class="lineno">  220</span>    <span class="comment">// Skip factory reset for this specific board because Factory Reset is soldered under the MCU with the reset pin.</span></div>
<div class="line"><span class="lineno">  221</span>    <span class="keywordflow">if</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;serial = esp32::esp_serial(); serial == <span class="stringliteral">&quot;dcda0c419794&quot;</span>)</div>
<div class="line"><span class="lineno">  222</span>    {</div>
<div class="line"><span class="lineno">  223</span>      pinMode(pins.buttons.factory_defaults_pin, INPUT); <span class="comment">// Disable pull-up/pull-downs</span></div>
<div class="line"><span class="lineno">  224</span>      <span class="keywordflow">return</span>;</div>
<div class="line"><span class="lineno">  225</span>    }</div>
<div class="line"><span class="lineno">  226</span> </div>
<div class="line"><span class="lineno">  227</span>    pinMode(pins.buttons.factory_defaults_pin, INPUT_PULLUP);</div>
<div class="line"><span class="lineno">  228</span> </div>
<div class="line"><span class="lineno">  229</span>    <span class="keywordflow">if</span> (Board::logic.getRebootRequest())</div>
<div class="line"><span class="lineno">  230</span>    {</div>
<div class="line"><span class="lineno">  231</span>      Board::logic.blinkLed(255, 165, 0); <span class="comment">// Blink orange</span></div>
<div class="line"><span class="lineno">  232</span>      ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Factory reset pending...&quot;</span>);</div>
<div class="line"><span class="lineno">  233</span>      <span class="keywordflow">return</span>;</div>
<div class="line"><span class="lineno">  234</span>    }</div>
<div class="line"><span class="lineno">  235</span> </div>
<div class="line"><span class="lineno">  236</span>    <span class="keywordflow">if</span> (digitalRead(pins.buttons.factory_defaults_pin) == LOW)</div>
<div class="line"><span class="lineno">  237</span>    {</div>
<div class="line"><span class="lineno">  238</span>      ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Factory reset button pressed&quot;</span>);</div>
<div class="line"><span class="lineno">  239</span>      esp32::removeWatchdog();</div>
<div class="line"><span class="lineno">  240</span>      <a class="code hl_function" href="namespacefabomatic.xhtml#a8374c0d1cef777c26dc13b4abc9c52b6">openConfigPortal</a>(<span class="keyword">true</span>, <span class="keyword">false</span>); <span class="comment">// Network configuration setup</span></div>
<div class="line"><span class="lineno">  241</span>    }</div>
<div class="line"><span class="lineno">  242</span>  }</div>
<div class="ttc" id="anamespacefabomatic_xhtml_a8374c0d1cef777c26dc13b4abc9c52b6"><div class="ttname"><a href="namespacefabomatic.xhtml#a8374c0d1cef777c26dc13b4abc9c52b6">fabomatic::openConfigPortal</a></div><div class="ttdeci">void openConfigPortal(bool force_reset, bool disable_portal)</div><div class="ttdoc">Open the ArduinoOTA configuration portal.</div><div class="ttdef"><b>Definition</b> <a href="_o_t_a_8cpp_source.xhtml#l00047">OTA.cpp:47</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8cpp_source.xhtml#l00498">fabomatic::BoardLogic::blinkLed()</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00073">fabomatic::pins_config::buttons</a>, <a class="el" href="_espressif_8cpp_source.xhtml#l00067">fabomatic::esp32::esp_serial()</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00065">fabomatic::pins_config::buttons_config::factory_defaults_pin</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00015">fabomatic::Board::logic</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00010">NO_PIN</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00047">openConfigPortal()</a>, <a class="el" href="pins_8hpp_source.xhtml#l00246">pins</a>, <a class="el" href="_espressif_8cpp_source.xhtml#l00061">fabomatic::esp32::removeWatchdog()</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a2c7ad2690e92eb8ab98b6fadaa4df2bd_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a77b0a5de55b2f507f610f1d0c5196bc2" name="a77b0a5de55b2f507f610f1d0c5196bc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77b0a5de55b2f507f610f1d0c5196bc2">&#9670;&#160;</a></span>taskIsAlive()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::taskIsAlive </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="main_8cpp_source.xhtml#l00184">184</a> of file <a class="el" href="main_8cpp_source.xhtml">main.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  185</span>  {</div>
<div class="line"><span class="lineno">  186</span>    <span class="comment">// notify the server that the machine is still alive</span></div>
<div class="line"><span class="lineno">  187</span>    <span class="keyword">auto</span> &amp;server = Board::logic.getServer();</div>
<div class="line"><span class="lineno">  188</span> </div>
<div class="line"><span class="lineno">  189</span>    <span class="keywordflow">if</span> (server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>())</div>
<div class="line"><span class="lineno">  190</span>    {</div>
<div class="line"><span class="lineno">  191</span>      <span class="keywordflow">if</span> (<span class="keyword">auto</span> resp = server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#abb44b529c858ddc1006592e9bac8a815">alive</a>(); !resp)</div>
<div class="line"><span class="lineno">  192</span>      {</div>
<div class="line"><span class="lineno">  193</span>        ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;taskIsAlive - alive failed&quot;</span>);</div>
<div class="line"><span class="lineno">  194</span>      }</div>
<div class="line"><span class="lineno">  195</span>    }</div>
<div class="line"><span class="lineno">  196</span> </div>
<div class="line"><span class="lineno">  197</span>    <span class="keywordflow">if</span> (!Board::logic.saveRfidCache())</div>
<div class="line"><span class="lineno">  198</span>    {</div>
<div class="line"><span class="lineno">  199</span>      ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;taskIsAlive - saveRfidCache failed&quot;</span>);</div>
<div class="line"><span class="lineno">  200</span>    }</div>
<div class="line"><span class="lineno">  201</span> </div>
<div class="line"><span class="lineno">  202</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="namespacefabomatic_1_1_board.xhtml#a57517d1e4e586f81a847e56fc92678bc">server</a>.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a044a94e7220ee295bfab801b6ca32e32">saveBuffer</a>())</div>
<div class="line"><span class="lineno">  203</span>    {</div>
<div class="line"><span class="lineno">  204</span>      ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failure to save buffered MQTT messages&quot;</span>);</div>
<div class="line"><span class="lineno">  205</span>    }</div>
<div class="line"><span class="lineno">  206</span> </div>
<div class="line"><span class="lineno">  207</span>    <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (conf::debug::ENABLE_LOGS)</div>
<div class="line"><span class="lineno">  208</span>    {</div>
<div class="line"><span class="lineno">  209</span>      <a class="code hl_function" href="namespacefabomatic_1_1esp32.xhtml#a5f5bb4a72418870dbcddd266b5bb0fcd">fabomatic::esp32::showHeapStats</a>();</div>
<div class="line"><span class="lineno">  210</span>    }</div>
<div class="line"><span class="lineno">  211</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a044a94e7220ee295bfab801b6ca32e32"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a044a94e7220ee295bfab801b6ca32e32">fabomatic::FabBackend::saveBuffer</a></div><div class="ttdeci">auto saveBuffer() -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00633">FabBackend.cpp:633</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_abb44b529c858ddc1006592e9bac8a815"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#abb44b529c858ddc1006592e9bac8a815">fabomatic::FabBackend::alive</a></div><div class="ttdeci">auto alive() -&gt; bool</div><div class="ttdoc">Sends a ping to the server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00573">FabBackend.cpp:573</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1esp32_xhtml_a5f5bb4a72418870dbcddd266b5bb0fcd"><div class="ttname"><a href="namespacefabomatic_1_1esp32.xhtml#a5f5bb4a72418870dbcddd266b5bb0fcd">fabomatic::esp32::showHeapStats</a></div><div class="ttdeci">void showHeapStats()</div><div class="ttdef"><b>Definition</b> <a href="_espressif_8cpp_source.xhtml#l00015">Espressif.cpp:15</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_fab_backend_8cpp_source.xhtml#l00573">fabomatic::FabBackend::alive()</a>, <a class="el" href="conf_8hpp_source.xhtml#l00079">fabomatic::conf::debug::ENABLE_LOGS</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00633">fabomatic::BoardLogic::getServer()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00235">fabomatic::FabBackend::isOnline()</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00015">fabomatic::Board::logic</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00633">fabomatic::FabBackend::saveBuffer()</a>, <a class="el" href="_espressif_8cpp_source.xhtml#l00015">fabomatic::esp32::showHeapStats()</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a77b0a5de55b2f507f610f1d0c5196bc2_cgraph.svg" width="100%" height="535"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="af8ee1c3cd4edf1a1ba27899da63b611a" name="af8ee1c3cd4edf1a1ba27899da63b611a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8ee1c3cd4edf1a1ba27899da63b611a">&#9670;&#160;</a></span>taskLogoffCheck()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::taskLogoffCheck </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>periodic check if the user shall be logged off </p>

<p class="definition">Definition at line <a class="el" href="main_8cpp_source.xhtml#l00121">121</a> of file <a class="el" href="main_8cpp_source.xhtml">main.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  122</span>  {</div>
<div class="line"><span class="lineno">  123</span>    <span class="comment">// auto logout after delay</span></div>
<div class="line"><span class="lineno">  124</span>    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;machine = Board::logic.getMachine();</div>
<div class="line"><span class="lineno">  125</span>    <span class="keywordflow">if</span> (machine.isAutologoffExpired())</div>
<div class="line"><span class="lineno">  126</span>    {</div>
<div class="line"><span class="lineno">  127</span>      ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Auto-logging out user %s\r\n&quot;</span>, machine.getActiveUser().holder_name.data());</div>
<div class="line"><span class="lineno">  128</span>      Board::logic.logout();</div>
<div class="line"><span class="lineno">  129</span>      Board::logic.beepFail();</div>
<div class="line"><span class="lineno">  130</span>    }</div>
<div class="line"><span class="lineno">  131</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8cpp_source.xhtml#l00449">fabomatic::BoardLogic::beepFail()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00600">fabomatic::BoardLogic::getMachine()</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00015">fabomatic::Board::logic</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00111">fabomatic::BoardLogic::logout()</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_af8ee1c3cd4edf1a1ba27899da63b611a_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a710739974eb0b1c5b53ffd75580ab54d" name="a710739974eb0b1c5b53ffd75580ab54d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a710739974eb0b1c5b53ffd75580ab54d">&#9670;&#160;</a></span>taskMQTTClientLoop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::taskMQTTClientLoop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sends the <a class="el" href="namespacefabomatic_1_1_m_q_t_t.xhtml" title="Contains all the types for MQTT messages between board and backend.">MQTT</a> alive message </p>

<p class="definition">Definition at line <a class="el" href="main_8cpp_source.xhtml#l00175">175</a> of file <a class="el" href="main_8cpp_source.xhtml">main.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  176</span>  {</div>
<div class="line"><span class="lineno">  177</span>    <span class="keyword">auto</span> &amp;server = Board::logic.getServer();</div>
<div class="line"><span class="lineno">  178</span>    <span class="keywordflow">if</span> (server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>())</div>
<div class="line"><span class="lineno">  179</span>    {</div>
<div class="line"><span class="lineno">  180</span>      server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aaf05998bb9dec17ae98283969109bb2d">loop</a>();</div>
<div class="line"><span class="lineno">  181</span>    }</div>
<div class="line"><span class="lineno">  182</span>  }</div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_aaf05998bb9dec17ae98283969109bb2d"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#aaf05998bb9dec17ae98283969109bb2d">fabomatic::FabBackend::loop</a></div><div class="ttdeci">auto loop() -&gt; bool</div><div class="ttdoc">Main loop for the MQTT client.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00184">FabBackend.cpp:184</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8cpp_source.xhtml#l00633">fabomatic::BoardLogic::getServer()</a>, <a class="el" href="_fab_backend_8cpp_source.xhtml#l00235">fabomatic::FabBackend::isOnline()</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00015">fabomatic::Board::logic</a>, and <a class="el" href="_fab_backend_8cpp_source.xhtml#l00184">fabomatic::FabBackend::loop()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a710739974eb0b1c5b53ffd75580ab54d_cgraph.svg" width="424" height="183"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aa56f9324b5710d12bea42757af0289f2" name="aa56f9324b5710d12bea42757af0289f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa56f9324b5710d12bea42757af0289f2">&#9670;&#160;</a></span>taskPoweroffCheck()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::taskPoweroffCheck </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>periodic check if the machine must be powered off </p>

<p class="definition">Definition at line <a class="el" href="main_8cpp_source.xhtml#l00094">94</a> of file <a class="el" href="main_8cpp_source.xhtml">main.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   95</span>  {</div>
<div class="line"><span class="lineno">   96</span>    Board::logic.checkPowerOff();</div>
<div class="line"><span class="lineno">   97</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8cpp_source.xhtml#l00576">fabomatic::BoardLogic::checkPowerOff()</a>, and <a class="el" href="_o_t_a_8cpp_source.xhtml#l00015">fabomatic::Board::logic</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_aa56f9324b5710d12bea42757af0289f2_cgraph.svg" width="588" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a86a02975f3cc660ebccdde8f217aa035" name="a86a02975f3cc660ebccdde8f217aa035"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86a02975f3cc660ebccdde8f217aa035">&#9670;&#160;</a></span>taskPoweroffWarning()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::taskPoweroffWarning </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>periodic check if the machine must be powered off </p>

<p class="definition">Definition at line <a class="el" href="main_8cpp_source.xhtml#l00100">100</a> of file <a class="el" href="main_8cpp_source.xhtml">main.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  101</span>  {</div>
<div class="line"><span class="lineno">  102</span>    <span class="keywordflow">if</span> (Board::logic.getMachine().isShutdownImminent())</div>
<div class="line"><span class="lineno">  103</span>    {</div>
<div class="line"><span class="lineno">  104</span>      Board::logic.changeStatus(Status::ShuttingDown);</div>
<div class="line"><span class="lineno">  105</span>      Board::logic.beepFail();</div>
<div class="line"><span class="lineno">  106</span>      <span class="keywordflow">if</span> (conf::debug::ENABLE_LOGS)</div>
<div class="line"><span class="lineno">  107</span>        ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Machine is about to shutdown&quot;</span>);</div>
<div class="line"><span class="lineno">  108</span>    }</div>
<div class="line"><span class="lineno">  109</span> </div>
<div class="line"><span class="lineno">  110</span>    <span class="keywordflow">if</span> (Board::logic.getRebootRequest())</div>
<div class="line"><span class="lineno">  111</span>    {</div>
<div class="line"><span class="lineno">  112</span>      <span class="keywordflow">if</span> (Board::logic.getMachine().getPowerState() == Machine::PowerState::PoweredOff)</div>
<div class="line"><span class="lineno">  113</span>      {</div>
<div class="line"><span class="lineno">  114</span>        ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Rebooting as per request&quot;</span>);</div>
<div class="line"><span class="lineno">  115</span>        esp32::restart();</div>
<div class="line"><span class="lineno">  116</span>      }</div>
<div class="line"><span class="lineno">  117</span>    }</div>
<div class="line"><span class="lineno">  118</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8cpp_source.xhtml#l00449">fabomatic::BoardLogic::beepFail()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00272">fabomatic::BoardLogic::changeStatus()</a>, <a class="el" href="conf_8hpp_source.xhtml#l00079">fabomatic::conf::debug::ENABLE_LOGS</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00015">fabomatic::Board::logic</a>, <a class="el" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838ab161cc0f80e1c236e1f0816a42c4a00c">fabomatic::Machine::PoweredOff</a>, <a class="el" href="_espressif_8cpp_source.xhtml#l00093">fabomatic::esp32::restart()</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a86a02975f3cc660ebccdde8f217aa035_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a525d1f233a2f797801a9a659c5044cb7" name="a525d1f233a2f797801a9a659c5044cb7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a525d1f233a2f797801a9a659c5044cb7">&#9670;&#160;</a></span>taskRfidWatchdog()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fabomatic::taskRfidWatchdog </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>checks the RFID chip status and re-init it if necessary. </p>

<p class="definition">Definition at line <a class="el" href="main_8cpp_source.xhtml#l00156">156</a> of file <a class="el" href="main_8cpp_source.xhtml">main.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  157</span>  {</div>
<div class="line"><span class="lineno">  158</span>    <span class="keywordflow">if</span> (!Board::rfid.selfTest())</div>
<div class="line"><span class="lineno">  159</span>    {</div>
<div class="line"><span class="lineno">  160</span>      ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;RFID chip failure&quot;</span>);</div>
<div class="line"><span class="lineno">  161</span> </div>
<div class="line"><span class="lineno">  162</span>      <span class="comment">// Infinite retry until success or hw watchdog timeout</span></div>
<div class="line"><span class="lineno">  163</span>      <span class="keywordflow">while</span> (!Board::rfid.rfidInit())</div>
<div class="line"><span class="lineno">  164</span>      {</div>
<div class="line"><span class="lineno">  165</span>        Board::logic.changeStatus(Status::ErrorHardware);</div>
<div class="line"><span class="lineno">  166</span>        Tasks::delay(conf::tasks::RFID_CHECK_PERIOD);</div>
<div class="line"><span class="lineno">  167</span><span class="preprocessor">#ifdef DEBUG</span></div>
<div class="line"><span class="lineno">  168</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  169</span><span class="preprocessor">#endif</span></div>
<div class="line"><span class="lineno">  170</span>      }</div>
<div class="line"><span class="lineno">  171</span>    }</div>
<div class="line"><span class="lineno">  172</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_board_logic_8cpp_source.xhtml#l00272">fabomatic::BoardLogic::changeStatus()</a>, <a class="el" href="_tasks_8cpp_source.xhtml#l00250">fabomatic::Tasks::delay()</a>, <a class="el" href="_o_t_a_8cpp_source.xhtml#l00015">fabomatic::Board::logic</a>, <a class="el" href="globals_8hpp_source.xhtml#l00033">fabomatic::Board::rfid</a>, <a class="el" href="conf_8hpp_source.xhtml#l00113">fabomatic::conf::tasks::RFID_CHECK_PERIOD</a>, and <a class="el" href="_logging_8hpp_source.xhtml#l00006">TAG</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespacefabomatic_a525d1f233a2f797801a9a659c5044cb7_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a01a9e2e5f9e92f6f3fa9204ba3d946b9" name="a01a9e2e5f9e92f6f3fa9204ba3d946b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01a9e2e5f9e92f6f3fa9204ba3d946b9">&#9670;&#160;</a></span>NO_PIN</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr uint8_t fabomatic::NO_PIN = -1</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constant used to indicate the pin is not used. </p>

<p class="definition">Definition at line <a class="el" href="_pins_config_8hpp_source.xhtml#l00010">10</a> of file <a class="el" href="_pins_config_8hpp_source.xhtml">PinsConfig.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_buzzer_8cpp_source.xhtml#l00027">fabomatic::Buzzer::beepFail()</a>, <a class="el" href="_buzzer_8cpp_source.xhtml#l00016">fabomatic::Buzzer::beepOk()</a>, <a class="el" href="_buzzer_8cpp_source.xhtml#l00009">fabomatic::Buzzer::configure()</a>, <a class="el" href="pins_8hpp_source.xhtml#l00012">configure_pins_esp32()</a>, <a class="el" href="pins_8hpp_source.xhtml#l00098">configure_pins_esp32s3()</a>, <a class="el" href="pins_8hpp_source.xhtml#l00141">configure_pins_hwrev0()</a>, <a class="el" href="pins_8hpp_source.xhtml#l00055">configure_pins_wokwi()</a>, <a class="el" href="pins_8hpp_source.xhtml#l00184">configure_pins_wrover()</a>, <a class="el" href="_machine_config_8cpp_source.xhtml#l00023">fabomatic::MachineConfig::hasRelay()</a>, <a class="el" href="_led_8cpp_source.xhtml#l00006">fabomatic::Led::init()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00251">fabomatic::BoardLogic::initBoard()</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00077">no_duplicates()</a>, <a class="el" href="main_8cpp_source.xhtml#l00213">taskFactoryReset()</a>, and <a class="el" href="test__logic_8cpp_source.xhtml#l00041">fabomatic::tests::test_machine_defaults()</a>.</p>

</div>
</div>
<a id="a90e4180ab5a1ffd3393b4f0d6b01f2b3" name="a90e4180ab5a1ffd3393b4f0d6b01f2b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90e4180ab5a1ffd3393b4f0d6b01f2b3">&#9670;&#160;</a></span>pins</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfabomatic_1_1pins__config.xhtml">pins_config</a> fabomatic::pins = <a class="el" href="namespacefabomatic.xhtml#a0cc836ff46f9b7fee6b8df16257344bb">configure_pins</a>()</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pins_8hpp_source.xhtml#l00246">246</a> of file <a class="el" href="pins_8hpp_source.xhtml">pins.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_buzzer_8cpp_source.xhtml#l00027">fabomatic::Buzzer::beepFail()</a>, <a class="el" href="_buzzer_8cpp_source.xhtml#l00016">fabomatic::Buzzer::beepOk()</a>, <a class="el" href="_buzzer_8cpp_source.xhtml#l00009">fabomatic::Buzzer::configure()</a>, <a class="el" href="_mrfc522_driver_8cpp_source.xhtml#l00026">fabomatic::Mrfc522Driver::hardReset()</a>, <a class="el" href="_led_8cpp_source.xhtml#l00006">fabomatic::Led::init()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00251">fabomatic::BoardLogic::initBoard()</a>, <a class="el" href="_mrfc522_driver_8cpp_source.xhtml#l00013">fabomatic::Mrfc522Driver::Mrfc522Driver()</a>, <a class="el" href="_pins_config_8hpp_source.xhtml#l00077">no_duplicates()</a>, <a class="el" href="_led_8cpp_source.xhtml#l00044">fabomatic::Led::outputColor()</a>, <a class="el" href="main_8cpp_source.xhtml#l00320">printCompileSettings()</a>, <a class="el" href="_board_logic_8cpp_source.xhtml#l00463">fabomatic::BoardLogic::reconfigure()</a>, <a class="el" href="main_8cpp_source.xhtml#l00213">taskFactoryReset()</a>, and <a class="el" href="test__logic_8cpp_source.xhtml#l00041">fabomatic::tests::test_machine_defaults()</a>.</p>

</div>
</div>
<a id="a52ae622725c801d2f8d66840738bc5f8" name="a52ae622725c801d2f8d66840738bc5f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52ae622725c801d2f8d66840738bc5f8">&#9670;&#160;</a></span>shouldSaveConfig</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::atomic&lt;bool&gt; fabomatic::shouldSaveConfig {false}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_o_t_a_8cpp_source.xhtml#l00011">11</a> of file <a class="el" href="_o_t_a_8cpp_source.xhtml">OTA.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   11</span>{<span class="keyword">false</span>};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_o_t_a_8cpp_source.xhtml#l00047">openConfigPortal()</a>, and <a class="el" href="_o_t_a_8cpp_source.xhtml#l00019">saveConfigCallback()</a>.</p>

</div>
</div>
<a id="a836ff5da9f16608b37915998ed449bf1" name="a836ff5da9f16608b37915998ed449bf1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a836ff5da9f16608b37915998ed449bf1">&#9670;&#160;</a></span>t_alive</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a> fabomatic::t_alive(&quot;IsAlive&quot;, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a426b86ab3d140378a98ed2f00d3fb3d2">conf::tasks::MQTT_ALIVE_PERIOD</a>, &amp;<a class="el" href="namespacefabomatic.xhtml#a77b0a5de55b2f507f610f1d0c5196bc2">taskIsAlive</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a426b86ab3d140378a98ed2f00d3fb3d2">conf::tasks::MQTT_ALIVE_PERIOD</a>) </td>
          <td>(</td>
          <td class="paramtype">&quot;IsAlive&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a426b86ab3d140378a98ed2f00d3fb3d2">conf::tasks::MQTT_ALIVE_PERIOD</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&amp;&#160;</td>
          <td class="paramname"><em>taskIsAlive</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">true&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a426b86ab3d140378a98ed2f00d3fb3d2">conf::tasks::MQTT_ALIVE_PERIOD</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a71064bb1692b34bdb1af73d9205f6826" name="a71064bb1692b34bdb1af73d9205f6826"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71064bb1692b34bdb1af73d9205f6826">&#9670;&#160;</a></span>t_led</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a> fabomatic::t_led(&quot;LED&quot;, 1s, &amp;<a class="el" href="namespacefabomatic.xhtml#a9bb86caf0357ce1dd9ffe2945dcfc6e4">taskBlink</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true) </td>
          <td>(</td>
          <td class="paramtype">&quot;LED&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">1s&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&amp;&#160;</td>
          <td class="paramname"><em>taskBlink</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">true&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac30e3c9218c5d2581599acae8cafbd35" name="ac30e3c9218c5d2581599acae8cafbd35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac30e3c9218c5d2581599acae8cafbd35">&#9670;&#160;</a></span>t_log</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a> fabomatic::t_log(&quot;Logoff&quot;, 1s, &amp;<a class="el" href="namespacefabomatic.xhtml#af8ee1c3cd4edf1a1ba27899da63b611a">taskLogoffCheck</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true) </td>
          <td>(</td>
          <td class="paramtype">&quot;Logoff&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">1s&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&amp;&#160;</td>
          <td class="paramname"><em>taskLogoffCheck</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">true&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3afd4c8a229766158a4c701858f83bf3" name="a3afd4c8a229766158a4c701858f83bf3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3afd4c8a229766158a4c701858f83bf3">&#9670;&#160;</a></span>t_mqtt</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a> fabomatic::t_mqtt(&quot;MQTT client loop&quot;, 1s, &amp;<a class="el" href="namespacefabomatic.xhtml#a710739974eb0b1c5b53ffd75580ab54d">taskMQTTClientLoop</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true) </td>
          <td>(</td>
          <td class="paramtype">&quot;MQTT client loop&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">1s&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&amp;&#160;</td>
          <td class="paramname"><em>taskMQTTClientLoop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">true&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a62825a5ee62275ecf8035dbfe04c03b6" name="a62825a5ee62275ecf8035dbfe04c03b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62825a5ee62275ecf8035dbfe04c03b6">&#9670;&#160;</a></span>t_network</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a> fabomatic::t_network(&quot;Wifi/MQTT&quot;, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#ad02ccc45b2e8b9ec6a675450b7cf0c9c">conf::tasks::MQTT_REFRESH_PERIOD</a>, &amp;<a class="el" href="namespacefabomatic.xhtml#ae7de89faffd3bb8805727b8a1092a198">taskConnect</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#ad02ccc45b2e8b9ec6a675450b7cf0c9c">conf::tasks::MQTT_REFRESH_PERIOD</a>) </td>
          <td>(</td>
          <td class="paramtype">&quot;Wifi/MQTT&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#ad02ccc45b2e8b9ec6a675450b7cf0c9c">conf::tasks::MQTT_REFRESH_PERIOD</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&amp;&#160;</td>
          <td class="paramname"><em>taskConnect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">true&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#ad02ccc45b2e8b9ec6a675450b7cf0c9c">conf::tasks::MQTT_REFRESH_PERIOD</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a20cee87876cf5e777603e330941c5bb4" name="a20cee87876cf5e777603e330941c5bb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a20cee87876cf5e777603e330941c5bb4">&#9670;&#160;</a></span>t_powoff</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a> fabomatic::t_powoff(&quot;Poweroff&quot;, 1s, &amp;<a class="el" href="namespacefabomatic.xhtml#aa56f9324b5710d12bea42757af0289f2">taskPoweroffCheck</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true) </td>
          <td>(</td>
          <td class="paramtype">&quot;Poweroff&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">1s&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&amp;&#160;</td>
          <td class="paramname"><em>taskPoweroffCheck</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">true&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af6df743788c6d2eb908bcee7dcdff7c9" name="af6df743788c6d2eb908bcee7dcdff7c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6df743788c6d2eb908bcee7dcdff7c9">&#9670;&#160;</a></span>t_rfid</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a> fabomatic::t_rfid(&quot;RFIDChip&quot;, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a71fac767ad71b5f26725d54869ed95d2">conf::tasks::RFID_CHECK_PERIOD</a>, &amp;<a class="el" href="namespacefabomatic.xhtml#a3e5c190499522bddad3f3cc69274f16c">taskCheckRfid</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true) </td>
          <td>(</td>
          <td class="paramtype">&quot;RFIDChip&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a71fac767ad71b5f26725d54869ed95d2">conf::tasks::RFID_CHECK_PERIOD</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&amp;&#160;</td>
          <td class="paramname"><em>taskCheckRfid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">true&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae69308e67934372b46ed0cffa869c6b0" name="ae69308e67934372b46ed0cffa869c6b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae69308e67934372b46ed0cffa869c6b0">&#9670;&#160;</a></span>t_rst</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a> fabomatic::t_rst(&quot;FactoryReset&quot;, 500ms, &amp;<a class="el" href="namespacefabomatic.xhtml#a2c7ad2690e92eb8ab98b6fadaa4df2bd">taskFactoryReset</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, pins.buttons.factory_defaults_pin !=<a class="el" href="namespacefabomatic.xhtml#a01a9e2e5f9e92f6f3fa9204ba3d946b9">NO_PIN</a>) </td>
          <td>(</td>
          <td class="paramtype">&quot;FactoryReset&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">500ms&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&amp;&#160;</td>
          <td class="paramname"><em>taskFactoryReset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pins.buttons.factory_defaults_pin !&#160;</td>
          <td class="paramname"> = <code><a class="el" href="namespacefabomatic.xhtml#a01a9e2e5f9e92f6f3fa9204ba3d946b9">NO_PIN</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a12f86cb8f59298f8d7cc75d25786870c" name="a12f86cb8f59298f8d7cc75d25786870c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12f86cb8f59298f8d7cc75d25786870c">&#9670;&#160;</a></span>t_test</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a> fabomatic::t_test(&quot;Selftest&quot;, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a06a612b95a0c8e7e71993a5dd6384984">conf::tasks::RFID_SELFTEST_PERIOD</a>, &amp;<a class="el" href="namespacefabomatic.xhtml#a525d1f233a2f797801a9a659c5044cb7">taskRfidWatchdog</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true) </td>
          <td>(</td>
          <td class="paramtype">&quot;Selftest&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a06a612b95a0c8e7e71993a5dd6384984">conf::tasks::RFID_SELFTEST_PERIOD</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&amp;&#160;</td>
          <td class="paramname"><em>taskRfidWatchdog</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">true&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac5ad3332f56bc0f3e5e7a18650f7f9a4" name="ac5ad3332f56bc0f3e5e7a18650f7f9a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5ad3332f56bc0f3e5e7a18650f7f9a4">&#9670;&#160;</a></span>t_warn</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a> fabomatic::t_warn(&quot;PoweroffWarning&quot;, <a class="el" href="namespacefabomatic_1_1conf_1_1machine.xhtml#ac26edc4054f82d62fbd295e185c77a0d">conf::machine::DELAY_BETWEEN_BEEPS</a>, &amp;<a class="el" href="namespacefabomatic.xhtml#a86a02975f3cc660ebccdde8f217aa035">taskPoweroffWarning</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, true) </td>
          <td>(</td>
          <td class="paramtype">&quot;PoweroffWarning&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1conf_1_1machine.xhtml#ac26edc4054f82d62fbd295e185c77a0d">conf::machine::DELAY_BETWEEN_BEEPS</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&amp;&#160;</td>
          <td class="paramname"><em>taskPoweroffWarning</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">true&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af362107d1aa514249d971e686c01abdd" name="af362107d1aa514249d971e686c01abdd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af362107d1aa514249d971e686c01abdd">&#9670;&#160;</a></span>t_wdg</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacefabomatic.xhtml#a911c79b3e3873c07d41263ff8b803833">Task</a> fabomatic::t_wdg(&quot;Watchdog&quot;, <a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a227a2e840bdda9f2031217fbb91d045d">conf::tasks::WATCHDOG_PERIOD</a>, &amp;<a class="el" href="namespacefabomatic.xhtml#a1348a9b7dbfe8fb026357347795ee7a1">taskEspWatchdog</a>, <a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>, false) </td>
          <td>(</td>
          <td class="paramtype">&quot;Watchdog&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1conf_1_1tasks.xhtml#a227a2e840bdda9f2031217fbb91d045d">conf::tasks::WATCHDOG_PERIOD</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&amp;&#160;</td>
          <td class="paramname"><em>taskEspWatchdog</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacefabomatic_1_1_board.xhtml#af9268221ea7bfdcc46c3862fa7996d3d">Board::scheduler</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">false&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00411">setup()</a>.</p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Jul 2 2024 19:30:05 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
