<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: MQTTtypes.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(0); });
/* @license-end */
</script>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">MQTTtypes.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="_m_q_t_ttypes_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#ifndef MQTTTYPES_HPP_</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#define MQTTTYPES_HPP_</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &quot;ArduinoJson.h&quot;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &quot;<a class="code" href="_fab_user_8hpp.xhtml">FabUser.hpp</a>&quot;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &quot;<a class="code" href="_machine_8hpp.xhtml">Machine.hpp</a>&quot;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &quot;<a class="code" href="card_8hpp.xhtml">card.hpp</a>&quot;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &quot;string&quot;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &lt;string_view&gt;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span> </div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefabomatic_1_1_m_q_t_t.xhtml">fabomatic::MQTT</a></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>{</div>
<div class="foldopen" id="foldopen00016" data-start="{" data-end="};">
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml">   16</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  {</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml#a245e76f7b6183e7c38fcce32205f0c3d">   19</a></span>    <span class="keyword">virtual</span> <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml#a245e76f7b6183e7c38fcce32205f0c3d">waitForReply</a>() const -&gt; <span class="keywordtype">bool</span> = 0;</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml#a4c4fbf347699e3b18da9021b1858cd63">   20</a></span>    virtual auto <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml#a4c4fbf347699e3b18da9021b1858cd63">payload</a>() const -&gt; const std::<span class="keywordtype">string</span> = 0;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml#a2703e6b406d86270dbcef35993d5ea82">   21</a></span>    virtual auto <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml#a2703e6b406d86270dbcef35993d5ea82">buffered</a>() const -&gt; <span class="keywordtype">bool</span> = 0;</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml#a1c139be396becab9d4e52bc58b1086af">   22</a></span>    virtual ~<a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml">Query</a>() = default;</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  };</div>
</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="foldopen" id="foldopen00026" data-start="{" data-end="};">
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_user_query.xhtml">   26</a></span>  class <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_user_query.xhtml">UserQuery</a> final : public <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  {</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_user_query.xhtml#ae95787a68fe3611e07fceef62eb604e1">   29</a></span>    <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> <a class="code hl_variable" href="classfabomatic_1_1_m_q_t_t_1_1_user_query.xhtml#ae95787a68fe3611e07fceef62eb604e1">uid</a>;</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_user_query.xhtml#ae9246039dede8caeb657821657e559a0">   31</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_user_query.xhtml#ae9246039dede8caeb657821657e559a0">UserQuery</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_user_query.xhtml#ad0432744208c896687acd971ddd72750">   32</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_user_query.xhtml#ad0432744208c896687acd971ddd72750">UserQuery</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> card_uid) : uid(card_uid){};</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_user_query.xhtml#a0c97ca57bd8a07e15e0ae034545b93f2">   34</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_user_query.xhtml#a0c97ca57bd8a07e15e0ae034545b93f2">waitForReply</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml#a4c4fbf347699e3b18da9021b1858cd63">payload</a>() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_user_query.xhtml#ae2bf5ba2be0186105229246ef9de5e76">   36</a></span>    [[nodiscard]] auto <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml#a2703e6b406d86270dbcef35993d5ea82">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; };</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>  };</div>
</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="foldopen" id="foldopen00040" data-start="{" data-end="};">
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_machine_query.xhtml">   40</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_machine_query.xhtml">MachineQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  {</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_machine_query.xhtml#afbb9fd1896b3c2385f671e5e9e96478e">   43</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_machine_query.xhtml#afbb9fd1896b3c2385f671e5e9e96478e">MachineQuery</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    [[nodiscard]] <span class="keyword">auto</span> payload() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_machine_query.xhtml#a2c990b6bfc8c154b0192ef855360b49f">   45</a></span>    [[nodiscard]] auto waitForReply() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_machine_query.xhtml#ab545e0e01b7443d6d7871c2eb5e55c45">   46</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_machine_query.xhtml#ab545e0e01b7443d6d7871c2eb5e55c45">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; };</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  };</div>
</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="foldopen" id="foldopen00050" data-start="{" data-end="};">
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_alive_query.xhtml">   50</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_alive_query.xhtml">AliveQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  {</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_alive_query.xhtml#a48d4f0f823e7909afdf73f3618ef26a7">   53</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_alive_query.xhtml#a48d4f0f823e7909afdf73f3618ef26a7">AliveQuery</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>    [[nodiscard]] <span class="keyword">auto</span> payload() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_alive_query.xhtml#ac6fbba8c5ee85ad77dc6ed925718aaec">   55</a></span>    [[nodiscard]] auto waitForReply() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; };</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_alive_query.xhtml#a9e8727f70f83dd72e73be0fa17b4cbc0">   56</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_alive_query.xhtml#a9e8727f70f83dd72e73be0fa17b4cbc0">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; };</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  };</div>
</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="foldopen" id="foldopen00060" data-start="{" data-end="};">
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_start_use_query.xhtml">   60</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_start_use_query.xhtml">StartUseQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  {</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_start_use_query.xhtml#adac2f499b67e4ec60b59bc01e2a3a251">   63</a></span>    <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> <a class="code hl_variable" href="classfabomatic_1_1_m_q_t_t_1_1_start_use_query.xhtml#adac2f499b67e4ec60b59bc01e2a3a251">uid</a>;</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_start_use_query.xhtml#af107665df54b438bcba9170f25f8ecaa">   65</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_start_use_query.xhtml#af107665df54b438bcba9170f25f8ecaa">StartUseQuery</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_start_use_query.xhtml#a5cdf431fb36494f93cbeee6936d64313">   66</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_start_use_query.xhtml#a5cdf431fb36494f93cbeee6936d64313">StartUseQuery</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> card_uid) : uid(card_uid){};</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>    [[nodiscard]] <span class="keyword">auto</span> payload() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_start_use_query.xhtml#a1a4b63f21df60489b9a71814aa1735d2">   69</a></span>    [[nodiscard]] auto waitForReply() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_start_use_query.xhtml#af8721bdd37cccc4d7bad6e8dc732147c">   70</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_start_use_query.xhtml#af8721bdd37cccc4d7bad6e8dc732147c">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  };</div>
</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="foldopen" id="foldopen00074" data-start="{" data-end="};">
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml">   74</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml">StopUseQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  {</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml#a496d477eb2d3551f3b70fb7da77eee8e">   77</a></span>    <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> <a class="code hl_variable" href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml#a496d477eb2d3551f3b70fb7da77eee8e">uid</a>;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml#a841b468dd1a9308a70745d17f9e84094">   78</a></span>    <span class="keyword">const</span> std::chrono::seconds <a class="code hl_variable" href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml#a841b468dd1a9308a70745d17f9e84094">duration_s</a>;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml#a51c0f9c76b2d29409ba32fb34dd72446">   80</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml#a51c0f9c76b2d29409ba32fb34dd72446">StopUseQuery</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml#a4547c542e6a46a10ea0ebcbceb5fff67">   86</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml#a4547c542e6a46a10ea0ebcbceb5fff67">StopUseQuery</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> card_uid, std::chrono::seconds duration) : uid(card_uid), duration_s(duration){};</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    [[nodiscard]] <span class="keyword">auto</span> payload() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml#a5da3f2e413a1ea41225b1a114f8ef2f1">   88</a></span>    [[nodiscard]] auto waitForReply() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml#ab51c4c4edf330fbc787a4818a1fff6a2">   89</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml#ab51c4c4edf330fbc787a4818a1fff6a2">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  };</div>
</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="foldopen" id="foldopen00093" data-start="{" data-end="};">
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml">   93</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml">InUseQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  {</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml#ab6b7f1c82df17ad9966aa4cf50de959a">   96</a></span>    <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> <a class="code hl_variable" href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml#ab6b7f1c82df17ad9966aa4cf50de959a">uid</a>;</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml#acec24af335f31632f8e0146fcdaebd72">   97</a></span>    <span class="keyword">const</span> std::chrono::seconds <a class="code hl_variable" href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml#acec24af335f31632f8e0146fcdaebd72">duration_s</a>;</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml#aabe88be3dbd65c2e6a9820a970f19f69">   99</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml#aabe88be3dbd65c2e6a9820a970f19f69">InUseQuery</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml#ac4e2415303f23841a933e0267eca5a31">  105</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml#ac4e2415303f23841a933e0267eca5a31">InUseQuery</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> card_uid, std::chrono::seconds duration) : uid(card_uid), duration_s(duration){};</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>    [[nodiscard]] <span class="keyword">auto</span> payload() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml#aace8e52b6eddacba4436c78c480b4abb">  107</a></span>    [[nodiscard]] auto waitForReply() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml#a1574ac0f0d066d8e9241a89dd168a5d9">  108</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml#a1574ac0f0d066d8e9241a89dd168a5d9">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; };</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  };</div>
</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="foldopen" id="foldopen00112" data-start="{" data-end="};">
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query.xhtml">  112</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query.xhtml">RegisterMaintenanceQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  {</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query.xhtml#a0b337bcbd6d06e1e3b7fc5e5a3bcb677">  115</a></span>    <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> <a class="code hl_variable" href="classfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query.xhtml#a0b337bcbd6d06e1e3b7fc5e5a3bcb677">uid</a>;</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span> </div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query.xhtml#a21681c6fa49c37ffde71a57193e0e435">  117</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query.xhtml#a21681c6fa49c37ffde71a57193e0e435">RegisterMaintenanceQuery</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query.xhtml#a06885b47669f39664b8f1ded81b28da5">  118</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query.xhtml#a06885b47669f39664b8f1ded81b28da5">RegisterMaintenanceQuery</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> card_uid) : uid(card_uid){};</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span> </div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>    [[nodiscard]] <span class="keyword">auto</span> payload() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query.xhtml#ac5b43025b65c5429159ad2548428f020">  121</a></span>    [[nodiscard]] auto waitForReply() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query.xhtml#a3aeea8b4eba5a4afc1db74cf345bb327">  122</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query.xhtml#a3aeea8b4eba5a4afc1db74cf345bb327">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>  };</div>
</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span> </div>
<div class="foldopen" id="foldopen00126" data-start="{" data-end="};">
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_response.xhtml">  126</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_response.xhtml">Response</a></div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  {</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_response.xhtml#a2dc21c91838227a5a6d4660cd6824f2a">  129</a></span>    <span class="keyword">const</span> <span class="keywordtype">bool</span> request_ok{<span class="keyword">false</span>}; <span class="comment">/* True if the request was processed by the server */</span></div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_response.xhtml#a1d338440277d805768351936219b2e6b">  131</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_response.xhtml#a1d338440277d805768351936219b2e6b">Response</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_response.xhtml#a525e10ef92dc90e62f111760981b85c1">  132</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_response.xhtml#a525e10ef92dc90e62f111760981b85c1">Response</a>(<span class="keywordtype">bool</span> result) : request_ok(result){};</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  };</div>
</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span> </div>
<div class="foldopen" id="foldopen00136" data-start="{" data-end="};">
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1_m_q_t_t.xhtml#a142cb0484b0c45cf489a2e54bd564174">  136</a></span>  <span class="keyword">enum class</span> <a class="code hl_enumeration" href="namespacefabomatic_1_1_m_q_t_t.xhtml#a142cb0484b0c45cf489a2e54bd564174">UserResult</a> : uint8_t</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  {</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>    <a class="code hl_enumvalue" href="namespacefabomatic_1_1_m_q_t_t.xhtml#a142cb0484b0c45cf489a2e54bd564174a4bbb8f967da6d1a610596d7257179c2b">Invalid</a> = 0,</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>    <a class="code hl_enumvalue" href="namespacefabomatic_1_1_m_q_t_t.xhtml#a142cb0484b0c45cf489a2e54bd564174aa206428462686af481cb072b8db11784">Authorized</a> = 1,</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>    <a class="code hl_enumvalue" href="namespacefabomatic_1_1_m_q_t_t.xhtml#a142cb0484b0c45cf489a2e54bd564174ae06d1ba70f1331e9f9a113cc2f887d3f">Unauthorized</a> = 2,</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>    <a class="code hl_enumvalue" href="namespacefabomatic_1_1_m_q_t_t.xhtml#a142cb0484b0c45cf489a2e54bd564174a327b2287e60d9d8641582ba72db12984">MaintenanceUnauthorized</a> = 3,</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  };</div>
</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span> </div>
<div class="foldopen" id="foldopen00145" data-start="{" data-end="};">
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_user_response.xhtml">  145</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_user_response.xhtml">UserResponse</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_response.xhtml">Response</a></div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>  {</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_user_response.xhtml#a9cc1e287dbcc7ef231cb80390bb9e034">  148</a></span>    uint8_t result{<span class="keyword">static_cast&lt;</span>uint8_t<span class="keyword">&gt;</span>(UserResult::Invalid)};  <span class="comment">/* Result of the user check */</span></div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_user_response.xhtml#a6db2adbfa48bdc19d08f4a881f80ddfe">  149</a></span>    std::string holder_name{<span class="stringliteral">&quot;&quot;</span>};                                <span class="comment">/* Name of the user from server DB */</span></div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_user_response.xhtml#a942a9cc97186dcf8a3628bd2d6cb4fca">  150</a></span>    <a class="code hl_enumeration" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0">FabUser::UserLevel</a> user_level{FabUser::UserLevel::Unknown}; <span class="comment">/* User priviledges */</span></div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_user_response.xhtml#a7bf751913535a54746a8f5c3f6b420d2">  152</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_user_response.xhtml#a7bf751913535a54746a8f5c3f6b420d2">UserResponse</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_user_response.xhtml#a672b7985a56ab37a962043bcf693c81f">  153</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_user_response.xhtml#a672b7985a56ab37a962043bcf693c81f">UserResponse</a>(<span class="keywordtype">bool</span> rok) : <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_response.xhtml">Response</a>(rok){};</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span> </div>
<div class="foldopen" id="foldopen00155" data-start="{" data-end="}">
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_user_response.xhtml#a68b7fb90b31ddd42fdea90bd52301a3b">  155</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_user_response.xhtml#a68b7fb90b31ddd42fdea90bd52301a3b">UserResponse</a>(<span class="keywordtype">bool</span> rok, <a class="code hl_enumeration" href="namespacefabomatic_1_1_m_q_t_t.xhtml#a142cb0484b0c45cf489a2e54bd564174">UserResult</a> res) : <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_response.xhtml">Response</a>(rok),</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>                                             result(static_cast&lt;uint8_t&gt;(res)){};</div>
</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span> </div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>    [[nodiscard]] <span class="keyword">static</span> <span class="keyword">auto</span> fromJson(JsonDocument &amp;doc) -&gt; std::unique_ptr&lt;UserResponse&gt;;</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span> </div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>    [[nodiscard]] <span class="keyword">auto</span> getResult() const -&gt; <a class="code hl_enumeration" href="namespacefabomatic_1_1_m_q_t_t.xhtml#a142cb0484b0c45cf489a2e54bd564174">UserResult</a>;</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>    [[nodiscard]] auto toString() const -&gt; const std::<span class="keywordtype">string</span>;</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>  };</div>
</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span> </div>
<div class="foldopen" id="foldopen00165" data-start="{" data-end="};">
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_machine_response.xhtml">  165</a></span>  class <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_machine_response.xhtml">MachineResponse</a> final : public <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_response.xhtml">Response</a></div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  {</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_machine_response.xhtml#a902e7ba652ac5fac16680b4451dffa04">  168</a></span>    <span class="keywordtype">bool</span> is_valid = <span class="keyword">false</span>;       <span class="comment">/* True if the machine has a valid ID */</span></div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_machine_response.xhtml#a45d210d7d6e64c8958e52d75c5b9f237">  169</a></span>    <span class="keywordtype">bool</span> maintenance = <span class="keyword">true</span>;     <span class="comment">/* True if the machine needs maintenance */</span></div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_machine_response.xhtml#ad11464015688d150749e7228d4864173">  170</a></span>    <span class="keywordtype">bool</span> allowed = <span class="keyword">false</span>;        <span class="comment">/* True if the machine can be used by anybody */</span></div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_machine_response.xhtml#a47a52c7faa1ce4b443486817b8bfb4e6">  171</a></span>    uint16_t logoff{0};          <span class="comment">/* Timeout in minutes */</span></div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_machine_response.xhtml#aef09263185951df118a890d7264f3697">  172</a></span>    std::string name{<span class="stringliteral">&quot;&quot;</span>};        <span class="comment">/* Name of the machine from server DB */</span></div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_machine_response.xhtml#a952237639c5999b295f949771997d6b8">  173</a></span>    uint8_t type{0};             <span class="comment">/* Type of the machine */</span></div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_machine_response.xhtml#aa2b0db7f6e11d107d967d7760d9f7c36">  174</a></span>    uint16_t grace{0};           <span class="comment">/* Grace period in minutes */</span></div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_machine_response.xhtml#a680032ea465af1749753686d14f01221">  175</a></span>    std::string description{<span class="stringliteral">&quot;&quot;</span>}; <span class="comment">/* Description of the expired maintenance */</span></div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_machine_response.xhtml#a24894a41155decf12312b4f7d26aaa4a">  176</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_machine_response.xhtml#a24894a41155decf12312b4f7d26aaa4a">MachineResponse</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_machine_response.xhtml#aa2ed7c6de6650aa56f81390e3877a2fc">  177</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_machine_response.xhtml#aa2ed7c6de6650aa56f81390e3877a2fc">MachineResponse</a>(<span class="keywordtype">bool</span> rok) : <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_response.xhtml">Response</a>(rok){};</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>    [[nodiscard]] <span class="keyword">static</span> <span class="keyword">auto</span> fromJson(JsonDocument &amp;doc) -&gt; std::unique_ptr&lt;MachineResponse&gt;;</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  };</div>
</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span> </div>
<div class="foldopen" id="foldopen00183" data-start="{" data-end="};">
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_simple_response.xhtml">  183</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_simple_response.xhtml">SimpleResponse</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_response.xhtml">Response</a></div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  {</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_simple_response.xhtml#a46199a87becfe9a6ac708042ebd861c3">  186</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_simple_response.xhtml#a46199a87becfe9a6ac708042ebd861c3">SimpleResponse</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_1_1_simple_response.xhtml#a3aa8b2496ee40d1e22a264eefb18c0c3">  187</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_1_1_simple_response.xhtml#a3aa8b2496ee40d1e22a264eefb18c0c3">SimpleResponse</a>(<span class="keywordtype">bool</span> rok) : <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_1_1_response.xhtml">Response</a>(rok){};</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>    [[nodiscard]] <span class="keyword">static</span> <span class="keyword">auto</span> fromJson(JsonDocument &amp;doc) -&gt; std::unique_ptr&lt;SimpleResponse&gt;;</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>  };</div>
</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span> </div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>} <span class="comment">// namespace fabomatic::MQTT</span></div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span><span class="preprocessor">#endif </span><span class="comment">// MQTTTYPES_HPP_</span></div>
<div class="ttc" id="a_fab_user_8hpp_xhtml"><div class="ttname"><a href="_fab_user_8hpp.xhtml">FabUser.hpp</a></div></div>
<div class="ttc" id="a_machine_8hpp_xhtml"><div class="ttname"><a href="_machine_8hpp.xhtml">Machine.hpp</a></div></div>
<div class="ttc" id="acard_8hpp_xhtml"><div class="ttname"><a href="card_8hpp.xhtml">card.hpp</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_alive_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_alive_query.xhtml">fabomatic::MQTT::AliveQuery</a></div><div class="ttdoc">board status notification</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00050">MQTTtypes.hpp:51</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_alive_query_xhtml_a48d4f0f823e7909afdf73f3618ef26a7"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_alive_query.xhtml#a48d4f0f823e7909afdf73f3618ef26a7">fabomatic::MQTT::AliveQuery::AliveQuery</a></div><div class="ttdeci">constexpr AliveQuery()=default</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_alive_query_xhtml_a9e8727f70f83dd72e73be0fa17b4cbc0"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_alive_query.xhtml#a9e8727f70f83dd72e73be0fa17b4cbc0">fabomatic::MQTT::AliveQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00056">MQTTtypes.hpp:56</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_in_use_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml">fabomatic::MQTT::InUseQuery</a></div><div class="ttdoc">periodical message when the machine is in use</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00093">MQTTtypes.hpp:94</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_in_use_query_xhtml_a1574ac0f0d066d8e9241a89dd168a5d9"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml#a1574ac0f0d066d8e9241a89dd168a5d9">fabomatic::MQTT::InUseQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00108">MQTTtypes.hpp:108</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_in_use_query_xhtml_aabe88be3dbd65c2e6a9820a970f19f69"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml#aabe88be3dbd65c2e6a9820a970f19f69">fabomatic::MQTT::InUseQuery::InUseQuery</a></div><div class="ttdeci">InUseQuery()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_in_use_query_xhtml_ab6b7f1c82df17ad9966aa4cf50de959a"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml#ab6b7f1c82df17ad9966aa4cf50de959a">fabomatic::MQTT::InUseQuery::uid</a></div><div class="ttdeci">const card::uid_t uid</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00096">MQTTtypes.hpp:96</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_in_use_query_xhtml_ac4e2415303f23841a933e0267eca5a31"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml#ac4e2415303f23841a933e0267eca5a31">fabomatic::MQTT::InUseQuery::InUseQuery</a></div><div class="ttdeci">constexpr InUseQuery(card::uid_t card_uid, std::chrono::seconds duration)</div><div class="ttdoc">Request to register machine usage stop.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00105">MQTTtypes.hpp:105</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_in_use_query_xhtml_acec24af335f31632f8e0146fcdaebd72"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_in_use_query.xhtml#acec24af335f31632f8e0146fcdaebd72">fabomatic::MQTT::InUseQuery::duration_s</a></div><div class="ttdeci">const std::chrono::seconds duration_s</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00097">MQTTtypes.hpp:97</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_machine_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_machine_query.xhtml">fabomatic::MQTT::MachineQuery</a></div><div class="ttdoc">machine status query</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00040">MQTTtypes.hpp:41</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_machine_query_xhtml_ab545e0e01b7443d6d7871c2eb5e55c45"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_machine_query.xhtml#ab545e0e01b7443d6d7871c2eb5e55c45">fabomatic::MQTT::MachineQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00046">MQTTtypes.hpp:46</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_machine_query_xhtml_afbb9fd1896b3c2385f671e5e9e96478e"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_machine_query.xhtml#afbb9fd1896b3c2385f671e5e9e96478e">fabomatic::MQTT::MachineQuery::MachineQuery</a></div><div class="ttdeci">constexpr MachineQuery()=default</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_machine_response_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_machine_response.xhtml">fabomatic::MQTT::MachineResponse</a></div><div class="ttdoc">Backend response for machine status query.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00165">MQTTtypes.hpp:166</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_machine_response_xhtml_a24894a41155decf12312b4f7d26aaa4a"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_machine_response.xhtml#a24894a41155decf12312b4f7d26aaa4a">fabomatic::MQTT::MachineResponse::MachineResponse</a></div><div class="ttdeci">MachineResponse()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_machine_response_xhtml_aa2ed7c6de6650aa56f81390e3877a2fc"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_machine_response.xhtml#aa2ed7c6de6650aa56f81390e3877a2fc">fabomatic::MQTT::MachineResponse::MachineResponse</a></div><div class="ttdeci">MachineResponse(bool rok)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00177">MQTTtypes.hpp:177</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml">fabomatic::MQTT::Query</a></div><div class="ttdoc">base class for all MQTT request to the backend</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00016">MQTTtypes.hpp:17</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_query_xhtml_a245e76f7b6183e7c38fcce32205f0c3d"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml#a245e76f7b6183e7c38fcce32205f0c3d">fabomatic::MQTT::Query::waitForReply</a></div><div class="ttdeci">virtual auto waitForReply() const -&gt; bool=0</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_query_xhtml_a2703e6b406d86270dbcef35993d5ea82"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml#a2703e6b406d86270dbcef35993d5ea82">fabomatic::MQTT::Query::buffered</a></div><div class="ttdeci">virtual auto buffered() const -&gt; bool=0</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_query_xhtml_a4c4fbf347699e3b18da9021b1858cd63"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_query.xhtml#a4c4fbf347699e3b18da9021b1858cd63">fabomatic::MQTT::Query::payload</a></div><div class="ttdeci">virtual auto payload() const -&gt; const std::string=0</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query.xhtml">fabomatic::MQTT::RegisterMaintenanceQuery</a></div><div class="ttdoc">Maintenance action record.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00112">MQTTtypes.hpp:113</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query_xhtml_a06885b47669f39664b8f1ded81b28da5"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query.xhtml#a06885b47669f39664b8f1ded81b28da5">fabomatic::MQTT::RegisterMaintenanceQuery::RegisterMaintenanceQuery</a></div><div class="ttdeci">constexpr RegisterMaintenanceQuery(card::uid_t card_uid)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00118">MQTTtypes.hpp:118</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query_xhtml_a0b337bcbd6d06e1e3b7fc5e5a3bcb677"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query.xhtml#a0b337bcbd6d06e1e3b7fc5e5a3bcb677">fabomatic::MQTT::RegisterMaintenanceQuery::uid</a></div><div class="ttdeci">const card::uid_t uid</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00115">MQTTtypes.hpp:115</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query_xhtml_a21681c6fa49c37ffde71a57193e0e435"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query.xhtml#a21681c6fa49c37ffde71a57193e0e435">fabomatic::MQTT::RegisterMaintenanceQuery::RegisterMaintenanceQuery</a></div><div class="ttdeci">RegisterMaintenanceQuery()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query_xhtml_a3aeea8b4eba5a4afc1db74cf345bb327"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_register_maintenance_query.xhtml#a3aeea8b4eba5a4afc1db74cf345bb327">fabomatic::MQTT::RegisterMaintenanceQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00122">MQTTtypes.hpp:122</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_response_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_response.xhtml">fabomatic::MQTT::Response</a></div><div class="ttdoc">Base class for server replies.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00126">MQTTtypes.hpp:127</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_response_xhtml_a1d338440277d805768351936219b2e6b"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_response.xhtml#a1d338440277d805768351936219b2e6b">fabomatic::MQTT::Response::Response</a></div><div class="ttdeci">Response()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_response_xhtml_a525e10ef92dc90e62f111760981b85c1"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_response.xhtml#a525e10ef92dc90e62f111760981b85c1">fabomatic::MQTT::Response::Response</a></div><div class="ttdeci">constexpr Response(bool result)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00132">MQTTtypes.hpp:132</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_simple_response_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_simple_response.xhtml">fabomatic::MQTT::SimpleResponse</a></div><div class="ttdoc">Default response for all other messages.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00183">MQTTtypes.hpp:184</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_simple_response_xhtml_a3aa8b2496ee40d1e22a264eefb18c0c3"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_simple_response.xhtml#a3aa8b2496ee40d1e22a264eefb18c0c3">fabomatic::MQTT::SimpleResponse::SimpleResponse</a></div><div class="ttdeci">constexpr SimpleResponse(bool rok)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00187">MQTTtypes.hpp:187</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_simple_response_xhtml_a46199a87becfe9a6ac708042ebd861c3"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_simple_response.xhtml#a46199a87becfe9a6ac708042ebd861c3">fabomatic::MQTT::SimpleResponse::SimpleResponse</a></div><div class="ttdeci">SimpleResponse()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_start_use_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_start_use_query.xhtml">fabomatic::MQTT::StartUseQuery</a></div><div class="ttdoc">start of machine use</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00060">MQTTtypes.hpp:61</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_start_use_query_xhtml_a5cdf431fb36494f93cbeee6936d64313"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_start_use_query.xhtml#a5cdf431fb36494f93cbeee6936d64313">fabomatic::MQTT::StartUseQuery::StartUseQuery</a></div><div class="ttdeci">constexpr StartUseQuery(card::uid_t card_uid)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00066">MQTTtypes.hpp:66</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_start_use_query_xhtml_adac2f499b67e4ec60b59bc01e2a3a251"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_start_use_query.xhtml#adac2f499b67e4ec60b59bc01e2a3a251">fabomatic::MQTT::StartUseQuery::uid</a></div><div class="ttdeci">const card::uid_t uid</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00063">MQTTtypes.hpp:63</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_start_use_query_xhtml_af107665df54b438bcba9170f25f8ecaa"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_start_use_query.xhtml#af107665df54b438bcba9170f25f8ecaa">fabomatic::MQTT::StartUseQuery::StartUseQuery</a></div><div class="ttdeci">StartUseQuery()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_start_use_query_xhtml_af8721bdd37cccc4d7bad6e8dc732147c"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_start_use_query.xhtml#af8721bdd37cccc4d7bad6e8dc732147c">fabomatic::MQTT::StartUseQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00070">MQTTtypes.hpp:70</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_stop_use_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml">fabomatic::MQTT::StopUseQuery</a></div><div class="ttdoc">end of machine use</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00074">MQTTtypes.hpp:75</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_stop_use_query_xhtml_a4547c542e6a46a10ea0ebcbceb5fff67"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml#a4547c542e6a46a10ea0ebcbceb5fff67">fabomatic::MQTT::StopUseQuery::StopUseQuery</a></div><div class="ttdeci">constexpr StopUseQuery(card::uid_t card_uid, std::chrono::seconds duration)</div><div class="ttdoc">Request to register machine usage stop.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00086">MQTTtypes.hpp:86</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_stop_use_query_xhtml_a496d477eb2d3551f3b70fb7da77eee8e"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml#a496d477eb2d3551f3b70fb7da77eee8e">fabomatic::MQTT::StopUseQuery::uid</a></div><div class="ttdeci">const card::uid_t uid</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00077">MQTTtypes.hpp:77</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_stop_use_query_xhtml_a51c0f9c76b2d29409ba32fb34dd72446"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml#a51c0f9c76b2d29409ba32fb34dd72446">fabomatic::MQTT::StopUseQuery::StopUseQuery</a></div><div class="ttdeci">StopUseQuery()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_stop_use_query_xhtml_a841b468dd1a9308a70745d17f9e84094"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml#a841b468dd1a9308a70745d17f9e84094">fabomatic::MQTT::StopUseQuery::duration_s</a></div><div class="ttdeci">const std::chrono::seconds duration_s</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00078">MQTTtypes.hpp:78</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_stop_use_query_xhtml_ab51c4c4edf330fbc787a4818a1fff6a2"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_stop_use_query.xhtml#ab51c4c4edf330fbc787a4818a1fff6a2">fabomatic::MQTT::StopUseQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00089">MQTTtypes.hpp:89</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_user_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_user_query.xhtml">fabomatic::MQTT::UserQuery</a></div><div class="ttdoc">user authentication query</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00026">MQTTtypes.hpp:27</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_user_query_xhtml_a0c97ca57bd8a07e15e0ae034545b93f2"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_user_query.xhtml#a0c97ca57bd8a07e15e0ae034545b93f2">fabomatic::MQTT::UserQuery::waitForReply</a></div><div class="ttdeci">auto waitForReply() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00034">MQTTtypes.hpp:34</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_user_query_xhtml_ad0432744208c896687acd971ddd72750"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_user_query.xhtml#ad0432744208c896687acd971ddd72750">fabomatic::MQTT::UserQuery::UserQuery</a></div><div class="ttdeci">constexpr UserQuery(card::uid_t card_uid)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00032">MQTTtypes.hpp:32</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_user_query_xhtml_ae9246039dede8caeb657821657e559a0"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_user_query.xhtml#ae9246039dede8caeb657821657e559a0">fabomatic::MQTT::UserQuery::UserQuery</a></div><div class="ttdeci">UserQuery()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_user_query_xhtml_ae95787a68fe3611e07fceef62eb604e1"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_user_query.xhtml#ae95787a68fe3611e07fceef62eb604e1">fabomatic::MQTT::UserQuery::uid</a></div><div class="ttdeci">const card::uid_t uid</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00029">MQTTtypes.hpp:29</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_user_response_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_user_response.xhtml">fabomatic::MQTT::UserResponse</a></div><div class="ttdoc">Backend response for a user authentication query.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00145">MQTTtypes.hpp:146</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_user_response_xhtml_a672b7985a56ab37a962043bcf693c81f"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_user_response.xhtml#a672b7985a56ab37a962043bcf693c81f">fabomatic::MQTT::UserResponse::UserResponse</a></div><div class="ttdeci">UserResponse(bool rok)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00153">MQTTtypes.hpp:153</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_user_response_xhtml_a68b7fb90b31ddd42fdea90bd52301a3b"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_user_response.xhtml#a68b7fb90b31ddd42fdea90bd52301a3b">fabomatic::MQTT::UserResponse::UserResponse</a></div><div class="ttdeci">UserResponse(bool rok, UserResult res)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00155">MQTTtypes.hpp:155</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_1_1_user_response_xhtml_a7bf751913535a54746a8f5c3f6b420d2"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_1_1_user_response.xhtml#a7bf751913535a54746a8f5c3f6b420d2">fabomatic::MQTT::UserResponse::UserResponse</a></div><div class="ttdeci">UserResponse()=delete</div></div>
<div class="ttc" id="anamespacefabomatic_1_1_m_q_t_t_xhtml"><div class="ttname"><a href="namespacefabomatic_1_1_m_q_t_t.xhtml">fabomatic::MQTT</a></div><div class="ttdoc">Contains all the types for MQTT messages between board and backend.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8cpp_source.xhtml#l00018">MQTTtypes.cpp:19</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_m_q_t_t_xhtml_a142cb0484b0c45cf489a2e54bd564174"><div class="ttname"><a href="namespacefabomatic_1_1_m_q_t_t.xhtml#a142cb0484b0c45cf489a2e54bd564174">fabomatic::MQTT::UserResult</a></div><div class="ttdeci">UserResult</div><div class="ttdoc">Result code for user authentication result.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00136">MQTTtypes.hpp:137</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_m_q_t_t_xhtml_a142cb0484b0c45cf489a2e54bd564174a327b2287e60d9d8641582ba72db12984"><div class="ttname"><a href="namespacefabomatic_1_1_m_q_t_t.xhtml#a142cb0484b0c45cf489a2e54bd564174a327b2287e60d9d8641582ba72db12984">fabomatic::MQTT::UserResult::MaintenanceUnauthorized</a></div><div class="ttdeci">@ MaintenanceUnauthorized</div></div>
<div class="ttc" id="anamespacefabomatic_1_1_m_q_t_t_xhtml_a142cb0484b0c45cf489a2e54bd564174a4bbb8f967da6d1a610596d7257179c2b"><div class="ttname"><a href="namespacefabomatic_1_1_m_q_t_t.xhtml#a142cb0484b0c45cf489a2e54bd564174a4bbb8f967da6d1a610596d7257179c2b">fabomatic::MQTT::UserResult::Invalid</a></div><div class="ttdeci">@ Invalid</div></div>
<div class="ttc" id="anamespacefabomatic_1_1_m_q_t_t_xhtml_a142cb0484b0c45cf489a2e54bd564174aa206428462686af481cb072b8db11784"><div class="ttname"><a href="namespacefabomatic_1_1_m_q_t_t.xhtml#a142cb0484b0c45cf489a2e54bd564174aa206428462686af481cb072b8db11784">fabomatic::MQTT::UserResult::Authorized</a></div><div class="ttdeci">@ Authorized</div></div>
<div class="ttc" id="anamespacefabomatic_1_1_m_q_t_t_xhtml_a142cb0484b0c45cf489a2e54bd564174ae06d1ba70f1331e9f9a113cc2f887d3f"><div class="ttname"><a href="namespacefabomatic_1_1_m_q_t_t.xhtml#a142cb0484b0c45cf489a2e54bd564174ae06d1ba70f1331e9f9a113cc2f887d3f">fabomatic::MQTT::UserResult::Unauthorized</a></div><div class="ttdeci">@ Unauthorized</div></div>
<div class="ttc" id="anamespacefabomatic_1_1card_xhtml_aa36a4f716561b5c72d144ad55bc3e53b"><div class="ttname"><a href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">fabomatic::card::uid_t</a></div><div class="ttdeci">u_int64_t uid_t</div><div class="ttdef"><b>Definition</b> <a href="card_8hpp_source.xhtml#l00014">card.hpp:14</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_fab_user_xhtml_a75deeb54124600e0387550735c7a0ca0"><div class="ttname"><a href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0">fabomatic::FabUser::UserLevel</a></div><div class="ttdeci">UserLevel</div><div class="ttdef"><b>Definition</b> <a href="_fab_user_8hpp_source.xhtml#l00017">FabUser.hpp:18</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Jul 2 2024 19:30:05 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
