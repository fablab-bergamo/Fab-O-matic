<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: MQTTtypes.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(0); });
/* @license-end */
</script>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">MQTTtypes.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="_m_q_t_ttypes_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#ifndef MQTTTYPES_HPP_</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#define MQTTTYPES_HPP_</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &quot;ArduinoJson.h&quot;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &quot;<a class="code" href="_fab_user_8hpp.xhtml">FabUser.hpp</a>&quot;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &quot;<a class="code" href="_machine_8hpp.xhtml">Machine.hpp</a>&quot;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &quot;<a class="code" href="card_8hpp.xhtml">card.hpp</a>&quot;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &quot;string&quot;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &lt;string_view&gt;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span> </div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefabomatic_1_1_m_q_t_t_interface.xhtml">fabomatic::MQTTInterface</a></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>{</div>
<div class="foldopen" id="foldopen00016" data-start="{" data-end="};">
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml">   16</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  {</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml#ac06669c0b505250ff983fc56c5cebf48">   19</a></span>    <span class="keyword">virtual</span> <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml#ac06669c0b505250ff983fc56c5cebf48">waitForReply</a>() const -&gt; <span class="keywordtype">bool</span> = 0;</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml#aac990a882596738260f866d996c7b002">   20</a></span>    virtual auto <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml#aac990a882596738260f866d996c7b002">payload</a>() const -&gt; const std::<span class="keywordtype">string</span> = 0;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml#af6194bf91ae33e60d5033593a4c0fc1b">   21</a></span>    virtual auto <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml#af6194bf91ae33e60d5033593a4c0fc1b">buffered</a>() const -&gt; <span class="keywordtype">bool</span> = 0;</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml#a82baef339b8ae46e2df01a7f5041e18c">   22</a></span>    virtual ~<a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml">Query</a>() = default;</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  };</div>
</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="foldopen" id="foldopen00026" data-start="{" data-end="};">
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_query.xhtml">   26</a></span>  class <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_query.xhtml">UserQuery</a> final : public <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  {</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_query.xhtml#a3d74e43aa4ccbab83cca60a837712e88">   29</a></span>    <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> <a class="code hl_variable" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_query.xhtml#a3d74e43aa4ccbab83cca60a837712e88">uid</a>;</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_query.xhtml#aace97aa3991f515ed0ac9ef1dd928ab7">   31</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_query.xhtml#aace97aa3991f515ed0ac9ef1dd928ab7">UserQuery</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_query.xhtml#a45f6de38960563dcd6b15223269348f2">   32</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_query.xhtml#a45f6de38960563dcd6b15223269348f2">UserQuery</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> card_uid) : uid(card_uid) {};</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_query.xhtml#aea32ee8b5dd88615dc96eece0cd7d9e8">   34</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_query.xhtml#aea32ee8b5dd88615dc96eece0cd7d9e8">waitForReply</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml#aac990a882596738260f866d996c7b002">payload</a>() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_query.xhtml#aaa8f3df73a877481e71497e78ee24aa7">   36</a></span>    [[nodiscard]] auto <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml#af6194bf91ae33e60d5033593a4c0fc1b">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; };</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>  };</div>
</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="foldopen" id="foldopen00040" data-start="{" data-end="};">
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_query.xhtml">   40</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_query.xhtml">MachineQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  {</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_query.xhtml#ae05a4eeae5cfa33ecd2c7a9d8a9abb33">   43</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_query.xhtml#ae05a4eeae5cfa33ecd2c7a9d8a9abb33">MachineQuery</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    [[nodiscard]] <span class="keyword">auto</span> payload() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_query.xhtml#a8d083a2d1a4ba6de6f82535eabe8d474">   45</a></span>    [[nodiscard]] auto waitForReply() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_query.xhtml#abb66468e9f725d8ed64a397373b6edc6">   46</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_query.xhtml#abb66468e9f725d8ed64a397373b6edc6">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; };</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  };</div>
</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="foldopen" id="foldopen00050" data-start="{" data-end="};">
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_alive_query.xhtml">   50</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_alive_query.xhtml">AliveQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  {</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_alive_query.xhtml#a4af5802dd112ae3530447540affd0348">   53</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_alive_query.xhtml#a4af5802dd112ae3530447540affd0348">AliveQuery</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>    [[nodiscard]] <span class="keyword">auto</span> payload() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_alive_query.xhtml#a5973ac6155b09a7d5ccc71f1bcf0738e">   55</a></span>    [[nodiscard]] auto waitForReply() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; };</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_alive_query.xhtml#ab870110b925ff86757cbacb004aff07d">   56</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_alive_query.xhtml#ab870110b925ff86757cbacb004aff07d">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; };</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  };</div>
</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="foldopen" id="foldopen00060" data-start="{" data-end="};">
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query.xhtml">   60</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query.xhtml">StartUseQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  {</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query.xhtml#a4e6a0fbdc4feb6f2db8b9c3cac048ed6">   63</a></span>    <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> <a class="code hl_variable" href="classfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query.xhtml#a4e6a0fbdc4feb6f2db8b9c3cac048ed6">uid</a>;</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query.xhtml#afd8b385418a432a95066642b9021db8a">   65</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query.xhtml#afd8b385418a432a95066642b9021db8a">StartUseQuery</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query.xhtml#a85cbea5c8ba5b5e576a9223ed291cfeb">   66</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query.xhtml#a85cbea5c8ba5b5e576a9223ed291cfeb">StartUseQuery</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> card_uid) : uid(card_uid) {};</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>    [[nodiscard]] <span class="keyword">auto</span> payload() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query.xhtml#abd1cf717da377b9d53bd31ab51847e04">   69</a></span>    [[nodiscard]] auto waitForReply() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query.xhtml#a1ef0ddde1ede1ebe7a0fe9299fb7654d">   70</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query.xhtml#a1ef0ddde1ede1ebe7a0fe9299fb7654d">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  };</div>
</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="foldopen" id="foldopen00074" data-start="{" data-end="};">
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml">   74</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml">StopUseQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  {</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml#a2fd12c58292ce4fb7f79aae5ce22957c">   77</a></span>    <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> <a class="code hl_variable" href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml#a2fd12c58292ce4fb7f79aae5ce22957c">uid</a>;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml#a24bc0f921908e5aa11b4144571c2d983">   78</a></span>    <span class="keyword">const</span> std::chrono::seconds <a class="code hl_variable" href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml#a24bc0f921908e5aa11b4144571c2d983">duration_s</a>;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml#a9607af8dc3c94e68f9579877d66ce29a">   80</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml#a9607af8dc3c94e68f9579877d66ce29a">StopUseQuery</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml#aef6be45ce50c5f624ab1e207a78e75ea">   86</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml#aef6be45ce50c5f624ab1e207a78e75ea">StopUseQuery</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> card_uid, std::chrono::seconds duration) : uid(card_uid), duration_s(duration) {};</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    [[nodiscard]] <span class="keyword">auto</span> payload() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml#ac53f92decb7992bed30b2ac97e113c56">   88</a></span>    [[nodiscard]] auto waitForReply() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml#a74322c2d9c8acd1afde7e907c10b2640">   89</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml#a74322c2d9c8acd1afde7e907c10b2640">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  };</div>
</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="foldopen" id="foldopen00093" data-start="{" data-end="};">
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml">   93</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml">InUseQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  {</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml#a3ccef377c104e121916df2623686e03b">   96</a></span>    <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> <a class="code hl_variable" href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml#a3ccef377c104e121916df2623686e03b">uid</a>;</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml#a1e7254e7128aaef602245a8b1aec21c7">   97</a></span>    <span class="keyword">const</span> std::chrono::seconds <a class="code hl_variable" href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml#a1e7254e7128aaef602245a8b1aec21c7">duration_s</a>;</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml#a0df20365d5d5b27a9690c3c56be47748">   99</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml#a0df20365d5d5b27a9690c3c56be47748">InUseQuery</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml#af0c4aba10ebeabacb310f030d4ffa5dc">  105</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml#af0c4aba10ebeabacb310f030d4ffa5dc">InUseQuery</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> card_uid, std::chrono::seconds duration) : uid(card_uid), duration_s(duration) {};</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>    [[nodiscard]] <span class="keyword">auto</span> payload() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml#a16793238fefa77cb787eae2dfd6cb355">  107</a></span>    [[nodiscard]] auto waitForReply() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml#ac4b3a6d5e2783850df3271702ac7c8d2">  108</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml#ac4b3a6d5e2783850df3271702ac7c8d2">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; };</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  };</div>
</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="foldopen" id="foldopen00112" data-start="{" data-end="};">
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query.xhtml">  112</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query.xhtml">RegisterMaintenanceQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  {</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query.xhtml#adede18d29e6c6495766472cd32df243d">  115</a></span>    <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> <a class="code hl_variable" href="classfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query.xhtml#adede18d29e6c6495766472cd32df243d">uid</a>;</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span> </div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query.xhtml#aa66237f8dd092ff071ffb1f0f68749c4">  117</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query.xhtml#aa66237f8dd092ff071ffb1f0f68749c4">RegisterMaintenanceQuery</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query.xhtml#a421108b1993eeb1e42663737beef3748">  118</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query.xhtml#a421108b1993eeb1e42663737beef3748">RegisterMaintenanceQuery</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> card_uid) : uid(card_uid) {};</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span> </div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>    [[nodiscard]] <span class="keyword">auto</span> payload() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query.xhtml#a8e5f09e7a93543157326bf2163bfc514">  121</a></span>    [[nodiscard]] auto waitForReply() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query.xhtml#a384f82e6081ab6d8bde4d29618a7e857">  122</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query.xhtml#a384f82e6081ab6d8bde4d29618a7e857">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>  };</div>
</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span> </div>
<div class="foldopen" id="foldopen00126" data-start="{" data-end="};">
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_response.xhtml">  126</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_response.xhtml">Response</a></div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  {</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_response.xhtml#a487e0106ff6bfa6ec0345c7e396b255d">  129</a></span>    <span class="keyword">const</span> <span class="keywordtype">bool</span> request_ok{<span class="keyword">false</span>}; <span class="comment">/* True if the request was processed by the server */</span></div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_response.xhtml#a5e7cc4194019086f156b6385a9d1b983">  131</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_response.xhtml#a5e7cc4194019086f156b6385a9d1b983">Response</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_response.xhtml#a44bf12d82cccf2080d4b3b8ad73f1ecd">  132</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_response.xhtml#a44bf12d82cccf2080d4b3b8ad73f1ecd">Response</a>(<span class="keywordtype">bool</span> result) : request_ok(result) {};</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  };</div>
</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span> </div>
<div class="foldopen" id="foldopen00136" data-start="{" data-end="};">
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1_m_q_t_t_interface.xhtml#aae6b9bbbb914df1bded5c53773eb17fa">  136</a></span>  <span class="keyword">enum class</span> <a class="code hl_enumeration" href="namespacefabomatic_1_1_m_q_t_t_interface.xhtml#aae6b9bbbb914df1bded5c53773eb17fa">UserResult</a> : uint8_t</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  {</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>    <a class="code hl_enumvalue" href="namespacefabomatic_1_1_m_q_t_t_interface.xhtml#aae6b9bbbb914df1bded5c53773eb17faa4bbb8f967da6d1a610596d7257179c2b">Invalid</a> = 0,</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>    <a class="code hl_enumvalue" href="namespacefabomatic_1_1_m_q_t_t_interface.xhtml#aae6b9bbbb914df1bded5c53773eb17faaa206428462686af481cb072b8db11784">Authorized</a> = 1,</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>    <a class="code hl_enumvalue" href="namespacefabomatic_1_1_m_q_t_t_interface.xhtml#aae6b9bbbb914df1bded5c53773eb17faae06d1ba70f1331e9f9a113cc2f887d3f">Unauthorized</a> = 2,</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>    <a class="code hl_enumvalue" href="namespacefabomatic_1_1_m_q_t_t_interface.xhtml#aae6b9bbbb914df1bded5c53773eb17faa327b2287e60d9d8641582ba72db12984">MaintenanceUnauthorized</a> = 3,</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  };</div>
</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span> </div>
<div class="foldopen" id="foldopen00145" data-start="{" data-end="};">
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_response.xhtml">  145</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_response.xhtml">UserResponse</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_response.xhtml">Response</a></div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>  {</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_response.xhtml#a02bc1198059dc4e55b3825219634efd2">  148</a></span>    uint8_t result{<span class="keyword">static_cast&lt;</span>uint8_t<span class="keyword">&gt;</span>(UserResult::Invalid)};  <span class="comment">/* Result of the user check */</span></div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_response.xhtml#ae4d75c8773f875b3499193148a8e38a1">  149</a></span>    std::string holder_name{<span class="stringliteral">&quot;&quot;</span>};                                <span class="comment">/* Name of the user from server DB */</span></div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_response.xhtml#ac7fc0b37212d7367185e36b1211cf451">  150</a></span>    <a class="code hl_enumeration" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0">FabUser::UserLevel</a> user_level{FabUser::UserLevel::Unknown}; <span class="comment">/* User priviledges */</span></div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_response.xhtml#aa718f9f062fb6589be87fcfa9029ffdb">  152</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_response.xhtml#aa718f9f062fb6589be87fcfa9029ffdb">UserResponse</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_response.xhtml#afc7917efe6445cacebfb9ca1c688071b">  153</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_response.xhtml#afc7917efe6445cacebfb9ca1c688071b">UserResponse</a>(<span class="keywordtype">bool</span> rok) : <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_response.xhtml">Response</a>(rok) {};</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span> </div>
<div class="foldopen" id="foldopen00155" data-start="{" data-end="}">
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_response.xhtml#af0d0e44880bf8e800252f68ae504f1aa">  155</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_response.xhtml#af0d0e44880bf8e800252f68ae504f1aa">UserResponse</a>(<span class="keywordtype">bool</span> rok, <a class="code hl_enumeration" href="namespacefabomatic_1_1_m_q_t_t_interface.xhtml#aae6b9bbbb914df1bded5c53773eb17fa">UserResult</a> res) : <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_response.xhtml">Response</a>(rok),</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>                                             result(static_cast&lt;uint8_t&gt;(res)) {};</div>
</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span> </div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>    [[nodiscard]] <span class="keyword">static</span> <span class="keyword">auto</span> fromJson(JsonDocument &amp;doc) -&gt; std::unique_ptr&lt;UserResponse&gt;;</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span> </div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>    [[nodiscard]] <span class="keyword">auto</span> getResult() const -&gt; <a class="code hl_enumeration" href="namespacefabomatic_1_1_m_q_t_t_interface.xhtml#aae6b9bbbb914df1bded5c53773eb17fa">UserResult</a>;</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>    [[nodiscard]] auto toString() const -&gt; const std::<span class="keywordtype">string</span>;</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>  };</div>
</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span> </div>
<div class="foldopen" id="foldopen00165" data-start="{" data-end="};">
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_response.xhtml">  165</a></span>  class <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_response.xhtml">MachineResponse</a> final : public <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_response.xhtml">Response</a></div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  {</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_response.xhtml#afddcddc5ae8299f3d17e626c2ecbf999">  168</a></span>    <span class="keywordtype">bool</span> is_valid = <span class="keyword">false</span>;       <span class="comment">/* True if the machine has a valid ID */</span></div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_response.xhtml#a70f4ab9b50c664fd3f232290b508f0ba">  169</a></span>    <span class="keywordtype">bool</span> maintenance = <span class="keyword">true</span>;     <span class="comment">/* True if the machine needs maintenance */</span></div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_response.xhtml#a07a6f536fb975ccee5aa78fd02bced4f">  170</a></span>    <span class="keywordtype">bool</span> allowed = <span class="keyword">false</span>;        <span class="comment">/* True if the machine can be used by anybody */</span></div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_response.xhtml#aa2ae64bdf95ce8aadadc0362f221ac54">  171</a></span>    uint16_t logoff{0};          <span class="comment">/* Timeout in minutes */</span></div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_response.xhtml#ae67044d27e565cfac26eabbc5a85caab">  172</a></span>    std::string name{<span class="stringliteral">&quot;&quot;</span>};        <span class="comment">/* Name of the machine from server DB */</span></div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_response.xhtml#a626a7ec376e82911d897be7b517f6c18">  173</a></span>    uint8_t type{0};             <span class="comment">/* Type of the machine */</span></div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_response.xhtml#a71d7c0a9849e0e7bfd7d825ad8ac000d">  174</a></span>    uint16_t grace{0};           <span class="comment">/* Grace period in minutes */</span></div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_response.xhtml#a2e4f83c22b3b6107db71ff7435b72002">  175</a></span>    std::string description{<span class="stringliteral">&quot;&quot;</span>}; <span class="comment">/* Description of the expired maintenance */</span></div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_response.xhtml#ad5cf8bdd9d8e8629d4ec999d44378730">  176</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_response.xhtml#ad5cf8bdd9d8e8629d4ec999d44378730">MachineResponse</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_response.xhtml#abb872a3ccae259b1d88744388b915420">  177</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_response.xhtml#abb872a3ccae259b1d88744388b915420">MachineResponse</a>(<span class="keywordtype">bool</span> rok) : <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_response.xhtml">Response</a>(rok) {};</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>    [[nodiscard]] <span class="keyword">static</span> <span class="keyword">auto</span> fromJson(JsonDocument &amp;doc) -&gt; std::unique_ptr&lt;MachineResponse&gt;;</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  };</div>
</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span> </div>
<div class="foldopen" id="foldopen00183" data-start="{" data-end="};">
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_simple_response.xhtml">  183</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_simple_response.xhtml">SimpleResponse</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_response.xhtml">Response</a></div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  {</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_simple_response.xhtml#aa3607f769d219fd4c2395d36f577788f">  186</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_simple_response.xhtml#aa3607f769d219fd4c2395d36f577788f">SimpleResponse</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_simple_response.xhtml#a99b2d7fe318e309ddc10c68a8cfdb478">  187</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_simple_response.xhtml#a99b2d7fe318e309ddc10c68a8cfdb478">SimpleResponse</a>(<span class="keywordtype">bool</span> rok) : <a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_response.xhtml">Response</a>(rok) {};</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>    [[nodiscard]] <span class="keyword">static</span> <span class="keyword">auto</span> fromJson(JsonDocument &amp;doc) -&gt; std::unique_ptr&lt;SimpleResponse&gt;;</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>  };</div>
</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span> </div>
<div class="foldopen" id="foldopen00193" data-start="{" data-end="};">
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_backend_request.xhtml">  193</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_m_q_t_t_interface_1_1_backend_request.xhtml">BackendRequest</a></div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>  {</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_backend_request.xhtml#ace4b523010d0c5c05529c6d1dc6ba06b">  196</a></span>    <a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> <a class="code hl_variable" href="classfabomatic_1_1_m_q_t_t_interface_1_1_backend_request.xhtml#ace4b523010d0c5c05529c6d1dc6ba06b">requester</a>;</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_backend_request.xhtml#ae53b429e1e17f68608d2da2cbf46a42b">  197</a></span>    std::string <a class="code hl_variable" href="classfabomatic_1_1_m_q_t_t_interface_1_1_backend_request.xhtml#ae53b429e1e17f68608d2da2cbf46a42b">request_type</a>;</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_m_q_t_t_interface_1_1_backend_request.xhtml#ac22020a855655d13f46ea1dca2841f24">  198</a></span>    <a class="code hl_function" href="classfabomatic_1_1_m_q_t_t_interface_1_1_backend_request.xhtml#ac22020a855655d13f46ea1dca2841f24">BackendRequest</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> &amp;uid, <span class="keyword">const</span> std::string &amp;request) : requester{uid}, request_type(request) {};</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>    [[nodiscard]] <span class="keyword">static</span> <span class="keyword">auto</span> fromJson(<span class="keyword">const</span> JsonDocument &amp;doc) -&gt; std::optional&lt;std::unique_ptr&lt;BackendRequest&gt;&gt;;</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>  };</div>
</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>} <span class="comment">// namespace fabomatic::MQTTInterface</span></div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span><span class="preprocessor">#endif </span><span class="comment">// MQTTTYPES_HPP_</span></div>
<div class="ttc" id="a_fab_user_8hpp_xhtml"><div class="ttname"><a href="_fab_user_8hpp.xhtml">FabUser.hpp</a></div></div>
<div class="ttc" id="a_machine_8hpp_xhtml"><div class="ttname"><a href="_machine_8hpp.xhtml">Machine.hpp</a></div></div>
<div class="ttc" id="acard_8hpp_xhtml"><div class="ttname"><a href="card_8hpp.xhtml">card.hpp</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_alive_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_alive_query.xhtml">fabomatic::MQTTInterface::AliveQuery</a></div><div class="ttdoc">board status notification</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00050">MQTTtypes.hpp:51</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_alive_query_xhtml_a4af5802dd112ae3530447540affd0348"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_alive_query.xhtml#a4af5802dd112ae3530447540affd0348">fabomatic::MQTTInterface::AliveQuery::AliveQuery</a></div><div class="ttdeci">constexpr AliveQuery()=default</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_alive_query_xhtml_ab870110b925ff86757cbacb004aff07d"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_alive_query.xhtml#ab870110b925ff86757cbacb004aff07d">fabomatic::MQTTInterface::AliveQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00056">MQTTtypes.hpp:56</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_backend_request_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_backend_request.xhtml">fabomatic::MQTTInterface::BackendRequest</a></div><div class="ttdoc">Class for server request.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00193">MQTTtypes.hpp:194</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_backend_request_xhtml_ac22020a855655d13f46ea1dca2841f24"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_backend_request.xhtml#ac22020a855655d13f46ea1dca2841f24">fabomatic::MQTTInterface::BackendRequest::BackendRequest</a></div><div class="ttdeci">BackendRequest(const card::uid_t &amp;uid, const std::string &amp;request)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00198">MQTTtypes.hpp:198</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_backend_request_xhtml_ace4b523010d0c5c05529c6d1dc6ba06b"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_backend_request.xhtml#ace4b523010d0c5c05529c6d1dc6ba06b">fabomatic::MQTTInterface::BackendRequest::requester</a></div><div class="ttdeci">card::uid_t requester</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00196">MQTTtypes.hpp:196</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_backend_request_xhtml_ae53b429e1e17f68608d2da2cbf46a42b"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_backend_request.xhtml#ae53b429e1e17f68608d2da2cbf46a42b">fabomatic::MQTTInterface::BackendRequest::request_type</a></div><div class="ttdeci">std::string request_type</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00197">MQTTtypes.hpp:197</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml">fabomatic::MQTTInterface::InUseQuery</a></div><div class="ttdoc">periodical message when the machine is in use</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00093">MQTTtypes.hpp:94</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query_xhtml_a0df20365d5d5b27a9690c3c56be47748"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml#a0df20365d5d5b27a9690c3c56be47748">fabomatic::MQTTInterface::InUseQuery::InUseQuery</a></div><div class="ttdeci">InUseQuery()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query_xhtml_a1e7254e7128aaef602245a8b1aec21c7"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml#a1e7254e7128aaef602245a8b1aec21c7">fabomatic::MQTTInterface::InUseQuery::duration_s</a></div><div class="ttdeci">const std::chrono::seconds duration_s</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00097">MQTTtypes.hpp:97</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query_xhtml_a3ccef377c104e121916df2623686e03b"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml#a3ccef377c104e121916df2623686e03b">fabomatic::MQTTInterface::InUseQuery::uid</a></div><div class="ttdeci">const card::uid_t uid</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00096">MQTTtypes.hpp:96</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query_xhtml_ac4b3a6d5e2783850df3271702ac7c8d2"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml#ac4b3a6d5e2783850df3271702ac7c8d2">fabomatic::MQTTInterface::InUseQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00108">MQTTtypes.hpp:108</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query_xhtml_af0c4aba10ebeabacb310f030d4ffa5dc"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_in_use_query.xhtml#af0c4aba10ebeabacb310f030d4ffa5dc">fabomatic::MQTTInterface::InUseQuery::InUseQuery</a></div><div class="ttdeci">constexpr InUseQuery(card::uid_t card_uid, std::chrono::seconds duration)</div><div class="ttdoc">Request to register machine usage stop.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00105">MQTTtypes.hpp:105</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_machine_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_query.xhtml">fabomatic::MQTTInterface::MachineQuery</a></div><div class="ttdoc">machine status query</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00040">MQTTtypes.hpp:41</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_machine_query_xhtml_abb66468e9f725d8ed64a397373b6edc6"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_query.xhtml#abb66468e9f725d8ed64a397373b6edc6">fabomatic::MQTTInterface::MachineQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00046">MQTTtypes.hpp:46</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_machine_query_xhtml_ae05a4eeae5cfa33ecd2c7a9d8a9abb33"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_query.xhtml#ae05a4eeae5cfa33ecd2c7a9d8a9abb33">fabomatic::MQTTInterface::MachineQuery::MachineQuery</a></div><div class="ttdeci">constexpr MachineQuery()=default</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_machine_response_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_response.xhtml">fabomatic::MQTTInterface::MachineResponse</a></div><div class="ttdoc">Backend response for machine status query.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00165">MQTTtypes.hpp:166</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_machine_response_xhtml_abb872a3ccae259b1d88744388b915420"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_response.xhtml#abb872a3ccae259b1d88744388b915420">fabomatic::MQTTInterface::MachineResponse::MachineResponse</a></div><div class="ttdeci">MachineResponse(bool rok)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00177">MQTTtypes.hpp:177</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_machine_response_xhtml_ad5cf8bdd9d8e8629d4ec999d44378730"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_machine_response.xhtml#ad5cf8bdd9d8e8629d4ec999d44378730">fabomatic::MQTTInterface::MachineResponse::MachineResponse</a></div><div class="ttdeci">MachineResponse()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml">fabomatic::MQTTInterface::Query</a></div><div class="ttdoc">base class for all MQTT request to the backend</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00016">MQTTtypes.hpp:17</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_query_xhtml_aac990a882596738260f866d996c7b002"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml#aac990a882596738260f866d996c7b002">fabomatic::MQTTInterface::Query::payload</a></div><div class="ttdeci">virtual auto payload() const -&gt; const std::string=0</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_query_xhtml_ac06669c0b505250ff983fc56c5cebf48"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml#ac06669c0b505250ff983fc56c5cebf48">fabomatic::MQTTInterface::Query::waitForReply</a></div><div class="ttdeci">virtual auto waitForReply() const -&gt; bool=0</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_query_xhtml_af6194bf91ae33e60d5033593a4c0fc1b"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_query.xhtml#af6194bf91ae33e60d5033593a4c0fc1b">fabomatic::MQTTInterface::Query::buffered</a></div><div class="ttdeci">virtual auto buffered() const -&gt; bool=0</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query.xhtml">fabomatic::MQTTInterface::RegisterMaintenanceQuery</a></div><div class="ttdoc">Maintenance action record.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00112">MQTTtypes.hpp:113</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query_xhtml_a384f82e6081ab6d8bde4d29618a7e857"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query.xhtml#a384f82e6081ab6d8bde4d29618a7e857">fabomatic::MQTTInterface::RegisterMaintenanceQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00122">MQTTtypes.hpp:122</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query_xhtml_a421108b1993eeb1e42663737beef3748"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query.xhtml#a421108b1993eeb1e42663737beef3748">fabomatic::MQTTInterface::RegisterMaintenanceQuery::RegisterMaintenanceQuery</a></div><div class="ttdeci">constexpr RegisterMaintenanceQuery(card::uid_t card_uid)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00118">MQTTtypes.hpp:118</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query_xhtml_aa66237f8dd092ff071ffb1f0f68749c4"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query.xhtml#aa66237f8dd092ff071ffb1f0f68749c4">fabomatic::MQTTInterface::RegisterMaintenanceQuery::RegisterMaintenanceQuery</a></div><div class="ttdeci">RegisterMaintenanceQuery()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query_xhtml_adede18d29e6c6495766472cd32df243d"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_register_maintenance_query.xhtml#adede18d29e6c6495766472cd32df243d">fabomatic::MQTTInterface::RegisterMaintenanceQuery::uid</a></div><div class="ttdeci">const card::uid_t uid</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00115">MQTTtypes.hpp:115</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_response_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_response.xhtml">fabomatic::MQTTInterface::Response</a></div><div class="ttdoc">Base class for server replies.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00126">MQTTtypes.hpp:127</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_response_xhtml_a44bf12d82cccf2080d4b3b8ad73f1ecd"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_response.xhtml#a44bf12d82cccf2080d4b3b8ad73f1ecd">fabomatic::MQTTInterface::Response::Response</a></div><div class="ttdeci">constexpr Response(bool result)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00132">MQTTtypes.hpp:132</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_response_xhtml_a5e7cc4194019086f156b6385a9d1b983"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_response.xhtml#a5e7cc4194019086f156b6385a9d1b983">fabomatic::MQTTInterface::Response::Response</a></div><div class="ttdeci">Response()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_simple_response_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_simple_response.xhtml">fabomatic::MQTTInterface::SimpleResponse</a></div><div class="ttdoc">Default response for all other messages.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00183">MQTTtypes.hpp:184</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_simple_response_xhtml_a99b2d7fe318e309ddc10c68a8cfdb478"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_simple_response.xhtml#a99b2d7fe318e309ddc10c68a8cfdb478">fabomatic::MQTTInterface::SimpleResponse::SimpleResponse</a></div><div class="ttdeci">constexpr SimpleResponse(bool rok)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00187">MQTTtypes.hpp:187</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_simple_response_xhtml_aa3607f769d219fd4c2395d36f577788f"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_simple_response.xhtml#aa3607f769d219fd4c2395d36f577788f">fabomatic::MQTTInterface::SimpleResponse::SimpleResponse</a></div><div class="ttdeci">SimpleResponse()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query.xhtml">fabomatic::MQTTInterface::StartUseQuery</a></div><div class="ttdoc">start of machine use</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00060">MQTTtypes.hpp:61</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query_xhtml_a1ef0ddde1ede1ebe7a0fe9299fb7654d"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query.xhtml#a1ef0ddde1ede1ebe7a0fe9299fb7654d">fabomatic::MQTTInterface::StartUseQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00070">MQTTtypes.hpp:70</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query_xhtml_a4e6a0fbdc4feb6f2db8b9c3cac048ed6"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query.xhtml#a4e6a0fbdc4feb6f2db8b9c3cac048ed6">fabomatic::MQTTInterface::StartUseQuery::uid</a></div><div class="ttdeci">const card::uid_t uid</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00063">MQTTtypes.hpp:63</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query_xhtml_a85cbea5c8ba5b5e576a9223ed291cfeb"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query.xhtml#a85cbea5c8ba5b5e576a9223ed291cfeb">fabomatic::MQTTInterface::StartUseQuery::StartUseQuery</a></div><div class="ttdeci">constexpr StartUseQuery(card::uid_t card_uid)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00066">MQTTtypes.hpp:66</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query_xhtml_afd8b385418a432a95066642b9021db8a"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_start_use_query.xhtml#afd8b385418a432a95066642b9021db8a">fabomatic::MQTTInterface::StartUseQuery::StartUseQuery</a></div><div class="ttdeci">StartUseQuery()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml">fabomatic::MQTTInterface::StopUseQuery</a></div><div class="ttdoc">end of machine use</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00074">MQTTtypes.hpp:75</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query_xhtml_a24bc0f921908e5aa11b4144571c2d983"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml#a24bc0f921908e5aa11b4144571c2d983">fabomatic::MQTTInterface::StopUseQuery::duration_s</a></div><div class="ttdeci">const std::chrono::seconds duration_s</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00078">MQTTtypes.hpp:78</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query_xhtml_a2fd12c58292ce4fb7f79aae5ce22957c"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml#a2fd12c58292ce4fb7f79aae5ce22957c">fabomatic::MQTTInterface::StopUseQuery::uid</a></div><div class="ttdeci">const card::uid_t uid</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00077">MQTTtypes.hpp:77</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query_xhtml_a74322c2d9c8acd1afde7e907c10b2640"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml#a74322c2d9c8acd1afde7e907c10b2640">fabomatic::MQTTInterface::StopUseQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00089">MQTTtypes.hpp:89</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query_xhtml_a9607af8dc3c94e68f9579877d66ce29a"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml#a9607af8dc3c94e68f9579877d66ce29a">fabomatic::MQTTInterface::StopUseQuery::StopUseQuery</a></div><div class="ttdeci">StopUseQuery()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query_xhtml_aef6be45ce50c5f624ab1e207a78e75ea"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_stop_use_query.xhtml#aef6be45ce50c5f624ab1e207a78e75ea">fabomatic::MQTTInterface::StopUseQuery::StopUseQuery</a></div><div class="ttdeci">constexpr StopUseQuery(card::uid_t card_uid, std::chrono::seconds duration)</div><div class="ttdoc">Request to register machine usage stop.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00086">MQTTtypes.hpp:86</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_user_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_query.xhtml">fabomatic::MQTTInterface::UserQuery</a></div><div class="ttdoc">user authentication query</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00026">MQTTtypes.hpp:27</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_user_query_xhtml_a3d74e43aa4ccbab83cca60a837712e88"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_query.xhtml#a3d74e43aa4ccbab83cca60a837712e88">fabomatic::MQTTInterface::UserQuery::uid</a></div><div class="ttdeci">const card::uid_t uid</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00029">MQTTtypes.hpp:29</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_user_query_xhtml_a45f6de38960563dcd6b15223269348f2"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_query.xhtml#a45f6de38960563dcd6b15223269348f2">fabomatic::MQTTInterface::UserQuery::UserQuery</a></div><div class="ttdeci">constexpr UserQuery(card::uid_t card_uid)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00032">MQTTtypes.hpp:32</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_user_query_xhtml_aace97aa3991f515ed0ac9ef1dd928ab7"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_query.xhtml#aace97aa3991f515ed0ac9ef1dd928ab7">fabomatic::MQTTInterface::UserQuery::UserQuery</a></div><div class="ttdeci">UserQuery()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_user_query_xhtml_aea32ee8b5dd88615dc96eece0cd7d9e8"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_query.xhtml#aea32ee8b5dd88615dc96eece0cd7d9e8">fabomatic::MQTTInterface::UserQuery::waitForReply</a></div><div class="ttdeci">auto waitForReply() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00034">MQTTtypes.hpp:34</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_user_response_xhtml"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_response.xhtml">fabomatic::MQTTInterface::UserResponse</a></div><div class="ttdoc">Backend response for a user authentication query.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00145">MQTTtypes.hpp:146</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_user_response_xhtml_aa718f9f062fb6589be87fcfa9029ffdb"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_response.xhtml#aa718f9f062fb6589be87fcfa9029ffdb">fabomatic::MQTTInterface::UserResponse::UserResponse</a></div><div class="ttdeci">UserResponse()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_user_response_xhtml_af0d0e44880bf8e800252f68ae504f1aa"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_response.xhtml#af0d0e44880bf8e800252f68ae504f1aa">fabomatic::MQTTInterface::UserResponse::UserResponse</a></div><div class="ttdeci">UserResponse(bool rok, UserResult res)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00155">MQTTtypes.hpp:155</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_m_q_t_t_interface_1_1_user_response_xhtml_afc7917efe6445cacebfb9ca1c688071b"><div class="ttname"><a href="classfabomatic_1_1_m_q_t_t_interface_1_1_user_response.xhtml#afc7917efe6445cacebfb9ca1c688071b">fabomatic::MQTTInterface::UserResponse::UserResponse</a></div><div class="ttdeci">UserResponse(bool rok)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00153">MQTTtypes.hpp:153</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_m_q_t_t_interface_xhtml"><div class="ttname"><a href="namespacefabomatic_1_1_m_q_t_t_interface.xhtml">fabomatic::MQTTInterface</a></div><div class="ttdoc">Contains all the types for MQTT messages between board and backend.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8cpp_source.xhtml#l00018">MQTTtypes.cpp:19</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_m_q_t_t_interface_xhtml_aae6b9bbbb914df1bded5c53773eb17fa"><div class="ttname"><a href="namespacefabomatic_1_1_m_q_t_t_interface.xhtml#aae6b9bbbb914df1bded5c53773eb17fa">fabomatic::MQTTInterface::UserResult</a></div><div class="ttdeci">UserResult</div><div class="ttdoc">Result code for user authentication result.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00136">MQTTtypes.hpp:137</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_m_q_t_t_interface_xhtml_aae6b9bbbb914df1bded5c53773eb17faa327b2287e60d9d8641582ba72db12984"><div class="ttname"><a href="namespacefabomatic_1_1_m_q_t_t_interface.xhtml#aae6b9bbbb914df1bded5c53773eb17faa327b2287e60d9d8641582ba72db12984">fabomatic::MQTTInterface::UserResult::MaintenanceUnauthorized</a></div><div class="ttdeci">@ MaintenanceUnauthorized</div></div>
<div class="ttc" id="anamespacefabomatic_1_1_m_q_t_t_interface_xhtml_aae6b9bbbb914df1bded5c53773eb17faa4bbb8f967da6d1a610596d7257179c2b"><div class="ttname"><a href="namespacefabomatic_1_1_m_q_t_t_interface.xhtml#aae6b9bbbb914df1bded5c53773eb17faa4bbb8f967da6d1a610596d7257179c2b">fabomatic::MQTTInterface::UserResult::Invalid</a></div><div class="ttdeci">@ Invalid</div></div>
<div class="ttc" id="anamespacefabomatic_1_1_m_q_t_t_interface_xhtml_aae6b9bbbb914df1bded5c53773eb17faaa206428462686af481cb072b8db11784"><div class="ttname"><a href="namespacefabomatic_1_1_m_q_t_t_interface.xhtml#aae6b9bbbb914df1bded5c53773eb17faaa206428462686af481cb072b8db11784">fabomatic::MQTTInterface::UserResult::Authorized</a></div><div class="ttdeci">@ Authorized</div></div>
<div class="ttc" id="anamespacefabomatic_1_1_m_q_t_t_interface_xhtml_aae6b9bbbb914df1bded5c53773eb17faae06d1ba70f1331e9f9a113cc2f887d3f"><div class="ttname"><a href="namespacefabomatic_1_1_m_q_t_t_interface.xhtml#aae6b9bbbb914df1bded5c53773eb17faae06d1ba70f1331e9f9a113cc2f887d3f">fabomatic::MQTTInterface::UserResult::Unauthorized</a></div><div class="ttdeci">@ Unauthorized</div></div>
<div class="ttc" id="anamespacefabomatic_1_1card_xhtml_aa36a4f716561b5c72d144ad55bc3e53b"><div class="ttname"><a href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">fabomatic::card::uid_t</a></div><div class="ttdeci">u_int64_t uid_t</div><div class="ttdef"><b>Definition</b> <a href="card_8hpp_source.xhtml#l00014">card.hpp:14</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_fab_user_xhtml_a75deeb54124600e0387550735c7a0ca0"><div class="ttname"><a href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0">fabomatic::FabUser::UserLevel</a></div><div class="ttdeci">UserLevel</div><div class="ttdef"><b>Definition</b> <a href="_fab_user_8hpp_source.xhtml#l00017">FabUser.hpp:18</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Feb 27 2025 22:22:28 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
