<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: MQTTtypes.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(0); });
/* @license-end */
</script>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">MQTTtypes.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="_m_q_t_ttypes_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#ifndef MQTTTYPES_HPP_</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#define MQTTTYPES_HPP_</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &quot;ArduinoJson.h&quot;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &quot;<a class="code" href="_fab_user_8hpp.xhtml">FabUser.hpp</a>&quot;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &quot;<a class="code" href="_machine_8hpp.xhtml">Machine.hpp</a>&quot;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &quot;<a class="code" href="card_8hpp.xhtml">card.hpp</a>&quot;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &quot;string&quot;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &lt;string_view&gt;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefabomatic_1_1_server_m_q_t_t.xhtml">fabomatic::ServerMQTT</a></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>{</div>
<div class="foldopen" id="foldopen00014" data-start="{" data-end="};">
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml">   14</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  {</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml#a3a9b87239a67e97e13baa28657f31a06">   17</a></span>    <span class="keyword">virtual</span> <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml#a3a9b87239a67e97e13baa28657f31a06">waitForReply</a>() const -&gt; <span class="keywordtype">bool</span> = 0;</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml#a09c1b44286f828e0927274cdd8f272f2">   18</a></span>    virtual auto <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml#a09c1b44286f828e0927274cdd8f272f2">payload</a>() const -&gt; const std::<span class="keywordtype">string</span> = 0;</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml#a030134b26b722150484ae1aaa101e8e5">   19</a></span>    virtual auto <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml#a030134b26b722150484ae1aaa101e8e5">buffered</a>() const -&gt; <span class="keywordtype">bool</span> = 0;</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml#a2f539896214590be3811ad9c7560cc79">   20</a></span>    virtual ~<a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml">Query</a>() = default;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  };</div>
</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span> </div>
<div class="foldopen" id="foldopen00023" data-start="{" data-end="};">
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_query.xhtml">   23</a></span>  class <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_query.xhtml">UserQuery</a> final : public <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  {</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_query.xhtml#a428e38ba676c83886902594b5271ca0a">   26</a></span>    <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> <a class="code hl_variable" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_query.xhtml#a428e38ba676c83886902594b5271ca0a">uid</a>;</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span> </div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_query.xhtml#a5b9875c6adb6c0c54a61619667cc88fe">   28</a></span>    <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_query.xhtml#a5b9875c6adb6c0c54a61619667cc88fe">UserQuery</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_query.xhtml#ac582525be5da0f720ba098bea361d3a2">   29</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_query.xhtml#ac582525be5da0f720ba098bea361d3a2">UserQuery</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> card_uid) : uid(card_uid){};</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_query.xhtml#aa78ea2a397ef55b4248360145340f027">   31</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_query.xhtml#aa78ea2a397ef55b4248360145340f027">waitForReply</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml#a09c1b44286f828e0927274cdd8f272f2">payload</a>() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_query.xhtml#a429f2c52b63865a2a4e7359a60dcf4b1">   33</a></span>    [[nodiscard]] auto <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml#a030134b26b722150484ae1aaa101e8e5">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; };</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>  };</div>
</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="foldopen" id="foldopen00036" data-start="{" data-end="};">
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_query.xhtml">   36</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_query.xhtml">MachineQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>  {</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_query.xhtml#a2d7d34846d8fdf58864298716d153bcb">   39</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_query.xhtml#a2d7d34846d8fdf58864298716d153bcb">MachineQuery</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>    [[nodiscard]] <span class="keyword">auto</span> payload() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_query.xhtml#af35c136b20db8007066e286ea80a8c34">   41</a></span>    [[nodiscard]] auto waitForReply() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_query.xhtml#a2efb999781b6f17c49b8057c03b60394">   42</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_query.xhtml#a2efb999781b6f17c49b8057c03b60394">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; };</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  };</div>
</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="foldopen" id="foldopen00045" data-start="{" data-end="};">
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_alive_query.xhtml">   45</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_alive_query.xhtml">AliveQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  {</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_alive_query.xhtml#a3e8b128568dd537ac03c15a9639405df">   48</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_alive_query.xhtml#a3e8b128568dd537ac03c15a9639405df">AliveQuery</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>    [[nodiscard]] <span class="keyword">auto</span> payload() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_alive_query.xhtml#ae4c2ed43ebc9e81caa03b8aa67ca38a2">   50</a></span>    [[nodiscard]] auto waitForReply() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; };</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_alive_query.xhtml#abfeee9afec4a65195ab73830ae555ddc">   51</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_alive_query.xhtml#abfeee9afec4a65195ab73830ae555ddc">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; };</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  };</div>
</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span> </div>
<div class="foldopen" id="foldopen00054" data-start="{" data-end="};">
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_start_use_query.xhtml">   54</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_start_use_query.xhtml">StartUseQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  {</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_start_use_query.xhtml#a12f596a89d00ca026f26fc51fa20f428">   57</a></span>    <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> <a class="code hl_variable" href="classfabomatic_1_1_server_m_q_t_t_1_1_start_use_query.xhtml#a12f596a89d00ca026f26fc51fa20f428">uid</a>;</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_start_use_query.xhtml#a3e5c9363d7c53cebb546c13c622f3ccb">   59</a></span>    <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_start_use_query.xhtml#a3e5c9363d7c53cebb546c13c622f3ccb">StartUseQuery</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_start_use_query.xhtml#a06388a66bfc1f949987be75a176e0067">   60</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_start_use_query.xhtml#a06388a66bfc1f949987be75a176e0067">StartUseQuery</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> card_uid) : uid(card_uid){};</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>    [[nodiscard]] <span class="keyword">auto</span> payload() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_start_use_query.xhtml#a3dbdc70a46eea6c0e4f3980afc4ce9aa">   63</a></span>    [[nodiscard]] auto waitForReply() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_start_use_query.xhtml#ae3a0df7edcc823c07fa8513125779d4c">   64</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_start_use_query.xhtml#ae3a0df7edcc823c07fa8513125779d4c">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  };</div>
</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="foldopen" id="foldopen00067" data-start="{" data-end="};">
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml">   67</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml">StopUseQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  {</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml#a76bfb591acccc333b1636dc431854f23">   70</a></span>    <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> <a class="code hl_variable" href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml#a76bfb591acccc333b1636dc431854f23">uid</a>;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml#a8a6fd6be04bf9a2cfca116926508516b">   71</a></span>    <span class="keyword">const</span> std::chrono::seconds <a class="code hl_variable" href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml#a8a6fd6be04bf9a2cfca116926508516b">duration_s</a>;</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml#af1dda31a97f8e492aba7d44db5764867">   73</a></span>    <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml#af1dda31a97f8e492aba7d44db5764867">StopUseQuery</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml#a0bb7934a8c5a44b64bcdad8cb68cc39a">   79</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml#a0bb7934a8c5a44b64bcdad8cb68cc39a">StopUseQuery</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> card_uid, std::chrono::seconds duration) : uid(card_uid), duration_s(duration){};</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    [[nodiscard]] <span class="keyword">auto</span> payload() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml#a265810c4a239b7f4f533851b6bb22aa8">   81</a></span>    [[nodiscard]] auto waitForReply() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml#a4ecd0fa7b31df972168334bdcb5db2b7">   82</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml#a4ecd0fa7b31df972168334bdcb5db2b7">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  };</div>
</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="foldopen" id="foldopen00085" data-start="{" data-end="};">
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml">   85</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml">InUseQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  {</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml#a2a57c516394c61cfc5afe68450061f01">   88</a></span>    <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> <a class="code hl_variable" href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml#a2a57c516394c61cfc5afe68450061f01">uid</a>;</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml#adbbea3cfe94c3b33051b0874024866be">   89</a></span>    <span class="keyword">const</span> std::chrono::seconds <a class="code hl_variable" href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml#adbbea3cfe94c3b33051b0874024866be">duration_s</a>;</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml#a4e724ff4679319b3decb40a24896c321">   91</a></span>    <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml#a4e724ff4679319b3decb40a24896c321">InUseQuery</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span> </div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml#a6a227a41d6a4d867cfbf4f6200db3f7a">   97</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml#a6a227a41d6a4d867cfbf4f6200db3f7a">InUseQuery</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> card_uid, std::chrono::seconds duration) : uid(card_uid), duration_s(duration){};</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>    [[nodiscard]] <span class="keyword">auto</span> payload() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml#a36f582309faf8a82a2fae968fe085c53">   99</a></span>    [[nodiscard]] auto waitForReply() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml#a925606300822cae0fe1bce4e19d69d44">  100</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml#a925606300822cae0fe1bce4e19d69d44">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; };</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  };</div>
</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span> </div>
<div class="foldopen" id="foldopen00103" data-start="{" data-end="};">
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query.xhtml">  103</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query.xhtml">RegisterMaintenanceQuery</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml">Query</a></div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  {</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query.xhtml#a59171de615b71f363534560049d1da13">  106</a></span>    <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> <a class="code hl_variable" href="classfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query.xhtml#a59171de615b71f363534560049d1da13">uid</a>;</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query.xhtml#a8f17bd2542b0d1eaa348e3c10c814d10">  108</a></span>    <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query.xhtml#a8f17bd2542b0d1eaa348e3c10c814d10">RegisterMaintenanceQuery</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query.xhtml#ab77b754a2579adce16d047c2ddb9bbdd">  109</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query.xhtml#ab77b754a2579adce16d047c2ddb9bbdd">RegisterMaintenanceQuery</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> card_uid) : uid(card_uid){};</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>    [[nodiscard]] <span class="keyword">auto</span> payload() const -&gt; const std::<span class="keywordtype">string</span> override;</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query.xhtml#ab1a519d16b52d941baa0b64f0a4f1d74">  112</a></span>    [[nodiscard]] auto waitForReply() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query.xhtml#a285742e24a864640996792768184e1ab">  113</a></span>    [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query.xhtml#a285742e24a864640996792768184e1ab">buffered</a>() const -&gt; <span class="keywordtype">bool</span><span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; };</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>  };</div>
</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span> </div>
<div class="foldopen" id="foldopen00116" data-start="{" data-end="};">
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_response.xhtml">  116</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_response.xhtml">Response</a></div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  {</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_response.xhtml#a4fdd19ea83639a455fba841a43be1409">  119</a></span>    <span class="keyword">const</span> <span class="keywordtype">bool</span> request_ok{<span class="keyword">false</span>}; <span class="comment">/* True if the request was processed by the server */</span></div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span> </div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_response.xhtml#a49b0fc3349b5b82e34745b9d5d40c9a9">  121</a></span>    <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_response.xhtml#a49b0fc3349b5b82e34745b9d5d40c9a9">Response</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_response.xhtml#a24380c5811e3afb07516df8a64cab852">  122</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_response.xhtml#a24380c5811e3afb07516df8a64cab852">Response</a>(<span class="keywordtype">bool</span> result) : request_ok(result){};</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>  };</div>
</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span> </div>
<div class="foldopen" id="foldopen00125" data-start="{" data-end="};">
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1_server_m_q_t_t.xhtml#a84cb68ff1e79f3f6d5e3cd37a3289d9d">  125</a></span>  <span class="keyword">enum class</span> <a class="code hl_enumeration" href="namespacefabomatic_1_1_server_m_q_t_t.xhtml#a84cb68ff1e79f3f6d5e3cd37a3289d9d">UserResult</a> : uint8_t</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  {</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>    <a class="code hl_enumvalue" href="namespacefabomatic_1_1_server_m_q_t_t.xhtml#a84cb68ff1e79f3f6d5e3cd37a3289d9da4bbb8f967da6d1a610596d7257179c2b">Invalid</a> = 0,</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>    <a class="code hl_enumvalue" href="namespacefabomatic_1_1_server_m_q_t_t.xhtml#a84cb68ff1e79f3f6d5e3cd37a3289d9daa206428462686af481cb072b8db11784">Authorized</a> = 1,</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>    <a class="code hl_enumvalue" href="namespacefabomatic_1_1_server_m_q_t_t.xhtml#a84cb68ff1e79f3f6d5e3cd37a3289d9dae06d1ba70f1331e9f9a113cc2f887d3f">Unauthorized</a> = 2,</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>    <a class="code hl_enumvalue" href="namespacefabomatic_1_1_server_m_q_t_t.xhtml#a84cb68ff1e79f3f6d5e3cd37a3289d9da327b2287e60d9d8641582ba72db12984">MaintenanceUnauthorized</a> = 3,</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  };</div>
</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="foldopen" id="foldopen00133" data-start="{" data-end="};">
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_response.xhtml">  133</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_response.xhtml">UserResponse</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_response.xhtml">Response</a></div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  {</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_response.xhtml#af86ce395e8c8f08df94f6e222bb37e47">  136</a></span>    uint8_t result{<span class="keyword">static_cast&lt;</span>uint8_t<span class="keyword">&gt;</span>(UserResult::Invalid)};  <span class="comment">/* Result of the user check */</span></div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_response.xhtml#a1b0892910c94b2fc7cc55d73ba5ab905">  137</a></span>    std::string holder_name{<span class="stringliteral">&quot;&quot;</span>};                                <span class="comment">/* Name of the user from server DB */</span></div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_response.xhtml#a92f3710dd8d00d4acffc21e6c7a98dec">  138</a></span>    <a class="code hl_enumeration" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0">FabUser::UserLevel</a> user_level{FabUser::UserLevel::Unknown}; <span class="comment">/* User priviledges */</span></div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span> </div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_response.xhtml#a36e521313985559807dddac979b69a60">  140</a></span>    <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_response.xhtml#a36e521313985559807dddac979b69a60">UserResponse</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_response.xhtml#a04a4d3d7f264ca35042c816b3fcbdf85">  141</a></span>    <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_response.xhtml#a04a4d3d7f264ca35042c816b3fcbdf85">UserResponse</a>(<span class="keywordtype">bool</span> rok) : <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_response.xhtml">Response</a>(rok){};</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span> </div>
<div class="foldopen" id="foldopen00143" data-start="{" data-end="}">
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_response.xhtml#aa8d4e47f79eb054c6b36f244bfecff81">  143</a></span>    <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_user_response.xhtml#aa8d4e47f79eb054c6b36f244bfecff81">UserResponse</a>(<span class="keywordtype">bool</span> rok, <a class="code hl_enumeration" href="namespacefabomatic_1_1_server_m_q_t_t.xhtml#a84cb68ff1e79f3f6d5e3cd37a3289d9d">UserResult</a> res) : <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_response.xhtml">Response</a>(rok),</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>                                             result(static_cast&lt;uint8_t&gt;(res)){};</div>
</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>    [[nodiscard]] <span class="keyword">static</span> <span class="keyword">auto</span> fromJson(JsonDocument &amp;doc) -&gt; std::unique_ptr&lt;UserResponse&gt;;</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span> </div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>    [[nodiscard]] <span class="keyword">auto</span> getResult() const -&gt; <a class="code hl_enumeration" href="namespacefabomatic_1_1_server_m_q_t_t.xhtml#a84cb68ff1e79f3f6d5e3cd37a3289d9d">UserResult</a>;</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>    [[nodiscard]] auto toString() const -&gt; const std::<span class="keywordtype">string</span>;</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>  };</div>
</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="foldopen" id="foldopen00152" data-start="{" data-end="};">
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml">  152</a></span>  class <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml">MachineResponse</a> final : public <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_response.xhtml">Response</a></div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  {</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml#af9410959da9b73aafed84185d377ee23">  155</a></span>    <span class="keywordtype">bool</span> is_valid = <span class="keyword">false</span>;       <span class="comment">/* True if the machine has a valid ID */</span></div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml#a038a148f49a5317c1e10bbc0dc979788">  156</a></span>    <span class="keywordtype">bool</span> maintenance = <span class="keyword">true</span>;     <span class="comment">/* True if the machine needs maintenance */</span></div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml#a659b78369e39ed1a65c4d7ec33a4daf1">  157</a></span>    <span class="keywordtype">bool</span> allowed = <span class="keyword">false</span>;        <span class="comment">/* True if the machine can be used by anybody */</span></div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml#acdaa80a060b43d35280e630aaea15f5d">  158</a></span>    uint16_t logoff{0};          <span class="comment">/* Timeout in minutes */</span></div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml#acc0408c0b841077c553da574c4019d2b">  159</a></span>    std::string name{<span class="stringliteral">&quot;&quot;</span>};        <span class="comment">/* Name of the machine from server DB */</span></div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml#afcc7d1447a1af99b3dc57fb2046b2f10">  160</a></span>    uint8_t type{0};             <span class="comment">/* Type of the machine */</span></div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml#aae65b1a73f2c193891d656b2affe3842">  161</a></span>    uint16_t grace{0};           <span class="comment">/* Grace period in minutes */</span></div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml#aa6cdd17683b6e1f8bce2ad44fe00ede3">  162</a></span>    std::string description{<span class="stringliteral">&quot;&quot;</span>}; <span class="comment">/* Description of the expired maintenance */</span></div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml#ad6c4897e3abaa93bd7f8963dfc005fd4">  163</a></span>    <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml#ad6c4897e3abaa93bd7f8963dfc005fd4">MachineResponse</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml#a169dcc8ff74cf4d0ab5b45721c5133e0">  164</a></span>    <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml#a169dcc8ff74cf4d0ab5b45721c5133e0">MachineResponse</a>(<span class="keywordtype">bool</span> rok) : <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_response.xhtml">Response</a>(rok){};</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span> </div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>    [[nodiscard]] <span class="keyword">static</span> <span class="keyword">auto</span> fromJson(JsonDocument &amp;doc) -&gt; std::unique_ptr&lt;MachineResponse&gt;;</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  };</div>
</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span> </div>
<div class="foldopen" id="foldopen00169" data-start="{" data-end="};">
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml">  169</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml">SimpleResponse</a> final : <span class="keyword">public</span> <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_response.xhtml">Response</a></div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>  {</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml#a01a00cb29bd35631dbb4c4ae12044b00">  172</a></span>    <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml#a01a00cb29bd35631dbb4c4ae12044b00">SimpleResponse</a>() = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml#a597ba25bac239a167a7f61e58020a6cc">  173</a></span>    <span class="keyword">constexpr</span> <a class="code hl_function" href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml#a597ba25bac239a167a7f61e58020a6cc">SimpleResponse</a>(<span class="keywordtype">bool</span> rok) : <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_response.xhtml">Response</a>(rok){};</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span> </div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>    [[nodiscard]] <span class="keyword">static</span> <span class="keyword">auto</span> fromJson(JsonDocument &amp;doc) -&gt; std::unique_ptr&lt;SimpleResponse&gt;;</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>  };</div>
</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span> </div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>} <span class="comment">// namespace fabomatic::ServerMQTT</span></div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span><span class="preprocessor">#endif </span><span class="comment">// MQTTTYPES_HPP_</span></div>
<div class="ttc" id="a_fab_user_8hpp_xhtml"><div class="ttname"><a href="_fab_user_8hpp.xhtml">FabUser.hpp</a></div></div>
<div class="ttc" id="a_machine_8hpp_xhtml"><div class="ttname"><a href="_machine_8hpp.xhtml">Machine.hpp</a></div></div>
<div class="ttc" id="acard_8hpp_xhtml"><div class="ttname"><a href="card_8hpp.xhtml">card.hpp</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_alive_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_alive_query.xhtml">fabomatic::ServerMQTT::AliveQuery</a></div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00045">MQTTtypes.hpp:46</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_alive_query_xhtml_a3e8b128568dd537ac03c15a9639405df"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_alive_query.xhtml#a3e8b128568dd537ac03c15a9639405df">fabomatic::ServerMQTT::AliveQuery::AliveQuery</a></div><div class="ttdeci">constexpr AliveQuery()=default</div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_alive_query_xhtml_abfeee9afec4a65195ab73830ae555ddc"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_alive_query.xhtml#abfeee9afec4a65195ab73830ae555ddc">fabomatic::ServerMQTT::AliveQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00051">MQTTtypes.hpp:51</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_in_use_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml">fabomatic::ServerMQTT::InUseQuery</a></div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00085">MQTTtypes.hpp:86</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_in_use_query_xhtml_a2a57c516394c61cfc5afe68450061f01"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml#a2a57c516394c61cfc5afe68450061f01">fabomatic::ServerMQTT::InUseQuery::uid</a></div><div class="ttdeci">const card::uid_t uid</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00088">MQTTtypes.hpp:88</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_in_use_query_xhtml_a4e724ff4679319b3decb40a24896c321"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml#a4e724ff4679319b3decb40a24896c321">fabomatic::ServerMQTT::InUseQuery::InUseQuery</a></div><div class="ttdeci">InUseQuery()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_in_use_query_xhtml_a6a227a41d6a4d867cfbf4f6200db3f7a"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml#a6a227a41d6a4d867cfbf4f6200db3f7a">fabomatic::ServerMQTT::InUseQuery::InUseQuery</a></div><div class="ttdeci">constexpr InUseQuery(card::uid_t card_uid, std::chrono::seconds duration)</div><div class="ttdoc">Request to register machine usage stop.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00097">MQTTtypes.hpp:97</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_in_use_query_xhtml_a925606300822cae0fe1bce4e19d69d44"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml#a925606300822cae0fe1bce4e19d69d44">fabomatic::ServerMQTT::InUseQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00100">MQTTtypes.hpp:100</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_in_use_query_xhtml_adbbea3cfe94c3b33051b0874024866be"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_in_use_query.xhtml#adbbea3cfe94c3b33051b0874024866be">fabomatic::ServerMQTT::InUseQuery::duration_s</a></div><div class="ttdeci">const std::chrono::seconds duration_s</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00089">MQTTtypes.hpp:89</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_machine_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_query.xhtml">fabomatic::ServerMQTT::MachineQuery</a></div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00036">MQTTtypes.hpp:37</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_machine_query_xhtml_a2d7d34846d8fdf58864298716d153bcb"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_query.xhtml#a2d7d34846d8fdf58864298716d153bcb">fabomatic::ServerMQTT::MachineQuery::MachineQuery</a></div><div class="ttdeci">constexpr MachineQuery()=default</div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_machine_query_xhtml_a2efb999781b6f17c49b8057c03b60394"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_query.xhtml#a2efb999781b6f17c49b8057c03b60394">fabomatic::ServerMQTT::MachineQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00042">MQTTtypes.hpp:42</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_machine_response_xhtml"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml">fabomatic::ServerMQTT::MachineResponse</a></div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00152">MQTTtypes.hpp:153</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_machine_response_xhtml_a169dcc8ff74cf4d0ab5b45721c5133e0"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml#a169dcc8ff74cf4d0ab5b45721c5133e0">fabomatic::ServerMQTT::MachineResponse::MachineResponse</a></div><div class="ttdeci">MachineResponse(bool rok)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00164">MQTTtypes.hpp:164</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_machine_response_xhtml_ad6c4897e3abaa93bd7f8963dfc005fd4"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_machine_response.xhtml#ad6c4897e3abaa93bd7f8963dfc005fd4">fabomatic::ServerMQTT::MachineResponse::MachineResponse</a></div><div class="ttdeci">MachineResponse()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml">fabomatic::ServerMQTT::Query</a></div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00014">MQTTtypes.hpp:15</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_query_xhtml_a030134b26b722150484ae1aaa101e8e5"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml#a030134b26b722150484ae1aaa101e8e5">fabomatic::ServerMQTT::Query::buffered</a></div><div class="ttdeci">virtual auto buffered() const -&gt; bool=0</div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_query_xhtml_a09c1b44286f828e0927274cdd8f272f2"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml#a09c1b44286f828e0927274cdd8f272f2">fabomatic::ServerMQTT::Query::payload</a></div><div class="ttdeci">virtual auto payload() const -&gt; const std::string=0</div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_query_xhtml_a3a9b87239a67e97e13baa28657f31a06"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml#a3a9b87239a67e97e13baa28657f31a06">fabomatic::ServerMQTT::Query::waitForReply</a></div><div class="ttdeci">virtual auto waitForReply() const -&gt; bool=0</div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query.xhtml">fabomatic::ServerMQTT::RegisterMaintenanceQuery</a></div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00103">MQTTtypes.hpp:104</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query_xhtml_a285742e24a864640996792768184e1ab"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query.xhtml#a285742e24a864640996792768184e1ab">fabomatic::ServerMQTT::RegisterMaintenanceQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00113">MQTTtypes.hpp:113</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query_xhtml_a59171de615b71f363534560049d1da13"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query.xhtml#a59171de615b71f363534560049d1da13">fabomatic::ServerMQTT::RegisterMaintenanceQuery::uid</a></div><div class="ttdeci">const card::uid_t uid</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00106">MQTTtypes.hpp:106</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query_xhtml_a8f17bd2542b0d1eaa348e3c10c814d10"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query.xhtml#a8f17bd2542b0d1eaa348e3c10c814d10">fabomatic::ServerMQTT::RegisterMaintenanceQuery::RegisterMaintenanceQuery</a></div><div class="ttdeci">RegisterMaintenanceQuery()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query_xhtml_ab77b754a2579adce16d047c2ddb9bbdd"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_register_maintenance_query.xhtml#ab77b754a2579adce16d047c2ddb9bbdd">fabomatic::ServerMQTT::RegisterMaintenanceQuery::RegisterMaintenanceQuery</a></div><div class="ttdeci">constexpr RegisterMaintenanceQuery(card::uid_t card_uid)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00109">MQTTtypes.hpp:109</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_response_xhtml"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_response.xhtml">fabomatic::ServerMQTT::Response</a></div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00116">MQTTtypes.hpp:117</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_response_xhtml_a24380c5811e3afb07516df8a64cab852"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_response.xhtml#a24380c5811e3afb07516df8a64cab852">fabomatic::ServerMQTT::Response::Response</a></div><div class="ttdeci">constexpr Response(bool result)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00122">MQTTtypes.hpp:122</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_response_xhtml_a49b0fc3349b5b82e34745b9d5d40c9a9"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_response.xhtml#a49b0fc3349b5b82e34745b9d5d40c9a9">fabomatic::ServerMQTT::Response::Response</a></div><div class="ttdeci">Response()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_simple_response_xhtml"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml">fabomatic::ServerMQTT::SimpleResponse</a></div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00169">MQTTtypes.hpp:170</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_simple_response_xhtml_a01a00cb29bd35631dbb4c4ae12044b00"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml#a01a00cb29bd35631dbb4c4ae12044b00">fabomatic::ServerMQTT::SimpleResponse::SimpleResponse</a></div><div class="ttdeci">SimpleResponse()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_simple_response_xhtml_a597ba25bac239a167a7f61e58020a6cc"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_simple_response.xhtml#a597ba25bac239a167a7f61e58020a6cc">fabomatic::ServerMQTT::SimpleResponse::SimpleResponse</a></div><div class="ttdeci">constexpr SimpleResponse(bool rok)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00173">MQTTtypes.hpp:173</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_start_use_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_start_use_query.xhtml">fabomatic::ServerMQTT::StartUseQuery</a></div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00054">MQTTtypes.hpp:55</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_start_use_query_xhtml_a06388a66bfc1f949987be75a176e0067"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_start_use_query.xhtml#a06388a66bfc1f949987be75a176e0067">fabomatic::ServerMQTT::StartUseQuery::StartUseQuery</a></div><div class="ttdeci">constexpr StartUseQuery(card::uid_t card_uid)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00060">MQTTtypes.hpp:60</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_start_use_query_xhtml_a12f596a89d00ca026f26fc51fa20f428"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_start_use_query.xhtml#a12f596a89d00ca026f26fc51fa20f428">fabomatic::ServerMQTT::StartUseQuery::uid</a></div><div class="ttdeci">const card::uid_t uid</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00057">MQTTtypes.hpp:57</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_start_use_query_xhtml_a3e5c9363d7c53cebb546c13c622f3ccb"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_start_use_query.xhtml#a3e5c9363d7c53cebb546c13c622f3ccb">fabomatic::ServerMQTT::StartUseQuery::StartUseQuery</a></div><div class="ttdeci">StartUseQuery()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_start_use_query_xhtml_ae3a0df7edcc823c07fa8513125779d4c"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_start_use_query.xhtml#ae3a0df7edcc823c07fa8513125779d4c">fabomatic::ServerMQTT::StartUseQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00064">MQTTtypes.hpp:64</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml">fabomatic::ServerMQTT::StopUseQuery</a></div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00067">MQTTtypes.hpp:68</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query_xhtml_a0bb7934a8c5a44b64bcdad8cb68cc39a"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml#a0bb7934a8c5a44b64bcdad8cb68cc39a">fabomatic::ServerMQTT::StopUseQuery::StopUseQuery</a></div><div class="ttdeci">constexpr StopUseQuery(card::uid_t card_uid, std::chrono::seconds duration)</div><div class="ttdoc">Request to register machine usage stop.</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00079">MQTTtypes.hpp:79</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query_xhtml_a4ecd0fa7b31df972168334bdcb5db2b7"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml#a4ecd0fa7b31df972168334bdcb5db2b7">fabomatic::ServerMQTT::StopUseQuery::buffered</a></div><div class="ttdeci">auto buffered() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00082">MQTTtypes.hpp:82</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query_xhtml_a76bfb591acccc333b1636dc431854f23"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml#a76bfb591acccc333b1636dc431854f23">fabomatic::ServerMQTT::StopUseQuery::uid</a></div><div class="ttdeci">const card::uid_t uid</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00070">MQTTtypes.hpp:70</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query_xhtml_a8a6fd6be04bf9a2cfca116926508516b"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml#a8a6fd6be04bf9a2cfca116926508516b">fabomatic::ServerMQTT::StopUseQuery::duration_s</a></div><div class="ttdeci">const std::chrono::seconds duration_s</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00071">MQTTtypes.hpp:71</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query_xhtml_af1dda31a97f8e492aba7d44db5764867"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_stop_use_query.xhtml#af1dda31a97f8e492aba7d44db5764867">fabomatic::ServerMQTT::StopUseQuery::StopUseQuery</a></div><div class="ttdeci">StopUseQuery()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_user_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_user_query.xhtml">fabomatic::ServerMQTT::UserQuery</a></div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00023">MQTTtypes.hpp:24</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_user_query_xhtml_a428e38ba676c83886902594b5271ca0a"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_user_query.xhtml#a428e38ba676c83886902594b5271ca0a">fabomatic::ServerMQTT::UserQuery::uid</a></div><div class="ttdeci">const card::uid_t uid</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00026">MQTTtypes.hpp:26</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_user_query_xhtml_a5b9875c6adb6c0c54a61619667cc88fe"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_user_query.xhtml#a5b9875c6adb6c0c54a61619667cc88fe">fabomatic::ServerMQTT::UserQuery::UserQuery</a></div><div class="ttdeci">UserQuery()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_user_query_xhtml_aa78ea2a397ef55b4248360145340f027"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_user_query.xhtml#aa78ea2a397ef55b4248360145340f027">fabomatic::ServerMQTT::UserQuery::waitForReply</a></div><div class="ttdeci">auto waitForReply() const -&gt; bool override</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00031">MQTTtypes.hpp:31</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_user_query_xhtml_ac582525be5da0f720ba098bea361d3a2"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_user_query.xhtml#ac582525be5da0f720ba098bea361d3a2">fabomatic::ServerMQTT::UserQuery::UserQuery</a></div><div class="ttdeci">constexpr UserQuery(card::uid_t card_uid)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00029">MQTTtypes.hpp:29</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_user_response_xhtml"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_user_response.xhtml">fabomatic::ServerMQTT::UserResponse</a></div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00133">MQTTtypes.hpp:134</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_user_response_xhtml_a04a4d3d7f264ca35042c816b3fcbdf85"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_user_response.xhtml#a04a4d3d7f264ca35042c816b3fcbdf85">fabomatic::ServerMQTT::UserResponse::UserResponse</a></div><div class="ttdeci">UserResponse(bool rok)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00141">MQTTtypes.hpp:141</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_user_response_xhtml_a36e521313985559807dddac979b69a60"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_user_response.xhtml#a36e521313985559807dddac979b69a60">fabomatic::ServerMQTT::UserResponse::UserResponse</a></div><div class="ttdeci">UserResponse()=delete</div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_user_response_xhtml_aa8d4e47f79eb054c6b36f244bfecff81"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_user_response.xhtml#aa8d4e47f79eb054c6b36f244bfecff81">fabomatic::ServerMQTT::UserResponse::UserResponse</a></div><div class="ttdeci">UserResponse(bool rok, UserResult res)</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00143">MQTTtypes.hpp:143</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_server_m_q_t_t_xhtml"><div class="ttname"><a href="namespacefabomatic_1_1_server_m_q_t_t.xhtml">fabomatic::ServerMQTT</a></div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8cpp_source.xhtml#l00018">MQTTtypes.cpp:19</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_server_m_q_t_t_xhtml_a84cb68ff1e79f3f6d5e3cd37a3289d9d"><div class="ttname"><a href="namespacefabomatic_1_1_server_m_q_t_t.xhtml#a84cb68ff1e79f3f6d5e3cd37a3289d9d">fabomatic::ServerMQTT::UserResult</a></div><div class="ttdeci">UserResult</div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00125">MQTTtypes.hpp:126</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_server_m_q_t_t_xhtml_a84cb68ff1e79f3f6d5e3cd37a3289d9da327b2287e60d9d8641582ba72db12984"><div class="ttname"><a href="namespacefabomatic_1_1_server_m_q_t_t.xhtml#a84cb68ff1e79f3f6d5e3cd37a3289d9da327b2287e60d9d8641582ba72db12984">fabomatic::ServerMQTT::UserResult::MaintenanceUnauthorized</a></div><div class="ttdeci">@ MaintenanceUnauthorized</div></div>
<div class="ttc" id="anamespacefabomatic_1_1_server_m_q_t_t_xhtml_a84cb68ff1e79f3f6d5e3cd37a3289d9da4bbb8f967da6d1a610596d7257179c2b"><div class="ttname"><a href="namespacefabomatic_1_1_server_m_q_t_t.xhtml#a84cb68ff1e79f3f6d5e3cd37a3289d9da4bbb8f967da6d1a610596d7257179c2b">fabomatic::ServerMQTT::UserResult::Invalid</a></div><div class="ttdeci">@ Invalid</div></div>
<div class="ttc" id="anamespacefabomatic_1_1_server_m_q_t_t_xhtml_a84cb68ff1e79f3f6d5e3cd37a3289d9daa206428462686af481cb072b8db11784"><div class="ttname"><a href="namespacefabomatic_1_1_server_m_q_t_t.xhtml#a84cb68ff1e79f3f6d5e3cd37a3289d9daa206428462686af481cb072b8db11784">fabomatic::ServerMQTT::UserResult::Authorized</a></div><div class="ttdeci">@ Authorized</div></div>
<div class="ttc" id="anamespacefabomatic_1_1_server_m_q_t_t_xhtml_a84cb68ff1e79f3f6d5e3cd37a3289d9dae06d1ba70f1331e9f9a113cc2f887d3f"><div class="ttname"><a href="namespacefabomatic_1_1_server_m_q_t_t.xhtml#a84cb68ff1e79f3f6d5e3cd37a3289d9dae06d1ba70f1331e9f9a113cc2f887d3f">fabomatic::ServerMQTT::UserResult::Unauthorized</a></div><div class="ttdeci">@ Unauthorized</div></div>
<div class="ttc" id="anamespacefabomatic_1_1card_xhtml_aa36a4f716561b5c72d144ad55bc3e53b"><div class="ttname"><a href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">fabomatic::card::uid_t</a></div><div class="ttdeci">u_int64_t uid_t</div><div class="ttdef"><b>Definition</b> <a href="card_8hpp_source.xhtml#l00014">card.hpp:14</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_fab_user_xhtml_a75deeb54124600e0387550735c7a0ca0"><div class="ttname"><a href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0">fabomatic::FabUser::UserLevel</a></div><div class="ttdeci">UserLevel</div><div class="ttdef"><b>Definition</b> <a href="_fab_user_8hpp_source.xhtml#l00016">FabUser.hpp:17</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jun 30 2024 19:56:55 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
