<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: test_savedconfig.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(0); });
/* @license-end */
</script>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_13e138d54eb8818da29c3992edef070a.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_6e948c0ad032dc45dbde47e830bb523f.xhtml">test_savedconfig</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">test_savedconfig.cpp</div></div>
</div><!--header-->
<div class="contents">
<a href="test__savedconfig_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#include &lt;chrono&gt;</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;functional&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;Arduino.h&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;unity.h&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &quot;<a class="code" href="_saved_config_8hpp.xhtml">SavedConfig.hpp</a>&quot;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &lt;<a class="code" href="_auth_provider_8hpp.xhtml">AuthProvider.hpp</a>&gt;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &lt;<a class="code" href="_fab_backend_8hpp.xhtml">FabBackend.hpp</a>&gt;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="preprocessor">#include &quot;<a class="code" href="_board_logic_8hpp.xhtml">BoardLogic.hpp</a>&quot;</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="preprocessor">#include &quot;<a class="code" href="_buffered_msg_8hpp.xhtml">BufferedMsg.hpp</a>&quot;</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="keyword">using namespace </span>std::chrono_literals;</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno"><a class="line" href="test__savedconfig_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">   16</a></span>[[maybe_unused]] <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code hl_variable" href="test__savedconfig_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">TAG3</a> = <span class="stringliteral">&quot;test_logic&quot;</span>;</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span> </div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefabomatic_1_1tests.xhtml">fabomatic::tests</a></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>{</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a159f700a4f413190a0fd5eaa878b2cdd">   20</a></span>  <a class="code hl_class" href="classfabomatic_1_1_saved_config.xhtml">SavedConfig</a> <a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a159f700a4f413190a0fd5eaa878b2cdd">original</a>;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span> </div>
<div class="foldopen" id="foldopen00022" data-start="{" data-end="}">
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a6af06470faa8c9455927dad653cba48a">   22</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a6af06470faa8c9455927dad653cba48a">test_defaults</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  {</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>    <a class="code hl_class" href="classfabomatic_1_1_saved_config.xhtml">SavedConfig</a> config;</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>    <span class="keyword">auto</span> defaults = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">SavedConfig::DefaultConfig</a>();</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a07246e58a5381b0edc2147965a0a8f99">SavedConfig::MAGIC_NUMBER</a> == defaults.magic_number, <span class="stringliteral">&quot;Default config magic number mismatch&quot;</span>);</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span> </div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>    TEST_ASSERT_TRUE_MESSAGE(defaults.SaveToEEPROM(), <span class="stringliteral">&quot;Default config save failed&quot;</span>);</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span> </div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>    <span class="keyword">auto</span> result = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">SavedConfig::LoadFromEEPROM</a>();</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>    TEST_ASSERT_TRUE_MESSAGE(result.has_value(), <span class="stringliteral">&quot;Loaded config is empty&quot;</span>);</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>    <span class="keyword">auto</span> loaded = result.value();</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>    TEST_ASSERT_TRUE_MESSAGE(defaults.ssid == loaded.ssid, <span class="stringliteral">&quot;Loaded config ssid mismatch&quot;</span>);</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    TEST_ASSERT_TRUE_MESSAGE(defaults.password == loaded.password, <span class="stringliteral">&quot;Loaded config password mismatch&quot;</span>);</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    TEST_ASSERT_TRUE_MESSAGE(defaults.mqtt_server == loaded.mqtt_server, <span class="stringliteral">&quot;Loaded config mqtt_server mismatch&quot;</span>);</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>    TEST_ASSERT_TRUE_MESSAGE(defaults.mqtt_user == loaded.mqtt_user, <span class="stringliteral">&quot;Loaded config mqtt_user mismatch&quot;</span>);</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>    TEST_ASSERT_TRUE_MESSAGE(defaults.mqtt_password == loaded.mqtt_password, <span class="stringliteral">&quot;Loaded config mqtt_password mismatch&quot;</span>);</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>    TEST_ASSERT_TRUE_MESSAGE(defaults.mqtt_switch_topic == loaded.mqtt_switch_topic, <span class="stringliteral">&quot;Loaded config mqtt_switch_topic mismatch&quot;</span>);</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>    TEST_ASSERT_TRUE_MESSAGE(defaults.machine_id == loaded.machine_id, <span class="stringliteral">&quot;Loaded config machine_id mismatch&quot;</span>);</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a07246e58a5381b0edc2147965a0a8f99">SavedConfig::MAGIC_NUMBER</a> == loaded.magic_number, <span class="stringliteral">&quot;Loaded config magic number mismatch&quot;</span>);</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    <span class="comment">// Test set and get methods</span></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>    <span class="keyword">auto</span> <span class="keywordtype">id</span> = <a class="code hl_struct" href="struct_machine_i_d.xhtml">MachineID</a>(123);</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    loaded.setMachineID(<span class="keywordtype">id</span>);</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>    TEST_ASSERT_TRUE_MESSAGE(<span class="keywordtype">id</span> == loaded.getMachineID(), <span class="stringliteral">&quot;Loaded config machine_id mismatch&quot;</span>);</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  }</div>
</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="foldopen" id="foldopen00048" data-start="{" data-end="}">
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a0bbb6cee5561bf8ac1c4a9117d9d01b8">   48</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a0bbb6cee5561bf8ac1c4a9117d9d01b8">test_changes</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  {</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>    <span class="keyword">auto</span> result1 = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">SavedConfig::LoadFromEEPROM</a>();</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>    TEST_ASSERT_TRUE_MESSAGE(result1.has_value(), <span class="stringliteral">&quot;Loaded config is empty&quot;</span>);</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>    <span class="keyword">auto</span> result2 = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">SavedConfig::LoadFromEEPROM</a>();</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>    TEST_ASSERT_TRUE_MESSAGE(result2.has_value(), <span class="stringliteral">&quot;Loaded config is empty&quot;</span>);</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>    <span class="keyword">auto</span> &amp;<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a159f700a4f413190a0fd5eaa878b2cdd">original</a> = result1.value();</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>    <span class="keyword">auto</span> &amp;loaded = result2.value();</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>    loaded.<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#abccca47e85f3214c2ce780230bfe7f49">ssid</a> = <span class="stringliteral">&quot;a&quot;</span>;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>    loaded.password = <span class="stringliteral">&quot;b&quot;</span>;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>    loaded.mqtt_server = <span class="stringliteral">&quot;c&quot;</span>;</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>    loaded.mqtt_user = <span class="stringliteral">&quot;d&quot;</span>;</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>    loaded.mqtt_password = <span class="stringliteral">&quot;e&quot;</span>;</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>    loaded.mqtt_switch_topic = <span class="stringliteral">&quot;f&quot;</span>;</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>    loaded.machine_id = <span class="stringliteral">&quot;9&quot;</span>;</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>    <span class="comment">// Save changes</span></div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>    TEST_ASSERT_TRUE_MESSAGE(loaded.SaveToEEPROM(), <span class="stringliteral">&quot;Loaded config save failed&quot;</span>);</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>    result2 = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">SavedConfig::LoadFromEEPROM</a>();</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>    TEST_ASSERT_TRUE_MESSAGE(result2.has_value(), <span class="stringliteral">&quot;Loaded config is empty&quot;</span>);</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>    <span class="keyword">auto</span> &amp;saved = result2.value();</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    TEST_ASSERT_TRUE_MESSAGE(loaded.ssid == saved.ssid, <span class="stringliteral">&quot;Loaded config ssid mismatch&quot;</span>);</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>    TEST_ASSERT_TRUE_MESSAGE(loaded.password == saved.password, <span class="stringliteral">&quot;Loaded config password mismatch&quot;</span>);</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>    TEST_ASSERT_TRUE_MESSAGE(loaded.mqtt_server == saved.mqtt_server, <span class="stringliteral">&quot;Loaded config mqtt_server mismatch&quot;</span>);</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>    TEST_ASSERT_TRUE_MESSAGE(loaded.mqtt_user == saved.mqtt_user, <span class="stringliteral">&quot;Loaded config mqtt_user mismatch&quot;</span>);</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    TEST_ASSERT_TRUE_MESSAGE(loaded.mqtt_password == saved.mqtt_password, <span class="stringliteral">&quot;Loaded config mqtt_password mismatch&quot;</span>);</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    TEST_ASSERT_TRUE_MESSAGE(loaded.mqtt_switch_topic == saved.mqtt_switch_topic, <span class="stringliteral">&quot;Loaded config mqtt_switch_topic mismatch&quot;</span>);</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>    TEST_ASSERT_TRUE_MESSAGE(loaded.machine_id == saved.machine_id, <span class="stringliteral">&quot;Loaded config machine_id mismatch&quot;</span>);</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>    TEST_ASSERT_TRUE_MESSAGE(loaded.disablePortal == saved.disablePortal, <span class="stringliteral">&quot;Loaded config disablePortal mismatch&quot;</span>);</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a07246e58a5381b0edc2147965a0a8f99">SavedConfig::MAGIC_NUMBER</a> == saved.magic_number, <span class="stringliteral">&quot;Loaded config magic number mismatch&quot;</span>);</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span> </div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>    <span class="comment">// Check that changes have been saved</span></div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a159f700a4f413190a0fd5eaa878b2cdd">original</a>.<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#abccca47e85f3214c2ce780230bfe7f49">ssid</a> != saved.ssid, <span class="stringliteral">&quot;Loaded config ssid mismatch&quot;</span>);</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a159f700a4f413190a0fd5eaa878b2cdd">original</a>.<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a8f7b5fba524d14a66ed1eaeda08a7e0d">password</a> != saved.password, <span class="stringliteral">&quot;Loaded config password mismatch&quot;</span>);</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a159f700a4f413190a0fd5eaa878b2cdd">original</a>.<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a8de320beb3e706c35582c049d3681c42">mqtt_server</a> != saved.mqtt_server, <span class="stringliteral">&quot;Loaded config mqtt_server mismatch&quot;</span>);</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a159f700a4f413190a0fd5eaa878b2cdd">original</a>.<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a8cc620b09cef7aceaf7ec87e72dfcdc0">mqtt_user</a> != saved.mqtt_user, <span class="stringliteral">&quot;Loaded config mqtt_user mismatch&quot;</span>);</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a159f700a4f413190a0fd5eaa878b2cdd">original</a>.<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a68004c1190623a027b2a1f41607cd33f">mqtt_password</a> != saved.mqtt_password, <span class="stringliteral">&quot;Loaded config mqtt_password mismatch&quot;</span>);</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a159f700a4f413190a0fd5eaa878b2cdd">original</a>.<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a1c147278506b9cd2856798a7988d78ff">mqtt_switch_topic</a> != saved.mqtt_switch_topic, <span class="stringliteral">&quot;Loaded config mqtt_switch_topic mismatch&quot;</span>);</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a159f700a4f413190a0fd5eaa878b2cdd">original</a>.<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#aa2312c6cebb6b73f66e9f8238cb1b17f">machine_id</a> != saved.machine_id, <span class="stringliteral">&quot;Loaded config machine_id mismatch&quot;</span>);</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span> </div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    <span class="comment">// Restore original</span></div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_variable" href="namespacefabomatic_1_1tests.xhtml#a159f700a4f413190a0fd5eaa878b2cdd">original</a>.<a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a312c74363068192ae80df24140f82874">SaveToEEPROM</a>(), <span class="stringliteral">&quot;Loaded config save failed&quot;</span>);</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  }</div>
</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="foldopen" id="foldopen00094" data-start="{" data-end="}">
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#aeb3e51f6d2841cd2869df4c0629f694d">   94</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#aeb3e51f6d2841cd2869df4c0629f694d">test_rfid_cache</a>()</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  {</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>    <span class="keyword">auto</span> defaults = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">SavedConfig::DefaultConfig</a>();</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>    defaults.SaveToEEPROM();</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    TEST_ASSERT_TRUE_MESSAGE(defaults.cachedRfid.size() == <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1rfid__tags.xhtml#a786cf57e36da88ed2d6c153e3b6fdc30">conf::rfid_tags::CACHE_LEN</a>, <span class="stringliteral">&quot;Default config cachedRfid size mismatch&quot;</span>);</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>    <span class="comment">// Test that default config has empty cache</span></div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; defaults.cachedRfid.size(); i++)</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>    {</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tag = defaults.cachedRfid[i];</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>      TEST_ASSERT_TRUE_MESSAGE(tag.uid == 0, <span class="stringliteral">&quot;Default config cachedRfid not empty&quot;</span>);</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>      TEST_ASSERT_TRUE_MESSAGE(tag.level == <a class="code hl_enumvalue" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">FabUser::UserLevel::Unknown</a>, <span class="stringliteral">&quot;Default config cachedRfid not empty&quot;</span>);</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>    }</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>    <a class="code hl_class" href="classfabomatic_1_1_auth_provider.xhtml">AuthProvider</a> authProvider(secrets::cards::whitelist);</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>    TEST_ASSERT_TRUE_MESSAGE(authProvider.<a class="code hl_function" href="classfabomatic_1_1_auth_provider.xhtml#acb92a9381bc8e14bd57b819fc9162750">saveCache</a>(), <span class="stringliteral">&quot;AuthProvider saveCache failed&quot;</span>);</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span> </div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>    defaults = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">SavedConfig::LoadFromEEPROM</a>().value_or(<a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">SavedConfig::DefaultConfig</a>());</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>    <span class="comment">// Test that default config is still empty</span></div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; defaults.cachedRfid.size(); i++)</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>    {</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tag = defaults.cachedRfid[i];</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>      TEST_ASSERT_TRUE_MESSAGE(tag.uid == 0, <span class="stringliteral">&quot;Default config cachedRfid not empty after AuthProvider saveCache&quot;</span>);</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>      TEST_ASSERT_TRUE_MESSAGE(tag.level == <a class="code hl_enumvalue" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">FabUser::UserLevel::Unknown</a>, <span class="stringliteral">&quot;Default config cachedRfid not empty after AuthProvider saveCache&quot;</span>);</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>    }</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>    <a class="code hl_class" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> server;</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>    defaults.mqtt_server = <span class="stringliteral">&quot;INVALID_SERVER&quot;</span>; <span class="comment">// Must be invalid to test the cache</span></div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>    server.<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#acf5644d920896038018f990568e710c3">configure</a>(defaults);</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>    <span class="keyword">auto</span> [wl_uid, wl_level, name] = secrets::cards::whitelist[0];</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>    <span class="keyword">auto</span> result = authProvider.<a class="code hl_function" href="classfabomatic_1_1_auth_provider.xhtml#aeae9923535dcf6cfa9eaf9e5f90e5e64">tryLogin</a>(wl_uid, server);</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>    TEST_ASSERT_TRUE_MESSAGE(result.has_value(), <span class="stringliteral">&quot;AuthProvider tryLogin failed&quot;</span>);</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>    <span class="comment">// Now save the positive result (should not be do anything, because offline)</span></div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>    TEST_ASSERT_TRUE_MESSAGE(authProvider.<a class="code hl_function" href="classfabomatic_1_1_auth_provider.xhtml#acb92a9381bc8e14bd57b819fc9162750">saveCache</a>(), <span class="stringliteral">&quot;AuthProvider saveCache 2 failed&quot;</span>);</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>    <span class="comment">// Reload the cache</span></div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>    defaults = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">SavedConfig::LoadFromEEPROM</a>().value_or(<a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">SavedConfig::DefaultConfig</a>());</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>    TEST_ASSERT_TRUE_MESSAGE(0 == defaults.cachedRfid[0].uid, <span class="stringliteral">&quot;AuthProvider tryLogin card_uid mismatch&quot;</span>);</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_enumvalue" href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">FabUser::UserLevel::Unknown</a> == defaults.cachedRfid[0].level, <span class="stringliteral">&quot;AuthProvider tryLogin user_level mismatch&quot;</span>);</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span> </div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>    <span class="comment">// Generate many events</span></div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; 50; i++)</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>    {</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>      <span class="keyword">auto</span> rnd = random(0, <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1rfid__tags.xhtml#a786cf57e36da88ed2d6c153e3b6fdc30">conf::rfid_tags::CACHE_LEN</a>);</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>      <span class="keyword">auto</span> result = authProvider.<a class="code hl_function" href="classfabomatic_1_1_auth_provider.xhtml#aeae9923535dcf6cfa9eaf9e5f90e5e64">tryLogin</a>(defaults.cachedRfid[rnd].uid, server);</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>    }</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>    TEST_ASSERT_TRUE_MESSAGE(authProvider.<a class="code hl_function" href="classfabomatic_1_1_auth_provider.xhtml#acb92a9381bc8e14bd57b819fc9162750">saveCache</a>(), <span class="stringliteral">&quot;AuthProvider saveCache 2 failed&quot;</span>);</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>    defaults = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">SavedConfig::LoadFromEEPROM</a>().value_or(<a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">SavedConfig::DefaultConfig</a>());</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span> </div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>    <span class="comment">// Online scenario with cache is testing in MQTT testcase with the broker.</span></div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>  }</div>
</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="foldopen" id="foldopen00152" data-start="{" data-end="}">
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a77b8df849708615c63f34444d640d001">  152</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a77b8df849708615c63f34444d640d001">test_magic_number</a>()</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  {</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>    <span class="keyword">auto</span> result1 = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">SavedConfig::LoadFromEEPROM</a>();</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>    TEST_ASSERT_TRUE_MESSAGE(result1.has_value(), <span class="stringliteral">&quot;Loaded config is empty&quot;</span>);</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>    <span class="keyword">auto</span> loaded = result1.value();</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>    <span class="keyword">auto</span> original_magic = loaded.magic_number;</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>    loaded.magic_number++;</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>    TEST_ASSERT_TRUE_MESSAGE(loaded.SaveToEEPROM(), <span class="stringliteral">&quot;Loaded config save failed&quot;</span>);</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>    TEST_ASSERT_EQUAL_MESSAGE(original_magic, loaded.magic_number, <span class="stringliteral">&quot;Magic number overwritten by application&quot;</span>);</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span> </div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>    <span class="comment">// Force abnormal case after FW update</span></div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>    TEST_ASSERT_TRUE(EEPROM.begin(<span class="keyword">sizeof</span>(<a class="code hl_class" href="classfabomatic_1_1_saved_config.xhtml">SavedConfig</a>)));</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>    loaded.magic_number = <a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a07246e58a5381b0edc2147965a0a8f99">SavedConfig::MAGIC_NUMBER</a> - 1;</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>    EEPROM.put(0, &amp;loaded);</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>    TEST_ASSERT_TRUE(EEPROM.commit());</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span> </div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>    <span class="comment">// Now check the loaded version is null due to version mismatch</span></div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>    <span class="keyword">auto</span> result2 = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">SavedConfig::LoadFromEEPROM</a>();</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>    TEST_ASSERT_FALSE_MESSAGE(result2.has_value(), <span class="stringliteral">&quot;Loaded config is not empty&quot;</span>);</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>  }</div>
</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span> </div>
<div class="foldopen" id="foldopen00173" data-start="{" data-end="}">
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a70d156a8423b7e9d4db345cff5eb528f">  173</a></span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a70d156a8423b7e9d4db345cff5eb528f">test_deserialization</a>(<a class="code hl_class" href="classfabomatic_1_1_buffer.xhtml">Buffer</a> &amp;buff)</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>  {</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>    JsonDocument json_doc;</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>    buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a72f029c82552ccea45eaf611f345c079">toJson</a>(json_doc, <span class="stringliteral">&quot;message_buffer&quot;</span>);</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>    std::string json_text;</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>    <span class="keyword">auto</span> chars = serializeJson(json_doc, json_text);</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>    TEST_ASSERT_GREATER_THAN_MESSAGE(0, chars, <span class="stringliteral">&quot;Non empty JSON text&quot;</span>);</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span> </div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;test_deserialization: json_text:%s&quot;</span>, json_text.c_str());</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span> </div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>    <span class="keyword">auto</span> result = <a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#ad6d946c6ad24dd1a0ab695bb8874b554">Buffer::fromJsonElement</a>(json_doc[<span class="stringliteral">&quot;message_buffer&quot;</span>]);</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>    TEST_ASSERT_TRUE_MESSAGE(result.has_value(), <span class="stringliteral">&quot;Deserialization succeeds&quot;</span>);</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span> </div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>    <span class="keyword">auto</span> &amp;new_buff = result.value();</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span> </div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>    TEST_ASSERT_EQUAL_MESSAGE(buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">count</a>(), new_buff.count(), <span class="stringliteral">&quot;Messages are lost in json&quot;</span>);</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span> </div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>    <span class="keywordflow">while</span> (new_buff.count() &gt; 0)</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>    {</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;msg_new = new_buff.getMessage();</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;msg_old = buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a6301e1ea47622d36474ee031a17b9bb4">getMessage</a>();</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>      TEST_ASSERT_EQUAL_STRING_MESSAGE(msg_new.mqtt_message.c_str(), msg_old.mqtt_message.c_str(), <span class="stringliteral">&quot;Messages are in different order or damaged&quot;</span>);</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>      TEST_ASSERT_EQUAL_STRING_MESSAGE(msg_new.mqtt_topic.c_str(), msg_old.mqtt_topic.c_str(), <span class="stringliteral">&quot;Topics are in different order or damaged&quot;</span>);</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>      TEST_ASSERT_EQUAL_MESSAGE(msg_new.wait_for_answer, msg_old.wait_for_answer, <span class="stringliteral">&quot;Wait flags are in different order or damaged&quot;</span>);</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>    }</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>  }</div>
</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span> </div>
<div class="foldopen" id="foldopen00201" data-start="{" data-end="}">
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno"><a class="line" href="namespacefabomatic_1_1tests.xhtml#a4fbc6366f69847719d0f0cb626572493">  201</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a4fbc6366f69847719d0f0cb626572493">test_buffered_msg</a>()</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>  {</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>    <span class="keyword">constexpr</span> <span class="keyword">auto</span> NUM_MESSAGES = std::min(30, <a class="code hl_variable" href="classfabomatic_1_1_buffer.xhtml#a8cf1432737201bf30ae3008af6e44228">Buffer::MAX_MESSAGES</a> - 3);</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span> </div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>    <a class="code hl_class" href="classfabomatic_1_1_buffer.xhtml">Buffer</a> buff;</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>    <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a> msg1{<span class="stringliteral">&quot;msg1&quot;</span>, <span class="stringliteral">&quot;topic1&quot;</span>, <span class="keyword">false</span>};</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>    <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a> msg2{<span class="stringliteral">&quot;msg2&quot;</span>, <span class="stringliteral">&quot;topic1&quot;</span>, <span class="keyword">false</span>};</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>    <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a> msg3{<span class="stringliteral">&quot;msg3&quot;</span>, <span class="stringliteral">&quot;topic2&quot;</span>, <span class="keyword">false</span>};</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>    std::vector messages{msg3, msg2, msg1};</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span> </div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>    TEST_ASSERT_TRUE(msg1.mqtt_message == <span class="stringliteral">&quot;msg1&quot;</span>);</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>    TEST_ASSERT_TRUE(msg1.mqtt_topic == <span class="stringliteral">&quot;topic1&quot;</span>);</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>    TEST_ASSERT_TRUE(msg2.mqtt_message == <span class="stringliteral">&quot;msg2&quot;</span>);</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>    TEST_ASSERT_TRUE(msg2.mqtt_topic == <span class="stringliteral">&quot;topic1&quot;</span>);</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>    TEST_ASSERT_TRUE(msg3.mqtt_message == <span class="stringliteral">&quot;msg3&quot;</span>);</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>    TEST_ASSERT_TRUE(msg3.mqtt_topic == <span class="stringliteral">&quot;topic2&quot;</span>);</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span> </div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>    <span class="comment">// Create some more messages</span></div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> msg_num = 0; msg_num &lt; NUM_MESSAGES; msg_num++)</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>    {</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>      std::string message{<span class="stringliteral">&quot;{action=\&quot;test\&quot;, value=\&quot;&quot;</span>};</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>      message.append(std::to_string(msg_num));</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>      message.append(<span class="stringliteral">&quot;\&quot;, test: true}&quot;</span>);</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>      std::string topic{<span class="stringliteral">&quot;machine/TESTTOPIC/&quot;</span>};</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span> </div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>      topic.append(std::to_string(msg_num));</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>      messages.push_back({message, topic, <span class="keyword">true</span>});</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>    }</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span> </div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>    TEST_ASSERT_TRUE_MESSAGE(buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#ae55d0197a2b50d55d1d762569b9c56da">hasChanged</a>(), <span class="stringliteral">&quot;Buffer has pending changes&quot;</span>);</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>    <span class="comment">// Nothing to test</span></div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>    <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (!<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1debug.xhtml#a5facfa139bf1642294264da0584f4691">conf::debug::ENABLE_BUFFERING</a>)</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>      <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span> </div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>    <span class="comment">// Test insertion, messages must be queued newest first (msg3-msg2-msg1)</span></div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>    <span class="keyword">auto</span> msg_count = 0;</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;msg : messages)</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>    {</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>      TEST_ASSERT_EQUAL_MESSAGE(msg_count, buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">count</a>(), <span class="stringliteral">&quot;Push_back: Buffer count is correct&quot;</span>);</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;bmsg = <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a>{msg.<a class="code hl_variable" href="structfabomatic_1_1_buffered_msg.xhtml#aba3d5f037ab046e241225bcc3afc2cc3">mqtt_message</a>, msg.mqtt_topic, msg.wait_for_answer};</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>      buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a06b997e6e4f83f208250b739f9e2a2db">push_front</a>(bmsg);</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>      msg_count++;</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>    }</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span> </div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>    TEST_ASSERT_EQUAL_MESSAGE(messages.size(), buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">count</a>(), <span class="stringliteral">&quot;Buffer contains all expected messages&quot;</span>);</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span> </div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>    TEST_ASSERT_TRUE_MESSAGE(buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#ae55d0197a2b50d55d1d762569b9c56da">hasChanged</a>(), <span class="stringliteral">&quot;Buffer has pending changes&quot;</span>);</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>    buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a0925c3a370f243ae3455108189e1afc6">setChanged</a>(<span class="keyword">false</span>);</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span> </div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>    <span class="comment">// Test retrieval oldest first (msg1-msg2-msg3-...)</span></div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> elem = messages.rbegin(); elem != messages.rend(); ++elem)</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>    {</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>      <span class="keyword">auto</span> &amp;msg = buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a6301e1ea47622d36474ee031a17b9bb4">getMessage</a>();</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>      TEST_ASSERT_EQUAL_STRING_MESSAGE(elem-&gt;mqtt_message.c_str(), msg.mqtt_message.c_str(), <span class="stringliteral">&quot;(1) Retrieval oldest first message is correct&quot;</span>);</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>      TEST_ASSERT_EQUAL_STRING_MESSAGE(elem-&gt;mqtt_topic.c_str(), msg.mqtt_topic.c_str(), <span class="stringliteral">&quot;(1) Retrieval oldest first topic is correct&quot;</span>);</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>      TEST_ASSERT_EQUAL_MESSAGE(elem-&gt;wait_for_answer, msg.wait_for_answer, <span class="stringliteral">&quot;(1) Retrieval oldest first wait_for_answer is correct&quot;</span>);</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>    }</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span> </div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>    TEST_ASSERT_EQUAL_MESSAGE(0, buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">count</a>(), <span class="stringliteral">&quot;Buffer is now empty&quot;</span>);</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>    TEST_ASSERT_TRUE_MESSAGE(buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#ae55d0197a2b50d55d1d762569b9c56da">hasChanged</a>(), <span class="stringliteral">&quot;Buffer has pending changes&quot;</span>);</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>    buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a0925c3a370f243ae3455108189e1afc6">setChanged</a>(<span class="keyword">false</span>);</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span> </div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>    <span class="comment">// Test insertion in reverse order</span></div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>    msg_count = 0;</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;msg : messages)</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>    {</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>      TEST_ASSERT_EQUAL_MESSAGE(msg_count, buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">count</a>(), <span class="stringliteral">&quot;(1) Push_front: Buffer count is correct&quot;</span>);</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;bmsg = <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a>{msg.<a class="code hl_variable" href="structfabomatic_1_1_buffered_msg.xhtml#aba3d5f037ab046e241225bcc3afc2cc3">mqtt_message</a>, msg.mqtt_topic, msg.wait_for_answer};</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>      buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#aad578ef8cbecdafb8c5ade345df415a3">push_back</a>(bmsg);</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>      msg_count++;</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>    }</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span> </div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>    TEST_ASSERT_TRUE_MESSAGE(buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#ae55d0197a2b50d55d1d762569b9c56da">hasChanged</a>(), <span class="stringliteral">&quot;Buffer has pending changes&quot;</span>);</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>    buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a0925c3a370f243ae3455108189e1afc6">setChanged</a>(<span class="keyword">false</span>);</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span> </div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> elem = messages.begin(); elem != messages.end(); ++elem)</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>    {</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>      <span class="keyword">auto</span> &amp;msg = buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a6301e1ea47622d36474ee031a17b9bb4">getMessage</a>();</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>      TEST_ASSERT_EQUAL_STRING_MESSAGE(elem-&gt;mqtt_message.c_str(), msg.mqtt_message.c_str(), <span class="stringliteral">&quot;(2) Retrieval oldest first message is correct&quot;</span>);</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>      TEST_ASSERT_EQUAL_STRING_MESSAGE(elem-&gt;mqtt_topic.c_str(), msg.mqtt_topic.c_str(), <span class="stringliteral">&quot;(2) Retrieval oldest first topic is correct&quot;</span>);</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>      TEST_ASSERT_EQUAL_MESSAGE(elem-&gt;wait_for_answer, msg.wait_for_answer, <span class="stringliteral">&quot;(2) Retrieval oldest first wait_for_answer is correct&quot;</span>);</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>    }</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span> </div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>    TEST_ASSERT_EQUAL_MESSAGE(0, buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">count</a>(), <span class="stringliteral">&quot;(2) Buffer is now empty&quot;</span>);</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>    TEST_ASSERT_TRUE_MESSAGE(buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#ae55d0197a2b50d55d1d762569b9c56da">hasChanged</a>(), <span class="stringliteral">&quot;Buffer has pending changes&quot;</span>);</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>    buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a0925c3a370f243ae3455108189e1afc6">setChanged</a>(<span class="keyword">false</span>);</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span> </div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>    <span class="comment">// Test empty buffer</span></div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a70d156a8423b7e9d4db345cff5eb528f">test_deserialization</a>(buff), <span class="stringliteral">&quot;JSON works for empty buffer&quot;</span>);</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>    TEST_ASSERT_FALSE_MESSAGE(buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#ae55d0197a2b50d55d1d762569b9c56da">hasChanged</a>(), <span class="stringliteral">&quot;Buffer has no pending changes&quot;</span>);</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span> </div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>    <span class="comment">// Insert more messages</span></div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>    msg_count = 0;</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;msg : messages)</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>    {</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>      TEST_ASSERT_EQUAL_MESSAGE(msg_count, buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">count</a>(), <span class="stringliteral">&quot;(2) Push_front: Buffer count is correct&quot;</span>);</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;bmsg = <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a>{msg.<a class="code hl_variable" href="structfabomatic_1_1_buffered_msg.xhtml#aba3d5f037ab046e241225bcc3afc2cc3">mqtt_message</a>, msg.mqtt_topic, msg.wait_for_answer};</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>      buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#aad578ef8cbecdafb8c5ade345df415a3">push_back</a>(bmsg);</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>      msg_count++;</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span>    }</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span> </div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>    TEST_ASSERT_TRUE_MESSAGE(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a70d156a8423b7e9d4db345cff5eb528f">test_deserialization</a>(buff), <span class="stringliteral">&quot;JSON works for full buffer&quot;</span>);</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>    TEST_ASSERT_TRUE_MESSAGE(buff.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#ae55d0197a2b50d55d1d762569b9c56da">hasChanged</a>(), <span class="stringliteral">&quot;Buffer has pending changes&quot;</span>);</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>  }</div>
</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>} <span class="comment">// namespace fabomatic::tests</span></div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span> </div>
<div class="foldopen" id="foldopen00308" data-start="{" data-end="}">
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno"><a class="line" href="test__savedconfig_8cpp.xhtml#a9909011e5fea0c018842eec4d93d0662">  308</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="test__savedconfig_8cpp.xhtml#a9909011e5fea0c018842eec4d93d0662">tearDown</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>{</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>  <span class="comment">// clean stuff up here</span></div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>}</div>
</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span> </div>
<div class="foldopen" id="foldopen00313" data-start="{" data-end="}">
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno"><a class="line" href="test__savedconfig_8cpp.xhtml#a95c834d6178047ce9e1bce7cbfea2836">  313</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="test__savedconfig_8cpp.xhtml#a95c834d6178047ce9e1bce7cbfea2836">setUp</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>{</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>  <span class="comment">// set stuff up here</span></div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span>}</div>
</div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span> </div>
<div class="foldopen" id="foldopen00318" data-start="{" data-end="}">
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno"><a class="line" href="test__savedconfig_8cpp.xhtml#a4fc01d736fe50cf5b977f755b675f11d">  318</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="test__savedconfig_8cpp.xhtml#a4fc01d736fe50cf5b977f755b675f11d">setup</a>()</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>{</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>  delay(1000);</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>  <span class="keyword">auto</span> original = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">fabomatic::SavedConfig::LoadFromEEPROM</a>();</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span> </div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>  UNITY_BEGIN();</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a6af06470faa8c9455927dad653cba48a">fabomatic::tests::test_defaults</a>);</div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a0bbb6cee5561bf8ac1c4a9117d9d01b8">fabomatic::tests::test_changes</a>);</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a77b8df849708615c63f34444d640d001">fabomatic::tests::test_magic_number</a>);</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#aeb3e51f6d2841cd2869df4c0629f694d">fabomatic::tests::test_rfid_cache</a>);</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>  RUN_TEST(<a class="code hl_function" href="namespacefabomatic_1_1tests.xhtml#a4fbc6366f69847719d0f0cb626572493">fabomatic::tests::test_buffered_msg</a>);</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span> </div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span>  <span class="keywordflow">if</span> (original.has_value())</div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span>  {</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span>    original.value().<a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a312c74363068192ae80df24140f82874">SaveToEEPROM</a>();</div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span>  }</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span> </div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>  UNITY_END(); <span class="comment">// stop unit testing</span></div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>}</div>
</div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span> </div>
<div class="foldopen" id="foldopen00338" data-start="{" data-end="}">
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno"><a class="line" href="test__savedconfig_8cpp.xhtml#afe461d27b9c48d5921c00d521181f12f">  338</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="test__savedconfig_8cpp.xhtml#afe461d27b9c48d5921c00d521181f12f">loop</a>()</div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span>{</div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span>}</div>
</div>
<div class="ttc" id="a_auth_provider_8hpp_xhtml"><div class="ttname"><a href="_auth_provider_8hpp.xhtml">AuthProvider.hpp</a></div></div>
<div class="ttc" id="a_board_logic_8hpp_xhtml"><div class="ttname"><a href="_board_logic_8hpp.xhtml">BoardLogic.hpp</a></div></div>
<div class="ttc" id="a_buffered_msg_8hpp_xhtml"><div class="ttname"><a href="_buffered_msg_8hpp.xhtml">BufferedMsg.hpp</a></div></div>
<div class="ttc" id="a_fab_backend_8hpp_xhtml"><div class="ttname"><a href="_fab_backend_8hpp.xhtml">FabBackend.hpp</a></div></div>
<div class="ttc" id="a_logging_8hpp_xhtml_a4ef5b5f197804a60836ab1e8907d8301"><div class="ttname"><a href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a></div><div class="ttdeci">static const char *const TAG</div><div class="ttdef"><b>Definition</b> <a href="_logging_8hpp_source.xhtml#l00006">Logging.hpp:6</a></div></div>
<div class="ttc" id="a_saved_config_8hpp_xhtml"><div class="ttname"><a href="_saved_config_8hpp.xhtml">SavedConfig.hpp</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_auth_provider_xhtml"><div class="ttname"><a href="classfabomatic_1_1_auth_provider.xhtml">fabomatic::AuthProvider</a></div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8hpp_source.xhtml#l00016">AuthProvider.hpp:17</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_auth_provider_xhtml_acb92a9381bc8e14bd57b819fc9162750"><div class="ttname"><a href="classfabomatic_1_1_auth_provider.xhtml#acb92a9381bc8e14bd57b819fc9162750">fabomatic::AuthProvider::saveCache</a></div><div class="ttdeci">auto saveCache() const -&gt; bool</div><div class="ttdoc">Saves the cache of RFID to EEPROM.</div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8cpp_source.xhtml#l00183">AuthProvider.cpp:183</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_auth_provider_xhtml_aeae9923535dcf6cfa9eaf9e5f90e5e64"><div class="ttname"><a href="classfabomatic_1_1_auth_provider.xhtml#aeae9923535dcf6cfa9eaf9e5f90e5e64">fabomatic::AuthProvider::tryLogin</a></div><div class="ttdeci">auto tryLogin(card::uid_t uid, FabBackend &amp;server) const -&gt; std::optional&lt; FabUser &gt;</div><div class="ttdoc">Verifies the card ID against the server (if available) or the whitelist.</div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8cpp_source.xhtml#l00054">AuthProvider.cpp:54</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml">fabomatic::Buffer</a></div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00026">BufferedMsg.hpp:27</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a06b997e6e4f83f208250b739f9e2a2db"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a06b997e6e4f83f208250b739f9e2a2db">fabomatic::Buffer::push_front</a></div><div class="ttdeci">auto push_front(const BufferedMsg &amp;message) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00028">BufferedMsg.cpp:28</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a0925c3a370f243ae3455108189e1afc6"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a0925c3a370f243ae3455108189e1afc6">fabomatic::Buffer::setChanged</a></div><div class="ttdeci">auto setChanged(bool new_value) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00040">BufferedMsg.hpp:40</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a6301e1ea47622d36474ee031a17b9bb4"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a6301e1ea47622d36474ee031a17b9bb4">fabomatic::Buffer::getMessage</a></div><div class="ttdeci">auto getMessage() -&gt; const BufferedMsg</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00047">BufferedMsg.cpp:47</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a72f029c82552ccea45eaf611f345c079"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a72f029c82552ccea45eaf611f345c079">fabomatic::Buffer::toJson</a></div><div class="ttdeci">auto toJson(JsonDocument &amp;doc, const std::string &amp;element_name) const -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00067">BufferedMsg.cpp:67</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a8cf1432737201bf30ae3008af6e44228"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a8cf1432737201bf30ae3008af6e44228">fabomatic::Buffer::MAX_MESSAGES</a></div><div class="ttdeci">static constexpr auto MAX_MESSAGES</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00043">BufferedMsg.hpp:43</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a9ff239a0ddbaed54bcf0a72f2517d7a0"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">fabomatic::Buffer::count</a></div><div class="ttdeci">auto count() const -&gt; size_t</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00062">BufferedMsg.cpp:62</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_aad578ef8cbecdafb8c5ade345df415a3"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#aad578ef8cbecdafb8c5ade345df415a3">fabomatic::Buffer::push_back</a></div><div class="ttdeci">auto push_back(const BufferedMsg &amp;message) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00009">BufferedMsg.cpp:9</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_ad6d946c6ad24dd1a0ab695bb8874b554"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#ad6d946c6ad24dd1a0ab695bb8874b554">fabomatic::Buffer::fromJsonElement</a></div><div class="ttdeci">static auto fromJsonElement(const JsonObject &amp;json_obj) -&gt; std::optional&lt; Buffer &gt;</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00082">BufferedMsg.cpp:82</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_ae55d0197a2b50d55d1d762569b9c56da"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#ae55d0197a2b50d55d1d762569b9c56da">fabomatic::Buffer::hasChanged</a></div><div class="ttdeci">auto hasChanged() const -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00039">BufferedMsg.hpp:39</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml">fabomatic::FabBackend</a></div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00021">FabBackend.hpp:22</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_acf5644d920896038018f990568e710c3"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#acf5644d920896038018f990568e710c3">fabomatic::FabBackend::configure</a></div><div class="ttdeci">auto configure(const SavedConfig &amp;config) -&gt; void</div><div class="ttdoc">Configures the FabBackend with the given configuration.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00021">FabBackend.cpp:21</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml">fabomatic::SavedConfig</a></div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00019">SavedConfig.hpp:20</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a07246e58a5381b0edc2147965a0a8f99"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a07246e58a5381b0edc2147965a0a8f99">fabomatic::SavedConfig::MAGIC_NUMBER</a></div><div class="ttdeci">static constexpr auto MAGIC_NUMBER</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00037">SavedConfig.hpp:37</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a1c147278506b9cd2856798a7988d78ff"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a1c147278506b9cd2856798a7988d78ff">fabomatic::SavedConfig::mqtt_switch_topic</a></div><div class="ttdeci">std::string mqtt_switch_topic</div><div class="ttdoc">MQTT topic for mqtt switch (if available)</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00061">SavedConfig.hpp:61</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a312c74363068192ae80df24140f82874"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a312c74363068192ae80df24140f82874">fabomatic::SavedConfig::SaveToEEPROM</a></div><div class="ttdeci">auto SaveToEEPROM() const -&gt; bool</div><div class="ttdoc">Saves the configuration to EEPROM.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00172">SavedConfig.cpp:172</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a3a6f62510c34ed7a4491022e4e43b9c2"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">fabomatic::SavedConfig::DefaultConfig</a></div><div class="ttdeci">static auto DefaultConfig() -&gt; SavedConfig</div><div class="ttdoc">Returns the default configuration built from conf.hpp and secrets.hpp.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00028">SavedConfig.cpp:28</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a68004c1190623a027b2a1f41607cd33f"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a68004c1190623a027b2a1f41607cd33f">fabomatic::SavedConfig::mqtt_password</a></div><div class="ttdeci">std::string mqtt_password</div><div class="ttdoc">MQTT password.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00058">SavedConfig.hpp:58</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a8cc620b09cef7aceaf7ec87e72dfcdc0"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a8cc620b09cef7aceaf7ec87e72dfcdc0">fabomatic::SavedConfig::mqtt_user</a></div><div class="ttdeci">std::string mqtt_user</div><div class="ttdoc">MQTT username.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00055">SavedConfig.hpp:55</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a8de320beb3e706c35582c049d3681c42"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a8de320beb3e706c35582c049d3681c42">fabomatic::SavedConfig::mqtt_server</a></div><div class="ttdeci">std::string mqtt_server</div><div class="ttdoc">MQTT server.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00052">SavedConfig.hpp:52</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a8f7b5fba524d14a66ed1eaeda08a7e0d"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a8f7b5fba524d14a66ed1eaeda08a7e0d">fabomatic::SavedConfig::password</a></div><div class="ttdeci">std::string password</div><div class="ttdoc">WiFi password.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00049">SavedConfig.hpp:49</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_aa2312c6cebb6b73f66e9f8238cb1b17f"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#aa2312c6cebb6b73f66e9f8238cb1b17f">fabomatic::SavedConfig::machine_id</a></div><div class="ttdeci">std::string machine_id</div><div class="ttdoc">Machine ID connected to the board.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00065">SavedConfig.hpp:65</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_abccca47e85f3214c2ce780230bfe7f49"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#abccca47e85f3214c2ce780230bfe7f49">fabomatic::SavedConfig::ssid</a></div><div class="ttdeci">std::string ssid</div><div class="ttdoc">WiFi SSID.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00046">SavedConfig.hpp:46</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_aca3fe97dfa74c005d47ffef700392d99"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">fabomatic::SavedConfig::LoadFromEEPROM</a></div><div class="ttdeci">static auto LoadFromEEPROM() -&gt; std::optional&lt; SavedConfig &gt;</div><div class="ttdoc">Loads the configuration from EEPROM if available and matching revision number.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00052">SavedConfig.cpp:52</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1debug_xhtml_a5facfa139bf1642294264da0584f4691"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1debug.xhtml#a5facfa139bf1642294264da0584f4691">fabomatic::conf::debug::ENABLE_BUFFERING</a></div><div class="ttdeci">static constexpr bool ENABLE_BUFFERING</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00088">conf.hpp:88</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1rfid__tags_xhtml_a786cf57e36da88ed2d6c153e3b6fdc30"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1rfid__tags.xhtml#a786cf57e36da88ed2d6c153e3b6fdc30">fabomatic::conf::rfid_tags::CACHE_LEN</a></div><div class="ttdeci">static constexpr uint8_t CACHE_LEN</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00056">conf.hpp:56</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml">fabomatic::tests</a></div><div class="ttdef"><b>Definition</b> <a href="test__common_8cpp_source.xhtml#l00011">test_common.cpp:12</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a0bbb6cee5561bf8ac1c4a9117d9d01b8"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a0bbb6cee5561bf8ac1c4a9117d9d01b8">fabomatic::tests::test_changes</a></div><div class="ttdeci">void test_changes(void)</div><div class="ttdef"><b>Definition</b> <a href="test__savedconfig_8cpp_source.xhtml#l00048">test_savedconfig.cpp:48</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a159f700a4f413190a0fd5eaa878b2cdd"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a159f700a4f413190a0fd5eaa878b2cdd">fabomatic::tests::original</a></div><div class="ttdeci">SavedConfig original</div><div class="ttdef"><b>Definition</b> <a href="test__savedconfig_8cpp_source.xhtml#l00020">test_savedconfig.cpp:20</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a4fbc6366f69847719d0f0cb626572493"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a4fbc6366f69847719d0f0cb626572493">fabomatic::tests::test_buffered_msg</a></div><div class="ttdeci">void test_buffered_msg()</div><div class="ttdef"><b>Definition</b> <a href="test__savedconfig_8cpp_source.xhtml#l00201">test_savedconfig.cpp:201</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a6af06470faa8c9455927dad653cba48a"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a6af06470faa8c9455927dad653cba48a">fabomatic::tests::test_defaults</a></div><div class="ttdeci">void test_defaults(void)</div><div class="ttdef"><b>Definition</b> <a href="test__savedconfig_8cpp_source.xhtml#l00022">test_savedconfig.cpp:22</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a70d156a8423b7e9d4db345cff5eb528f"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a70d156a8423b7e9d4db345cff5eb528f">fabomatic::tests::test_deserialization</a></div><div class="ttdeci">bool test_deserialization(Buffer &amp;buff)</div><div class="ttdef"><b>Definition</b> <a href="test__savedconfig_8cpp_source.xhtml#l00173">test_savedconfig.cpp:173</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_a77b8df849708615c63f34444d640d001"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#a77b8df849708615c63f34444d640d001">fabomatic::tests::test_magic_number</a></div><div class="ttdeci">void test_magic_number()</div><div class="ttdef"><b>Definition</b> <a href="test__savedconfig_8cpp_source.xhtml#l00152">test_savedconfig.cpp:152</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1tests_xhtml_aeb3e51f6d2841cd2869df4c0629f694d"><div class="ttname"><a href="namespacefabomatic_1_1tests.xhtml#aeb3e51f6d2841cd2869df4c0629f694d">fabomatic::tests::test_rfid_cache</a></div><div class="ttdeci">void test_rfid_cache()</div><div class="ttdef"><b>Definition</b> <a href="test__savedconfig_8cpp_source.xhtml#l00094">test_savedconfig.cpp:94</a></div></div>
<div class="ttc" id="astruct_machine_i_d_xhtml"><div class="ttname"><a href="struct_machine_i_d.xhtml">MachineID</a></div><div class="ttdef"><b>Definition</b> <a href="_machine_i_d_8hpp_source.xhtml#l00016">MachineID.hpp:17</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_buffered_msg_xhtml"><div class="ttname"><a href="structfabomatic_1_1_buffered_msg.xhtml">fabomatic::BufferedMsg</a></div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00015">BufferedMsg.hpp:16</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_buffered_msg_xhtml_aba3d5f037ab046e241225bcc3afc2cc3"><div class="ttname"><a href="structfabomatic_1_1_buffered_msg.xhtml#aba3d5f037ab046e241225bcc3afc2cc3">fabomatic::BufferedMsg::mqtt_message</a></div><div class="ttdeci">std::string mqtt_message</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00017">BufferedMsg.hpp:17</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_fab_user_xhtml_a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e"><div class="ttname"><a href="structfabomatic_1_1_fab_user.xhtml#a75deeb54124600e0387550735c7a0ca0a88183b946cc5f0e8c96b2e66e1c74a7e">fabomatic::FabUser::UserLevel::Unknown</a></div><div class="ttdeci">@ Unknown</div></div>
<div class="ttc" id="atest__savedconfig_8cpp_xhtml_a4fc01d736fe50cf5b977f755b675f11d"><div class="ttname"><a href="test__savedconfig_8cpp.xhtml#a4fc01d736fe50cf5b977f755b675f11d">setup</a></div><div class="ttdeci">void setup()</div><div class="ttdef"><b>Definition</b> <a href="test__savedconfig_8cpp_source.xhtml#l00318">test_savedconfig.cpp:318</a></div></div>
<div class="ttc" id="atest__savedconfig_8cpp_xhtml_a61fc6209a48e9414bc6f6dff41c34f09"><div class="ttname"><a href="test__savedconfig_8cpp.xhtml#a61fc6209a48e9414bc6f6dff41c34f09">TAG3</a></div><div class="ttdeci">static const char * TAG3</div><div class="ttdef"><b>Definition</b> <a href="test__savedconfig_8cpp_source.xhtml#l00016">test_savedconfig.cpp:16</a></div></div>
<div class="ttc" id="atest__savedconfig_8cpp_xhtml_a95c834d6178047ce9e1bce7cbfea2836"><div class="ttname"><a href="test__savedconfig_8cpp.xhtml#a95c834d6178047ce9e1bce7cbfea2836">setUp</a></div><div class="ttdeci">void setUp(void)</div><div class="ttdef"><b>Definition</b> <a href="test__savedconfig_8cpp_source.xhtml#l00313">test_savedconfig.cpp:313</a></div></div>
<div class="ttc" id="atest__savedconfig_8cpp_xhtml_a9909011e5fea0c018842eec4d93d0662"><div class="ttname"><a href="test__savedconfig_8cpp.xhtml#a9909011e5fea0c018842eec4d93d0662">tearDown</a></div><div class="ttdeci">void tearDown(void)</div><div class="ttdef"><b>Definition</b> <a href="test__savedconfig_8cpp_source.xhtml#l00308">test_savedconfig.cpp:308</a></div></div>
<div class="ttc" id="atest__savedconfig_8cpp_xhtml_afe461d27b9c48d5921c00d521181f12f"><div class="ttname"><a href="test__savedconfig_8cpp.xhtml#afe461d27b9c48d5921c00d521181f12f">loop</a></div><div class="ttdeci">void loop()</div><div class="ttdef"><b>Definition</b> <a href="test__savedconfig_8cpp_source.xhtml#l00338">test_savedconfig.cpp:338</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jun 30 2024 19:59:04 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
