<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: FabBackend.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(0); });
/* @license-end */
</script>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">FabBackend.cpp</div></div>
</div><!--header-->
<div class="contents">
<a href="_fab_backend_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#include &quot;<a class="code" href="_fab_backend_8hpp.xhtml">FabBackend.hpp</a>&quot;</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#include &quot;secrets.hpp&quot;</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &quot;<a class="code" href="_logging_8hpp.xhtml">Logging.hpp</a>&quot;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &quot;<a class="code" href="_saved_config_8hpp.xhtml">SavedConfig.hpp</a>&quot;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &quot;<a class="code" href="_tasks_8hpp.xhtml">Tasks.hpp</a>&quot;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;ArduinoJson.h&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;chrono&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;cstdint&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &lt;sstream&gt;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="preprocessor">#include &lt;string_view&gt;</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="preprocessor">#include &lt;array&gt;</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefabomatic.xhtml">fabomatic</a></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>{</div>
<div class="foldopen" id="foldopen00021" data-start="{" data-end="}">
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#acf5644d920896038018f990568e710c3">   21</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#acf5644d920896038018f990568e710c3">FabBackend::configure</a>(<span class="keyword">const</span> <a class="code hl_class" href="classfabomatic_1_1_saved_config.xhtml">SavedConfig</a> &amp;config)</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  {</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a893e412def82572f4281bdcd92bfcb36">wifi_ssid</a> = config.<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#abccca47e85f3214c2ce780230bfe7f49">ssid</a>;</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a532fe40b9761d95b1acc6572df24cd68">wifi_password</a> = config.<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a8f7b5fba524d14a66ed1eaeda08a7e0d">password</a>;</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a7464218df94ba7854cb34aaab314cbc2">broker_hostname</a> = config.<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a8de320beb3e706c35582c049d3681c42">mqtt_server</a>;</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a02ce02db60b18f3de30e251ba14807bb">mqtt_user</a> = config.<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a8cc620b09cef7aceaf7ec87e72dfcdc0">mqtt_user</a>;</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#ac4de362845adea42309283248654cf46">mqtt_password</a> = config.<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a68004c1190623a027b2a1f41607cd33f">mqtt_password</a>;</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="preprocessor">#if (PINS_WOKWI)</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a12a4f3f195db522c6b108deacf1219b9">channel</a> = 6;</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a7464218df94ba7854cb34aaab314cbc2">broker_hostname</a> = <span class="stringliteral">&quot;localhost&quot;</span>;</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a12a4f3f195db522c6b108deacf1219b9">channel</a> = -1;</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">online</a> = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>    std::stringstream ss_topic_name, ss_client_name;</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>    ss_topic_name &lt;&lt; <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a6828edf0ca1e3124b91c14d7f4f04045">conf::mqtt::topic</a> &lt;&lt; <span class="stringliteral">&quot;/&quot;</span> &lt;&lt; config.<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#aa2312c6cebb6b73f66e9f8238cb1b17f">machine_id</a>;</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8790b1b9b5909541c62cd1ea7577e9d6">topic</a> = ss_topic_name.str();</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>    ss_client_name &lt;&lt; <span class="stringliteral">&quot;BOARD&quot;</span> &lt;&lt; random(0, 1000);</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#ac77de5d35fe86ccf4b23c97548187256">mqtt_client_name</a> = ss_client_name.str();</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.connected()) <span class="comment">// Topic or IP may also have changed</span></div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>    {</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.disconnect();</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a2924692a0dca43597d2cc594cb0573d2">wifi_client</a>.stop();</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>    }</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>    <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a39353e6b4057e97b216a520fc7bef017">loadBuffer</a>(config.<a class="code hl_variable" href="classfabomatic_1_1_saved_config.xhtml#a48a97bdcbb24fe8f5e2f36a173839cdf">message_buffer</a>);</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;FabServer configured&quot;</span>);</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  }</div>
</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="foldopen" id="foldopen00061" data-start="{" data-end="}">
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#a8f5341d851e1cd24dfaa64be0237dd5a">   61</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a8f5341d851e1cd24dfaa64be0237dd5a">FabBackend::publishWithReply</a>(<span class="keyword">const</span> <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml">ServerMQTT::Query</a> &amp;query) -&gt; <a class="code hl_enumeration" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3">PublishResult</a></div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  {</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>    <span class="keyword">auto</span> try_cpt = 0;</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>    <span class="keyword">auto</span> published = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>    <span class="keywordflow">while</span> (try_cpt &lt; <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a9385c322eb16f7f09992855dec71df20">conf::mqtt::MAX_TRIES</a>)</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>    {</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>      try_cpt++;</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>      <span class="keywordflow">if</span> (!published)</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>      {</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>        <span class="keywordflow">if</span> (publish(query) == PublishResult::PublishedWithoutAnswer)</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>        {</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>          published = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>        }</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>        <span class="keywordflow">else</span></div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>        {</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>          ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: failure to send query %s&quot;</span>, query.payload().data());</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>          <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a8418761ec7353545c7130692339b9cc6">conf::mqtt::TIMEOUT_REPLY_SERVER</a>);</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>        }</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>      }</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>      <span class="keywordflow">if</span> (waitForAnswer(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a8418761ec7353545c7130692339b9cc6">conf::mqtt::TIMEOUT_REPLY_SERVER</a>))</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>      {</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>        ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: received answer: %s&quot;</span>, last_reply.data());</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>        <span class="keywordflow">return</span> PublishResult::PublishedWithAnswer;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>      }</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>      ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: no answer received, retrying %d/%d&quot;</span>, try_cpt, <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a9385c322eb16f7f09992855dec71df20">conf::mqtt::MAX_TRIES</a>);</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a8418761ec7353545c7130692339b9cc6">conf::mqtt::TIMEOUT_REPLY_SERVER</a>);</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>    }</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span> </div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>    ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: failure to send query %s&quot;</span>, query.payload().data());</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>    <span class="comment">// Do not send twice if response did not arrive</span></div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>    <span class="keywordflow">if</span> (query.buffered() &amp;&amp; !published)</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>    {</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;msg = <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a>{query.payload(), topic, query.waitForReply()};</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>      buffer.push_back(msg);</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>    }</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span> </div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>    <span class="keywordflow">if</span> (published)</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>    {</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>      <span class="keywordflow">return</span> PublishResult::PublishedWithoutAnswer;</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>    }</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>    <span class="keywordflow">return</span> PublishResult::ErrorNotPublished;</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  }</div>
</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="foldopen" id="foldopen00118" data-start="{" data-end="}">
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#a0510999bee5e4fe5d31d7ad5496f889c">  118</a></span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aee0cf549bea2daebc3e08742853d36c1">FabBackend::publish</a>(String mqtt_topic, String mqtt_payload, <span class="keywordtype">bool</span> waitForAnswer)</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  {</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>    <span class="keywordflow">if</span> (mqtt_payload.length() + mqtt_topic.length() &gt; <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a9367a14306331d326e5e7971a0728633">FabBackend::MAX_MSG_SIZE</a> - 8)</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>    {</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>      ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: Message is too long: %s&quot;</span>, mqtt_payload.c_str());</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>    }</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#ab91778bc8d79c8265b68b00ff01b17e5">answer_pending</a> = <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a04951b9823ac466be2285640171013e5">waitForAnswer</a>;</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a567eee830bd65f941ba98428e2642f4f">last_query</a>.assign(mqtt_payload.c_str());</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>    ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: sending message %s on topic %s&quot;</span>, mqtt_payload.c_str(), mqtt_topic.c_str());</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.publish(mqtt_topic.c_str(), mqtt_payload.c_str());</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  }</div>
</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span> </div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> QueryT&gt;</div>
<div class="foldopen" id="foldopen00141" data-start="{" data-end="}">
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#aee0cf549bea2daebc3e08742853d36c1">  141</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aee0cf549bea2daebc3e08742853d36c1">FabBackend::publish</a>(<span class="keyword">const</span> QueryT &amp;query) -&gt; <a class="code hl_enumeration" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3">PublishResult</a></div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  {</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>    String s_payload(query.payload().c_str());</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>    std::string temp_topic;</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>    <span class="comment">// Check at compile-time if topic is specified</span></div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>    <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (std::is_base_of&lt;BufferedQuery, QueryT&gt;::value)</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>    {</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>      temp_topic = <span class="keyword">static_cast&lt;</span><a class="code hl_class" href="classfabomatic_1_1_buffered_query.xhtml">BufferedQuery</a><span class="keyword">&gt;</span>(query).topic();</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>    }</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>    {</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>      <span class="comment">// Just use the default topic for the machine</span></div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>      temp_topic = this-&gt;topic;</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>    }</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span> </div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>    String s_topic{temp_topic.c_str()};</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span> </div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>    <span class="keywordflow">if</span> (s_payload.length() + s_topic.length() &gt; <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a9367a14306331d326e5e7971a0728633">FabBackend::MAX_MSG_SIZE</a> - 8)</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>    {</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>      ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: Message is too long: %s&quot;</span>, s_payload.c_str());</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>      <span class="keywordflow">return</span> PublishResult::ErrorNotPublished;</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>    }</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span> </div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>    answer_pending = query.waitForReply(); <span class="comment">// Don&#39;t wait if not needed</span></div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>    last_query.assign(s_payload.c_str());</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>    last_reply.clear();</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span> </div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: sending message %s on topic %s&quot;</span>, s_payload.c_str(), s_topic.c_str());</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>    <span class="keywordflow">if</span> (client.publish(s_topic, s_payload))</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>    {</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>      <span class="keywordflow">return</span> PublishResult::PublishedWithoutAnswer;</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>    }</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span> </div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>    <span class="keywordflow">return</span> PublishResult::ErrorNotPublished;</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>  }</div>
</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="foldopen" id="foldopen00184" data-start="{" data-end="}">
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#aaf05998bb9dec17ae98283969109bb2d">  184</a></span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aaf05998bb9dec17ae98283969109bb2d">FabBackend::loop</a>()</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>  {</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.loop())</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>    {</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>      <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">online</a>)</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>      {</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>        ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: connection lost&quot;</span>);</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>      }</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">online</a> = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>    }</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>  }</div>
</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span> </div>
<div class="foldopen" id="foldopen00204" data-start="{" data-end="}">
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#a04951b9823ac466be2285640171013e5">  204</a></span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a04951b9823ac466be2285640171013e5">FabBackend::waitForAnswer</a>(std::chrono::milliseconds max_duration)</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>  {</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>    <span class="keyword">const</span> <span class="keyword">auto</span> start_time = std::chrono::system_clock::now();</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>    <span class="keyword">const</span> <span class="keyword">auto</span> DELAY_MS = 25ms;</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>    <span class="keywordflow">do</span></div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>    {</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>      <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#ab91778bc8d79c8265b68b00ff01b17e5">answer_pending</a>)</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>      {</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>        <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.loop();</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>        <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.connected())</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>        {</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>          ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: connection lost while waiting for answer&quot;</span>);</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>          <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">connect</a>();</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>        }</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>        <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(DELAY_MS);</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>      }</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>      <span class="keywordflow">else</span></div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>      {</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>      }</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>    } <span class="keywordflow">while</span> (std::chrono::system_clock::now() &lt; (start_time + max_duration));</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span> </div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>    ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failure, no answer from MQTT server (timeout:%lld ms)&quot;</span>, max_duration.count());</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>  }</div>
</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span> </div>
<div class="foldopen" id="foldopen00235" data-start="{" data-end="}">
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">  235</a></span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">FabBackend::isOnline</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">online</a>;</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>  }</div>
</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span> </div>
<div class="foldopen" id="foldopen00246" data-start="{" data-end="}">
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#a3ab102598ee93269de90a0170e024619">  246</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a3ab102598ee93269de90a0170e024619">FabBackend::messageReceived</a>(String &amp;s_topic, String &amp;s_payload)</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>  {</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>    ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: Received on %s -&gt; %s&quot;</span>, s_topic.c_str(), s_payload.c_str());</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span> </div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a0308ae992bc86c1b41bdd78f9536f553">last_reply</a>.assign(s_payload.c_str());</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#ab91778bc8d79c8265b68b00ff01b17e5">answer_pending</a> = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>  }</div>
</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span> </div>
<div class="foldopen" id="foldopen00259" data-start="{" data-end="}">
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#ad928751b2f967feaac0f2cb708c0d6e9">  259</a></span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ad928751b2f967feaac0f2cb708c0d6e9">FabBackend::connectWiFi</a>()</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>  {</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>    <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> NB_TRIES = 15;</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>    <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> DELAY_MS = 250ms;</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span> </div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>    <span class="comment">// Connect WiFi if needed</span></div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>    <span class="keywordflow">if</span> (WiFi.status() != WL_CONNECTED)</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>    {</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>      WiFi.setAutoReconnect(<span class="keyword">true</span>);</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>      WiFi.persistent(<span class="keyword">true</span>);</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>      WiFi.mode(WIFI_STA);</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;FabServer::connectWiFi() : WiFi connection state=%d, connecting to SSID:%s (channel:%d)&quot;</span>, WiFi.status(), <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a893e412def82572f4281bdcd92bfcb36">wifi_ssid</a>.c_str(), <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a12a4f3f195db522c6b108deacf1219b9">channel</a>);</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>      WiFi.begin(<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a893e412def82572f4281bdcd92bfcb36">wifi_ssid</a>.data(), <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a532fe40b9761d95b1acc6572df24cd68">wifi_password</a>.data(), <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a12a4f3f195db522c6b108deacf1219b9">channel</a>);</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(DELAY_MS);</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>      <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; NB_TRIES; i++)</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>      {</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>        <span class="keywordflow">if</span> (WiFi.status() == WL_CONNECTED)</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>        {</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>          ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;FabServer::connectWiFi() : WiFi connection successful&quot;</span>);</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>          <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>        }</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>        <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(DELAY_MS);</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>      }</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>    }</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>    <span class="keywordflow">return</span> WiFi.status() == WL_CONNECTED;</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>  }</div>
</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span> </div>
<div class="foldopen" id="foldopen00291" data-start="{" data-end="}">
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">  291</a></span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">FabBackend::connect</a>()</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>  {</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>    <span class="keyword">const</span> <span class="keyword">auto</span> status = WiFi.status();</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span> </div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;FabServer::connect() called, Wifi status=%d&quot;</span>, status);</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span> </div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>    <span class="comment">// Check if WiFi network is available, and if not, try to connect</span></div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>    <span class="keywordflow">if</span> (status != WL_CONNECTED)</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>    {</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">online</a> = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span> </div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>      <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.connected())</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>      {</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>        ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Closing MQTT client due to WiFi down&quot;</span>);</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>        <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.disconnect();</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>      }</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(100ms);</div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span>      <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ad928751b2f967feaac0f2cb708c0d6e9">connectWiFi</a>();</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>    }</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span> </div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>    <span class="comment">// Check if WiFi is available but MQTT client is not</span></div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>    <span class="keywordflow">if</span> (WiFi.status() == WL_CONNECTED &amp;&amp;</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span>        !<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.connected())</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>    {</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>      IPAddress ip;</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span>      <span class="keywordflow">if</span> (WiFi.hostByName(<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a7464218df94ba7854cb34aaab314cbc2">broker_hostname</a>.c_str(), ip))</div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span>      {</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>        ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Resolved MQTT server [%s] as [%s]&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a7464218df94ba7854cb34aaab314cbc2">broker_hostname</a>.c_str(), ip.toString().c_str());</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>      }</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>      <span class="keywordflow">else</span></div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>      {</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>        ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failed to resolve MQTT server [%s]&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a7464218df94ba7854cb34aaab314cbc2">broker_hostname</a>.c_str());</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span>      }</div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span> </div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Connecting to MQTT server [%s:%d]...&quot;</span>, ip.toString().c_str(), conf::mqtt::PORT_NUMBER);</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span> </div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.begin(ip, conf::mqtt::PORT_NUMBER, <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a2924692a0dca43597d2cc594cb0573d2">wifi_client</a>);</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span> </div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8af330c9d926f6ef6e6307ab3fd23834">callback</a> = [&amp;](String &amp;a, String &amp;b)</div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span>      { <span class="keywordflow">return</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a3ab102598ee93269de90a0170e024619">messageReceived</a>(a, b); };</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span> </div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.onMessage(<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8af330c9d926f6ef6e6307ab3fd23834">callback</a>);</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span> </div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>      <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.connect(<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#ac77de5d35fe86ccf4b23c97548187256">mqtt_client_name</a>.c_str(),</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>                          <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a02ce02db60b18f3de30e251ba14807bb">mqtt_user</a>.c_str(),</div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span>                          <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#ac4de362845adea42309283248654cf46">mqtt_password</a>.c_str(), <span class="keyword">false</span>))</div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span>      {</div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span>        ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failure to connect as client: %s with username %s, last error %d&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#ac77de5d35fe86ccf4b23c97548187256">mqtt_client_name</a>.c_str(), <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a02ce02db60b18f3de30e251ba14807bb">mqtt_user</a>.c_str(), <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.lastError());</div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span>        <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.disconnect();</div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span>      }</div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span> </div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span>      <span class="comment">// Setup subscriptions</span></div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>      <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.connected())</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span>      {</div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span>        std::stringstream tmp_topic;</div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span>        tmp_topic &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8790b1b9b5909541c62cd1ea7577e9d6">topic</a> &lt;&lt; <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a606e6b5c7c411ba632b27c92882edb32">conf::mqtt::response_topic</a>;</div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span>        <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8129677184366856b2f1c3a582e10bdb">response_topic</a>.assign(tmp_topic.str());</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span> </div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span>        <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.subscribe(<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8129677184366856b2f1c3a582e10bdb">response_topic</a>.c_str()))</div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span>        {</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span>          ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: failure to subscribe to reply topic %s&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8129677184366856b2f1c3a582e10bdb">response_topic</a>.c_str());</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span>        }</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>        <span class="keywordflow">else</span></div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span>        {</div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span>          ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: subscribed to reply topic %s&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8129677184366856b2f1c3a582e10bdb">response_topic</a>.c_str());</div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span>          <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">online</a> = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span>        }</div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span>        <span class="comment">// Announce the board to the server</span></div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span>        <span class="keywordflow">if</span> (<span class="keyword">auto</span> query = <a class="code hl_class" href="classfabomatic_1_1_server_m_q_t_t_1_1_alive_query.xhtml">ServerMQTT::AliveQuery</a>{}; <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aee0cf549bea2daebc3e08742853d36c1">publish</a>(query) == <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3a4586da37f65c0965ce6973ceb7f65c40">PublishResult::PublishedWithoutAnswer</a>)</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span>        {</div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span>          ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: board announced to server&quot;</span>);</div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span>        }</div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span>        <span class="keywordflow">else</span></div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span>        {</div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span>          ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;MQTT Client: failure to announce board to server&quot;</span>);</div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno">  367</span>        }</div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>      }</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span>      <span class="keywordflow">else</span></div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span>      {</div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span>        ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failure to connect to MQTT server %s&quot;</span>, <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a7464218df94ba7854cb34aaab314cbc2">broker_hostname</a>.c_str());</div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span>      }</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span>    }</div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span> </div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.connected())</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span>    {</div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">online</a> = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span>    }</div>
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno">  379</span> </div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">online</a>;</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>  }</div>
</div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno">  382</span> </div>
<div class="foldopen" id="foldopen00386" data-start="{" data-end="}">
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#ad558116614ee45601f4665d395838727">  386</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ad558116614ee45601f4665d395838727">FabBackend::disconnect</a>()</div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span>  {</div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">client</a>.disconnect();</div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span>    <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a2924692a0dca43597d2cc594cb0573d2">wifi_client</a>.stop();</div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span>    <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(100ms);</div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span>  }</div>
</div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span> </div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno">  401</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> RespT, <span class="keyword">typename</span> QueryT, <span class="keyword">typename</span>... QueryArgs&gt;</div>
<div class="foldopen" id="foldopen00402" data-start="{" data-end="}">
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#aaa691642839e9196217684949621f2a4">  402</a></span>  std::unique_ptr&lt;RespT&gt; <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aaf87e6d61085a67255fac06e491fbf90">FabBackend::processQuery</a>(QueryArgs &amp;&amp;...args)</div>
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno">  403</span>  {</div>
<div class="line"><a id="l00404" name="l00404"></a><span class="lineno">  404</span>    <span class="keyword">static_assert</span>(std::is_base_of&lt;ServerMQTT::Query, QueryT&gt;::value, <span class="stringliteral">&quot;QueryT must inherit from Query&quot;</span>);</div>
<div class="line"><a id="l00405" name="l00405"></a><span class="lineno">  405</span>    <span class="keyword">static_assert</span>(std::is_base_of&lt;ServerMQTT::Response, RespT&gt;::value, <span class="stringliteral">&quot;RespT must inherit from Response&quot;</span>);</div>
<div class="line"><a id="l00406" name="l00406"></a><span class="lineno">  406</span>    QueryT query{args...};</div>
<div class="line"><a id="l00407" name="l00407"></a><span class="lineno">  407</span> </div>
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno">  408</span>    <span class="keyword">auto</span> nb_tries = 0;</div>
<div class="line"><a id="l00409" name="l00409"></a><span class="lineno">  409</span>    <span class="keywordflow">while</span> (<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>() &amp;&amp; <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">hasBufferedMsg</a>() &amp;&amp; !<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a4d0b8d49942ff06c02abbcbfe7a4784a">transmitBuffer</a>() &amp;&amp; nb_tries &lt; 3)</div>
<div class="line"><a id="l00410" name="l00410"></a><span class="lineno">  410</span>    {</div>
<div class="line"><a id="l00411" name="l00411"></a><span class="lineno">  411</span>      <span class="comment">// To preserve chronological order, we cannot send new messages until the old ones have been sent.</span></div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno">  412</span>      ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Online with pending messages that could not be transmitted, retrying...&quot;</span>);</div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span> </div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno">  414</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(250ms);</div>
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno">  415</span> </div>
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno">  416</span>      <span class="keywordflow">if</span> (!<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>())</div>
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno">  417</span>      {</div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span>        <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">connect</a>();</div>
<div class="line"><a id="l00419" name="l00419"></a><span class="lineno">  419</span>      }</div>
<div class="line"><a id="l00420" name="l00420"></a><span class="lineno">  420</span>      nb_tries++;</div>
<div class="line"><a id="l00421" name="l00421"></a><span class="lineno">  421</span>    }</div>
<div class="line"><a id="l00422" name="l00422"></a><span class="lineno">  422</span> </div>
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno">  423</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>() &amp;&amp; !<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">hasBufferedMsg</a>())</div>
<div class="line"><a id="l00424" name="l00424"></a><span class="lineno">  424</span>    {</div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno">  425</span>      <span class="keywordflow">if</span> (<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a8f5341d851e1cd24dfaa64be0237dd5a">publishWithReply</a>(query) == <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3af6278bbfdfc6fff58dae91a03d739c93">PublishResult::PublishedWithAnswer</a>)</div>
<div class="line"><a id="l00426" name="l00426"></a><span class="lineno">  426</span>      {</div>
<div class="line"><a id="l00427" name="l00427"></a><span class="lineno">  427</span>        <span class="comment">// Deserialize the JSON document</span></div>
<div class="line"><a id="l00428" name="l00428"></a><span class="lineno">  428</span>        <span class="keyword">const</span> <span class="keyword">auto</span> payload = <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a0308ae992bc86c1b41bdd78f9536f553">last_reply</a>.c_str();</div>
<div class="line"><a id="l00429" name="l00429"></a><span class="lineno">  429</span>        <span class="keywordflow">if</span> (DeserializationError error = deserializeJson(<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a1218ae004e0146262801967ee50ec17a">doc</a>, payload))</div>
<div class="line"><a id="l00430" name="l00430"></a><span class="lineno">  430</span>        {</div>
<div class="line"><a id="l00431" name="l00431"></a><span class="lineno">  431</span>          ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failed to parse json: %s (%s)&quot;</span>, payload, error.c_str());</div>
<div class="line"><a id="l00432" name="l00432"></a><span class="lineno">  432</span>          <span class="keywordflow">return</span> std::make_unique&lt;RespT&gt;(<span class="keyword">false</span>);</div>
<div class="line"><a id="l00433" name="l00433"></a><span class="lineno">  433</span>        }</div>
<div class="line"><a id="l00434" name="l00434"></a><span class="lineno">  434</span>        <span class="keywordflow">return</span> RespT::fromJson(<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a1218ae004e0146262801967ee50ec17a">doc</a>);</div>
<div class="line"><a id="l00435" name="l00435"></a><span class="lineno">  435</span>      }</div>
<div class="line"><a id="l00436" name="l00436"></a><span class="lineno">  436</span>      <span class="keywordflow">else</span></div>
<div class="line"><a id="l00437" name="l00437"></a><span class="lineno">  437</span>      {</div>
<div class="line"><a id="l00438" name="l00438"></a><span class="lineno">  438</span>        ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failed to publish query %s&quot;</span>, query.payload().data());</div>
<div class="line"><a id="l00439" name="l00439"></a><span class="lineno">  439</span>        this-&gt;<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ad558116614ee45601f4665d395838727">disconnect</a>();</div>
<div class="line"><a id="l00440" name="l00440"></a><span class="lineno">  440</span>      }</div>
<div class="line"><a id="l00441" name="l00441"></a><span class="lineno">  441</span>    }</div>
<div class="line"><a id="l00442" name="l00442"></a><span class="lineno">  442</span> </div>
<div class="line"><a id="l00443" name="l00443"></a><span class="lineno">  443</span>    <span class="keywordflow">if</span> (query.buffered())</div>
<div class="line"><a id="l00444" name="l00444"></a><span class="lineno">  444</span>    {</div>
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno">  445</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;msg = <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a>{query.payload(), <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8790b1b9b5909541c62cd1ea7577e9d6">topic</a>, query.waitForReply()};</div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a>.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#aad578ef8cbecdafb8c5ade345df415a3">push_back</a>(msg);</div>
<div class="line"><a id="l00447" name="l00447"></a><span class="lineno">  447</span>    }</div>
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno">  448</span> </div>
<div class="line"><a id="l00449" name="l00449"></a><span class="lineno">  449</span>    <span class="keywordflow">return</span> std::make_unique&lt;RespT&gt;(<span class="keyword">false</span>);</div>
<div class="line"><a id="l00450" name="l00450"></a><span class="lineno">  450</span>  }</div>
</div>
<div class="line"><a id="l00451" name="l00451"></a><span class="lineno">  451</span> </div>
<div class="line"><a id="l00459" name="l00459"></a><span class="lineno">  459</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> QueryT, <span class="keyword">typename</span>... QueryArgs&gt;</div>
<div class="foldopen" id="foldopen00460" data-start="{" data-end="}">
<div class="line"><a id="l00460" name="l00460"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#adc71dbb44c3446fa985744ad4563faeb">  460</a></span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aaf87e6d61085a67255fac06e491fbf90">FabBackend::processQuery</a>(QueryArgs &amp;&amp;...args)</div>
<div class="line"><a id="l00461" name="l00461"></a><span class="lineno">  461</span>  {</div>
<div class="line"><a id="l00462" name="l00462"></a><span class="lineno">  462</span>    <span class="keyword">static_assert</span>(std::is_base_of&lt;ServerMQTT::Query, QueryT&gt;::value, <span class="stringliteral">&quot;QueryT must inherit from Query&quot;</span>);</div>
<div class="line"><a id="l00463" name="l00463"></a><span class="lineno">  463</span>    QueryT query{args...};</div>
<div class="line"><a id="l00464" name="l00464"></a><span class="lineno">  464</span> </div>
<div class="line"><a id="l00465" name="l00465"></a><span class="lineno">  465</span>    <span class="keyword">auto</span> nb_tries = 0;</div>
<div class="line"><a id="l00466" name="l00466"></a><span class="lineno">  466</span>    <span class="keywordflow">while</span> (<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>() &amp;&amp; <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">hasBufferedMsg</a>() &amp;&amp; !<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a4d0b8d49942ff06c02abbcbfe7a4784a">transmitBuffer</a>() &amp;&amp; nb_tries &lt; 3)</div>
<div class="line"><a id="l00467" name="l00467"></a><span class="lineno">  467</span>    {</div>
<div class="line"><a id="l00468" name="l00468"></a><span class="lineno">  468</span>      <span class="comment">// To preserve chronological order, we cannot send new messages until the old ones have been sent.</span></div>
<div class="line"><a id="l00469" name="l00469"></a><span class="lineno">  469</span>      ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Online with pending messages that could not be transmitted, retrying...&quot;</span>);</div>
<div class="line"><a id="l00470" name="l00470"></a><span class="lineno">  470</span> </div>
<div class="line"><a id="l00471" name="l00471"></a><span class="lineno">  471</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(250ms);</div>
<div class="line"><a id="l00472" name="l00472"></a><span class="lineno">  472</span> </div>
<div class="line"><a id="l00473" name="l00473"></a><span class="lineno">  473</span>      <span class="keywordflow">if</span> (!<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>())</div>
<div class="line"><a id="l00474" name="l00474"></a><span class="lineno">  474</span>      {</div>
<div class="line"><a id="l00475" name="l00475"></a><span class="lineno">  475</span>        <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">connect</a>();</div>
<div class="line"><a id="l00476" name="l00476"></a><span class="lineno">  476</span>      }</div>
<div class="line"><a id="l00477" name="l00477"></a><span class="lineno">  477</span>      nb_tries++;</div>
<div class="line"><a id="l00478" name="l00478"></a><span class="lineno">  478</span>    }</div>
<div class="line"><a id="l00479" name="l00479"></a><span class="lineno">  479</span> </div>
<div class="line"><a id="l00480" name="l00480"></a><span class="lineno">  480</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">isOnline</a>() &amp;&amp; !<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">hasBufferedMsg</a>())</div>
<div class="line"><a id="l00481" name="l00481"></a><span class="lineno">  481</span>    {</div>
<div class="line"><a id="l00482" name="l00482"></a><span class="lineno">  482</span>      <span class="keywordflow">if</span> (<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aee0cf549bea2daebc3e08742853d36c1">publish</a>(query) == <a class="code hl_enumvalue" href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3a4586da37f65c0965ce6973ceb7f65c40">PublishResult::PublishedWithoutAnswer</a>)</div>
<div class="line"><a id="l00483" name="l00483"></a><span class="lineno">  483</span>      {</div>
<div class="line"><a id="l00484" name="l00484"></a><span class="lineno">  484</span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00485" name="l00485"></a><span class="lineno">  485</span>      }</div>
<div class="line"><a id="l00486" name="l00486"></a><span class="lineno">  486</span>      <span class="keywordflow">else</span></div>
<div class="line"><a id="l00487" name="l00487"></a><span class="lineno">  487</span>      {</div>
<div class="line"><a id="l00488" name="l00488"></a><span class="lineno">  488</span>        ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failed to publish query %s&quot;</span>, query.payload().data());</div>
<div class="line"><a id="l00489" name="l00489"></a><span class="lineno">  489</span>        this-&gt;<a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ad558116614ee45601f4665d395838727">disconnect</a>();</div>
<div class="line"><a id="l00490" name="l00490"></a><span class="lineno">  490</span>      }</div>
<div class="line"><a id="l00491" name="l00491"></a><span class="lineno">  491</span>    }</div>
<div class="line"><a id="l00492" name="l00492"></a><span class="lineno">  492</span> </div>
<div class="line"><a id="l00493" name="l00493"></a><span class="lineno">  493</span>    <span class="keywordflow">if</span> (query.buffered())</div>
<div class="line"><a id="l00494" name="l00494"></a><span class="lineno">  494</span>    {</div>
<div class="line"><a id="l00495" name="l00495"></a><span class="lineno">  495</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;msg = <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a>{query.payload(), <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a8790b1b9b5909541c62cd1ea7577e9d6">topic</a>, query.waitForReply()};</div>
<div class="line"><a id="l00496" name="l00496"></a><span class="lineno">  496</span>      <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a>.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#aad578ef8cbecdafb8c5ade345df415a3">push_back</a>(msg);</div>
<div class="line"><a id="l00497" name="l00497"></a><span class="lineno">  497</span>    }</div>
<div class="line"><a id="l00498" name="l00498"></a><span class="lineno">  498</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00499" name="l00499"></a><span class="lineno">  499</span>  }</div>
</div>
<div class="line"><a id="l00500" name="l00500"></a><span class="lineno">  500</span> </div>
<div class="foldopen" id="foldopen00507" data-start="{" data-end="}">
<div class="line"><a id="l00507" name="l00507"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#aec5c26ad6c62b7446ca18841910ef82d">  507</a></span>  std::unique_ptr&lt;ServerMQTT::UserResponse&gt; <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aec5c26ad6c62b7446ca18841910ef82d">FabBackend::checkCard</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> uid)</div>
<div class="line"><a id="l00508" name="l00508"></a><span class="lineno">  508</span>  {</div>
<div class="line"><a id="l00509" name="l00509"></a><span class="lineno">  509</span>    <span class="keywordflow">return</span> processQuery&lt;ServerMQTT::UserResponse, ServerMQTT::UserQuery&gt;(uid);</div>
<div class="line"><a id="l00510" name="l00510"></a><span class="lineno">  510</span>  }</div>
</div>
<div class="line"><a id="l00511" name="l00511"></a><span class="lineno">  511</span> </div>
<div class="foldopen" id="foldopen00517" data-start="{" data-end="}">
<div class="line"><a id="l00517" name="l00517"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#a78f56442b255e95b0930f9800bd91ec4">  517</a></span>  std::unique_ptr&lt;ServerMQTT::MachineResponse&gt; <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a78f56442b255e95b0930f9800bd91ec4">FabBackend::checkMachine</a>()</div>
<div class="line"><a id="l00518" name="l00518"></a><span class="lineno">  518</span>  {</div>
<div class="line"><a id="l00519" name="l00519"></a><span class="lineno">  519</span>    <span class="keywordflow">return</span> processQuery&lt;ServerMQTT::MachineResponse, ServerMQTT::MachineQuery&gt;();</div>
<div class="line"><a id="l00520" name="l00520"></a><span class="lineno">  520</span>  }</div>
</div>
<div class="line"><a id="l00521" name="l00521"></a><span class="lineno">  521</span> </div>
<div class="foldopen" id="foldopen00528" data-start="{" data-end="}">
<div class="line"><a id="l00528" name="l00528"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#a2b45b2e58a6358c640c48e636e3cb5db">  528</a></span>  std::unique_ptr&lt;ServerMQTT::SimpleResponse&gt; <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a2b45b2e58a6358c640c48e636e3cb5db">FabBackend::startUse</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> uid)</div>
<div class="line"><a id="l00529" name="l00529"></a><span class="lineno">  529</span>  {</div>
<div class="line"><a id="l00530" name="l00530"></a><span class="lineno">  530</span>    <span class="keywordflow">return</span> processQuery&lt;ServerMQTT::SimpleResponse, ServerMQTT::StartUseQuery&gt;(uid);</div>
<div class="line"><a id="l00531" name="l00531"></a><span class="lineno">  531</span>  }</div>
</div>
<div class="line"><a id="l00532" name="l00532"></a><span class="lineno">  532</span> </div>
<div class="foldopen" id="foldopen00540" data-start="{" data-end="}">
<div class="line"><a id="l00540" name="l00540"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#aa312ecaa96c4ccd3fc4e822b5495c8fe">  540</a></span>  std::unique_ptr&lt;ServerMQTT::SimpleResponse&gt; <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#aa312ecaa96c4ccd3fc4e822b5495c8fe">FabBackend::finishUse</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> uid, std::chrono::seconds duration_s)</div>
<div class="line"><a id="l00541" name="l00541"></a><span class="lineno">  541</span>  {</div>
<div class="line"><a id="l00542" name="l00542"></a><span class="lineno">  542</span>    <span class="keywordflow">return</span> processQuery&lt;ServerMQTT::SimpleResponse, ServerMQTT::StopUseQuery&gt;(uid, duration_s);</div>
<div class="line"><a id="l00543" name="l00543"></a><span class="lineno">  543</span>  }</div>
</div>
<div class="line"><a id="l00544" name="l00544"></a><span class="lineno">  544</span> </div>
<div class="foldopen" id="foldopen00552" data-start="{" data-end="}">
<div class="line"><a id="l00552" name="l00552"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#ac33b68d0146302e9db6a0adc7b8c3ac0">  552</a></span>  std::unique_ptr&lt;ServerMQTT::SimpleResponse&gt; <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac33b68d0146302e9db6a0adc7b8c3ac0">FabBackend::inUse</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> uid, std::chrono::seconds duration_s)</div>
<div class="line"><a id="l00553" name="l00553"></a><span class="lineno">  553</span>  {</div>
<div class="line"><a id="l00554" name="l00554"></a><span class="lineno">  554</span>    <span class="keywordflow">return</span> processQuery&lt;ServerMQTT::SimpleResponse, ServerMQTT::InUseQuery&gt;(uid, duration_s);</div>
<div class="line"><a id="l00555" name="l00555"></a><span class="lineno">  555</span>  }</div>
</div>
<div class="line"><a id="l00556" name="l00556"></a><span class="lineno">  556</span> </div>
<div class="foldopen" id="foldopen00563" data-start="{" data-end="}">
<div class="line"><a id="l00563" name="l00563"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#a4a2b36c40f955744965d385e8cad6fb7">  563</a></span>  std::unique_ptr&lt;ServerMQTT::SimpleResponse&gt; <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a4a2b36c40f955744965d385e8cad6fb7">FabBackend::registerMaintenance</a>(<a class="code hl_typedef" href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">card::uid_t</a> maintainer)</div>
<div class="line"><a id="l00564" name="l00564"></a><span class="lineno">  564</span>  {</div>
<div class="line"><a id="l00565" name="l00565"></a><span class="lineno">  565</span>    <span class="keywordflow">return</span> processQuery&lt;ServerMQTT::SimpleResponse, ServerMQTT::RegisterMaintenanceQuery&gt;(maintainer);</div>
<div class="line"><a id="l00566" name="l00566"></a><span class="lineno">  566</span>  }</div>
</div>
<div class="line"><a id="l00567" name="l00567"></a><span class="lineno">  567</span> </div>
<div class="foldopen" id="foldopen00573" data-start="{" data-end="}">
<div class="line"><a id="l00573" name="l00573"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#abb44b529c858ddc1006592e9bac8a815">  573</a></span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#abb44b529c858ddc1006592e9bac8a815">FabBackend::alive</a>()</div>
<div class="line"><a id="l00574" name="l00574"></a><span class="lineno">  574</span>  {</div>
<div class="line"><a id="l00575" name="l00575"></a><span class="lineno">  575</span>    <span class="keywordflow">return</span> processQuery&lt;ServerMQTT::AliveQuery&gt;();</div>
<div class="line"><a id="l00576" name="l00576"></a><span class="lineno">  576</span>  }</div>
</div>
<div class="line"><a id="l00577" name="l00577"></a><span class="lineno">  577</span> </div>
<div class="foldopen" id="foldopen00583" data-start="{" data-end="}">
<div class="line"><a id="l00583" name="l00583"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#a492c94ed0682ad834ccd7ddc7c20a55a">  583</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a492c94ed0682ad834ccd7ddc7c20a55a">FabBackend::setChannel</a>(int32_t channel)</div>
<div class="line"><a id="l00584" name="l00584"></a><span class="lineno">  584</span>  {</div>
<div class="line"><a id="l00585" name="l00585"></a><span class="lineno">  585</span>    this-&gt;channel = <a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#a12a4f3f195db522c6b108deacf1219b9">channel</a>;</div>
<div class="line"><a id="l00586" name="l00586"></a><span class="lineno">  586</span>  }</div>
</div>
<div class="line"><a id="l00587" name="l00587"></a><span class="lineno">  587</span> </div>
<div class="foldopen" id="foldopen00588" data-start="{" data-end="}">
<div class="line"><a id="l00588" name="l00588"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">  588</a></span>  [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">FabBackend::hasBufferedMsg</a>() const -&gt; <span class="keywordtype">bool</span></div>
<div class="line"><a id="l00589" name="l00589"></a><span class="lineno">  589</span>  {</div>
<div class="line"><a id="l00590" name="l00590"></a><span class="lineno">  590</span>    <span class="keywordflow">return</span> this-&gt;<a class="code hl_variable" href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">buffer</a>.<a class="code hl_function" href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">count</a>() &gt; 0;</div>
<div class="line"><a id="l00591" name="l00591"></a><span class="lineno">  591</span>  }</div>
</div>
<div class="line"><a id="l00592" name="l00592"></a><span class="lineno">  592</span> </div>
<div class="foldopen" id="foldopen00593" data-start="{" data-end="}">
<div class="line"><a id="l00593" name="l00593"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#a4d0b8d49942ff06c02abbcbfe7a4784a">  593</a></span>  [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a4d0b8d49942ff06c02abbcbfe7a4784a">FabBackend::transmitBuffer</a>() -&gt; <span class="keywordtype">bool</span></div>
<div class="line"><a id="l00594" name="l00594"></a><span class="lineno">  594</span>  {</div>
<div class="line"><a id="l00595" name="l00595"></a><span class="lineno">  595</span>    <span class="keywordflow">while</span> (hasBufferedMsg() &amp;&amp; isOnline())</div>
<div class="line"><a id="l00596" name="l00596"></a><span class="lineno">  596</span>    {</div>
<div class="line"><a id="l00597" name="l00597"></a><span class="lineno">  597</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Retransmitting buffered messages...&quot;</span>);</div>
<div class="line"><a id="l00598" name="l00598"></a><span class="lineno">  598</span>      <span class="keyword">const</span> <span class="keyword">auto</span> &amp;msg = buffer.getMessage();</div>
<div class="line"><a id="l00599" name="l00599"></a><span class="lineno">  599</span>      <span class="keyword">const</span> <a class="code hl_class" href="classfabomatic_1_1_buffered_query.xhtml">BufferedQuery</a> bq{msg.mqtt_message, msg.<a class="code hl_variable" href="classfabomatic_1_1_buffered_query.xhtml#ab97558c0fc507f0c0c4da32252a0a063">mqtt_topic</a>, msg.wait_for_answer};</div>
<div class="line"><a id="l00600" name="l00600"></a><span class="lineno">  600</span>      <span class="keywordflow">if</span> (bq.waitForReply())</div>
<div class="line"><a id="l00601" name="l00601"></a><span class="lineno">  601</span>      {</div>
<div class="line"><a id="l00602" name="l00602"></a><span class="lineno">  602</span>        <span class="keywordflow">if</span> (<span class="keyword">auto</span> result = publishWithReply(bq); result != PublishResult::PublishedWithAnswer)</div>
<div class="line"><a id="l00603" name="l00603"></a><span class="lineno">  603</span>        {</div>
<div class="line"><a id="l00604" name="l00604"></a><span class="lineno">  604</span>          ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Retransmitting buffered message failed!&quot;</span>);</div>
<div class="line"><a id="l00605" name="l00605"></a><span class="lineno">  605</span> </div>
<div class="line"><a id="l00606" name="l00606"></a><span class="lineno">  606</span>          <span class="comment">// If it has been published but not answered, do not try again</span></div>
<div class="line"><a id="l00607" name="l00607"></a><span class="lineno">  607</span>          <span class="keywordflow">if</span> (result == PublishResult::PublishedWithoutAnswer)</div>
<div class="line"><a id="l00608" name="l00608"></a><span class="lineno">  608</span>          {</div>
<div class="line"><a id="l00609" name="l00609"></a><span class="lineno">  609</span>            <span class="keyword">const</span> <span class="keyword">auto</span> &amp;bmsg = <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a>{msg.<a class="code hl_variable" href="structfabomatic_1_1_buffered_msg.xhtml#aba3d5f037ab046e241225bcc3afc2cc3">mqtt_message</a>, msg.mqtt_topic, msg.wait_for_answer};</div>
<div class="line"><a id="l00610" name="l00610"></a><span class="lineno">  610</span>            buffer.push_front(bmsg);</div>
<div class="line"><a id="l00611" name="l00611"></a><span class="lineno">  611</span>          }</div>
<div class="line"><a id="l00612" name="l00612"></a><span class="lineno">  612</span>          <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00613" name="l00613"></a><span class="lineno">  613</span>        }</div>
<div class="line"><a id="l00614" name="l00614"></a><span class="lineno">  614</span>      }</div>
<div class="line"><a id="l00615" name="l00615"></a><span class="lineno">  615</span>      <span class="keywordflow">else</span></div>
<div class="line"><a id="l00616" name="l00616"></a><span class="lineno">  616</span>      {</div>
<div class="line"><a id="l00617" name="l00617"></a><span class="lineno">  617</span>        <span class="keywordflow">if</span> (publish(bq) == PublishResult::ErrorNotPublished)</div>
<div class="line"><a id="l00618" name="l00618"></a><span class="lineno">  618</span>        {</div>
<div class="line"><a id="l00619" name="l00619"></a><span class="lineno">  619</span>          <span class="comment">// Will try again</span></div>
<div class="line"><a id="l00620" name="l00620"></a><span class="lineno">  620</span>          ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Retransmitting buffered message failed!&quot;</span>);</div>
<div class="line"><a id="l00621" name="l00621"></a><span class="lineno">  621</span>          <span class="keyword">const</span> <span class="keyword">auto</span> &amp;bmsg = <a class="code hl_struct" href="structfabomatic_1_1_buffered_msg.xhtml">BufferedMsg</a>{msg.<a class="code hl_variable" href="structfabomatic_1_1_buffered_msg.xhtml#aba3d5f037ab046e241225bcc3afc2cc3">mqtt_message</a>, msg.mqtt_topic, msg.wait_for_answer};</div>
<div class="line"><a id="l00622" name="l00622"></a><span class="lineno">  622</span>          buffer.push_front(bmsg);</div>
<div class="line"><a id="l00623" name="l00623"></a><span class="lineno">  623</span>          <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00624" name="l00624"></a><span class="lineno">  624</span>        }</div>
<div class="line"><a id="l00625" name="l00625"></a><span class="lineno">  625</span>      }</div>
<div class="line"><a id="l00626" name="l00626"></a><span class="lineno">  626</span>    }</div>
<div class="line"><a id="l00627" name="l00627"></a><span class="lineno">  627</span>    last_reply = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a id="l00628" name="l00628"></a><span class="lineno">  628</span> </div>
<div class="line"><a id="l00629" name="l00629"></a><span class="lineno">  629</span>    ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Retransmittion completed, remaining messages=%d&quot;</span>, buffer.count());</div>
<div class="line"><a id="l00630" name="l00630"></a><span class="lineno">  630</span>    <span class="keywordflow">return</span> !hasBufferedMsg();</div>
<div class="line"><a id="l00631" name="l00631"></a><span class="lineno">  631</span>  }</div>
</div>
<div class="line"><a id="l00632" name="l00632"></a><span class="lineno">  632</span> </div>
<div class="foldopen" id="foldopen00633" data-start="{" data-end="}">
<div class="line"><a id="l00633" name="l00633"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#a044a94e7220ee295bfab801b6ca32e32">  633</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a044a94e7220ee295bfab801b6ca32e32">FabBackend::saveBuffer</a>() -&gt; <span class="keywordtype">bool</span></div>
<div class="line"><a id="l00634" name="l00634"></a><span class="lineno">  634</span>  {</div>
<div class="line"><a id="l00635" name="l00635"></a><span class="lineno">  635</span>    <span class="keywordflow">if</span> (!buffer.hasChanged())</div>
<div class="line"><a id="l00636" name="l00636"></a><span class="lineno">  636</span>    {</div>
<div class="line"><a id="l00637" name="l00637"></a><span class="lineno">  637</span>      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00638" name="l00638"></a><span class="lineno">  638</span>    }</div>
<div class="line"><a id="l00639" name="l00639"></a><span class="lineno">  639</span> </div>
<div class="line"><a id="l00640" name="l00640"></a><span class="lineno">  640</span>    <span class="keyword">auto</span> sc = <a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">SavedConfig::LoadFromEEPROM</a>().value_or(<a class="code hl_function" href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">SavedConfig::DefaultConfig</a>());</div>
<div class="line"><a id="l00641" name="l00641"></a><span class="lineno">  641</span>    sc.message_buffer = buffer;</div>
<div class="line"><a id="l00642" name="l00642"></a><span class="lineno">  642</span> </div>
<div class="line"><a id="l00643" name="l00643"></a><span class="lineno">  643</span>    <span class="keywordflow">if</span> (sc.SaveToEEPROM())</div>
<div class="line"><a id="l00644" name="l00644"></a><span class="lineno">  644</span>    {</div>
<div class="line"><a id="l00645" name="l00645"></a><span class="lineno">  645</span>      buffer.setChanged(<span class="keyword">false</span>);</div>
<div class="line"><a id="l00646" name="l00646"></a><span class="lineno">  646</span>      ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Saved %d buffered messages&quot;</span>, buffer.count());</div>
<div class="line"><a id="l00647" name="l00647"></a><span class="lineno">  647</span>      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00648" name="l00648"></a><span class="lineno">  648</span>    }</div>
<div class="line"><a id="l00649" name="l00649"></a><span class="lineno">  649</span> </div>
<div class="line"><a id="l00650" name="l00650"></a><span class="lineno">  650</span>    ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Failed to save buffered messages!&quot;</span>);</div>
<div class="line"><a id="l00651" name="l00651"></a><span class="lineno">  651</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00652" name="l00652"></a><span class="lineno">  652</span>  }</div>
</div>
<div class="line"><a id="l00653" name="l00653"></a><span class="lineno">  653</span> </div>
<div class="foldopen" id="foldopen00654" data-start="{" data-end="}">
<div class="line"><a id="l00654" name="l00654"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_fab_backend.xhtml#a39353e6b4057e97b216a520fc7bef017">  654</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_fab_backend.xhtml#a39353e6b4057e97b216a520fc7bef017">FabBackend::loadBuffer</a>(<span class="keyword">const</span> <a class="code hl_class" href="classfabomatic_1_1_buffer.xhtml">Buffer</a> &amp;new_buffer) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00655" name="l00655"></a><span class="lineno">  655</span>  {</div>
<div class="line"><a id="l00656" name="l00656"></a><span class="lineno">  656</span>    buffer = new_buffer;</div>
<div class="line"><a id="l00657" name="l00657"></a><span class="lineno">  657</span>    buffer.setChanged(<span class="keyword">false</span>);</div>
<div class="line"><a id="l00658" name="l00658"></a><span class="lineno">  658</span>    ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Loaded buffer with %d messages&quot;</span>, buffer.count());</div>
<div class="line"><a id="l00659" name="l00659"></a><span class="lineno">  659</span>  }</div>
</div>
<div class="line"><a id="l00660" name="l00660"></a><span class="lineno">  660</span>} <span class="comment">// namespace fabomatic</span></div>
<div class="ttc" id="a_fab_backend_8hpp_xhtml"><div class="ttname"><a href="_fab_backend_8hpp.xhtml">FabBackend.hpp</a></div></div>
<div class="ttc" id="a_logging_8hpp_xhtml"><div class="ttname"><a href="_logging_8hpp.xhtml">Logging.hpp</a></div></div>
<div class="ttc" id="a_logging_8hpp_xhtml_a4ef5b5f197804a60836ab1e8907d8301"><div class="ttname"><a href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a></div><div class="ttdeci">static const char *const TAG</div><div class="ttdef"><b>Definition</b> <a href="_logging_8hpp_source.xhtml#l00006">Logging.hpp:6</a></div></div>
<div class="ttc" id="a_saved_config_8hpp_xhtml"><div class="ttname"><a href="_saved_config_8hpp.xhtml">SavedConfig.hpp</a></div></div>
<div class="ttc" id="a_tasks_8hpp_xhtml"><div class="ttname"><a href="_tasks_8hpp.xhtml">Tasks.hpp</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml">fabomatic::Buffer</a></div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00026">BufferedMsg.hpp:27</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_a9ff239a0ddbaed54bcf0a72f2517d7a0"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#a9ff239a0ddbaed54bcf0a72f2517d7a0">fabomatic::Buffer::count</a></div><div class="ttdeci">auto count() const -&gt; size_t</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00062">BufferedMsg.cpp:62</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffer_xhtml_aad578ef8cbecdafb8c5ade345df415a3"><div class="ttname"><a href="classfabomatic_1_1_buffer.xhtml#aad578ef8cbecdafb8c5ade345df415a3">fabomatic::Buffer::push_back</a></div><div class="ttdeci">auto push_back(const BufferedMsg &amp;message) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8cpp_source.xhtml#l00009">BufferedMsg.cpp:9</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffered_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_buffered_query.xhtml">fabomatic::BufferedQuery</a></div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00046">BufferedMsg.hpp:47</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_buffered_query_xhtml_ab97558c0fc507f0c0c4da32252a0a063"><div class="ttname"><a href="classfabomatic_1_1_buffered_query.xhtml#ab97558c0fc507f0c0c4da32252a0a063">fabomatic::BufferedQuery::mqtt_topic</a></div><div class="ttdeci">std::string_view mqtt_topic</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00050">BufferedMsg.hpp:50</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a02ce02db60b18f3de30e251ba14807bb"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a02ce02db60b18f3de30e251ba14807bb">fabomatic::FabBackend::mqtt_user</a></div><div class="ttdeci">std::string mqtt_user</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00038">FabBackend.hpp:38</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a0308ae992bc86c1b41bdd78f9536f553"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a0308ae992bc86c1b41bdd78f9536f553">fabomatic::FabBackend::last_reply</a></div><div class="ttdeci">std::string last_reply</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00048">FabBackend.hpp:48</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a044a94e7220ee295bfab801b6ca32e32"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a044a94e7220ee295bfab801b6ca32e32">fabomatic::FabBackend::saveBuffer</a></div><div class="ttdeci">auto saveBuffer() -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00633">FabBackend.cpp:633</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a04951b9823ac466be2285640171013e5"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a04951b9823ac466be2285640171013e5">fabomatic::FabBackend::waitForAnswer</a></div><div class="ttdeci">auto waitForAnswer(std::chrono::milliseconds timeout) -&gt; bool</div><div class="ttdoc">Waits for an answer from the MQTT server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00204">FabBackend.cpp:204</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a1218ae004e0146262801967ee50ec17a"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a1218ae004e0146262801967ee50ec17a">fabomatic::FabBackend::doc</a></div><div class="ttdeci">JsonDocument doc</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00033">FabBackend.hpp:33</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a12a4f3f195db522c6b108deacf1219b9"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a12a4f3f195db522c6b108deacf1219b9">fabomatic::FabBackend::channel</a></div><div class="ttdeci">int16_t channel</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00052">FabBackend.hpp:52</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a1a45f556aadcbc428d14b7c7577ed43d"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a1a45f556aadcbc428d14b7c7577ed43d">fabomatic::FabBackend::connect</a></div><div class="ttdeci">auto connect() -&gt; bool</div><div class="ttdoc">Establishes a connection to the WiFi network and the MQTT server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00291">FabBackend.cpp:291</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a22c2488e6a6c94c283ad7158ff37ca61"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a22c2488e6a6c94c283ad7158ff37ca61">fabomatic::FabBackend::client</a></div><div class="ttdeci">MQTTClient client</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00032">FabBackend.hpp:32</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a2924692a0dca43597d2cc594cb0573d2"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a2924692a0dca43597d2cc594cb0573d2">fabomatic::FabBackend::wifi_client</a></div><div class="ttdeci">WiFiClient wifi_client</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00043">FabBackend.hpp:43</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a2b45b2e58a6358c640c48e636e3cb5db"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a2b45b2e58a6358c640c48e636e3cb5db">fabomatic::FabBackend::startUse</a></div><div class="ttdeci">auto startUse(const card::uid_t uid) -&gt; std::unique_ptr&lt; ServerMQTT::SimpleResponse &gt;</div><div class="ttdoc">Registers the start of machine usage.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00528">FabBackend.cpp:528</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a39353e6b4057e97b216a520fc7bef017"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a39353e6b4057e97b216a520fc7bef017">fabomatic::FabBackend::loadBuffer</a></div><div class="ttdeci">auto loadBuffer(const Buffer &amp;new_buffer) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00654">FabBackend.cpp:654</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a3a66b317f253de31ec0147c4e28aba6b"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a3a66b317f253de31ec0147c4e28aba6b">fabomatic::FabBackend::online</a></div><div class="ttdeci">bool online</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00050">FabBackend.hpp:50</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a3ab102598ee93269de90a0170e024619"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a3ab102598ee93269de90a0170e024619">fabomatic::FabBackend::messageReceived</a></div><div class="ttdeci">auto messageReceived(String &amp;topic, String &amp;payload) -&gt; void</div><div class="ttdoc">Callback function for received MQTT messages.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00246">FabBackend.cpp:246</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a492c94ed0682ad834ccd7ddc7c20a55a"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a492c94ed0682ad834ccd7ddc7c20a55a">fabomatic::FabBackend::setChannel</a></div><div class="ttdeci">auto setChannel(int32_t channel) -&gt; void</div><div class="ttdoc">Sets the WiFi channel to use.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00583">FabBackend.cpp:583</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a4a2b36c40f955744965d385e8cad6fb7"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a4a2b36c40f955744965d385e8cad6fb7">fabomatic::FabBackend::registerMaintenance</a></div><div class="ttdeci">auto registerMaintenance(const card::uid_t maintainer) -&gt; std::unique_ptr&lt; ServerMQTT::SimpleResponse &gt;</div><div class="ttdoc">Registers a maintenance action.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00563">FabBackend.cpp:563</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a4d0b8d49942ff06c02abbcbfe7a4784a"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a4d0b8d49942ff06c02abbcbfe7a4784a">fabomatic::FabBackend::transmitBuffer</a></div><div class="ttdeci">auto transmitBuffer() -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00593">FabBackend.cpp:593</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a532fe40b9761d95b1acc6572df24cd68"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a532fe40b9761d95b1acc6572df24cd68">fabomatic::FabBackend::wifi_password</a></div><div class="ttdeci">std::string wifi_password</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00036">FabBackend.hpp:36</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a567eee830bd65f941ba98428e2642f4f"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a567eee830bd65f941ba98428e2642f4f">fabomatic::FabBackend::last_query</a></div><div class="ttdeci">std::string last_query</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00047">FabBackend.hpp:47</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a7464218df94ba7854cb34aaab314cbc2"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a7464218df94ba7854cb34aaab314cbc2">fabomatic::FabBackend::broker_hostname</a></div><div class="ttdeci">std::string broker_hostname</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00037">FabBackend.hpp:37</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a78f56442b255e95b0930f9800bd91ec4"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a78f56442b255e95b0930f9800bd91ec4">fabomatic::FabBackend::checkMachine</a></div><div class="ttdeci">auto checkMachine() -&gt; std::unique_ptr&lt; ServerMQTT::MachineResponse &gt;</div><div class="ttdoc">Checks the machine status on the server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00517">FabBackend.cpp:517</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a8129677184366856b2f1c3a582e10bdb"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a8129677184366856b2f1c3a582e10bdb">fabomatic::FabBackend::response_topic</a></div><div class="ttdeci">std::string response_topic</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00046">FabBackend.hpp:46</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a8790b1b9b5909541c62cd1ea7577e9d6"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a8790b1b9b5909541c62cd1ea7577e9d6">fabomatic::FabBackend::topic</a></div><div class="ttdeci">std::string topic</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00045">FabBackend.hpp:45</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a893e412def82572f4281bdcd92bfcb36"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a893e412def82572f4281bdcd92bfcb36">fabomatic::FabBackend::wifi_ssid</a></div><div class="ttdeci">std::string wifi_ssid</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00035">FabBackend.hpp:35</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a8af330c9d926f6ef6e6307ab3fd23834"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a8af330c9d926f6ef6e6307ab3fd23834">fabomatic::FabBackend::callback</a></div><div class="ttdeci">MQTTClientCallbackSimpleFunction callback</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00042">FabBackend.hpp:42</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a8f5341d851e1cd24dfaa64be0237dd5a"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a8f5341d851e1cd24dfaa64be0237dd5a">fabomatic::FabBackend::publishWithReply</a></div><div class="ttdeci">auto publishWithReply(const ServerMQTT::Query &amp;payload) -&gt; PublishResult</div><div class="ttdoc">Posts a query to the MQTT server and waits for a reply.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00061">FabBackend.cpp:61</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_a9367a14306331d326e5e7971a0728633"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#a9367a14306331d326e5e7971a0728633">fabomatic::FabBackend::MAX_MSG_SIZE</a></div><div class="ttdeci">static constexpr auto MAX_MSG_SIZE</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00024">FabBackend.hpp:24</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_aa312ecaa96c4ccd3fc4e822b5495c8fe"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#aa312ecaa96c4ccd3fc4e822b5495c8fe">fabomatic::FabBackend::finishUse</a></div><div class="ttdeci">auto finishUse(const card::uid_t uid, std::chrono::seconds duration) -&gt; std::unique_ptr&lt; ServerMQTT::SimpleResponse &gt;</div><div class="ttdoc">Registers the end of machine usage.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00540">FabBackend.cpp:540</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_aaf05998bb9dec17ae98283969109bb2d"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#aaf05998bb9dec17ae98283969109bb2d">fabomatic::FabBackend::loop</a></div><div class="ttdeci">auto loop() -&gt; bool</div><div class="ttdoc">Main loop for the MQTT client.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00184">FabBackend.cpp:184</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_aaf87e6d61085a67255fac06e491fbf90"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#aaf87e6d61085a67255fac06e491fbf90">fabomatic::FabBackend::processQuery</a></div><div class="ttdeci">auto processQuery(QueryArgs &amp;&amp;...) -&gt; std::unique_ptr&lt; RespT &gt;</div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ab91778bc8d79c8265b68b00ff01b17e5"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ab91778bc8d79c8265b68b00ff01b17e5">fabomatic::FabBackend::answer_pending</a></div><div class="ttdeci">bool answer_pending</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00051">FabBackend.hpp:51</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_abb44b529c858ddc1006592e9bac8a815"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#abb44b529c858ddc1006592e9bac8a815">fabomatic::FabBackend::alive</a></div><div class="ttdeci">auto alive() -&gt; bool</div><div class="ttdoc">Sends a ping to the server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00573">FabBackend.cpp:573</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ac33b68d0146302e9db6a0adc7b8c3ac0"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ac33b68d0146302e9db6a0adc7b8c3ac0">fabomatic::FabBackend::inUse</a></div><div class="ttdeci">auto inUse(const card::uid_t uid, std::chrono::seconds duration) -&gt; std::unique_ptr&lt; ServerMQTT::SimpleResponse &gt;</div><div class="ttdoc">Informs the backend that the machine is in use.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00552">FabBackend.cpp:552</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ac4de362845adea42309283248654cf46"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ac4de362845adea42309283248654cf46">fabomatic::FabBackend::mqtt_password</a></div><div class="ttdeci">std::string mqtt_password</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00039">FabBackend.hpp:39</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ac77de5d35fe86ccf4b23c97548187256"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ac77de5d35fe86ccf4b23c97548187256">fabomatic::FabBackend::mqtt_client_name</a></div><div class="ttdeci">std::string mqtt_client_name</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00040">FabBackend.hpp:40</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ac80b4835d858bea27da461b18df5f570"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ac80b4835d858bea27da461b18df5f570">fabomatic::FabBackend::hasBufferedMsg</a></div><div class="ttdeci">auto hasBufferedMsg() const -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00588">FabBackend.cpp:588</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_acf5644d920896038018f990568e710c3"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#acf5644d920896038018f990568e710c3">fabomatic::FabBackend::configure</a></div><div class="ttdeci">auto configure(const SavedConfig &amp;config) -&gt; void</div><div class="ttdoc">Configures the FabBackend with the given configuration.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00021">FabBackend.cpp:21</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ad558116614ee45601f4665d395838727"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ad558116614ee45601f4665d395838727">fabomatic::FabBackend::disconnect</a></div><div class="ttdeci">auto disconnect() -&gt; void</div><div class="ttdoc">Disconnects from the MQTT server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00386">FabBackend.cpp:386</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_ad928751b2f967feaac0f2cb708c0d6e9"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#ad928751b2f967feaac0f2cb708c0d6e9">fabomatic::FabBackend::connectWiFi</a></div><div class="ttdeci">auto connectWiFi() -&gt; bool</div><div class="ttdoc">Connects to the WiFi network.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00259">FabBackend.cpp:259</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_aec5c26ad6c62b7446ca18841910ef82d"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#aec5c26ad6c62b7446ca18841910ef82d">fabomatic::FabBackend::checkCard</a></div><div class="ttdeci">auto checkCard(const card::uid_t uid) -&gt; std::unique_ptr&lt; ServerMQTT::UserResponse &gt;</div><div class="ttdoc">Checks if the card ID is known to the server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00507">FabBackend.cpp:507</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_aee0cf549bea2daebc3e08742853d36c1"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#aee0cf549bea2daebc3e08742853d36c1">fabomatic::FabBackend::publish</a></div><div class="ttdeci">auto publish(const QueryT &amp;payload) -&gt; PublishResult</div><div class="ttdoc">Publishes a query on the MQTT server.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00141">FabBackend.cpp:141</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_aef092e0e1db0c3539d5474fad2456255"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#aef092e0e1db0c3539d5474fad2456255">fabomatic::FabBackend::isOnline</a></div><div class="ttdeci">auto isOnline() const -&gt; bool</div><div class="ttdoc">Checks if the client is online.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8cpp_source.xhtml#l00235">FabBackend.cpp:235</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_af3e533d72406fdddc602359fdb9a5ae3"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3">fabomatic::FabBackend::PublishResult</a></div><div class="ttdeci">PublishResult</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00025">FabBackend.hpp:26</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_af3e533d72406fdddc602359fdb9a5ae3a4586da37f65c0965ce6973ceb7f65c40"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3a4586da37f65c0965ce6973ceb7f65c40">fabomatic::FabBackend::PublishResult::PublishedWithoutAnswer</a></div><div class="ttdeci">@ PublishedWithoutAnswer</div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_af3e533d72406fdddc602359fdb9a5ae3af6278bbfdfc6fff58dae91a03d739c93"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#af3e533d72406fdddc602359fdb9a5ae3af6278bbfdfc6fff58dae91a03d739c93">fabomatic::FabBackend::PublishResult::PublishedWithAnswer</a></div><div class="ttdeci">@ PublishedWithAnswer</div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml_afee0d715d6f61ca3306dd60de5b79fd1"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml#afee0d715d6f61ca3306dd60de5b79fd1">fabomatic::FabBackend::buffer</a></div><div class="ttdeci">Buffer buffer</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00054">FabBackend.hpp:54</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml">fabomatic::SavedConfig</a></div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00019">SavedConfig.hpp:20</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a3a6f62510c34ed7a4491022e4e43b9c2"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a3a6f62510c34ed7a4491022e4e43b9c2">fabomatic::SavedConfig::DefaultConfig</a></div><div class="ttdeci">static auto DefaultConfig() -&gt; SavedConfig</div><div class="ttdoc">Returns the default configuration built from conf.hpp and secrets.hpp.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00028">SavedConfig.cpp:28</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a48a97bdcbb24fe8f5e2f36a173839cdf"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a48a97bdcbb24fe8f5e2f36a173839cdf">fabomatic::SavedConfig::message_buffer</a></div><div class="ttdeci">Buffer message_buffer</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00073">SavedConfig.hpp:73</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a68004c1190623a027b2a1f41607cd33f"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a68004c1190623a027b2a1f41607cd33f">fabomatic::SavedConfig::mqtt_password</a></div><div class="ttdeci">std::string mqtt_password</div><div class="ttdoc">MQTT password.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00058">SavedConfig.hpp:58</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a8cc620b09cef7aceaf7ec87e72dfcdc0"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a8cc620b09cef7aceaf7ec87e72dfcdc0">fabomatic::SavedConfig::mqtt_user</a></div><div class="ttdeci">std::string mqtt_user</div><div class="ttdoc">MQTT username.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00055">SavedConfig.hpp:55</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a8de320beb3e706c35582c049d3681c42"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a8de320beb3e706c35582c049d3681c42">fabomatic::SavedConfig::mqtt_server</a></div><div class="ttdeci">std::string mqtt_server</div><div class="ttdoc">MQTT server.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00052">SavedConfig.hpp:52</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_a8f7b5fba524d14a66ed1eaeda08a7e0d"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#a8f7b5fba524d14a66ed1eaeda08a7e0d">fabomatic::SavedConfig::password</a></div><div class="ttdeci">std::string password</div><div class="ttdoc">WiFi password.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00049">SavedConfig.hpp:49</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_aa2312c6cebb6b73f66e9f8238cb1b17f"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#aa2312c6cebb6b73f66e9f8238cb1b17f">fabomatic::SavedConfig::machine_id</a></div><div class="ttdeci">std::string machine_id</div><div class="ttdoc">Machine ID connected to the board.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00065">SavedConfig.hpp:65</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_abccca47e85f3214c2ce780230bfe7f49"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#abccca47e85f3214c2ce780230bfe7f49">fabomatic::SavedConfig::ssid</a></div><div class="ttdeci">std::string ssid</div><div class="ttdoc">WiFi SSID.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8hpp_source.xhtml#l00046">SavedConfig.hpp:46</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_saved_config_xhtml_aca3fe97dfa74c005d47ffef700392d99"><div class="ttname"><a href="classfabomatic_1_1_saved_config.xhtml#aca3fe97dfa74c005d47ffef700392d99">fabomatic::SavedConfig::LoadFromEEPROM</a></div><div class="ttdeci">static auto LoadFromEEPROM() -&gt; std::optional&lt; SavedConfig &gt;</div><div class="ttdoc">Loads the configuration from EEPROM if available and matching revision number.</div><div class="ttdef"><b>Definition</b> <a href="_saved_config_8cpp_source.xhtml#l00052">SavedConfig.cpp:52</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_alive_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_alive_query.xhtml">fabomatic::ServerMQTT::AliveQuery</a></div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00045">MQTTtypes.hpp:46</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_server_m_q_t_t_1_1_query_xhtml"><div class="ttname"><a href="classfabomatic_1_1_server_m_q_t_t_1_1_query.xhtml">fabomatic::ServerMQTT::Query</a></div><div class="ttdef"><b>Definition</b> <a href="_m_q_t_ttypes_8hpp_source.xhtml#l00014">MQTTtypes.hpp:15</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_tasks_xhtml_a5c20f560f5934822d39ba116a16f3ab6"><div class="ttname"><a href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">fabomatic::Tasks::delay</a></div><div class="ttdeci">auto delay(const milliseconds duration) -&gt; void</div><div class="ttdoc">Wait for a delay, allowing OTA updates.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00250">Tasks.cpp:250</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1card_xhtml_aa36a4f716561b5c72d144ad55bc3e53b"><div class="ttname"><a href="namespacefabomatic_1_1card.xhtml#aa36a4f716561b5c72d144ad55bc3e53b">fabomatic::card::uid_t</a></div><div class="ttdeci">u_int64_t uid_t</div><div class="ttdef"><b>Definition</b> <a href="card_8hpp_source.xhtml#l00014">card.hpp:14</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1mqtt_xhtml_a606e6b5c7c411ba632b27c92882edb32"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a606e6b5c7c411ba632b27c92882edb32">fabomatic::conf::mqtt::response_topic</a></div><div class="ttdeci">static constexpr std::string_view response_topic</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00222">conf.hpp:222</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1mqtt_xhtml_a6828edf0ca1e3124b91c14d7f4f04045"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a6828edf0ca1e3124b91c14d7f4f04045">fabomatic::conf::mqtt::topic</a></div><div class="ttdeci">static constexpr std::string_view topic</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00217">conf.hpp:217</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1mqtt_xhtml_a8418761ec7353545c7130692339b9cc6"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a8418761ec7353545c7130692339b9cc6">fabomatic::conf::mqtt::TIMEOUT_REPLY_SERVER</a></div><div class="ttdeci">static constexpr auto TIMEOUT_REPLY_SERVER</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00232">conf.hpp:232</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1mqtt_xhtml_a9385c322eb16f7f09992855dec71df20"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a9385c322eb16f7f09992855dec71df20">fabomatic::conf::mqtt::MAX_TRIES</a></div><div class="ttdeci">static constexpr auto MAX_TRIES</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00227">conf.hpp:227</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml"><div class="ttname"><a href="namespacefabomatic.xhtml">fabomatic</a></div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8cpp_source.xhtml#l00010">AuthProvider.cpp:11</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_buffered_msg_xhtml"><div class="ttname"><a href="structfabomatic_1_1_buffered_msg.xhtml">fabomatic::BufferedMsg</a></div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00015">BufferedMsg.hpp:16</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_buffered_msg_xhtml_aba3d5f037ab046e241225bcc3afc2cc3"><div class="ttname"><a href="structfabomatic_1_1_buffered_msg.xhtml#aba3d5f037ab046e241225bcc3afc2cc3">fabomatic::BufferedMsg::mqtt_message</a></div><div class="ttdeci">std::string mqtt_message</div><div class="ttdef"><b>Definition</b> <a href="_buffered_msg_8hpp_source.xhtml#l00017">BufferedMsg.hpp:17</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jun 30 2024 20:13:23 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
