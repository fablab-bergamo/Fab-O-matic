<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: Machine.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(0); });
/* @license-end */
</script>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">Machine.cpp</div></div>
</div><!--header-->
<div class="contents">
<a href="_machine_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#include &quot;<a class="code" href="_machine_8hpp.xhtml">Machine.hpp</a>&quot;</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#include &quot;Arduino.h&quot;</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &quot;<a class="code" href="_fab_backend_8hpp.xhtml">FabBackend.hpp</a>&quot;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &quot;<a class="code" href="_logging_8hpp.xhtml">Logging.hpp</a>&quot;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &quot;<a class="code" href="_tasks_8hpp.xhtml">Tasks.hpp</a>&quot;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &quot;<a class="code" href="pins_8hpp.xhtml">pins.hpp</a>&quot;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &quot;<a class="code" href="secrets_8hpp.xhtml">secrets.hpp</a>&quot;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;chrono&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &lt;cstdint&gt;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &lt;sstream&gt;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="preprocessor">#include &lt;driver/gpio.h&gt;</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefabomatic.xhtml">fabomatic</a></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>{</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  <span class="keyword">using namespace </span>std::chrono_literals;</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  <span class="keyword">using </span><a class="code hl_typedef" href="namespacefabomatic.xhtml#ae782aea667d4a7a1a9f42217a5b172ed">milliseconds</a> = std::chrono::milliseconds;</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span> </div>
<div class="foldopen" id="foldopen00019" data-start="" data-end="">
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno"><a class="line" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">   19</a></span><span class="preprocessor">#define CHECK_CONFIGURED(ret_type)                   \</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="preprocessor">  if (!config.has_value() || !server.has_value())    \</span></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="preprocessor">  {                                                  \</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="preprocessor">    ESP_LOGE(TAG, &quot;Machine : call configure first&quot;); \</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="preprocessor">    return ret_type();                               \</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="preprocessor">  }</span></div>
</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span> </div>
<div class="foldopen" id="foldopen00026" data-start="{" data-end="}">
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a75d5f7be60826db90c639b138a7153e3">   26</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a75d5f7be60826db90c639b138a7153e3">Machine::configure</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfabomatic_1_1_machine_config.xhtml">MachineConfig</a> &amp;new_config, <a class="code hl_class" href="classfabomatic_1_1_fab_backend.xhtml">FabBackend</a> &amp;serv) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  {</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>    <span class="comment">// https://stackoverflow.com/questions/67596731/why-is-stdoptionaltoperator-deleted-when-t-contains-a-const-data-memb</span></div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>    config.emplace(new_config);</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>    server = std::reference_wrapper&lt;FabBackend&gt;(serv);</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>    <span class="keywordflow">if</span> (config.value().hasRelay())</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    {</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>      <span class="keyword">const</span> <span class="keyword">auto</span> pin = config.value().relay_config.ch1_pin;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>      digitalWrite(pin,</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>                   config.value().relay_config.active_low ? HIGH : LOW);</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>      pinMode(pin, OUTPUT);</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>      <span class="comment">// Relay coil requires some juice</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>      gpio_set_drive_capability(<span class="keyword">static_cast&lt;</span>gpio_num_t<span class="keyword">&gt;</span>(pin), GPIO_DRIVE_CAP_3);</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    }</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Machine configured : %s&quot;</span>, toString().c_str());</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  }</div>
</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="foldopen" id="foldopen00049" data-start="{" data-end="}">
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a8bde1bdf40d146c521b623d54e2df1cf">   49</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a8bde1bdf40d146c521b623d54e2df1cf">Machine::getMachineId</a>() const -&gt; <a class="code hl_struct" href="struct_machine_i_d.xhtml">MachineID</a></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  {</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<a class="code hl_struct" href="struct_machine_i_d.xhtml">MachineID</a>);</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().machine_id;</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  }</div>
</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="foldopen" id="foldopen00057" data-start="{" data-end="}">
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a74aa0b2cd34205ba57710affc56f5c3c">   57</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a74aa0b2cd34205ba57710affc56f5c3c">Machine::isFree</a>() const -&gt; <span class="keywordtype">bool</span></div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  {</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>    <span class="keywordflow">return</span> !<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a7b30e014bf3166b1f6692d3e64d18827">active</a>;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  }</div>
</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="foldopen" id="foldopen00065" data-start="{" data-end="}">
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#ac0591da2ff437cd6c7cc91bd09b4dff7">   65</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#ac0591da2ff437cd6c7cc91bd09b4dff7">Machine::login</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfabomatic_1_1_fab_user.xhtml">FabUser</a> &amp;user) -&gt; <span class="keywordtype">bool</span></div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  {</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">bool</span>);</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>    <span class="keywordflow">if</span> (isFree() &amp;&amp; allowed)</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>    {</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>      active = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>      current_user = user;</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>      power(<span class="keyword">true</span>);</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>      usage_start_timestamp = <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">fabomatic::Tasks::arduinoNow</a>();</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    }</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  }</div>
</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="foldopen" id="foldopen00081" data-start="{" data-end="}">
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a3c5304fd80e0cc1c2118a59c64222d6d">   81</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a3c5304fd80e0cc1c2118a59c64222d6d">Machine::getPowerState</a>() const -&gt; <a class="code hl_class" href="classfabomatic_1_1_machine.xhtml">Machine</a>::<a class="code hl_enumeration" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838">PowerState</a></div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  {</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a2bc2b55d0e25444c6c169a94c44ba571">power_state</a>;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  }</div>
</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="foldopen" id="foldopen00087" data-start="{" data-end="}">
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a86cd6dfd9fefa7221a49cc07c78fc851">   87</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a86cd6dfd9fefa7221a49cc07c78fc851">Machine::logout</a>() -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  {</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    <span class="keywordflow">if</span> (active)</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>    {</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>      active = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>      power_state = PowerState::WaitingPowerOff;</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>      usage_start_timestamp = std::nullopt;</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span> </div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>      <span class="comment">// Sets the countdown to power off</span></div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>      logoff_timestamp = <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">fabomatic::Tasks::arduinoNow</a>();</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>      <span class="keywordflow">if</span> (config.value().grace_period == 0s)</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>      {</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>        power(<span class="keyword">false</span>);</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>      }</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span> </div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>      ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Machine will be shutdown in %lld s&quot;</span>,</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>               config.value().grace_period.count());</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>    }</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  }</div>
</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span> </div>
<div class="foldopen" id="foldopen00111" data-start="{" data-end="}">
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a1161d52e85bff96812852f50f53335c9">  111</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a1161d52e85bff96812852f50f53335c9">Machine::canPowerOff</a>() const -&gt; <span class="keywordtype">bool</span></div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  {</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a9f1c52164376bb949436e0da5020baf6">logoff_timestamp</a>.has_value())</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">bool</span>);</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>    <span class="keywordflow">return</span> (<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a2bc2b55d0e25444c6c169a94c44ba571">power_state</a> == <a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a878a40722160ead08a1f3cdef3e70a14">PowerState::WaitingPowerOff</a> &amp;&amp;</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>            <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">fabomatic::Tasks::arduinoNow</a>() - <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a9f1c52164376bb949436e0da5020baf6">logoff_timestamp</a>.value() &gt; <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().grace_period);</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>  }</div>
</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span> </div>
<div class="foldopen" id="foldopen00124" data-start="{" data-end="}">
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a871958cc57845c8651cf1058ed9b30e4">  124</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a871958cc57845c8651cf1058ed9b30e4">Machine::isShutdownImminent</a>() const -&gt; <span class="keywordtype">bool</span></div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  {</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a9f1c52164376bb949436e0da5020baf6">logoff_timestamp</a>.has_value())</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">bool</span>);</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>    <span class="keywordflow">return</span> (<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a2bc2b55d0e25444c6c169a94c44ba571">power_state</a> == <a class="code hl_enumvalue" href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a878a40722160ead08a1f3cdef3e70a14">PowerState::WaitingPowerOff</a> &amp;&amp;</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>            <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">fabomatic::Tasks::arduinoNow</a>() - <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a9f1c52164376bb949436e0da5020baf6">logoff_timestamp</a>.value() &lt;= <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().grace_period);</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  }</div>
</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span> </div>
<div class="foldopen" id="foldopen00137" data-start="{" data-end="}">
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#af80723250a85368e53055b5f91c14840">  137</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#af80723250a85368e53055b5f91c14840">Machine::power_relay</a>(<span class="keywordtype">bool</span> value) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  {</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>    ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Machine::power_relay : power set to %d&quot;</span>, value);</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span> </div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>    <span class="keyword">const</span> <span class="keyword">auto</span> pin = config.value().relay_config.ch1_pin;</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span> </div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>    <span class="keywordflow">if</span> (config.value().relay_config.active_low)</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>    {</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>      digitalWrite(pin, value ? LOW : HIGH);</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>    }</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>    {</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>      digitalWrite(pin, value ? HIGH : LOW);</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>    }</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span> </div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>    <span class="keywordflow">if</span> (value)</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>    {</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>      logoff_timestamp = std::nullopt;</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>      power_state = PowerState::PoweredOn;</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>    }</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>    {</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>      power_state = PowerState::PoweredOff;</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>    }</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>  }</div>
</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span> </div>
<div class="foldopen" id="foldopen00166" data-start="{" data-end="}">
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a116376ca892e59b8f754696161657631">  166</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a116376ca892e59b8f754696161657631">Machine::power_mqtt</a>(<span class="keywordtype">bool</span> value) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  {</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span> </div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>    ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Machine::power_mqtt : power set to %d&quot;</span>, value);</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span> </div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>    <span class="keyword">auto</span> &amp;mqtt_server = server.value().get();</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;sw_topic = config.value().mqtt_switch_topic;</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span> </div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>    String topic{sw_topic.data()};</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>    String payload = value ? <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#af01bd772b77a7090372a617d96aad5fd">conf::mqtt::mqtt_switch_on_message</a>.data() : <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#af01bd772b77a7090372a617d96aad5fd">conf::mqtt::mqtt_switch_on_message</a>.data();</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span> </div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>    <span class="keyword">auto</span> retries = 0;</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>    <span class="keywordflow">while</span> (!mqtt_server.publish(topic, payload, <span class="keyword">false</span>))</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>    {</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>      ESP_LOGE(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Error while publishing %s to %s&quot;</span>, payload.c_str(), topic.c_str());</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span> </div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>      mqtt_server.connect();</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>      <a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">Tasks::delay</a>(<a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a8418761ec7353545c7130692339b9cc6">conf::mqtt::TIMEOUT_REPLY_SERVER</a>);</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>      retries++;</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>      <span class="keywordflow">if</span> (retries &gt; <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a9385c322eb16f7f09992855dec71df20">conf::mqtt::MAX_TRIES</a>)</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>      {</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>        ESP_LOGW(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Unable to publish to MQTT (%d/%d)&quot;</span>, retries, <a class="code hl_variable" href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a9385c322eb16f7f09992855dec71df20">conf::mqtt::MAX_TRIES</a>);</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>        <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>      }</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>    }</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span> </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>    <span class="keywordflow">if</span> (value)</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>    {</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>      logoff_timestamp = std::nullopt;</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>      power_state = PowerState::PoweredOn;</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>    }</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>    {</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>      power_state = PowerState::PoweredOff;</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>    }</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>  }</div>
</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span> </div>
<div class="foldopen" id="foldopen00204" data-start="{" data-end="}">
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a0aa6c35ee214314d87297013cc29a8aa">  204</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a0aa6c35ee214314d87297013cc29a8aa">Machine::power</a>(<span class="keywordtype">bool</span> on_or_off) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>  {</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span> </div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>    ESP_LOGI(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Machine::power : power set to %d&quot;</span>, on_or_off);</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span> </div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>    <span class="keywordflow">if</span> (config.value().hasRelay())</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>    {</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>      power_relay(on_or_off);</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>    }</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>    <span class="keywordflow">if</span> (config.value().hasMqttSwitch())</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>    {</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>      power_mqtt(on_or_off);</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>    }</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>  }</div>
</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span> </div>
<div class="foldopen" id="foldopen00220" data-start="{" data-end="}">
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a39c30eaa242d5cc2ce784dbafeef87e8">  220</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a39c30eaa242d5cc2ce784dbafeef87e8">Machine::getActiveUser</a>() const -&gt; <a class="code hl_struct" href="structfabomatic_1_1_fab_user.xhtml">FabUser</a></div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>  {</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#aa39977d690373313aa7c24f52679cc5b">current_user</a>;</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>  }</div>
</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span> </div>
<div class="foldopen" id="foldopen00227" data-start="{" data-end="}">
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a9c845a163660550fa779516a8be8681a">  227</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a9c845a163660550fa779516a8be8681a">Machine::getUsageDuration</a>() const -&gt; std::chrono::seconds</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>  {</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a797653c883d897ef964cd3a862a6465d">usage_start_timestamp</a>.has_value())</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>    {</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>      <span class="keywordflow">return</span> std::chrono::duration_cast&lt;std::chrono::seconds&gt;(<a class="code hl_function" href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">fabomatic::Tasks::arduinoNow</a>() - <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a797653c883d897ef964cd3a862a6465d">usage_start_timestamp</a>.value());</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>    }</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>    <span class="keywordflow">return</span> 0s;</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>  }</div>
</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span> </div>
<div class="foldopen" id="foldopen00236" data-start="{" data-end="}">
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a1637e99f2d70262d2ab26f69ed4f0e47">  236</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a1637e99f2d70262d2ab26f69ed4f0e47">Machine::getMachineName</a>() const -&gt; const std::<span class="keywordtype">string</span></div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>  {</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(std::string);</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>    <span class="keywordflow">return</span> std::string{<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().machine_name.data()};</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>  }</div>
</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span> </div>
<div class="foldopen" id="foldopen00242" data-start="{" data-end="}">
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a39fbf9cad912d735cf84b75c0674646f">  242</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a39fbf9cad912d735cf84b75c0674646f">Machine::toString</a>() const -&gt; const std::<span class="keywordtype">string</span></div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>  {</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>    std::stringstream sstream{};</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span> </div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.has_value() || !<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#adb98818468832f2327b4a25a199cdb0e">server</a>.has_value())</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>    {</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>      sstream &lt;&lt; <span class="stringliteral">&quot;Machine (not configured)&quot;</span>;</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>      <span class="keywordflow">return</span> sstream.str();</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>    }</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span> </div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>    sstream &lt;&lt; <span class="stringliteral">&quot;Machine (ID:&quot;</span> &lt;&lt; <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a8bde1bdf40d146c521b623d54e2df1cf">getMachineId</a>().id;</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, Name:&quot;</span> &lt;&lt; <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a1637e99f2d70262d2ab26f69ed4f0e47">getMachineName</a>();</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, IsFree: &quot;</span> &lt;&lt; <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a74aa0b2cd34205ba57710affc56f5c3c">isFree</a>();</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, IsAllowed:&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a503004fad0cb04f4e525b60f8e7e9e0c">allowed</a>;</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, PowerState:&quot;</span> &lt;&lt; <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a3c5304fd80e0cc1c2118a59c64222d6d">getPowerState</a>());</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, &quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#aa39977d690373313aa7c24f52679cc5b">current_user</a>.<a class="code hl_function" href="structfabomatic_1_1_fab_user.xhtml#ab4b54f1830f1536824583e973d670582">toString</a>();</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, UsageDuration (s):&quot;</span> &lt;&lt; <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a9c845a163660550fa779516a8be8681a">getUsageDuration</a>().count();</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, ShutdownImminent:&quot;</span> &lt;&lt; <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a871958cc57845c8651cf1058ed9b30e4">isShutdownImminent</a>();</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, MaintenanceNeeded:&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#af6e53363524fca589cea90c51f953b7d">maintenanceNeeded</a>;</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, &quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().toString();</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, Active:&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a7b30e014bf3166b1f6692d3e64d18827">active</a>;</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a9f1c52164376bb949436e0da5020baf6">logoff_timestamp</a>)</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>    {</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>      sstream &lt;&lt; <span class="stringliteral">&quot;, Last logoff:&quot;</span> &lt;&lt; <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a9f1c52164376bb949436e0da5020baf6">logoff_timestamp</a>.value().time_since_epoch();</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>    }</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>    sstream &lt;&lt; <span class="stringliteral">&quot;, GracePeriod (s):&quot;</span> &lt;&lt; <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#aeee64b0919798272dfe45d40eb2e96be">getGracePeriod</a>().count();</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>    sstream &lt;&lt; <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span> </div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>    <span class="keywordflow">return</span> sstream.str();</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>  }</div>
</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span> </div>
<div class="foldopen" id="foldopen00273" data-start="{" data-end="}">
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a725099e117c8abf8182631d9334c4286">  273</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a725099e117c8abf8182631d9334c4286">Machine::getAutologoffDelay</a>() const -&gt; std::chrono::seconds</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>  {</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(std::chrono::seconds);</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().autologoff;</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>  }</div>
</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span> </div>
<div class="foldopen" id="foldopen00279" data-start="{" data-end="}">
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#ace7ccce1b3fabde562cfc7c5645dd6a3">  279</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#ace7ccce1b3fabde562cfc7c5645dd6a3">Machine::setAutologoffDelay</a>(std::chrono::seconds new_delay) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>  {</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span> </div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>    <span class="keywordflow">if</span> (config.value().autologoff != new_delay)</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>    {</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Changing autologoff delay to %lld min&quot;</span>,</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>               std::chrono::duration_cast&lt;std::chrono::minutes&gt;(config.value().autologoff).count());</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>    }</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span> </div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>    config.value().autologoff = new_delay;</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>  }</div>
</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span> </div>
<div class="foldopen" id="foldopen00292" data-start="{" data-end="}">
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a08685d0fb2bec894f77756f79c020bf9">  292</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a08685d0fb2bec894f77756f79c020bf9">Machine::isAutologoffExpired</a>() const -&gt; <span class="keywordtype">bool</span></div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>  {</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a725099e117c8abf8182631d9334c4286">getAutologoffDelay</a>() &gt; 0min &amp;&amp;</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>           <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a9c845a163660550fa779516a8be8681a">getUsageDuration</a>() &gt; <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a725099e117c8abf8182631d9334c4286">getAutologoffDelay</a>();</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>  }</div>
</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span> </div>
<div class="foldopen" id="foldopen00298" data-start="{" data-end="}">
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#ac8513321c0c184312c66087e7104d066">  298</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#ac8513321c0c184312c66087e7104d066">Machine::setMachineName</a>(<span class="keyword">const</span> std::string &amp;new_name) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>  {</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span> </div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>    <span class="keywordflow">if</span> (config.value().machine_name != new_name)</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>    {</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Changing machine name to %s&quot;</span>, new_name.data());</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>    }</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span> </div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>    config.value().machine_name = new_name;</div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span>  }</div>
</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span> </div>
<div class="foldopen" id="foldopen00310" data-start="{" data-end="}">
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a9d109ed7b9c5e40768bc4edf62377aa8">  310</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a9d109ed7b9c5e40768bc4edf62377aa8">Machine::setMachineType</a>(<a class="code hl_enumeration" href="_machine_i_d_8hpp.xhtml#a35cc1c75e4e55a13e5075b9331a37dc5">MachineType</a> new_type) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>  {</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span> </div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>    <span class="keywordflow">if</span> (config.value().machine_type != new_type)</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Changing machine type to %d&quot;</span>, <span class="keyword">static_cast&lt;</span>uint8_t<span class="keyword">&gt;</span>(new_type));</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span> </div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span>    config.value().machine_type = new_type;</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>  }</div>
</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span> </div>
<div class="foldopen" id="foldopen00320" data-start="{" data-end="}">
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a9fd614d86b6108a5a7b54fc9eee0d9a6">  320</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a9fd614d86b6108a5a7b54fc9eee0d9a6">Machine::isConfigured</a>() const -&gt; <span class="keywordtype">bool</span></div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>  {</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.has_value() &amp;&amp; <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#adb98818468832f2327b4a25a199cdb0e">server</a>.has_value();</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>  }</div>
</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span> </div>
<div class="foldopen" id="foldopen00325" data-start="{" data-end="}">
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a433bd1e854ac0d4471f9f08af8f57a8d">  325</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a433bd1e854ac0d4471f9f08af8f57a8d">Machine::getConfig</a>() const -&gt; std::optional&lt;<a class="code hl_struct" href="structfabomatic_1_1_machine_config.xhtml">MachineConfig</a>&gt;</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>  {</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>;</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>  }</div>
</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span> </div>
<div class="foldopen" id="foldopen00330" data-start="{" data-end="}">
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a4b40dcb31af466acc85f66c845516c82">  330</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a4b40dcb31af466acc85f66c845516c82">Machine::isAllowed</a>() const -&gt; <span class="keywordtype">bool</span></div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span>  {</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a503004fad0cb04f4e525b60f8e7e9e0c">allowed</a>;</div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span>  }</div>
</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span> </div>
<div class="foldopen" id="foldopen00335" data-start="{" data-end="}">
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#addd23c892c39f3c1e26d611059273081">  335</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#addd23c892c39f3c1e26d611059273081">Machine::setAllowed</a>(<span class="keywordtype">bool</span> new_allowed) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>  {</div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span>    allowed = new_allowed;</div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span>  }</div>
</div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span> </div>
<div class="foldopen" id="foldopen00340" data-start="{" data-end="}">
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a34b0deb04494137cf321e94d50dedf90">  340</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a34b0deb04494137cf321e94d50dedf90">Machine::isMaintenanceNeeded</a>() const -&gt; <span class="keywordtype">bool</span></div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span>  {</div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#af6e53363524fca589cea90c51f953b7d">maintenanceNeeded</a>;</div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span>  }</div>
</div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span> </div>
<div class="foldopen" id="foldopen00345" data-start="{" data-end="}">
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a921c78777a6cb9f7fdb9780a8c1aa8c0">  345</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a921c78777a6cb9f7fdb9780a8c1aa8c0">Machine::setMaintenanceNeeded</a>(<span class="keywordtype">bool</span> new_maintenance_needed) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span>  {</div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span>    maintenanceNeeded = new_maintenance_needed;</div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span>  }</div>
</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span> </div>
<div class="foldopen" id="foldopen00350" data-start="{" data-end="}">
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#aeee64b0919798272dfe45d40eb2e96be">  350</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#aeee64b0919798272dfe45d40eb2e96be">Machine::getGracePeriod</a>() const -&gt; std::chrono::seconds</div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span>  {</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(std::chrono::seconds);</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">config</a>.value().grace_period;</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>  }</div>
</div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span> </div>
<div class="foldopen" id="foldopen00356" data-start="{" data-end="}">
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#a30c12cef5abca43d82f7c378430a79b6">  356</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#a30c12cef5abca43d82f7c378430a79b6">Machine::setGracePeriod</a>(std::chrono::seconds new_delay) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span>  {</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span>    <a class="code hl_define" href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span> </div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span>    <span class="keywordflow">if</span> (config.value().grace_period != new_delay)</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span>    {</div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span>      ESP_LOGD(<a class="code hl_variable" href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a>, <span class="stringliteral">&quot;Changing grace period to %lld seconds&quot;</span>,</div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span>               new_delay.count());</div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span>    }</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span> </div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span>    config.value().grace_period = new_delay;</div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno">  367</span>  }</div>
</div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span> </div>
<div class="foldopen" id="foldopen00369" data-start="{" data-end="}">
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#ad511c567c7cb7487d19019550c9a4e32">  369</a></span>  [[nodiscard]] <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#ad511c567c7cb7487d19019550c9a4e32">Machine::getMaintenanceInfo</a>() const -&gt; const std::<span class="keywordtype">string</span></div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span>  {</div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfabomatic_1_1_machine.xhtml#a77c8d3c024aa9bc8822ab8038e9cdd4d">maintenanceInfo</a>;</div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span>  }</div>
</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span> </div>
<div class="foldopen" id="foldopen00374" data-start="{" data-end="}">
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno"><a class="line" href="classfabomatic_1_1_machine.xhtml#ab39e2dee601ccaeab1e02cf28a14306b">  374</a></span>  <span class="keyword">auto</span> <a class="code hl_function" href="classfabomatic_1_1_machine.xhtml#ab39e2dee601ccaeab1e02cf28a14306b">Machine::setMaintenanceInfo</a>(<span class="keyword">const</span> std::string &amp;new_description) -&gt; <span class="keywordtype">void</span></div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span>  {</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span>    maintenanceInfo = new_description;</div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span>  }</div>
</div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span>} <span class="comment">// namespace fabomatic</span></div>
<div class="ttc" id="a_fab_backend_8hpp_xhtml"><div class="ttname"><a href="_fab_backend_8hpp.xhtml">FabBackend.hpp</a></div></div>
<div class="ttc" id="a_logging_8hpp_xhtml"><div class="ttname"><a href="_logging_8hpp.xhtml">Logging.hpp</a></div></div>
<div class="ttc" id="a_logging_8hpp_xhtml_a4ef5b5f197804a60836ab1e8907d8301"><div class="ttname"><a href="_logging_8hpp.xhtml#a4ef5b5f197804a60836ab1e8907d8301">TAG</a></div><div class="ttdeci">static const char *const TAG</div><div class="ttdef"><b>Definition</b> <a href="_logging_8hpp_source.xhtml#l00009">Logging.hpp:9</a></div></div>
<div class="ttc" id="a_machine_8cpp_xhtml_a22d2ecd6e476d01bda4d7f7f4af2b787"><div class="ttname"><a href="_machine_8cpp.xhtml#a22d2ecd6e476d01bda4d7f7f4af2b787">CHECK_CONFIGURED</a></div><div class="ttdeci">#define CHECK_CONFIGURED(ret_type)</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00019">Machine.cpp:19</a></div></div>
<div class="ttc" id="a_machine_8hpp_xhtml"><div class="ttname"><a href="_machine_8hpp.xhtml">Machine.hpp</a></div></div>
<div class="ttc" id="a_machine_i_d_8hpp_xhtml_a35cc1c75e4e55a13e5075b9331a37dc5"><div class="ttname"><a href="_machine_i_d_8hpp.xhtml#a35cc1c75e4e55a13e5075b9331a37dc5">MachineType</a></div><div class="ttdeci">MachineType</div><div class="ttdoc">Classification of the machine.</div><div class="ttdef"><b>Definition</b> <a href="_machine_i_d_8hpp_source.xhtml#l00008">MachineID.hpp:9</a></div></div>
<div class="ttc" id="a_tasks_8hpp_xhtml"><div class="ttname"><a href="_tasks_8hpp.xhtml">Tasks.hpp</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_fab_backend_xhtml"><div class="ttname"><a href="classfabomatic_1_1_fab_backend.xhtml">fabomatic::FabBackend</a></div><div class="ttdoc">This class is used to exchange messages with the MQTT broker and the backend.</div><div class="ttdef"><b>Definition</b> <a href="_fab_backend_8hpp_source.xhtml#l00022">FabBackend.hpp:23</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml">fabomatic::Machine</a></div><div class="ttdoc">Represents the FabLab machine connected to the board.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00016">Machine.hpp:17</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a08685d0fb2bec894f77756f79c020bf9"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a08685d0fb2bec894f77756f79c020bf9">fabomatic::Machine::isAutologoffExpired</a></div><div class="ttdeci">auto isAutologoffExpired() const -&gt; bool</div><div class="ttdoc">Indicates ff the user shall be logged off automatically.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00292">Machine.cpp:292</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a0aa6c35ee214314d87297013cc29a8aa"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a0aa6c35ee214314d87297013cc29a8aa">fabomatic::Machine::power</a></div><div class="ttdeci">auto power(bool on_or_off) -&gt; void</div><div class="ttdoc">Powers the machine on or off using relay/MQTT/both.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00204">Machine.cpp:204</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a1161d52e85bff96812852f50f53335c9"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a1161d52e85bff96812852f50f53335c9">fabomatic::Machine::canPowerOff</a></div><div class="ttdeci">auto canPowerOff() const -&gt; bool</div><div class="ttdoc">Indicates if POWEROFF_DELAY_MINUTES delay has expired,and the machine is still idle.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00111">Machine.cpp:111</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a116376ca892e59b8f754696161657631"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a116376ca892e59b8f754696161657631">fabomatic::Machine::power_mqtt</a></div><div class="ttdeci">auto power_mqtt(bool on_or_off) -&gt; void</div><div class="ttdoc">sets the machine power to on (true) or off (false)</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00166">Machine.cpp:166</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a1637e99f2d70262d2ab26f69ed4f0e47"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a1637e99f2d70262d2ab26f69ed4f0e47">fabomatic::Machine::getMachineName</a></div><div class="ttdeci">auto getMachineName() const -&gt; const std::string</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00236">Machine.cpp:236</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a2bc2b55d0e25444c6c169a94c44ba571"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a2bc2b55d0e25444c6c169a94c44ba571">fabomatic::Machine::power_state</a></div><div class="ttdeci">PowerState power_state</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00112">Machine.hpp:112</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a30c12cef5abca43d82f7c378430a79b6"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a30c12cef5abca43d82f7c378430a79b6">fabomatic::Machine::setGracePeriod</a></div><div class="ttdeci">auto setGracePeriod(std::chrono::seconds new_delay) -&gt; void</div><div class="ttdoc">Sets the idle period after which the machine will power off automatically.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00356">Machine.cpp:356</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a34b0deb04494137cf321e94d50dedf90"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a34b0deb04494137cf321e94d50dedf90">fabomatic::Machine::isMaintenanceNeeded</a></div><div class="ttdeci">auto isMaintenanceNeeded() const -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00340">Machine.cpp:340</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a39c30eaa242d5cc2ce784dbafeef87e8"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a39c30eaa242d5cc2ce784dbafeef87e8">fabomatic::Machine::getActiveUser</a></div><div class="ttdeci">auto getActiveUser() const -&gt; FabUser</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00220">Machine.cpp:220</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a39fbf9cad912d735cf84b75c0674646f"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a39fbf9cad912d735cf84b75c0674646f">fabomatic::Machine::toString</a></div><div class="ttdeci">auto toString() const -&gt; const std::string</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00242">Machine.cpp:242</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a3c5304fd80e0cc1c2118a59c64222d6d"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a3c5304fd80e0cc1c2118a59c64222d6d">fabomatic::Machine::getPowerState</a></div><div class="ttdeci">auto getPowerState() const -&gt; PowerState</div><div class="ttdoc">Returns the current power state of the machine.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00081">Machine.cpp:81</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a409acc0089d7cfe849b2e775840e5838"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838">fabomatic::Machine::PowerState</a></div><div class="ttdeci">PowerState</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00019">Machine.hpp:20</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a409acc0089d7cfe849b2e775840e5838a878a40722160ead08a1f3cdef3e70a14"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a409acc0089d7cfe849b2e775840e5838a878a40722160ead08a1f3cdef3e70a14">fabomatic::Machine::PowerState::WaitingPowerOff</a></div><div class="ttdeci">@ WaitingPowerOff</div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a433bd1e854ac0d4471f9f08af8f57a8d"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a433bd1e854ac0d4471f9f08af8f57a8d">fabomatic::Machine::getConfig</a></div><div class="ttdeci">auto getConfig() const -&gt; std::optional&lt; MachineConfig &gt;</div><div class="ttdoc">Returns the current configuration of the machine, used for testing.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00325">Machine.cpp:325</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a4b40dcb31af466acc85f66c845516c82"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a4b40dcb31af466acc85f66c845516c82">fabomatic::Machine::isAllowed</a></div><div class="ttdeci">auto isAllowed() const -&gt; bool</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00330">Machine.cpp:330</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a503004fad0cb04f4e525b60f8e7e9e0c"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a503004fad0cb04f4e525b60f8e7e9e0c">fabomatic::Machine::allowed</a></div><div class="ttdeci">bool allowed</div><div class="ttdoc">If true, machine is allowed to be used by anybody.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00117">Machine.hpp:117</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a725099e117c8abf8182631d9334c4286"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a725099e117c8abf8182631d9334c4286">fabomatic::Machine::getAutologoffDelay</a></div><div class="ttdeci">auto getAutologoffDelay() const -&gt; std::chrono::seconds</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00273">Machine.cpp:273</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a74aa0b2cd34205ba57710affc56f5c3c"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a74aa0b2cd34205ba57710affc56f5c3c">fabomatic::Machine::isFree</a></div><div class="ttdeci">auto isFree() const -&gt; bool</div><div class="ttdoc">Indicates is the machine is not used by anybody.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00057">Machine.cpp:57</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a75d5f7be60826db90c639b138a7153e3"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a75d5f7be60826db90c639b138a7153e3">fabomatic::Machine::configure</a></div><div class="ttdeci">void configure(const MachineConfig &amp;new_config, FabBackend &amp;serv)</div><div class="ttdoc">Configure the machine, it must be called before most methods.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00026">Machine.cpp:26</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a77c8d3c024aa9bc8822ab8038e9cdd4d"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a77c8d3c024aa9bc8822ab8038e9cdd4d">fabomatic::Machine::maintenanceInfo</a></div><div class="ttdeci">std::string maintenanceInfo</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00119">Machine.hpp:119</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a797653c883d897ef964cd3a862a6465d"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a797653c883d897ef964cd3a862a6465d">fabomatic::Machine::usage_start_timestamp</a></div><div class="ttdeci">std::optional&lt; std::chrono::steady_clock::time_point &gt; usage_start_timestamp</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00110">Machine.hpp:110</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a7b30e014bf3166b1f6692d3e64d18827"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a7b30e014bf3166b1f6692d3e64d18827">fabomatic::Machine::active</a></div><div class="ttdeci">bool active</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00107">Machine.hpp:107</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a8545b7a1a969dddc47d35d921091ed5b"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a8545b7a1a969dddc47d35d921091ed5b">fabomatic::Machine::config</a></div><div class="ttdeci">std::optional&lt; MachineConfig &gt; config</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00104">Machine.hpp:104</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a86cd6dfd9fefa7221a49cc07c78fc851"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a86cd6dfd9fefa7221a49cc07c78fc851">fabomatic::Machine::logout</a></div><div class="ttdeci">auto logout() -&gt; void</div><div class="ttdoc">Logoff the user and stop the usage timer.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00087">Machine.cpp:87</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a871958cc57845c8651cf1058ed9b30e4"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a871958cc57845c8651cf1058ed9b30e4">fabomatic::Machine::isShutdownImminent</a></div><div class="ttdeci">auto isShutdownImminent() const -&gt; bool</div><div class="ttdoc">Indicates if the machine will power down in less than BEEP_REMAINING_MINUTES.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00124">Machine.cpp:124</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a8bde1bdf40d146c521b623d54e2df1cf"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a8bde1bdf40d146c521b623d54e2df1cf">fabomatic::Machine::getMachineId</a></div><div class="ttdeci">auto getMachineId() const -&gt; MachineID</div><div class="ttdoc">Returns the machine identifier.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00049">Machine.cpp:49</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a921c78777a6cb9f7fdb9780a8c1aa8c0"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a921c78777a6cb9f7fdb9780a8c1aa8c0">fabomatic::Machine::setMaintenanceNeeded</a></div><div class="ttdeci">auto setMaintenanceNeeded(bool new_maintenance_needed) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00345">Machine.cpp:345</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a9c845a163660550fa779516a8be8681a"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a9c845a163660550fa779516a8be8681a">fabomatic::Machine::getUsageDuration</a></div><div class="ttdeci">auto getUsageDuration() const -&gt; std::chrono::seconds</div><div class="ttdoc">Duration of the current usage, or 0s.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00227">Machine.cpp:227</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a9d109ed7b9c5e40768bc4edf62377aa8"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a9d109ed7b9c5e40768bc4edf62377aa8">fabomatic::Machine::setMachineType</a></div><div class="ttdeci">auto setMachineType(MachineType new_type) -&gt; void</div><div class="ttdoc">Sets the machine type as per backend configuration.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00310">Machine.cpp:310</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a9f1c52164376bb949436e0da5020baf6"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a9f1c52164376bb949436e0da5020baf6">fabomatic::Machine::logoff_timestamp</a></div><div class="ttdeci">std::optional&lt; std::chrono::steady_clock::time_point &gt; logoff_timestamp</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00111">Machine.hpp:111</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_a9fd614d86b6108a5a7b54fc9eee0d9a6"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#a9fd614d86b6108a5a7b54fc9eee0d9a6">fabomatic::Machine::isConfigured</a></div><div class="ttdeci">auto isConfigured() const -&gt; bool</div><div class="ttdoc">Indicates if the machine has been configured.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00320">Machine.cpp:320</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_aa39977d690373313aa7c24f52679cc5b"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#aa39977d690373313aa7c24f52679cc5b">fabomatic::Machine::current_user</a></div><div class="ttdeci">FabUser current_user</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00108">Machine.hpp:108</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_ab39e2dee601ccaeab1e02cf28a14306b"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#ab39e2dee601ccaeab1e02cf28a14306b">fabomatic::Machine::setMaintenanceInfo</a></div><div class="ttdeci">auto setMaintenanceInfo(const std::string &amp;new_description) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00374">Machine.cpp:374</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_ac0591da2ff437cd6c7cc91bd09b4dff7"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#ac0591da2ff437cd6c7cc91bd09b4dff7">fabomatic::Machine::login</a></div><div class="ttdeci">auto login(const FabUser &amp;user) -&gt; bool</div><div class="ttdoc">Try to login the user and start the usage timer.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00065">Machine.cpp:65</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_ac8513321c0c184312c66087e7104d066"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#ac8513321c0c184312c66087e7104d066">fabomatic::Machine::setMachineName</a></div><div class="ttdeci">auto setMachineName(const std::string &amp;new_name) -&gt; void</div><div class="ttdoc">Sets the machine name as per backend configuration.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00298">Machine.cpp:298</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_ace7ccce1b3fabde562cfc7c5645dd6a3"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#ace7ccce1b3fabde562cfc7c5645dd6a3">fabomatic::Machine::setAutologoffDelay</a></div><div class="ttdeci">auto setAutologoffDelay(std::chrono::seconds new_delay) -&gt; void</div><div class="ttdoc">Sets the delay after which the user will be logged off automatically.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00279">Machine.cpp:279</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_ad511c567c7cb7487d19019550c9a4e32"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#ad511c567c7cb7487d19019550c9a4e32">fabomatic::Machine::getMaintenanceInfo</a></div><div class="ttdeci">auto getMaintenanceInfo() const -&gt; const std::string</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00369">Machine.cpp:369</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_adb98818468832f2327b4a25a199cdb0e"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#adb98818468832f2327b4a25a199cdb0e">fabomatic::Machine::server</a></div><div class="ttdeci">std::optional&lt; std::reference_wrapper&lt; FabBackend &gt; &gt; server</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00105">Machine.hpp:105</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_addd23c892c39f3c1e26d611059273081"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#addd23c892c39f3c1e26d611059273081">fabomatic::Machine::setAllowed</a></div><div class="ttdeci">auto setAllowed(bool new_allowed) -&gt; void</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00335">Machine.cpp:335</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_aeee64b0919798272dfe45d40eb2e96be"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#aeee64b0919798272dfe45d40eb2e96be">fabomatic::Machine::getGracePeriod</a></div><div class="ttdeci">auto getGracePeriod() const -&gt; std::chrono::seconds</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00350">Machine.cpp:350</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_af6e53363524fca589cea90c51f953b7d"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#af6e53363524fca589cea90c51f953b7d">fabomatic::Machine::maintenanceNeeded</a></div><div class="ttdeci">bool maintenanceNeeded</div><div class="ttdoc">If true, machine needs maintenance.</div><div class="ttdef"><b>Definition</b> <a href="_machine_8hpp_source.xhtml#l00115">Machine.hpp:115</a></div></div>
<div class="ttc" id="aclassfabomatic_1_1_machine_xhtml_af80723250a85368e53055b5f91c14840"><div class="ttname"><a href="classfabomatic_1_1_machine.xhtml#af80723250a85368e53055b5f91c14840">fabomatic::Machine::power_relay</a></div><div class="ttdeci">auto power_relay(bool on_or_off) -&gt; void</div><div class="ttdoc">sets the machine power to on (true) or off (false)</div><div class="ttdef"><b>Definition</b> <a href="_machine_8cpp_source.xhtml#l00137">Machine.cpp:137</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_tasks_xhtml_a5c20f560f5934822d39ba116a16f3ab6"><div class="ttname"><a href="namespacefabomatic_1_1_tasks.xhtml#a5c20f560f5934822d39ba116a16f3ab6">fabomatic::Tasks::delay</a></div><div class="ttdeci">auto delay(const milliseconds duration) -&gt; void</div><div class="ttdoc">Wait for a delay, allowing OTA updates.</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8cpp_source.xhtml#l00266">Tasks.cpp:266</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1_tasks_xhtml_aad4a932b189725b84a436888d9da5dc8"><div class="ttname"><a href="namespacefabomatic_1_1_tasks.xhtml#aad4a932b189725b84a436888d9da5dc8">fabomatic::Tasks::arduinoNow</a></div><div class="ttdeci">auto arduinoNow() -&gt; const std::chrono::steady_clock::time_point</div><div class="ttdef"><b>Definition</b> <a href="_tasks_8hpp_source.xhtml#l00015">Tasks.hpp:15</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1mqtt_xhtml_a8418761ec7353545c7130692339b9cc6"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a8418761ec7353545c7130692339b9cc6">fabomatic::conf::mqtt::TIMEOUT_REPLY_SERVER</a></div><div class="ttdeci">static constexpr auto TIMEOUT_REPLY_SERVER</div><div class="ttdoc">Timeout for a single backend reply request.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00148">conf.hpp:148</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1mqtt_xhtml_a9385c322eb16f7f09992855dec71df20"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#a9385c322eb16f7f09992855dec71df20">fabomatic::conf::mqtt::MAX_TRIES</a></div><div class="ttdeci">static constexpr auto MAX_TRIES</div><div class="ttdoc">Number of tries to get a reply from the backend.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00145">conf.hpp:145</a></div></div>
<div class="ttc" id="anamespacefabomatic_1_1conf_1_1mqtt_xhtml_af01bd772b77a7090372a617d96aad5fd"><div class="ttname"><a href="namespacefabomatic_1_1conf_1_1mqtt.xhtml#af01bd772b77a7090372a617d96aad5fd">fabomatic::conf::mqtt::mqtt_switch_on_message</a></div><div class="ttdeci">static constexpr std::string_view mqtt_switch_on_message</div><div class="ttdoc">What value shall be written on the topic to switch on the Shelly device.</div><div class="ttdef"><b>Definition</b> <a href="conf_8hpp_source.xhtml#l00160">conf.hpp:160</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml"><div class="ttname"><a href="namespacefabomatic.xhtml">fabomatic</a></div><div class="ttdef"><b>Definition</b> <a href="_auth_provider_8cpp_source.xhtml#l00010">AuthProvider.cpp:11</a></div></div>
<div class="ttc" id="anamespacefabomatic_xhtml_ae782aea667d4a7a1a9f42217a5b172ed"><div class="ttname"><a href="namespacefabomatic.xhtml#ae782aea667d4a7a1a9f42217a5b172ed">fabomatic::milliseconds</a></div><div class="ttdeci">std::chrono::milliseconds milliseconds</div><div class="ttdef"><b>Definition</b> <a href="_board_logic_8cpp_source.xhtml#l00027">BoardLogic.cpp:27</a></div></div>
<div class="ttc" id="apins_8hpp_xhtml"><div class="ttname"><a href="pins_8hpp.xhtml">pins.hpp</a></div></div>
<div class="ttc" id="asecrets_8hpp_xhtml"><div class="ttname"><a href="secrets_8hpp.xhtml">secrets.hpp</a></div></div>
<div class="ttc" id="astruct_machine_i_d_xhtml"><div class="ttname"><a href="struct_machine_i_d.xhtml">MachineID</a></div><div class="ttdoc">The unique machine identifier for the backend.</div><div class="ttdef"><b>Definition</b> <a href="_machine_i_d_8hpp_source.xhtml#l00019">MachineID.hpp:20</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_fab_user_xhtml"><div class="ttname"><a href="structfabomatic_1_1_fab_user.xhtml">fabomatic::FabUser</a></div><div class="ttdoc">Represents a user with access level, name, RFID tag, and auth result.</div><div class="ttdef"><b>Definition</b> <a href="_fab_user_8hpp_source.xhtml#l00015">FabUser.hpp:16</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_fab_user_xhtml_ab4b54f1830f1536824583e973d670582"><div class="ttname"><a href="structfabomatic_1_1_fab_user.xhtml#ab4b54f1830f1536824583e973d670582">fabomatic::FabUser::toString</a></div><div class="ttdeci">auto toString() const -&gt; const std::string</div><div class="ttdef"><b>Definition</b> <a href="_fab_user_8hpp_source.xhtml#l00054">FabUser.hpp:54</a></div></div>
<div class="ttc" id="astructfabomatic_1_1_machine_config_xhtml"><div class="ttname"><a href="structfabomatic_1_1_machine_config.xhtml">fabomatic::MachineConfig</a></div><div class="ttdoc">Represents the configuration settings for the machine.</div><div class="ttdef"><b>Definition</b> <a href="_machine_config_8hpp_source.xhtml#l00016">MachineConfig.hpp:17</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jul 14 2024 13:49:34 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
