<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Fab-O-Matic: secrets.hpp.example Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="fablab.jpg"/></td>
  <td id="projectalign">
   <div id="projectname">Fab-O-Matic<span id="projectnumber">&#160;0.9</span>
   </div>
   <div id="projectbrief">RFID-based ESP32 project to control equipment in a FabLab environment</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(0); });
/* @license-end */
</script>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_60c1e009daff386049faf4e676bb6db8.xhtml">conf</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">secrets.hpp.example</div></div>
</div><!--header-->
<div class="contents">
<a href="secrets_8hpp_8example.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span>#ifndef SECRETS_HPP_</div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span>#define SECRETS_HPP_</div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span>#include &lt;cstdint&gt;</div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span>#include &lt;array&gt;</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span>#include &lt;string_view&gt;</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>#include &quot;MachineConfig.hpp&quot;</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span>#include &quot;Machine.hpp&quot;</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>#include &quot;conf.hpp&quot;</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>#include &quot;FabUser.hpp&quot;</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>/// @brief Whitelisted RFID cards</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>namespace fabomatic::secrets::cards</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>{</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  /// @brief Number of whitelisted card in the array below</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  static constexpr uint8_t LEN = 10U;</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span> </div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  using WhiteListEntry = std::tuple&lt;card::uid_t, FabUser::UserLevel, std::string_view&gt;;</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  using WhiteList = std::array&lt;WhiteListEntry, LEN&gt;;</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  /// @brief Static list of whitelisted RFID cards.</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  /// @note If the network is down, these cards will be authorized. If network is up, backend prevails.</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  static constexpr WhiteList whitelist{</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>      std::make_tuple(0xAABBCCD1, FabUser::UserLevel::FabAdmin, &quot;ABCDEFG&quot;),</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>      std::make_tuple(0xAABBCCD2, FabUser::UserLevel::FabAdmin, &quot;PIPPO&quot;),</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>      std::make_tuple(0xAABBCCD3, FabUser::UserLevel::NormalUser, &quot;USER1&quot;),</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>      std::make_tuple(0xAABBCCD4, FabUser::UserLevel::NormalUser, &quot;USER2&quot;),</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>      std::make_tuple(0xAABBCCD5, FabUser::UserLevel::NormalUser, &quot;USER3&quot;),</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>      std::make_tuple(0xAABBCCD6, FabUser::UserLevel::NormalUser, &quot;USER4&quot;),</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>      std::make_tuple(0xAABBCCD7, FabUser::UserLevel::NormalUser, &quot;USER5&quot;),</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>      std::make_tuple(0xAABBCCD8, FabUser::UserLevel::NormalUser, &quot;USER6&quot;),</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>      std::make_tuple(0xAABBCCD9, FabUser::UserLevel::FabStaff, &quot;USER7&quot;),</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>      std::make_tuple(0xAABBCCDA, FabUser::UserLevel::FabStaff, &quot;USER8&quot;)};</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>} // namespace fabomatic::secrets::cards</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>/// @brief WiFi and MQTT credentials</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>namespace fabomatic::secrets::credentials</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>{</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>#if (PINS_WOKWI)</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  static constexpr std::string_view ssid = &quot;Wokwi-GUEST&quot;; /* WOKWI SSID */</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  static constexpr std::string_view password = &quot;&quot;;        /* WOKWI password */</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>#else</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  static constexpr std::string_view ssid = &quot;MYSSID&quot;;    /* Default SSID */</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  static constexpr std::string_view password = &quot;MYPWD&quot;; /* Default password */</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>#endif</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  /// @brief Username for MQTT broker auth.</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  static constexpr std::string_view mqtt_user = &quot;user&quot;;</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  /// @brief Username for MQTT broker auth.</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  static constexpr std::string_view mqtt_password = &quot;password&quot;;</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span> </div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  // Checks</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  static_assert(secrets::credentials::ssid.size() &lt; conf::common::STR_MAX_LENGTH, &quot;SSID is too long&quot;);</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  static_assert(secrets::credentials::password.size() &lt; conf::common::STR_MAX_LENGTH, &quot;Password is too long&quot;);</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>} // namespace fabomatic::secrets::credentials</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>#endif // SECRETS_HPP_</div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Jul 2 2024 19:30:05 for Fab-O-Matic by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
