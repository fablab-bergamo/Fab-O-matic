; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
build_cache_dir = .pio/build_cache
name = fab-o-matic

[env]
platform = espressif32@^6.7.0
platform_packages = framework-arduinoespressif32
  espressif/toolchain-xtensa-esp32@12.2.0+20230208
  espressif/toolchain-xtensa-esp32s2@12.2.0+20230208
	espressif/toolchain-xtensa-esp32s3@12.2.0+20230208
framework = arduino
test_framework = unity
check_tool = clangtidy
check_flags = clangtidy: --checks=-*,cert-*,clang-analyzer-*,llvm-*,cppcoreguidelines-*,-cppcoreguidelines-pro-type-vararg,-cppcoreguidelines-avoid-magic-numbers,-cppcoreguidelines-pro-bounds-array-to-pointer-decay
monitor_speed = 115200
test_build_src = yes
monitor_filters = esp32_exception_decoder
	colorize
lib_ldf_mode = chain+
lib_deps = https://github.com/PBrunot/LiquidCrystal.git#use_const
	https://github.com/bblanchon/ArduinoJson.git#v7.0.4
	256dpi/MQTT
	https://github.com/OSSLibraries/Arduino_MFRC522v2.git#2.0.4
	Wire
	adafruit/Adafruit NeoPixel@^1.12.2
	https://github.com/tzapu/WiFiManager.git@2.0.17
	https://github.com/terrorsl/sMQTTBroker.git
	ArduinoOTA
build_unflags = -std=gnu++11 -fexceptions
build_flags = -std=gnu++2b
	-ffunction-sections
	-fdata-sections
	-g3
	-fno-exceptions
	-Os
	-I conf
	-Wno-deprecated-declarations
  -Wno-attributes
  -Wno-volatile
build_src_flags = -Wformat=2
	-Wformat-truncation
	-Wall
	-Wextra
	-Wl,-Map,firmware.map,--cref,--no-warn-rwx-segments
	-Wstack-usage=2048
debug_build_flags = ${env.build_flags}
	-Og
	-D DEBUG
	-Wall
	-Wextra
extra_scripts = pre:tools/git_version.py
	post:tools/metrics_firmware.py

[env:esp32-s3]
board = esp32-s3-devkitc-1
build_type = release
board_build.f_cpu = 160000000L
board_build.f_flash = 80000000L
board_build.flash_mode = dio
build_src_flags = ${env.build_src_flags}
	-D CORE_DEBUG_LEVEL=3
	-D MQTT_SIMULATION=false
	-D RFID_SIMULATION=false
	-D PINS_ESP32S3
	-D DEBUG
	-D FABOMATIC_LANG_IT_IT

[hardware-base]
board = esp32-s3-devkitc-1
board_build.partitions = default.csv
board_upload.flash_size = 4MB
build_type = debug
board_build.f_cpu = 240000000L
board_build.f_flash = 80000000L
build_flags = ${env.build_flags}
	-D ARDUINO_USB_CDC_ON_BOOT
build_src_flags = ${env.build_src_flags}
	-D CORE_DEBUG_LEVEL=5
	-D MQTT_SIMULATION=false
	-D RFID_SIMULATION=false
	-D PINS_HARDWARE_REV0
	-D DEBUG

[env:hardware-rev0-it_IT]
extends = hardware-base
build_src_flags = ${hardware-base.build_src_flags}
	-D FABOMATIC_LANG_IT_IT

[env:hardware-rev0-en_US]
extends = hardware-base
build_src_flags = ${hardware-base.build_src_flags}
	-D FABOMATIC_LANG_EN_US

[env:esp32-devboard]
board = esp32dev
build_type = release
build_src_flags = ${env.build_src_flags}
	-D CORE_DEBUG_LEVEL=3
	-D MQTT_SIMULATION=false
	-D RFID_SIMULATION=false
	-D PINS_ESP32
	-D FABOMATIC_LANG_IT_IT
upload_protocol = espota
upload_port = 192.168.45.82

[env:wokwi]
board = esp32-s2-saola-1
build_type = debug
build_src_flags = ${env.build_src_flags}
	-D CORE_DEBUG_LEVEL=4
	-D MQTT_SIMULATION=true
	-D RFID_SIMULATION=true
	-D PINS_WOKWI
	-D FABOMATIC_LANG_EN_US

[env:wrover-kit-it_IT]
board = esp-wrover-kit
build_type = debug
debug_tool = ftdi
debug_init_break = break setup
build_src_flags = ${env.build_src_flags}
	-D CORE_DEBUG_LEVEL=3
	-D MQTT_SIMULATION=false
	-D RFID_SIMULATION=true
	-D PINS_ESP32_WROVERKIT
	-D DEBUG
	-D FABOMATIC_LANG_IT_IT
